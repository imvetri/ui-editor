!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=11)}([function(e,t,n){"use strict";e.exports=n(12)},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(i=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}var i;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];null!=a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];null!=i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){var r,o,a={},i=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),u=null,c=0,s=[],f=n(19);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=a[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(b(r.parts[i],t))}else{var l=[];for(i=0;i<r.parts.length;i++)l.push(b(r.parts[i],t));a[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return y(t,e.attrs),m(e,t),t}function y(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function b(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var i=c++;n=u||(u=v(t)),r=_.bind(null,n,i,!1),o=_.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var i=n[o];(l=a[i.id]).refs--,r.push(l)}e&&d(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete a[l.id]}}}};var g,x=(g=[],function(e,t){return g[e]=t,g.filter(Boolean).join("\n")});function _(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=x(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkNestedComponents=a,t.saveComponentsToWindow=function(e){e.forEach(i)},t.getNestedComponents=function e(t){var n=JSON.parse(localStorage.getItem("ui-editor"));var r=[t];if(a(t.markup)){var o=n.filter(function(e){return t.markup.includes(e.name)}),i=o.map(e).flat(3);r.push.apply(r,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(i))}return r.filter(function(e){return e&&e.markup})},t.getComponentByName=function(e){return JSON.parse(localStorage.getItem("ui-editor")).filter(function(e){return markup.includes(e.name)}).length>0},t.getChildComponents=function(e){return JSON.parse(localStorage.getItem("ui-editor")).filter(function(t){return e.includes(t.name)})};var r=n(4),o=n(8);function a(e){return JSON.parse(localStorage.getItem("ui-editor")).filter(function(t){return e.includes(t.name)}).length>0}function i(e){(0,o.createStylesheet)(e.style),window[e.name]=(0,r.createComponent)(e)}},function(module,exports,__webpack_require__){"use strict";var _codeModifier=__webpack_require__(30),_nestedComponentSetup=__webpack_require__(3);function getComponentString(e){if(e.markup[3])return convertToReactcomponent(e)}function createComponent(component){var componentString=getComponentString(component);return eval(Babel.transform(componentString,{presets:["react"],plugins:["transform-es2015-classes"]}).code)}function convertToReactcomponent(e){e.events.forEach(function(e){e.id=e.id.replace("-","")});var t=function(t){var n=JSON.parse(e.config);return Object.keys(n).forEach(function(e){n[e].overideState&&(t=t.replace(e,e+" state={this.state."+e+"}"))}),t}(function(t,n){n.forEach(function(e){var n='id="'+e.id+'"';t=t.replace(n,n+" "+e.name+"={this."+(e.id+e.name)+".bind(this)}")});var r=(0,_nestedComponentSetup.getChildComponents)(t);return r.length>0?(r.forEach(function(n){var r=n.events.filter(function(e){return!0===e.publishable});if(0!=r.length){var o=void 0;r.forEach(function(t){o=e.events.find(function(e){return e.name===t.publishName})});var a=(0,_codeModifier.codeModifier)(o.reducer),i=o.name+"={function(){"+a+"}.bind(this)}";t=e.markup.replace(n.name,n.name+" "+i)}}),t.split("{state.").join("{this.state.")):t.split("{state.").join("{this.state.")}(function(e,t){var n={"data-componentName":e.name.toUpperCase()},r=JSON.stringify(n).replace('{"',"").replace("}","").replace(":","=").replace('"',"");return e.markup.replace(" "," "+r+" ")}(e),e.events)),n=e.events.map(function(e){var t=e.id+e.name,n=(0,_codeModifier.codeModifier)(e.reducer);return!0===e.publishable?"\n                    "+t+" (e) {\n                        "+n+"\n                        e.state = state;\n                        this.props."+e.publishName+"? this.props."+e.publishName+"(e):null;\n                    }\n                    ":"\n                    "+t+" (e) {\n                        "+n+"\n                    }"}).join("\n");return"(\n    class "+e.name.split(" ").join("")+" extends Component {\n    \n        constructor(props) {\n            super(props);\n            this.state = this.props.state || "+e.state+";\n        }\n    \n        "+n+"\n    \n        render() {\n    \n            return ("+t+")\n        }\n    })\n    "}module.exports={createComponent:createComponent,getComponentString:getComponentString}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),c=1;c<arguments.length;c++){for(var s in n=Object(arguments[c]))o.call(n,s)&&(u[s]=n[s]);if(r){l=r(n);for(var f=0;f<l.length;f++)a.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){var r=n(18);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateselectedIndex=function(e){var t=e.currentTarget.innerText.split("\n")[0],n=this.state.elements.find(function(e){return e.name===t}),r=this.state.elements.findIndex(function(e){return e.name===t});this.setState({selectedIndex:r,name:n.name,markup:n.markup}),this.setEditMode()},t.saveElement=function(e){var t=Array.from(this.state.elements);if(this.state.editMode){var n=t[this.state.selectedIndex];n=Object.assign(n,e),t[this.state.selectedIndex]=n}else{var r={name:e.name,markup:e.markup,events:[],state:e.state,style:e.style,children:[],id:Math.ceil(1e3*Math.random()),config:"{}"};t.push(r)}this.setState({elements:t,editMode:!1,element:{name:e.name,markup:e.markup,style:e.style,state:e.state,events:e.events||[]},show:!1}),localStorage.setItem("ui-editor",JSON.stringify(t)),this.toggleEditor()},t.updateEvent=function(e){var t=Object.assign({},this.state).elements;t[this.state.selectedIndex].events=e,this.setState({elements:t}),localStorage.setItem("ui-editor",JSON.stringify(t))},t.onDelete=function(e){var t=Array.from(this.state.elements),n=t.findIndex(function(t){return t.name===e});t.splice(n,1),this.setState({elements:t}),localStorage.setItem("ui-editor",JSON.stringify(t))},t.toggleEditor=function(){this.setState({show:!this.state.show})},t.setEditMode=function(){this.setState({editMode:!0,show:!0})},t.updateConfig=function(e){var t=Object.assign({},this.state).elements,n=t.find(function(t){return t.name===e.parentName}),r=t.find(function(t){return t.name===e.childName});n.state=JSON.parse(n.state),void 0===n.config?n.config={}:n.config=JSON.parse(n.config);n.config[r.name]=n.config[r.name]||{},n.config[r.name].overideState=e.override,n.config[r.name].overideState?n.state[r.name]=JSON.parse(r.state):(delete n.state[r.name],delete n.config[r.name]);n.state=JSON.stringify(n.state),n.config=JSON.stringify(n.config),this.setState({elements:t}),localStorage.setItem("ui-editor",JSON.stringify(t))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createStylesheet=function(e){var t=document.createElement("style");t.type="text/css",t.innerHTML=e,document.body.appendChild(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o);n(54);var i=l(n(56));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.messages;return a.default.createElement("div",{className:"console"},e.map(function(e,t){return a.default.createElement(i.default,{key:t,message:e})}))}}]),t}();t.default=u},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getNodeTree=getNodeTree;var _react=__webpack_require__(0),_react2=_interopRequireDefault(_react);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function getNodeTree(jsx,style,state,events){var result=void 0,error=void 0;try{result=eval(Babel.transform(jsx,{presets:["react"]}).code)}catch(e){error=e}finally{return _defineProperty({error:error,result:result},"result",result)}}window.React=_react2.default,window.Component=_react2.default.Component},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o),i=u(n(13));n(6);var l=u(n(20));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("div",null,a.default.createElement(l.default,null))}}]),t}();i.default.render(a.default.createElement(c,null),document.getElementById("index"))},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function _(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||g}function w(){}function E(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||g}_.prototype.isReactComponent={},_.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&b("85"),this.updater.enqueueSetState(this,e,t,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=_.prototype;var k=E.prototype=new w;k.constructor=E,r(k,_.prototype),k.isPureReactComponent=!0;var S={current:null},T={current:null},C=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)C.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:T.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var j=/\/+/g,M=[];function I(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function U(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case a:case i:u=!0}}if(u)return r(o,t,""===n?"."+D(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+D(l=t[c],c);u+=e(l,s,r,o)}else if(s=null===t||"object"!=typeof t?null:"function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,s=n+D(l,c++),r,o);else"object"===l&&b("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function D(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function L(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(j,"$&/")+"/")+n)),r.push(e))}function F(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(j,"$&/")+"/"),U(e,L,t=I(t,a,r,o)),R(t)}function A(){var e=S.current;return null===e&&b("321"),e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;U(e,z,t=I(null,null,t,n)),R(t)},count:function(e){return U(e,function(){return null},null)},toArray:function(e){var t=[];return F(e,t,null,function(e){return e}),t},only:function(e){return N(e)||b("143"),e}},createRef:function(){return{current:null}},Component:_,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return A().useCallback(e,t)},useContext:function(e,t){return A().useContext(e,t)},useEffect:function(e,t){return A().useEffect(e,t)},useImperativeHandle:function(e,t,n){return A().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return A().useLayoutEffect(e,t)},useMemo:function(e,t){return A().useMemo(e,t)},useReducer:function(e,t,n){return A().useReducer(e,t,n)},useRef:function(e){return A().useRef(e)},useState:function(e){return A().useState(e)},Fragment:l,StrictMode:u,Suspense:m,createElement:P,cloneElement:function(e,t,n){null==e&&b("267",e);var o=void 0,i=r({},e.props),l=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=T.current),void 0!==t.key&&(l=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)C.call(t,o)&&!O.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:a,type:e.type,key:l,ref:u,props:i,_owner:c}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:T,assign:r}},B={default:W},V=B&&W||B;e.exports=V.default||V},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(14)},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),a=n(15);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var l=!1,u=null,c=!1,s=null,f={onError:function(e){l=!0,u=e}};function d(e,t,n,r,o,a,i,c,s){l=!1,u=null,function(e,t,n,r,o,a,i,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||i("96",e),!y[n])for(var r in t.extractEvents||i("97",e),y[n]=t,n=t.eventTypes){var o=void 0,a=n[r],l=t,u=r;b.hasOwnProperty(u)&&i("99",u),b[u]=a;var c=a.phasedRegistrationNames;if(c){for(o in c)c.hasOwnProperty(o)&&v(c[o],l,u);o=!0}else a.registrationName?(v(a.registrationName,l,u),o=!0):o=!1;o||i("98",r,e)}}}function v(e,t,n){g[e]&&i("100",e),g[e]=t,x[e]=t.eventTypes[n].dependencies}var y=[],b={},g={},x={},_=null,w=null,E=null;function k(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),function(e,t,n,r,o,a,f,p,m){if(d.apply(this,arguments),l){if(l){var h=u;l=!1,u=null}else i("198"),h=void 0;c||(c=!0,s=h)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function T(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)k(e,t[r],n[r]);else t&&k(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var P={injectEventPluginOrder:function(e){p&&i("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&i("102",t),m[t]=r,n=!0)}n&&h()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function j(e){if(null!==e&&(C=S(C,e)),e=C,C=null,e&&(T(e,O),C&&i("95"),c))throw e=s,c=!1,s=null,e}var M=Math.random().toString(36).slice(2),I="__reactInternalInstance$"+M,R="__reactEventHandlers$"+M;function U(e){if(e[I])return e[I];for(;!e[I];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[I]).tag||6===e.tag?e:null}function D(e){return!(e=e[I])||5!==e.tag&&6!==e.tag?null:e}function z(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function L(e){return e[R]||null}function F(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function A(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=F(t);for(t=n.length;0<t--;)A(n[t],"captured",e);for(t=0;t<n.length;t++)A(n[t],"bubbled",e)}}function B(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function V(e){e&&e.dispatchConfig.registrationName&&B(e._targetInst,null,e)}function H(e){T(e,W)}var $=!("undefined"==typeof window||!window.document||!window.document.createElement);function J(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Q={animationend:J("Animation","AnimationEnd"),animationiteration:J("Animation","AnimationIteration"),animationstart:J("Animation","AnimationStart"),transitionend:J("Transition","TransitionEnd")},q={},K={};function Y(e){if(q[e])return q[e];if(!Q[e])return e;var t,n=Q[e];for(t in n)if(n.hasOwnProperty(t)&&t in K)return q[e]=n[t];return e}$&&(K=document.createElement("div").style,"AnimationEvent"in window||(delete Q.animationend.animation,delete Q.animationiteration.animation,delete Q.animationstart.animation),"TransitionEvent"in window||delete Q.transitionend.transition);var X=Y("animationend"),G=Y("animationiteration"),Z=Y("animationstart"),ee=Y("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:le,this.isPropagationStopped=le,this}function ce(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function se(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=$&&"CompositionEvent"in window,ve=null;$&&"documentMode"in document&&(ve=document.documentMode);var ye=$&&"TextEvent"in window&&!ve,be=$&&(!he||ve&&8<ve&&11>=ve),ge=String.fromCharCode(32),xe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},_e=!1;function we(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ee(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ke=!1;var Se={eventTypes:xe,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(he)e:{switch(e){case"compositionstart":o=xe.compositionStart;break e;case"compositionend":o=xe.compositionEnd;break e;case"compositionupdate":o=xe.compositionUpdate;break e}o=void 0}else ke?we(e,n)&&(o=xe.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=xe.compositionStart);return o?(be&&"ko"!==n.locale&&(ke||o!==xe.compositionStart?o===xe.compositionEnd&&ke&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,ke=!0)),o=de.getPooled(o,t,n,r),a?o.data=a:null!==(a=Ee(n))&&(o.data=a),H(o),a=o):a=null,(e=ye?function(e,t){switch(e){case"compositionend":return Ee(t);case"keypress":return 32!==t.which?null:(_e=!0,ge);case"textInput":return(e=t.data)===ge&&_e?null:e;default:return null}}(e,n):function(e,t){if(ke)return"compositionend"===e||!he&&we(e,t)?(e=ae(),oe=re=ne=null,ke=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return be&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(xe.beforeInput,t,n,r)).data=e,H(t)):t=null,null===a?t:null===t?a:[a,t]}},Te=null,Ce=null,Oe=null;function Pe(e){if(e=w(e)){"function"!=typeof Te&&i("280");var t=_(e.stateNode);Te(e.stateNode,e.type,t)}}function Ne(e){Ce?Oe?Oe.push(e):Oe=[e]:Ce=e}function je(){if(Ce){var e=Ce,t=Oe;if(Oe=Ce=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Me(e,t){return e(t)}function Ie(e,t,n){return e(t,n)}function Re(){}var Ue=!1;function De(e,t){if(Ue)return e(t);Ue=!0;try{return Me(e,t)}finally{Ue=!1,(null!==Ce||null!==Oe)&&(Re(),je())}}var ze={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Le(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ze[e.type]:"textarea"===t}function Fe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Ae(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Be(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Ve(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var He=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;He.hasOwnProperty("ReactCurrentDispatcher")||(He.ReactCurrentDispatcher={current:null});var $e=/^(.*)[\\\/]/,Je="function"==typeof Symbol&&Symbol.for,Qe=Je?Symbol.for("react.element"):60103,qe=Je?Symbol.for("react.portal"):60106,Ke=Je?Symbol.for("react.fragment"):60107,Ye=Je?Symbol.for("react.strict_mode"):60108,Xe=Je?Symbol.for("react.profiler"):60114,Ge=Je?Symbol.for("react.provider"):60109,Ze=Je?Symbol.for("react.context"):60110,et=Je?Symbol.for("react.concurrent_mode"):60111,tt=Je?Symbol.for("react.forward_ref"):60112,nt=Je?Symbol.for("react.suspense"):60113,rt=Je?Symbol.for("react.memo"):60115,ot=Je?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ke:return"Fragment";case qe:return"Portal";case Xe:return"Profiler";case Ye:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Ge:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=lt(e.type);n=null,r&&(n=lt(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace($e,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new pt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(dt,e)||!st.call(ft,e)&&(ct.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function bt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function gt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=bt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _t(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function wt(e,t){_t(e,t);var n=bt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?kt(e,t.type,n):t.hasOwnProperty("defaultValue")&&kt(e,t.type,bt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Et(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function kt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new pt(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Tt(e,t,n){return(e=ue.getPooled(St.change,e,t,n)).type="change",Ne(n),H(e),e}var Ct=null,Ot=null;function Pt(e){j(e)}function Nt(e){if(Ve(z(e)))return e}function jt(e,t){if("change"===e)return t}var Mt=!1;function It(){Ct&&(Ct.detachEvent("onpropertychange",Rt),Ot=Ct=null)}function Rt(e){"value"===e.propertyName&&Nt(Ot)&&De(Pt,e=Tt(Ot,e,Fe(e)))}function Ut(e,t,n){"focus"===e?(It(),Ot=n,(Ct=t).attachEvent("onpropertychange",Rt)):"blur"===e&&It()}function Dt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Ot)}function zt(e,t){if("click"===e)return Nt(t)}function Lt(e,t){if("input"===e||"change"===e)return Nt(t)}$&&(Mt=Ae("input")&&(!document.documentMode||9<document.documentMode));var Ft={eventTypes:St,_isInputEventSupported:Mt,extractEvents:function(e,t,n,r){var o=t?z(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=jt:Le(o)?Mt?a=Lt:(a=Dt,i=Ut):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=zt),a&&(a=a(e,t)))return Tt(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&kt(o,"number",o.value)}},At=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Bt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Vt(){return Bt}var Ht=0,$t=0,Jt=!1,Qt=!1,qt=At.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ht;return Ht=e.screenX,Jt?"mousemove"===e.type?e.screenX-t:0:(Jt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,Qt?"mousemove"===e.type?e.screenY-t:0:(Qt=!0,0)}}),Kt=qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Yt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Yt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?U(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(i=qt,l=Yt.mouseLeave,u=Yt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Kt,l=Yt.pointerLeave,u=Yt.pointerEnter,c="pointer");var s=null==a?o:z(a);if(o=null==t?o:z(t),(e=i.getPooled(l,a,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,a&&r)e:{for(o=r,c=0,i=t=a;i;i=F(i))c++;for(i=0,u=o;u;u=F(u))i++;for(;0<c-i;)t=F(t),c--;for(;0<i-c;)o=F(o),i--;for(;c--;){if(t===o||t===o.alternate)break e;t=F(t),o=F(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(c=a.alternate)||c!==o);)t.push(a),a=F(a);for(a=[];r&&r!==o&&(null===(c=r.alternate)||c!==o);)a.push(r),r=F(r);for(r=0;r<t.length;r++)B(t[r],"bubbled",e);for(r=a.length;0<r--;)B(a[r],"captured",n);return[e,n]}};function Gt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Gt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Gt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}l||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=At.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=At.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=qt.extend({dataTransfer:null}),pn=At.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),mn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=qt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[X,"animationEnd"],[G,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},bn={};function gn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,bn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){gn(e,!0)}),vn.forEach(function(e){gn(e,!1)});var xn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=bn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=bn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case X:case G:case Z:e=on;break;case ee:e=mn;break;case"scroll":e=At;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Kt;break;default:e=ue}return H(t=e.getPooled(o,t,n,r)),t}},_n=xn.isInteractiveTopLevelEventType,wn=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=U(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Fe(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,l=0;l<y.length;l++){var u=y[l];u&&(u=u.extractEvents(r,t,a,o))&&(i=S(i,u))}j(i)}}var kn=!0;function Sn(e,t){if(!t)return null;var n=(_n(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!1)}function Tn(e,t){if(!t)return null;var n=(_n(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!0)}function Cn(e,t){Ie(On,e,t)}function On(e,t){if(kn){var n=Fe(t);if(null===(n=U(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),wn.length){var r=wn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{De(En,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>wn.length&&wn.push(e)}}}var Pn={},Nn=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function Mn(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=Nn++,Pn[e[jn]]={}),Pn[e[jn]]}function In(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Rn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Un(e,t){var n,r=Rn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Rn(r)}}function Dn(){for(var e=window,t=In();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=In((e=t.contentWindow).document)}return t}function zn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Ln(e){var t=Dn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&zn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=Un(n,a);var i=Un(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Fn=$&&"documentMode"in document&&11>=document.documentMode,An={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Bn=null,Vn=null,Hn=!1;function $n(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hn||null==Wn||Wn!==In(n)?null:("selectionStart"in(n=Wn)&&zn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vn&&en(Vn,n)?null:(Vn=n,(e=ue.getPooled(An.select,Bn,e,t)).type="select",e.target=Wn,H(e),e))}var Jn={eventTypes:An,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=Mn(a),o=x.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?z(t):window,e){case"focus":(Le(a)||"true"===a.contentEditable)&&(Wn=a,Bn=t,Vn=null);break;case"blur":Vn=Bn=Wn=null;break;case"mousedown":Hn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hn=!1,$n(n,r);case"selectionchange":if(Fn)break;case"keydown":case"keyup":return $n(n,r)}return null}};function Qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function qn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+bt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Yn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:bt(n)}}function Xn(e,t){var n=bt(t.value),r=bt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Gn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}P.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=L,w=D,E=z,P.injectEventPluginsByName({SimpleEventPlugin:xn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Ft,SelectEventPlugin:Jn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr=void 0,rr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ir=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var cr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sr(e,t){t&&(cr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=Mn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Tn("scroll",e);break;case"focus":case"blur":Tn("focus",e),Tn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Ae(o)&&Tn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function pr(){}var mr=null,hr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,gr="function"==typeof clearTimeout?clearTimeout:void 0,xr=a.unstable_scheduleCallback,_r=a.unstable_cancelCallback;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Er(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var kr=[],Sr=-1;function Tr(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Cr(e,t){kr[++Sr]=e.current,e.current=t}var Or={},Pr={current:Or},Nr={current:!1},jr=Or;function Mr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ir(e){return null!=(e=e.childContextTypes)}function Rr(e){Tr(Nr),Tr(Pr)}function Ur(e){Tr(Nr),Tr(Pr)}function Dr(e,t,n){Pr.current!==Or&&i("168"),Cr(Pr,t),Cr(Nr,n)}function zr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",lt(t)||"Unknown",a);return o({},n,r)}function Lr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,jr=Pr.current,Cr(Pr,t),Cr(Nr,Nr.current),!0}function Fr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=zr(e,t,jr),r.__reactInternalMemoizedMergedChildContext=t,Tr(Nr),Tr(Pr),Cr(Pr,t)):Tr(Nr),Cr(Nr,n)}var Ar=null,Wr=null;function Br(e){return function(t){try{return e(t)}catch(e){}}}function Vr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new Vr(e,t,n,r)}function $r(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Jr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Qr(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)$r(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ke:return qr(n.children,o,a,t);case et:return Kr(n,3|o,a,t);case Ye:return Kr(n,2|o,a,t);case Xe:return(e=Hr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=a,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Ge:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=Hr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function qr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Kr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Ye:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Yr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Xr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),to(t,e)}function Zr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),to(t,e)}function eo(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function to(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function no(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ro=(new r.Component).refs;function oo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=_l(),o=Ka(r=qi(r,e));o.payload=t,null!=n&&(o.callback=n),Bi(),Xa(e,o),Xi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=_l(),o=Ka(r=qi(r,e));o.tag=Va,o.payload=t,null!=n&&(o.callback=n),Bi(),Xa(e,o),Xi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=_l(),r=Ka(n=qi(n,e));r.tag=Ha,null!=t&&(r.callback=t),Bi(),Xa(e,r),Xi(e,n)}};function io(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function lo(e,t,n){var r=!1,o=Or,a=t.contextType;return"object"==typeof a&&null!==a?a=Wa(a):(o=Ir(t)?jr:Pr.current,a=(r=null!=(r=t.contextTypes))?Mr(e,o):Or),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function uo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function co(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=ro;var a=t.contextType;"object"==typeof a&&null!==a?o.context=Wa(a):(a=Ir(t)?jr:Pr.current,o.context=Mr(e,a)),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(oo(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var so=Array.isArray;function fo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("309"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===ro&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function po(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Jr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Yr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=fo(e,t,n),r.return=e,r):((r=Qr(n.type,n.key,n.props,null,e.mode,r)).ref=fo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Xr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=qr(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Yr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Qe:return(n=Qr(t.type,t.key,t.props,null,e.mode,n)).ref=fo(e,null,t),n.return=e,n;case qe:return(t=Xr(t,e.mode,n)).return=e,t}if(so(t)||it(t))return(t=qr(t,e.mode,n,null)).return=e,t;po(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Qe:return n.key===o?n.type===Ke?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case qe:return n.key===o?s(e,t,n,r):null}if(so(n)||it(n))return null!==o?null:f(e,t,n,r,null);po(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ke?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case qe:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(so(r)||it(r))return f(t,e=e.get(n)||null,r,o,null);po(t,r)}return null}function h(o,i,l,u){for(var c=null,s=null,f=i,h=i=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(o,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),i=a(y,i,h),null===s?c=y:s.sibling=y,s=y,f=v}if(h===l.length)return n(o,f),c;if(null===f){for(;h<l.length;h++)(f=d(o,l[h],u))&&(i=a(f,i,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);h<l.length;h++)(v=m(f,o,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),i=a(v,i,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach(function(e){return t(o,e)}),c}function v(o,l,u,c){var s=it(u);"function"!=typeof s&&i("150"),null==(u=s.call(u))&&i("151");for(var f=s=null,h=l,v=l=0,y=null,b=u.next();null!==h&&!b.done;v++,b=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var g=p(o,h,b.value,c);if(null===g){h||(h=y);break}e&&h&&null===g.alternate&&t(o,h),l=a(g,l,v),null===f?s=g:f.sibling=g,f=g,h=y}if(b.done)return n(o,h),s;if(null===h){for(;!b.done;v++,b=u.next())null!==(b=d(o,b.value,c))&&(l=a(b,l,v),null===f?s=b:f.sibling=b,f=b);return s}for(h=r(o,h);!b.done;v++,b=u.next())null!==(b=m(h,o,v,b.value,c))&&(e&&null!==b.alternate&&h.delete(null===b.key?v:b.key),l=a(b,l,v),null===f?s=b:f.sibling=b,f=b);return e&&h.forEach(function(e){return t(o,e)}),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===Ke&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case Qe:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?a.type===Ke:c.elementType===a.type){n(e,c.sibling),(r=o(c,a.type===Ke?a.props.children:a.props)).ref=fo(e,c,a),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}a.type===Ke?((r=qr(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Qr(a.type,a.key,a.props,null,e.mode,u)).ref=fo(e,r,a),u.return=e,e=u)}return l(e);case qe:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Xr(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Yr(a,e.mode,u)).return=e,e=r),l(e);if(so(a))return h(e,r,a,u);if(it(a))return v(e,r,a,u);if(s&&po(e,a),void 0===a&&!c)switch(e.tag){case 1:case 0:i("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var ho=mo(!0),vo=mo(!1),yo={},bo={current:yo},go={current:yo},xo={current:yo};function _o(e){return e===yo&&i("174"),e}function wo(e,t){Cr(xo,t),Cr(go,e),Cr(bo,yo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Tr(bo),Cr(bo,t)}function Eo(e){Tr(bo),Tr(go),Tr(xo)}function ko(e){_o(xo.current);var t=_o(bo.current),n=tr(t,e.type);t!==n&&(Cr(go,e),Cr(bo,n))}function So(e){go.current===e&&(Tr(bo),Tr(go))}var To=0,Co=2,Oo=4,Po=8,No=16,jo=32,Mo=64,Io=128,Ro=He.ReactCurrentDispatcher,Uo=0,Do=null,zo=null,Lo=null,Fo=null,Ao=null,Wo=null,Bo=0,Vo=null,Ho=0,$o=!1,Jo=null,Qo=0;function qo(){i("321")}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Gt(e[n],t[n]))return!1;return!0}function Yo(e,t,n,r,o,a){if(Uo=a,Do=t,Lo=null!==e?e.memoizedState:null,Ro.current=null===Lo?ca:sa,t=n(r,o),$o){do{$o=!1,Qo+=1,Lo=null!==e?e.memoizedState:null,Wo=Fo,Vo=Ao=zo=null,Ro.current=sa,t=n(r,o)}while($o);Jo=null,Qo=0}return Ro.current=ua,(e=Do).memoizedState=Fo,e.expirationTime=Bo,e.updateQueue=Vo,e.effectTag|=Ho,e=null!==zo&&null!==zo.next,Uo=0,Wo=Ao=Fo=Lo=zo=Do=null,Bo=0,Vo=null,Ho=0,e&&i("300"),t}function Xo(){Ro.current=ua,Uo=0,Wo=Ao=Fo=Lo=zo=Do=null,Bo=0,Vo=null,Ho=0,$o=!1,Jo=null,Qo=0}function Go(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Ao?Fo=Ao=e:Ao=Ao.next=e,Ao}function Zo(){if(null!==Wo)Wo=(Ao=Wo).next,Lo=null!==(zo=Lo)?zo.next:null;else{null===Lo&&i("310");var e={memoizedState:(zo=Lo).memoizedState,baseState:zo.baseState,queue:zo.queue,baseUpdate:zo.baseUpdate,next:null};Ao=null===Ao?Fo=e:Ao.next=e,Lo=zo.next}return Ao}function ea(e,t){return"function"==typeof t?t(e):t}function ta(e){var t=Zo(),n=t.queue;if(null===n&&i("311"),n.lastRenderedReducer=e,0<Qo){var r=n.dispatch;if(null!==Jo){var o=Jo.get(n);if(void 0!==o){Jo.delete(n);var a=t.memoizedState;do{a=e(a,o.action),o=o.next}while(null!==o);return Gt(a,t.memoizedState)||(_a=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.lastRenderedState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(a=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,c=r,s=!1;do{var f=c.expirationTime;f<Uo?(s||(s=!0,u=l,o=a),f>Bo&&(Bo=f)):a=c.eagerReducer===e?c.eagerState:e(a,c.action),l=c,c=c.next}while(null!==c&&c!==r);s||(u=l,o=a),Gt(a,t.memoizedState)||(_a=!0),t.memoizedState=a,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function na(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Vo?(Vo={lastEffect:null}).lastEffect=e.next=e:null===(t=Vo.lastEffect)?Vo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Vo.lastEffect=e),e}function ra(e,t,n,r){var o=Go();Ho|=e,o.memoizedState=na(t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Zo();r=void 0===r?null:r;var a=void 0;if(null!==zo){var i=zo.memoizedState;if(a=i.destroy,null!==r&&Ko(r,i.deps))return void na(To,n,a,r)}Ho|=e,o.memoizedState=na(t,n,a,r)}function aa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ia(){}function la(e,t,n){25>Qo||i("301");var r=e.alternate;if(e===Do||null!==r&&r===Do)if($o=!0,e={expirationTime:Uo,action:n,eagerReducer:null,eagerState:null,next:null},null===Jo&&(Jo=new Map),void 0===(n=Jo.get(t)))Jo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Bi();var o=_l(),a={expirationTime:o=qi(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)a.next=a;else{var u=l.next;null!==u&&(a.next=u),l.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(a.eagerReducer=r,a.eagerState=s,Gt(s,c))return}catch(e){}Xi(e,o)}}var ua={readContext:Wa,useCallback:qo,useContext:qo,useEffect:qo,useImperativeHandle:qo,useLayoutEffect:qo,useMemo:qo,useReducer:qo,useRef:qo,useState:qo,useDebugValue:qo},ca={readContext:Wa,useCallback:function(e,t){return Go().memoizedState=[e,void 0===t?null:t],e},useContext:Wa,useEffect:function(e,t){return ra(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Go();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Go();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=la.bind(null,Do,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Go().memoizedState=e},useState:function(e){var t=Go();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ea,lastRenderedState:e}).dispatch=la.bind(null,Do,e),[t.memoizedState,e]},useDebugValue:ia},sa={readContext:Wa,useCallback:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Wa,useEffect:function(e,t){return oa(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oa(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ta,useRef:function(){return Zo().memoizedState},useState:function(e){return ta(ea)},useDebugValue:ia},fa=null,da=null,pa=!1;function ma(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ha(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function va(e){if(pa){var t=da;if(t){var n=t;if(!ha(e,t)){if(!(t=wr(n))||!ha(e,t))return e.effectTag|=2,pa=!1,void(fa=e);ma(fa,n)}fa=e,da=Er(t)}else e.effectTag|=2,pa=!1,fa=e}}function ya(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;fa=e}function ba(e){if(e!==fa)return!1;if(!pa)return ya(e),pa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=da;t;)ma(e,t),t=wr(t);return ya(e),da=fa?wr(e.stateNode):null,!0}function ga(){da=fa=null,pa=!1}var xa=He.ReactCurrentOwner,_a=!1;function wa(e,t,n,r){t.child=null===e?vo(t,null,n,r):ho(t,e.child,n,r)}function Ea(e,t,n,r,o){n=n.render;var a=t.ref;return Aa(t,o),r=Yo(e,t,n,r,a,o),null===e||_a?(t.effectTag|=1,wa(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function ka(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||$r(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Qr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Sa(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Ma(e,t,a):(t.effectTag|=1,(e=Jr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Sa(e,t,n,r,o,a){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(_a=!1,o<a)?Ma(e,t,a):Ca(e,t,n,r,a)}function Ta(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ca(e,t,n,r,o){var a=Ir(n)?jr:Pr.current;return a=Mr(t,a),Aa(t,o),n=Yo(e,t,n,r,a,o),null===e||_a?(t.effectTag|=1,wa(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function Oa(e,t,n,r,o){if(Ir(n)){var a=!0;Lr(t)}else a=!1;if(Aa(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),lo(t,n,r),co(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=Wa(c):c=Mr(t,c=Ir(n)?jr:Pr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&uo(t,i,r,c),Ja=!1;var d=t.memoizedState;u=i.state=d;var p=t.updateQueue;null!==p&&(ti(t,p,r,i,o),u=t.memoizedState),l!==r||d!==u||Nr.current||Ja?("function"==typeof s&&(oo(t,n,s,r),u=t.memoizedState),(l=Ja||io(t,n,l,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,l=t.memoizedProps,i.props=t.type===t.elementType?l:no(t.type,l),u=i.context,"object"==typeof(c=n.contextType)&&null!==c?c=Wa(c):c=Mr(t,c=Ir(n)?jr:Pr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==c)&&uo(t,i,r,c),Ja=!1,u=t.memoizedState,d=i.state=u,null!==(p=t.updateQueue)&&(ti(t,p,r,i,o),d=t.memoizedState),l!==r||u!==d||Nr.current||Ja?("function"==typeof s&&(oo(t,n,s,r),d=t.memoizedState),(s=Ja||io(t,n,l,r,u,d,c))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=c,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Pa(e,t,n,r,a,o)}function Pa(e,t,n,r,o,a){Ta(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Fr(t,n,!1),Ma(e,t,a);r=t.stateNode,xa.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=ho(t,e.child,null,a),t.child=ho(t,null,l,a)):wa(e,t,l,a),t.memoizedState=r.state,o&&Fr(t,n,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?Dr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Dr(0,t.context,!1),wo(e,t.containerInfo)}function ja(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var l=o.fallback;e=qr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=qr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=vo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,i?(n=o.fallback,o=Jr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Jr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=ho(t,r.child,o.children,n)):(l=e.child,i?(i=o.fallback,(o=qr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=qr(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=ho(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Ma(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Jr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Jr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ia(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Nr.current)_a=!0;else if(r<n){switch(_a=!1,t.tag){case 3:Na(t),ga();break;case 5:ko(t);break;case 1:Ir(t.type)&&Lr(t);break;case 4:wo(t,t.stateNode.containerInfo);break;case 10:La(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?ja(e,t,n):null!==(t=Ma(e,t,n))?t.sibling:null}return Ma(e,t,n)}}else _a=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Mr(t,Pr.current);if(Aa(t,n),o=Yo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Xo(),Ir(r)){var a=!0;Lr(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&oo(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,co(t,r,e,n),t=Pa(null,t,r,!0,a,n)}else t.tag=0,wa(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),a=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return $r(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),a=no(e,a),l=void 0,o){case 0:l=Ca(null,t,e,a,n);break;case 1:l=Oa(null,t,e,a,n);break;case 11:l=Ea(null,t,e,a,n);break;case 14:l=ka(null,t,e,no(e.type,a),r,n);break;default:i("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Ca(e,t,r,o=t.elementType===r?o:no(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oa(e,t,r,o=t.elementType===r?o:no(r,o),n);case 3:return Na(t),null===(r=t.updateQueue)&&i("282"),o=null!==(o=t.memoizedState)?o.element:null,ti(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ga(),t=Ma(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(da=Er(t.stateNode.containerInfo),fa=t,o=pa=!0),o?(t.effectTag|=2,t.child=vo(t,null,r,n)):(wa(e,t,r,n),ga()),t=t.child),t;case 5:return ko(t),null===e&&va(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,yr(r,o)?l=null:null!==a&&yr(r,a)&&(t.effectTag|=16),Ta(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(wa(e,t,l,n),t=t.child),t;case 6:return null===e&&va(t),null;case 13:return ja(e,t,n);case 4:return wo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ho(t,null,r,n):wa(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ea(e,t,r,o=t.elementType===r?o:no(r,o),n);case 7:return wa(e,t,t.pendingProps,n),t.child;case 8:case 12:return wa(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,La(t,a=o.value),null!==l){var u=l.value;if(0===(a=Gt(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!Nr.current){t=Ma(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){l=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=Ka(n)).tag=Ha,Xa(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=u.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}wa(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,Aa(t,n),r=r(o=Wa(o,a.unstable_observedBits)),t.effectTag|=1,wa(e,t,r,n),t.child;case 14:return a=no(o=t.type,t.pendingProps),ka(e,t,o,a=no(o.type,a),r,n);case 15:return Sa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:no(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ir(r)?(e=!0,Lr(t)):e=!1,Aa(t,n),lo(t,r,o),co(t,r,o,n),Pa(null,t,r,!0,e,n)}i("156")}var Ra={current:null},Ua=null,Da=null,za=null;function La(e,t){var n=e.type._context;Cr(Ra,n._currentValue),n._currentValue=t}function Fa(e){var t=Ra.current;Tr(Ra),e.type._context._currentValue=t}function Aa(e,t){Ua=e,za=Da=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(_a=!0),e.contextDependencies=null}function Wa(e,t){return za!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(za=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Da?(null===Ua&&i("308"),Da=t,Ua.contextDependencies={first:t,expirationTime:0}):Da=Da.next=t),e._currentValue}var Ba=0,Va=1,Ha=2,$a=3,Ja=!1;function Qa(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function qa(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ka(e){return{expirationTime:e,tag:Ba,payload:null,callback:null,next:null,nextEffect:null}}function Ya(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Xa(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Qa(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Qa(e.memoizedState),o=n.updateQueue=Qa(n.memoizedState)):r=e.updateQueue=qa(o):null===o&&(o=n.updateQueue=qa(r));null===o||r===o?Ya(r,t):null===r.lastUpdate||null===o.lastUpdate?(Ya(r,t),Ya(o,t)):(Ya(r,t),o.lastUpdate=t)}function Ga(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Qa(e.memoizedState):Za(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Za(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=qa(t)),t}function ei(e,t,n,r,a,i){switch(n.tag){case Va:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case $a:e.effectTag=-2049&e.effectTag|64;case Ba:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case Ha:Ja=!0}return r}function ti(e,t,n,r,o){Ja=!1;for(var a=(t=Za(e,t)).baseState,i=null,l=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s<o?(null===i&&(i=u,a=c),l<s&&(l=s)):(c=ei(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===s&&(s=u,null===i&&(a=c)),l<f&&(l=f)):(c=ei(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,e.expirationTime=l,e.memoizedState=c}function ni(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),ri(t.firstEffect,n),t.firstEffect=t.lastEffect=null,ri(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function ri(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function oi(e,t){return{value:e,source:t,stack:ut(t)}}function ai(e){e.effectTag|=4}var ii=void 0,li=void 0,ui=void 0,ci=void 0;ii=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},li=function(){},ui=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var l=t.stateNode;switch(_o(bo.current),e=null,n){case"input":i=gt(l,i),r=gt(l,r),e=[];break;case"option":i=Qn(l,i),r=Qn(l,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Kn(l,i),r=Kn(l,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(l.onclick=pr)}sr(n,r),l=n=void 0;var u=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var c=i[n];for(l in c)c.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(g.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(u||(u={}),u[l]=s[l])}else u||(e||(e=[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(g.hasOwnProperty(n)?(null!=s&&dr(a,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),a=e,(t.updateQueue=a)&&ai(t)}},ci=function(e,t,n,r){n!==r&&ai(t)};var si="function"==typeof WeakSet?WeakSet:Set;function fi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Qi(e,t)}else t.current=null}function pi(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==To){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==To&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function mi(e){switch("function"==typeof Wr&&Wr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){Qi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(di(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Qi(e,t)}break;case 5:di(e);break;case 4:yi(e)}}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(hi(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,l=o.stateNode,u=n;8===a.nodeType?a.parentNode.insertBefore(l,u):a.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(a=l.parentNode).insertBefore(u,l):(a=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==a.onclick||(a.onclick=pr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function yi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,l=a;;)if(mi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===a)break;for(;null===l.sibling;){if(null===l.return||l.return===a)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(a=r,l=t.stateNode,8===a.nodeType?a.parentNode.removeChild(l):a.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(mi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function bi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:pi(Oo,Po,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[R]=o,"input"===n&&"radio"===o.type&&null!=o.name&&_t(e,o),fr(n,r),r=fr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?ur(e,l):"dangerouslySetInnerHTML"===i?rr(e,l):"children"===i?or(e,l):yt(e,i,l,r)}switch(n){case"input":wt(e,o);break;case"textarea":Xn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?qn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?qn(e,!!o.multiple,o.defaultValue,!0):qn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=_l())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new si),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=qi(t=_l(),e),null!==(e=Yi(e,t))&&(Gr(e,t),0!==(t=e.expirationTime)&&wl(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var gi="function"==typeof WeakMap?WeakMap:Map;function xi(e,t,n){(n=Ka(n)).tag=$a,n.payload={element:null};var r=t.value;return n.callback=function(){jl(r),fi(e,t)},n}function _i(e,t,n){(n=Ka(n)).tag=$a;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===zi?zi=new Set([this]):zi.add(this));var n=t.value,o=t.stack;fi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function wi(e){switch(e.tag){case 1:Ir(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Eo(),Ur(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return So(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Eo(),null;case 10:return Fa(e),null;default:return null}}var Ei=He.ReactCurrentDispatcher,ki=He.ReactCurrentOwner,Si=1073741822,Ti=!1,Ci=null,Oi=null,Pi=0,Ni=-1,ji=!1,Mi=null,Ii=!1,Ri=null,Ui=null,Di=null,zi=null;function Li(){if(null!==Ci)for(var e=Ci.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Rr();break;case 3:Eo(),Ur();break;case 5:So(t);break;case 4:Eo();break;case 10:Fa(t)}e=e.return}Oi=null,Pi=0,Ni=-1,ji=!1,Ci=null}function Fi(){for(;null!==Mi;){var e=Mi.effectTag;if(16&e&&or(Mi.stateNode,""),128&e){var t=Mi.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:vi(Mi),Mi.effectTag&=-3;break;case 6:vi(Mi),Mi.effectTag&=-3,bi(Mi.alternate,Mi);break;case 4:bi(Mi.alternate,Mi);break;case 8:yi(e=Mi),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Mi=Mi.nextEffect}}function Ai(){for(;null!==Mi;){if(256&Mi.effectTag)e:{var e=Mi.alternate,t=Mi;switch(t.tag){case 0:case 11:case 15:pi(Co,To,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:no(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}Mi=Mi.nextEffect}}function Wi(e,t){for(;null!==Mi;){var n=Mi.effectTag;if(36&n){var r=Mi.alternate,o=Mi,a=t;switch(o.tag){case 0:case 11:case 15:pi(No,jo,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:no(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ni(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ni(0,r,l)}break;case 5:a=o.stateNode,null===r&&4&o.effectTag&&vr(o.type,o.memoizedProps)&&a.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}128&n&&(null!==(o=Mi.ref)&&(a=Mi.stateNode,"function"==typeof o?o(a):o.current=a)),512&n&&(Ri=e),Mi=Mi.nextEffect}}function Bi(){null!==Ui&&_r(Ui),null!==Di&&Di()}function Vi(e,t){Ii=Ti=!0,e.current===t&&i("177");var n=e.pendingCommitExpirationTime;0===n&&i("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Gr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Gr(e,t)):t>n&&Gr(e,t)}to(0,e)}(e,o>r?o:r),ki.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=kn,hr=function(){var e=Dn();if(zn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,u=0,c=0,s=e,f=null;t:for(;;){for(var d;s!==t||0!==r&&3!==s.nodeType||(i=a+r),s!==o||0!==n&&3!==s.nodeType||(l=a+n),3===s.nodeType&&(a+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break t;if(f===t&&++u===r&&(i=a),f===o&&++c===n&&(l=a),null!==(d=s.nextSibling))break;f=(s=f).parentNode}s=d}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),kn=!1,Mi=r;null!==Mi;){o=!1;var l=void 0;try{Ai()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),Qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(Mi=r;null!==Mi;){o=!1,l=void 0;try{Fi()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),Qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(Ln(hr),hr=null,kn=!!mr,mr=null,e.current=t,Mi=r;null!==Mi;){o=!1,l=void 0;try{Wi(e,n)}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),Qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}if(null!==r&&null!==Ri){var u=function(e,t){Di=Ui=Ri=null;var n=rl;rl=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;pi(Io,To,a),pi(To,Mo,a)}catch(e){r=!0,o=e}r&&Qi(t,o)}t=t.nextEffect}while(null!==t);rl=n,0!==(n=e.expirationTime)&&wl(e,n),cl||rl||Cl(1073741823,!1)}.bind(null,e,r);Ui=a.unstable_runWithPriority(a.unstable_NormalPriority,function(){return xr(u)}),Di=u}Ti=Ii=!1,"function"==typeof Ar&&Ar(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(zi=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Hi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ci=e;e:{var a=t,l=Pi,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ir(t.type)&&Rr();break;case 3:Eo(),Ur(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==a&&null!==a.child||(ba(t),t.effectTag&=-3),li(t);break;case 5:So(t);var c=_o(xo.current);if(l=t.type,null!==a&&null!=t.stateNode)ui(a,t,l,u,c),a.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=_o(bo.current);if(ba(t)){a=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=c;switch(a[I]=u,a[R]=d,l=void 0,c=f){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":xt(a,d),Sn("invalid",a),dr(p,"onChange");break;case"select":a._wrapperState={wasMultiple:!!d.multiple},Sn("invalid",a),dr(p,"onChange");break;case"textarea":Yn(a,d),Sn("invalid",a),dr(p,"onChange")}for(l in sr(c,d),f=null,d)d.hasOwnProperty(l)&&(s=d[l],"children"===l?"string"==typeof s?a.textContent!==s&&(f=["children",s]):"number"==typeof s&&a.textContent!==""+s&&(f=["children",""+s]):g.hasOwnProperty(l)&&null!=s&&dr(p,l));switch(c){case"input":Be(a),Et(a,d,!0);break;case"textarea":Be(a),Gn(a);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(a.onclick=pr)}l=f,u.updateQueue=l,(u=null!==l)&&ai(t)}else{d=t,p=l,a=u,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(p)),s===Zn.html?"script"===p?((a=f.createElement("div")).innerHTML="<script><\/script>",f=a.removeChild(a.firstChild)):"string"==typeof a.is?f=f.createElement(p,{is:a.is}):(f=f.createElement(p),"select"===p&&(p=f,a.multiple?p.multiple=!0:a.size&&(p.size=a.size))):f=f.createElementNS(s,p),(a=f)[I]=d,a[R]=u,ii(a,t,!1,!1),p=a;var m=c,h=fr(f=l,d=u);switch(f){case"iframe":case"object":Sn("load",p),c=d;break;case"video":case"audio":for(c=0;c<te.length;c++)Sn(te[c],p);c=d;break;case"source":Sn("error",p),c=d;break;case"img":case"image":case"link":Sn("error",p),Sn("load",p),c=d;break;case"form":Sn("reset",p),Sn("submit",p),c=d;break;case"details":Sn("toggle",p),c=d;break;case"input":xt(p,d),c=gt(p,d),Sn("invalid",p),dr(m,"onChange");break;case"option":c=Qn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},c=o({},d,{value:void 0}),Sn("invalid",p),dr(m,"onChange");break;case"textarea":Yn(p,d),c=Kn(p,d),Sn("invalid",p),dr(m,"onChange");break;default:c=d}sr(f,c),s=void 0;var v=f,y=p,b=c;for(s in b)if(b.hasOwnProperty(s)){var x=b[s];"style"===s?ur(y,x):"dangerouslySetInnerHTML"===s?null!=(x=x?x.__html:void 0)&&rr(y,x):"children"===s?"string"==typeof x?("textarea"!==v||""!==x)&&or(y,x):"number"==typeof x&&or(y,""+x):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(g.hasOwnProperty(s)?null!=x&&dr(m,s):null!=x&&yt(y,s,x,h))}switch(f){case"input":Be(p),Et(p,d,!1);break;case"textarea":Be(p),Gn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+bt(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?qn(c,!!d.multiple,p,!1):null!=d.defaultValue&&qn(c,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof c.onClick&&(p.onclick=pr)}(u=vr(l,u))&&ai(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?ci(a,t,a.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&i("166")),a=_o(xo.current),_o(bo.current),ba(t)?(l=(u=t).stateNode,a=u.memoizedProps,l[I]=u,(u=l.nodeValue!==a)&&ai(t)):(l=t,(u=(9===a.nodeType?a:a.ownerDocument).createTextNode(u))[I]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ci=t;break e}u=null!==u,l=null!==a&&null!==a.memoizedState,null!==a&&!u&&l&&(null!==(a=a.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=a,a.nextEffect=c):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Eo(),li(t);break;case 10:Fa(t);break;case 9:case 14:break;case 17:Ir(t.type)&&Rr();break;case 18:break;default:i("156")}Ci=null}if(t=e,1===Pi||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(a=l.expirationTime)>u&&(u=a),(c=l.childExpirationTime)>u&&(u=c),l=l.sibling;t.childExpirationTime=u}if(null!==Ci)return Ci;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=wi(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function $i(e){var t=Ia(e.alternate,e,Pi);return e.memoizedProps=e.pendingProps,null===t&&(t=Hi(e)),ki.current=null,t}function Ji(e,t){Ti&&i("243"),Bi(),Ti=!0;var n=Ei.current;Ei.current=ua;var r=e.nextExpirationTimeToWorkOn;r===Pi&&e===Oi&&null!==Ci||(Li(),Pi=r,Ci=Jr((Oi=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Ci&&!Sl();)Ci=$i(Ci);else for(;null!==Ci;)Ci=$i(Ci)}catch(t){if(za=Da=Ua=null,Xo(),null===Ci)o=!0,jl(t);else{null===Ci&&i("271");var a=Ci,l=a.return;if(null!==l){e:{var u=e,c=l,s=a,f=t;if(l=Pi,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=c;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=c;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(c=f.updateQueue)?((c=new Set).add(d),f.updateQueue=c):c.add(d),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((l=Ka(1073741823)).tag=Ha,Xa(s,l))),s.expirationTime=1073741823;break e}c=l;var v=(s=u).pingCache;null===v?(v=s.pingCache=new gi,h=new Set,v.set(d,h)):void 0===(h=v.get(d))&&(h=new Set,v.set(d,h)),h.has(c)||(h.add(c),s=Ki.bind(null,s,d,c),d.then(s,s)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-eo(u,l))-5e3),u=m+p),0<=u&&Ni<u&&(Ni=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}ji=!0,f=oi(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Ga(u,l=xi(u,f,l));break e;case 1:if(p=f,m=u.type,s=u.stateNode,0==(64&u.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===zi||!zi.has(s)))){u.effectTag|=2048,u.expirationTime=l,Ga(u,l=_i(u,p,l));break e}}u=u.return}while(null!==u)}Ci=Hi(a);continue}o=!0,jl(t)}}break}if(Ti=!1,Ei.current=n,za=Da=Ua=null,Xo(),o)Oi=null,e.finishedWork=null;else if(null!==Ci)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&i("281"),Oi=null,ji){if(o=e.latestPendingTime,a=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==a&&a<r||0!==l&&l<r)return Zr(e,r),void xl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xl(e,n,r,t,-1)}t&&-1!==Ni?(Zr(e,r),(t=10*(1073741822-eo(e,r)))<Ni&&(Ni=t),t=10*(1073741822-_l()),t=Ni-t,xl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Qi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===zi||!zi.has(r)))return Xa(n,e=_i(n,e=oi(t,e),1073741823)),void Xi(n,1073741823);break;case 3:return Xa(n,e=xi(n,e=oi(t,e),1073741823)),void Xi(n,1073741823)}n=n.return}3===e.tag&&(Xa(e,n=xi(e,n=oi(t,e),1073741823)),Xi(e,1073741823))}function qi(e,t){var n=a.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ti&&!Ii)r=Pi;else{switch(n){case a.unstable_ImmediatePriority:r=1073741823;break;case a.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case a.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case a.unstable_LowPriority:case a.unstable_IdlePriority:r=1;break;default:i("313")}null!==Oi&&r===Pi&&--r}return n===a.unstable_UserBlockingPriority&&(0===il||r<il)&&(il=r),r}function Ki(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oi&&Pi===n?Oi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),to(n,e),0!==(n=e.expirationTime)&&wl(e,n)))}function Yi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Xi(e,t){null!==(e=Yi(e,t))&&(!Ti&&0!==Pi&&t>Pi&&Li(),Gr(e,t),Ti&&!Ii&&Oi===e||wl(e,e.expirationTime),vl>hl&&(vl=0,i("185")))}function Gi(e,t,n,r,o){return a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var Zi=null,el=null,tl=0,nl=void 0,rl=!1,ol=null,al=0,il=0,ll=!1,ul=null,cl=!1,sl=!1,fl=null,dl=a.unstable_now(),pl=1073741822-(dl/10|0),ml=pl,hl=50,vl=0,yl=null;function bl(){pl=1073741822-((a.unstable_now()-dl)/10|0)}function gl(e,t){if(0!==tl){if(t<tl)return;null!==nl&&a.unstable_cancelCallback(nl)}tl=t,e=a.unstable_now()-dl,nl=a.unstable_scheduleCallback(Tl,{timeout:10*(1073741822-t)-e})}function xl(e,t,n,r,o){e.expirationTime=r,0!==o||Sl()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),ml=pl,Ol(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function _l(){return rl?ml:(El(),0!==al&&1!==al||(bl(),ml=pl),ml)}function wl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===el?(Zi=el=e,e.nextScheduledRoot=e):(el=el.nextScheduledRoot=e).nextScheduledRoot=Zi):t>e.expirationTime&&(e.expirationTime=t),rl||(cl?sl&&(ol=e,al=1073741823,Pl(e,1073741823,!1)):1073741823===t?Cl(1073741823,!1):gl(e,t))}function El(){var e=0,t=null;if(null!==el)for(var n=el,r=Zi;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===el)&&i("244"),r===r.nextScheduledRoot){Zi=el=r.nextScheduledRoot=null;break}if(r===Zi)Zi=o=r.nextScheduledRoot,el.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===el){(el=n).nextScheduledRoot=Zi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===el)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}ol=t,al=e}var kl=!1;function Sl(){return!!kl||!!a.unstable_shouldYield()&&(kl=!0)}function Tl(){try{if(!Sl()&&null!==Zi){bl();var e=Zi;do{var t=e.expirationTime;0!==t&&pl<=t&&(e.nextExpirationTimeToWorkOn=pl),e=e.nextScheduledRoot}while(e!==Zi)}Cl(0,!0)}finally{kl=!1}}function Cl(e,t){if(El(),t)for(bl(),ml=pl;null!==ol&&0!==al&&e<=al&&!(kl&&pl>al);)Pl(ol,al,pl>al),El(),bl(),ml=pl;else for(;null!==ol&&0!==al&&e<=al;)Pl(ol,al,!1),El();if(t&&(tl=0,nl=null),0!==al&&gl(ol,al),vl=0,yl=null,null!==fl)for(e=fl,fl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ll||(ll=!0,ul=e)}}if(ll)throw e=ul,ul=null,ll=!1,e}function Ol(e,t){rl&&i("253"),ol=e,al=t,Pl(e,t,!1),Cl(1073741823,!1)}function Pl(e,t,n){if(rl&&i("245"),rl=!0,n){var r=e.finishedWork;null!==r?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&(Sl()?e.finishedWork=r:Nl(e,r,t)))}else null!==(r=e.finishedWork)?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&Nl(e,r,t));rl=!1}function Nl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===fl?fl=[r]:fl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===yl?vl++:(yl=e,vl=0),a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){Vi(e,t)})}function jl(e){null===ol&&i("246"),ol.expirationTime=0,ll||(ll=!0,ul=e)}function Ml(e,t){var n=cl;cl=!0;try{return e(t)}finally{(cl=n)||rl||Cl(1073741823,!1)}}function Il(e,t){if(cl&&!sl){sl=!0;try{return e(t)}finally{sl=!1}}return e(t)}function Rl(e,t,n){cl||rl||0===il||(Cl(il,!1),il=0);var r=cl;cl=!0;try{return a.unstable_runWithPriority(a.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(cl=r)||rl||Cl(1073741823,!1)}}function Ul(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Ir(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);i("171"),l=void 0}if(1===n.tag){var u=n.type;if(Ir(u)){n=zr(n,u,l);break e}}n=l}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Ka(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Bi(),Xa(a,o),Xi(a,r),r}function Dl(e,t,n,r){var o=t.current;return Ul(e,t,n,o=qi(_l(),o),r)}function zl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ll(e){var t=1073741822-25*(1+((1073741822-_l()+500)/25|0));t>=Si&&(t=Si-1),this._expirationTime=Si=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Fl(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Al(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Bl(e,t,n,r,o){var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=zl(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Al(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=zl(a._internalRoot);l.call(e)}}Il(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return zl(a._internalRoot)}function Vl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wl(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:qe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Te=function(e,t,n){switch(t){case"input":if(wt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=L(r);o||i("90"),Ve(r),wt(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&qn(e,!!n.multiple,t,!1)}},Ll.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Fl;return Ul(e,t,null,n,r._onCommit),r},Ll.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ll.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ol(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Ll.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Fl.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Fl.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},Al.prototype.render=function(e,t){var n=this._internalRoot,r=new Fl;return null!==(t=void 0===t?null:t)&&r.then(t),Dl(e,n,null,r._onCommit),r},Al.prototype.unmount=function(e){var t=this._internalRoot,n=new Fl;return null!==(e=void 0===e?null:e)&&n.then(e),Dl(null,t,null,n._onCommit),n},Al.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Fl;return null!==(n=void 0===n?null:n)&&o.then(n),Dl(t,r,e,o._onCommit),o},Al.prototype.createBatch=function(){var e=new Ll(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Me=Ml,Ie=Rl,Re=function(){rl||0===il||(Cl(il,!1),il=0)};var Hl,$l,Jl={createPortal:Vl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Wl(t)||i("200"),Bl(null,e,t,!0,n)},render:function(e,t,n){return Wl(t)||i("200"),Bl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Wl(n)||i("200"),(null==e||void 0===e._reactInternalFiber)&&i("38"),Bl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wl(e)||i("40"),!!e._reactRootContainer&&(Il(function(){Bl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Vl.apply(void 0,arguments)},unstable_batchedUpdates:Ml,unstable_interactiveUpdates:Rl,flushSync:function(e,t){rl&&i("187");var n=cl;cl=!0;try{return Gi(e,t)}finally{cl=n,Cl(1073741823,!1)}},unstable_createRoot:function(e,t){return Wl(e)||i("299","unstable_createRoot"),new Al(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=cl;cl=!0;try{Gi(e)}finally{(cl=t)||rl||Cl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[D,z,L,P.injectEventPluginsByName,b,H,function(e){T(e,V)},Ne,je,On,j]}};$l=(Hl={findFiberByHostInstance:U,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Ar=Br(function(e){return t.onCommitFiberRoot(n,e)}),Wr=Br(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}}(o({},Hl,{overrideProps:null,currentDispatcherRef:He.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return $l?$l(e):null}}));var Ql={default:Jl},ql=Ql&&Jl||Ql;e.exports=ql.default||ql},function(e,t,n){"use strict";e.exports=n(16)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,l=!1,u=!1;function c(){if(!l){var e=n.expirationTime;u?E():u=!0,w(d,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,l=i;o=e,i=t;try{var u=r()}finally{o=a,i=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,c()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===a&&null!==n&&1===n.priorityLevel){l=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?c():u=!1}}}function d(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{s()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{s()}while(null!==n&&!k())}finally{l=!1,r=o,null!==n?c():u=!1,f()}}var p,m,h=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,b="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,g="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function x(e){p=b(function(t){y(m),e(t)}),m=v(function(){g(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var _=performance;t.unstable_now=function(){return _.now()}}else t.unstable_now=function(){return h.now()};var w,E,k,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var T=S._schedMock;w=T[0],E=T[1],k=T[2],t.unstable_now=T[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var C=null,O=function(e){if(null!==C)try{C(e)}finally{C=null}};w=function(e){null!==C?setTimeout(w,0,e):(C=e,setTimeout(O,0,!1))},E=function(){C=null},k=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof b&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var P=null,N=!1,j=-1,M=!1,I=!1,R=0,U=33,D=33;k=function(){return R<=t.unstable_now()};var z=new MessageChannel,L=z.port2;z.port1.onmessage=function(){N=!1;var e=P,n=j;P=null,j=-1;var r=t.unstable_now(),o=!1;if(0>=R-r){if(!(-1!==n&&n<=r))return M||(M=!0,x(F)),P=e,void(j=n);o=!0}if(null!==e){I=!0;try{e(o)}finally{I=!1}}};var F=function(e){if(null!==P){x(F);var t=e-R+D;t<D&&U<D?(8>t&&(t=8),D=t<U?U:t):U=t,R=e+D,N||(N=!0,L.postMessage(void 0))}else M=!1};w=function(e,t){P=e,j=t,I||0>t?L.postMessage(void 0):M||(M=!0,x(F))},E=function(){P=null,N=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,i=a;o=n,a=t.unstable_now();try{return e()}finally{o=r,a=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{i=null;var l=n;do{if(l.expirationTime>r){i=l;break}l=l.next}while(l!==n);null===i?i=n:i===n&&(n=e,c()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||k())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(17))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,'body { \n    color: #d9d9d9;\n    font-family: Arial, sans-serif, Georgia, serif;\n}\n\nul {\n    border: 1px #404040 solid;\n}\n\nli , label, p {\n    font-size: 11px;\n}\n\nh4, h5, h6 {\n    border-bottom: 1px solid #333333;\n}\n\ninput, textarea { \n    font-size: 11px;\n    background: #2b2b2b;\n    color: #d9d9d9;\n    opacity: 0.75;\n    vertical-align: bottom;\n}\n\ninput[type="text"] {\n    -webkit-appearance: textarea;\n}\n\nul label input {\n    width: 10px;\n}\n\nul, li {\n    padding-left: 5px;\n    margin-top: 0px;\n    margin-bottom: 0px;\n}\n\nbutton {\n    color: rgba(255,255,255,0.5);\n    border-color: rgba(0,0,0,0.9);\n    border-width: 1px;\n    padding: 7px;\n    background-color: #343a40;\n    margin-left: 4px;\n}\n\nbutton i{\n    padding-right:4px;\n}\n\nbutton:hover {\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\nul,li, ul label {\n    color: rgba(255,255,255,0.5);\n}\n\nul label:hover, li:hover, .content:hover{\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\n#index{\n    margin:-4px;\n}',""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=h(o);n(6);var i=h(n(21)),l=h(n(31)),u=h(n(38)),c=h(n(41)),s=h(n(45)),f=h(n(65)),d=h(n(70)),p=n(7),m=n(10);function h(e){return e&&e.__esModule?e:{default:e}}var v=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:JSON.parse(localStorage.getItem("ui-editor"))||[],components:[],selectedIndex:-1,element:{name:"",markup:"",style:"",state:"{ }",events:[]},previewComponent:{name:"",markup:"",style:"",state:"{}",events:[{id:"ID1",name:"",reducer:""}]}},n.updateConfig=p.updateConfig.bind(n),n.updateEvent=p.updateEvent.bind(n),n.saveElement=p.saveElement.bind(n),n.updateselectedIndex=p.updateselectedIndex.bind(n),n.setEditMode=p.setEditMode.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updatePreview",value:function(e){this.setState({previewComponent:e})}},{key:"render",value:function(){var e=this.state.elements[this.state.selectedIndex]||this.state.element,t=(0,m.getNodeTree)(e.markup,e.style,JSON.parse(e.state),e.events);return a.default.createElement("div",null,a.default.createElement(u.default,null,a.default.createElement(i.default,{elements:this.state.elements,onPreview:this.updatePreview.bind(this),onSelection:this.updateselectedIndex,selectedIndex:this.state.selectedIndex})),a.default.createElement(u.default,null,a.default.createElement(s.default,{key:this.state.selectedIndex,element:e,elements:this.state.elements,onEventsUpdate:this.updateEvent,onConfigUpdate:this.updateConfig})),a.default.createElement(u.default,null,a.default.createElement(c.default,{key:Math.ceil(1e3*Math.random()),element:e,name:e.name,markup:e.markup,style:e.style,state:e.state,onSave:this.saveElement})),a.default.createElement(u.default,null,a.default.createElement(l.default,{component:this.state.previewComponent})),a.default.createElement(u.default,null,a.default.createElement(f.default,{node:t})),a.default.createElement(u.default,null,a.default.createElement(d.default,{style:e.style})))}}]),t}();t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=c(o);n(22);var i=c(n(24)),l=n(7),u=n(28);function c(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:n.props.elements,editMode:!1,selectedIndex:0},n.onDelete=l.onDelete.bind(n),n.toggleEditor=l.toggleEditor.bind(n),n.setEditMode=l.setEditMode.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.state.elements.map(function(t,n){return a.default.createElement(i.default,{key:n,index:n,selectedIndex:e.props.selectedIndex,element:t,onSelectionChange:e.props.onSelection,onPreview:u.publishDetails.bind(e),onExport:u.onExport.bind(e),onDelete:e.onDelete.bind(e)})});return a.default.createElement("div",{className:"elements"},a.default.createElement("div",{className:"container elements-tab"},a.default.createElement("div",{className:"title"},"Components"),a.default.createElement("ul",null,t)))}}]),t}();t.default=s},function(e,t,n){var r=n(23);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".override {\n    line-height: 0%;\n}\n\ntextarea {\n    height: 70px;\n    width: 450px;\n}\n\n.elements{\n    position: fixed;\n}\n\n.title{\n    margin-top: 15px;\n    margin-bottom: 11px;\n    color: rgba(255,255,255,0.5);\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}\n\n.elements-tab {\n    left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(25);n(26);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){return i.default.createElement("div",{className:"background",draggable:"true",id:this.props.element.name,onDragStart:l.handleDrag.bind(this)},i.default.createElement("li",{className:this.props.index===this.props.selectedIndex?"selected component":"component",onClick:l.selectionChanged.bind(this),index:this.props.index},i.default.createElement("span",{className:"componentName"},this.props.element.name),i.default.createElement("span",null,i.default.createElement("button",{index:this.props.index,onClick:l.previewElement.bind(this)},i.default.createElement("i",{className:"fas fa-eye"}),"Preview"),i.default.createElement("button",{index:this.props.index,onClick:this.props.onExport},i.default.createElement("i",{className:"fas fa-file-export"}),"Export"),i.default.createElement("button",{index:this.props.index,onClick:this.props.onDelete},i.default.createElement("i",{className:"fa fa-trash"}),"Delete"))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectionChanged=function(e){this.props.onSelectionChange(e)},t.previewElement=function(e){var t=e.currentTarget.parentElement.parentElement.innerText.split("\n")[0];this.props.onPreview(t)},t.deleteElement=function(e){var t=e.currentTarget.parentElement.parentElement.innerText.split("\n")[0];this.props.onDelete(t)},t.handleDrag=function(e){e.dataTransfer.setData("component-name",event.target.getAttribute("id"))}},function(e,t,n){var r=n(27);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".selected {\n    border: 1px solid green;\n    background: rgb(43, 43, 43);\n}\n\n.background {\n    background: rgb(64, 64, 64);\n    border-bottom: 1px solid #333333;\n}\n\n.component {\n    display:flex;\n    justify-content: space-between;\n}\n\n.component .componentName{\n    padding:7px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.publishDetails=function(e){var t=JSON.parse(JSON.stringify(this.state.elements.find(function(t){return t.name===e})));this.props.onPreview((0,r.prepareElement)(t,t.name))},t.onExport=function(){var e=(0,o.getNestedComponents)(this.state.elements[this.state.selectedIndex]);console.log(e.map(a.getComponentString).join(""))};var r=n(29),o=n(3),a=n(4)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.prepareElement=function(e){return Object.assign({state:{},style:{}},e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.codeModifier=function(e){return"\n                        var state = JSON.parse(JSON.stringify(this.state))\n                        "+e+"\n                        this.setState(state);\n"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(32);var i=u(n(34)),l=n(37);function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){try{(0,l.validate)(this.props.component)}catch(e){console.error(e)}var e=this.props.component.id*~~(10*Math.random());return a.default.createElement("div",{className:"container preview"},a.default.createElement("div",{className:"title"},"Preview"),a.default.createElement(i.default,{key:e,component:this.props.component}))}}]),t}();t.default=c},function(e,t,n){var r=n(33);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".container{\n    border: 1px solid black;\n    padding: 5px;\n    box-shadow: 0px 8px 26px -8px black;\n    background: #2C3134;\n}\n",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(8),u=n(4);n(35);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.component=n.props.component,(0,l.createStylesheet)(n.component.style),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){var e=(0,u.createComponent)(this.component);return e?i.default.createElement("div",null,i.default.createElement(e)):null}}]),t}();t.default=c},function(e,t,n){var r=n(36);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".box {\n    margin: 5px;\n    border:1px solid black;\n    padding:5px;\n}",""])},function(e,t,n){"use strict";var r=function(e){return!e.markup.length>0?(console.error(e," Should have a markup"),!1):e.state?e.style?e.events?void(function(e){return Object.keys(e).every(function(t){return"function"==typeof e[t]})}(e.events)||console.error(e.events," Should have function has property value")):(console.error(e," Should have events object or pass empty object"),!1):(console.error(e," Should have style object, or pass empty object"),!1):(console.error(e," Should have state or pass empty object"),!1)};e.exports={validate:function(e){return r(e)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(39);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=JSON.parse(localStorage.getItem("ui-editor-settings-draggable-component-"+n.props.children.type.name))||{style:{position:"fixed",top:"30px",left:"200px"},minimised:!1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"moveDiv",value:function(e){var t=this,n=JSON.parse(JSON.stringify(this.state));n.style.top=e.pageY+"px",n.style.left=e.pageX+"px",this.setState({style:n.style},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}},{key:"toggleMinimiseMaximise",value:function(e){var t=this;this.setState({minimised:!this.state.minimised},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}},{key:"render",value:function(){return i.default.createElement("div",{draggable:"true",id:"move",onDragEnd:this.moveDiv.bind(this),style:this.state.style},i.default.createElement("span",{title:"Move",className:"move-handle"},i.default.createElement("i",{className:"fa fa-arrows-alt fa-xs"})),this.state.minimised?i.default.createElement("span",{title:"Minimise",className:"maximise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-maximize fa-xs"})):i.default.createElement("span",{title:"Minimise",className:"minimise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-minimize fa-xs"})),this.state.minimised?i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},this.props.children.type.name)):this.props.children)}}]),t}();t.default=l},function(e,t,n){var r=n(40);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"#move > span{  \n    border: 1px solid black;\n    color: black;\n}\n\n#move .move-handle{\n    cursor: move;\n}\n\n#move .move-handle,\n#move .minimise-handle,\n#move .maximise-handle {\n    padding-left: 2px;\n    padding-right: 2px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(42);var l=n(44);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={name:n.props.name,markup:n.props.markup,state:n.props.state,style:n.props.style},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"publishElement",value:function(){this.props.onSave({name:this.state.name,markup:this.state.markup,style:this.state.style,state:this.state.state})}},{key:"render",value:function(){var e=this.state.name,t=this.state.markup,n=this.state.style,r=this.state.state;return i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},"Editor"),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Name"),i.default.createElement("input",{type:"text",placeholder:"Enter element name",value:e,onChange:l.updateName.bind(this),id:"elementName"}),i.default.createElement("button",{onClick:this.publishElement.bind(this),id:"save"},i.default.createElement("i",{className:"fas fa-save"}),"Save")),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Markup"),i.default.createElement("textarea",{value:t,onChange:l.updateMarkup.bind(this),id:"elementMarkup",title:"ID is mandatory for events"})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component CSS"),i.default.createElement("textarea",{value:n,onChange:l.updateStyle.bind(this)})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component State"),i.default.createElement("textarea",{value:r,onChange:l.updateState.bind(this),id:"elementState"})))}}]),t}();t.default=u},function(e,t,n){var r=n(43);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".hidden{\n    display: none;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateName=function(e){this.setState({name:e.currentTarget.value})},t.updateMarkup=function(e){this.setState({markup:e.currentTarget.value})},t.updateStyle=function(e){this.setState({style:e.currentTarget.value})},t.updateState=function(e){this.setState({state:e.currentTarget.value})},t.getPropertyContainingProps=function(e){var t=[],n=void 0;try{n=JSON.parse(e.state)}catch(e){console.error("Error: Child state is an invalid json, try an online validator on below string"),console.log(child.state)}for(var r in n)n[r].includes("prop")&&t.push(r);return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=p(o),i=n(3),l=p(n(46)),u=p(n(49)),c=p(n(50)),s=p(n(61));n(62);var f=n(64),d=n(10);function p(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n.state.selectedTag="",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props.element;if(0==this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,'Looks like you do not have any Web component created. Type some "html" on the right "Editor" tab'));if(void 0===t.name&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,"Looks like you have not selected any component. Click on any of the component in the left pane."));var n=(0,i.getNestedComponents)(t);n.length>0&&(0,i.saveComponentsToWindow)(n);var r=(0,d.getNodeTree)(t.markup,t.style,JSON.parse(t.state),t.events);if(void 0!==r.error)return(0,s.default)(r.error);if(void 0===r.result&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"));var o=this.state.selectedTag||"",p=void 0,m=void 0;if(o.includes("child-component-")){var h=JSON.parse(localStorage.getItem("ui-editor")),v=o.split("child-component-")[1],y=h.find(function(e){return e.name===v}).events.filter(function(e){return!0===e.publishable}).map(function(e){return e.publishName}),b=t.events.map(function(t,n){return a.default.createElement(c.default,{key:n,index:n,event:t,selectedTagID:o,eventNames:y,onSave:f.updateEvent.bind(e),deleteEvent:f.deleteEvent.bind(e)})});p=o?b.filter(function(e){return o.includes(e.props.event.id)}):null,m=a.default.createElement(l.default,{onChange:f.updateConfiguration.bind(this),childName:v,parent:t})}else{var g=t.events.map(function(t,n){return a.default.createElement(c.default,{key:n,index:n,event:t,selectedTagID:o,eventNames:[],onSave:f.updateEvent.bind(e),deleteEvent:f.deleteEvent.bind(e)})});p=o?g.filter(function(e){return o.includes(e.props.event.id)}):null}return a.default.createElement("div",null,a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("div",{className:"tags"},a.default.createElement(u.default,{node:r.result,onSelectedTagChanged:f.selectedTagChanged.bind(this)})),m,a.default.createElement("div",{className:"title"},"Events"),a.default.createElement("div",null,a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"Existing",a.default.createElement("div",null,p))),a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"New",a.default.createElement("div",null,a.default.createElement(c.default,{key:t.events.length,eventNames:[],selectedTagID:o,onSave:f.updateEvent.bind(this)}))))))))}}]),t}();t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(47);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=JSON.parse(n.props.parent.config)[n.props.childName]||{overideState:!1};return n.state={override:r.overideState},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"toggelOverride",value:function(){this.setState({override:!this.state.override}),this.props.onChange({override:!this.state.override,childName:this.props.childName,parentName:this.props.parent.name})}},{key:"render",value:function(){return i.default.createElement("div",{className:"option-group"},i.default.createElement("p",{className:"option-group-label"},i.default.createElement("span",{className:"title"},"Child Configurations"),i.default.createElement("span",{className:"panel expanded"})),i.default.createElement("div",{className:"content"},i.default.createElement("div",{className:"option"},i.default.createElement("label",null,"Override child state"),i.default.createElement("input",{type:"checkbox",onChange:this.toggelOverride.bind(this),checked:this.state.override?"checked":""}))))}}]),t}();t.default=l},function(e,t,n){var r=n(48);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.configurator {\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r};var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this,n=this.props.node,r=n.props.id?"-"+n.props.id:"";if(!n)return l.default.createElement("span",null,"null");if("string"==typeof n)return l.default.createElement("li",null,n);if(n.props&&Array.isArray(n.props.children)){var a=n.props.children.map(function(n,r){return l.default.createElement(t,{key:r,node:n,onSelectedTagChanged:e.props.onSelectedTagChanged})});return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:n.type+r}),n.type+r),a)}if("object"===o(n.props.children)){var i=n.props.children;return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:n.type+r}),n.type+r),l.default.createElement(t,{key:index,node:i,onSelectedTagChanged:this.props.onSelectedTagChanged}))}return"function"==typeof n.type?l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:"child-component-"+n.type.name,onChange:this.props.onSelectedTagChanged}),n.type.name)):l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:n.type+r,onChange:this.props.onSelectedTagChanged}),n.type+r))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=c(o);n(51);var i=c(n(53)),l=n(59),u=n(60);function c(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={name:n.props.event?n.props.event.name:"",reducer:n.props.event?n.props.event.reducer:"",publishable:n.props.event?n.props.event.publishable:"",publishName:n.props.event?n.props.event.publishName:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){if(void 0===this.props.selectedTagID)return(0,i.default)();var e=this.state.publishable?a.default.createElement("input",{type:"text",onChange:l.updatePublishName.bind(this),value:this.state.publishName,placeholder:"Enter event publish name for other components to subscribe to"}):null,t=this.props.eventNames.map(function(e){return a.default.createElement("option",{value:e})});return a.default.createElement("div",{className:"event"},a.default.createElement("input",{list:"browsers",type:"text",onChange:l.updateEventName.bind(this),value:this.state.name,placeholder:"Enter event name",title:"Event Name"}),a.default.createElement("datalist",{id:"browsers"},t),a.default.createElement("br",null),a.default.createElement("textarea",{onChange:l.updateReducer.bind(this),value:this.state.reducer,placeholder:"Enter state reducer",title:"Reducer"}),a.default.createElement("div",null,a.default.createElement("label",null,a.default.createElement("input",{type:"checkbox",onChange:l.updateEventType.bind(this),checked:this.state.publishable?"checked":""}),"Publishable"),e,a.default.createElement("button",{onClick:u.publishEvent.bind(this),id:"saveEvent"},a.default.createElement("i",{className:"fas fa-save"}),"Save"),a.default.createElement("button",{onClick:u.deleteEvent.bind(this),id:"deleteEvent"},a.default.createElement("i",{className:"fas fa-trash"}),"Delete")))}}]),t}();t.default=s},function(e,t,n){var r=n(52);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.event input {\n    margin-left:0px;\n}\n\n.event textarea {\n    margin-top: 8px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(9),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(){return React.createElement(a.default,{messages:[{type:"info",text:"#1 INFO: Select any element in the left most pane(editor pane) to see its content"},{type:"info",text:"#2 INFO: Click on 'Add' to add an component"}]})}},function(e,t,n){var r=n(55);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n    bottom: 50px;\n}\n\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(57);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){var e=this.props.message;return"error"===e.type||"info"===e.type?i.default.createElement("div",{className:style[e.type]},i.default.createElement("code",null,e.text)):(console.error(e.type+" is unidentified message type for <MessagesComponent/>. Please use either 'error' or 'info' only. If you require a different type, raise an issue, send a PR"),i.default.createElement("div",{className:"console"},i.default.createElement("div",{className:"eerror"},i.default.createElement("code",null,"error : unidentified message type. Please use either error/ info only"))))}}]),t}();t.default=l},function(e,t,n){var r=n(58);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";var r;function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){this.setState({publishable:e.currentTarget.checked})}e.exports=(o(r={updateEventName:function(e){this.setState({name:e.target.value})},updateEventType:a,updatePublishName:function(e){this.setState({publishName:e.target.value})}},"updateEventType",a),o(r,"updateReducer",function(e){this.setState({reducer:e.target.value})}),r)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.publishEvent=function(){this.props.onSave({name:this.state.name,reducer:this.state.reducer,index:this.props.index,publishable:this.state.publishable,publishName:this.state.publishName})},t.deleteEvent=function(){this.props.deleteEvent(this.props.index)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(9),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){var t=[{type:"error",text:"ERROR : "+e+"developer log: look in console related to eval"}];return React.createElement(a.default,{messages:t})}},function(e,t,n){var r=n(63);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".events {\n    border:1px solid black;\n    padding: 5px;\n}\n\n.error {\n    color: red;\n    position: fixed;\n    right: 150px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));e.id=this.state.selectedTag.split("-")[1],void 0===e.index?t.events.push(e):t.events[e.index]=e;this.props.onEventsUpdate(t.events)},t.selectedTagChanged=function(e){this.setState({selectedTag:e.currentTarget.value})},t.deleteEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));t.events.splice(e,1),this.props.onEventsUpdate(t.events)},t.updateConfiguration=function(e){this.props.onConfigUpdate(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=l(n(66));function l(e){return e&&e.__esModule?e:{default:e}}n(68);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.node.result;return void 0===e||void 0!==this.props.node.error?a.default.createElement("div",null):a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"TagExplorer"),a.default.createElement("ul",{className:"tags"},a.default.createElement(i.default,{node:e})))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r},u=n(67);var c=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this.props.node,n=Object.assign({},e.props);if(delete n.children,n=(0,u.convertJSONtoHTMLAttributes)(n),!e)return l.default.createElement("span",null,"null");if(e.props&&Array.isArray(e.props.children)){var r=e.props.children.map(function(e,n){return l.default.createElement(t,{key:n,node:e})});return l.default.createElement("li",null,"<"+e.type+" "+n+">",r,"</"+e.type+">")}if("object"===o(e.props.children)){var a=e.props.children;return l.default.createElement("li",null,"<"+e.type+" "+n+">",l.default.createElement(t,{key:index,node:a}),"</"+e.type+">")}if("string"==typeof e.props.children){var i=e.props.children;return l.default.createElement("li",null,"<"+e.type+" "+n+">"+i+"</"+e.type+">")}return"function"==typeof e.type?l.default.createElement("li",null,"<"+e.type.name+">","</"+e.type.name+">"):"object"===o(e.type)?l.default.createElement("li",null,"<"+e.type.id+">","</"+e.type.id+">"):l.default.createElement("li",null,"<"+e.type+" "+n+">",e.type,"</"+e.type+">")}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertJSONtoHTMLAttributes=function(e){var t=JSON.stringify(e);if(Object.keys(e).forEach(function(t){return e[t]="'"+e[t]+"'"}),t.length>2){return JSON.stringify(e).split('"').map(function(e){if(!e.includes("{")&&!e.includes("}"))return":"===e?"=":","===e?" ":e}).filter(Boolean).join("")}return""}},function(e,t,n){var r=n(69);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".tags {\n    font-size: 11px;\n}\n\n.tags li {\n    padding-left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o),i=u(n(71)),l=n(86);function u(e){return e&&e.__esModule?e:{default:e}}n(87);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.style,t=(0,l.getObjectFormat)(e).map(function(e){return a.default.createElement(i.default,{rule:e})});return a.default.createElement("div",{className:"container"},a.default.createElement("div",{className:"title"},"StyleExplorer"),t)}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(72);var i=u(n(74)),l=u(n(77));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("div",{className:"rules container"},a.default.createElement(i.default,{name:Object.keys(this.props.rule)[0]})," {",a.default.createElement(l.default,{declaration:Object.values(this.props.rule)[0]}),"}")}}]),t}();t.default=c},function(e,t,n){var r=n(73);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".rules {\n    font-size: 11px;\n}\n\n.rules input {\n    border: 0px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(75);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({name:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.name,this.state.name}},{key:"render",value:function(){return i.default.createElement("input",{type:"text",value:this.state.name,onBlur:this.valueChanged.bind(this),onChange:this.updateSelector.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(76);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(78);var i=u(n(80)),l=u(n(83));function u(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"declaration"},Object.keys(this.props.declaration).map(function(t){return a.default.createElement("div",null,a.default.createElement(i.default,{value:t}),":",a.default.createElement(l.default,{value:e.props.declaration[t]}))}))}}]),t}();t.default=c},function(e,t,n){var r=n(79);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".declaration{\n    padding-left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(81);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){return i.default.createElement("span",null,this.props.value)}}]),t}();t.default=l},function(e,t,n){var r=n(82);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(84);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){return i.default.createElement("span",null,this.props.value)}}]),t}();t.default=l},function(e,t,n){var r=n(85);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";function r(e){return'"'+e.split(":")[0].trim()+'":"'+e.split(":")[1].trim()+'"'}function o(e){var t=e.split("{")[0].trim(),n="{"+e.split("{")[1].split("}")[0].split(";").map(function(e){return e.trim()}).filter(Boolean).map(r).join(",")+"}",o={};return o[t]=JSON.parse(n),o}Object.defineProperty(t,"__esModule",{value:!0}),t.getObjectFormat=function(e){return e.split("}").filter(Boolean).map(function(e){return e+"}"}).map(o)}},function(e,t,n){var r=n(88);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvbmVzdGVkQ29tcG9uZW50U2V0dXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9jb252ZXJ0LXRvLXJlYWN0LWNvbXBvbmVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvSW5kZXgvaW5kZXguY3NzP2QwZDciLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL1JlZHVjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9qc3hUcmFuc3BpbGVyL2NyZWF0ZS1zdHlsZXNoZWV0LmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlc0NvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2dldC1ub2RlLXRyZWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvSW5kZXgvaW5kZXguY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1Rvb2wvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50cy9TdHlsZS5jc3M/MGIwOCIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudHMvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3M/NjFhMyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2NvZGVHZW5lcmF0b3IvcHJlcGFyZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9jb2RlTW9kaWZpZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1ByZXZpZXcvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1ByZXZpZXcvc3R5bGUuY3NzPzZkNDgiLCJ3ZWJwYWNrOi8vLy4vc3JjL1ByZXZpZXcvc3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9EeW5hbWljQ29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9EeW5hbWljQ29tcG9uZW50L3N0eWxlLmNzcz9lZDdiIiwid2VicGFjazovLy8uL3NyYy9EeW5hbWljQ29tcG9uZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvUHJldmlldy92YWxpZGF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRHJhZ2dhYmxlQ29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9EcmFnZ2FibGVDb21wb25lbnQvc3R5bGUuY3NzPzA4MmMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0RyYWdnYWJsZUNvbXBvbmVudC9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VkaXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWRpdG9yL1N0eWxlLmNzcz8xYmZjIiwid2VicGFjazovLy8uL3NyYy9FZGl0b3IvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FZGl0b3IvUmVkdWNlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9Db25maWd1cmF0b3IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NvbmZpZ3VyYXRvci9TdHlsZS5jc3M/ZGQ1NiIsIndlYnBhY2s6Ly8vLi9zcmMvQ29uZmlndXJhdG9yL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvTm9kZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudC9TdHlsZS5jc3M/ZjMxMyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FdmVudC9NZXNzYWdlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZXNDb21wb25lbnQvc3R5bGUuY3NzPzhmN2UiLCJ3ZWJwYWNrOi8vLy4vc3JjL01lc3NhZ2VzQ29tcG9uZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZUNvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZUNvbXBvbmVudC9zdHlsZS5jc3M/NDc2OCIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZUNvbXBvbmVudC9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L1JlZHVjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL01lc3NhZ2VzLmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudHMvU3R5bGUuY3NzPzc5NzEiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50cy9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50cy9SZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9UYWdFeHBsb3Jlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvVGFnRXhwbG9yZXIvVGFncy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2NvbnZlcnRKU09OdG9IVE1MQXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvVGFnRXhwbG9yZXIvU3R5bGUuY3NzP2FjNDQiLCJ3ZWJwYWNrOi8vLy4vc3JjL1RhZ0V4cGxvcmVyL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvU3R5bGUuY3NzPzNiOTciLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9TZWxlY3Rvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL1NlbGVjdG9yL1N0eWxlLmNzcz9iYjg1Iiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvU2VsZWN0b3IvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9TdHlsZS5jc3M/MmNlNiIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1Byb3BlcnR5L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vUHJvcGVydHkvU3R5bGUuY3NzPzk1ODMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9Qcm9wZXJ0eS9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9WYWx1ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1ZhbHVlL1N0eWxlLmNzcz9iMTJkIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vVmFsdWUvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL3V0aWwuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvU3R5bGUuY3NzP2Y5MmEiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvU3R5bGUuY3NzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwidXNlU291cmNlTWFwIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlTWFwIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwiY29uY2F0Iiwiam9pbiIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsImlkIiwicHVzaCIsImZuIiwibWVtbyIsInN0eWxlc0luRG9tIiwiaXNPbGRJRSIsIndpbmRvdyIsImRvY3VtZW50IiwiYWxsIiwiYXRvYiIsImFwcGx5IiwiYXJndW1lbnRzIiwiZ2V0RWxlbWVudCIsInRhcmdldCIsInBhcmVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsIm9wdGlvbnMiLCJkb21TdHlsZSIsInJlZnMiLCJqIiwicGFydHMiLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsImJhc2UiLCJwYXJ0IiwiY3NzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImluc2VydEludG8iLCJFcnJvciIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImFwcGVuZENoaWxkIiwiZmlyc3RDaGlsZCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImlkeCIsImluZGV4T2YiLCJzcGxpY2UiLCJjcmVhdGVTdHlsZUVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidW5kZWZpbmVkIiwiYXR0cnMiLCJ0eXBlIiwibm9uY2UiLCJuYyIsImdldE5vbmNlIiwiYWRkQXR0cnMiLCJlbCIsImtleXMiLCJmb3JFYWNoIiwic2V0QXR0cmlidXRlIiwib2JqIiwidXBkYXRlIiwicmVtb3ZlIiwicmVzdWx0IiwidHJhbnNmb3JtIiwiZGVmYXVsdCIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImhyZWYiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNyZWF0ZVRleHROb2RlIiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJpbmRleCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwiY2hlY2tOZXN0ZWRDb21wb25lbnRzIiwic2F2ZUNvbXBvbmVudHNUb1dpbmRvdyIsIm5lc3RlZENvbXBvbmVudHMiLCJzYXZlVG9XaW5kb3ciLCJnZXROZXN0ZWRDb21wb25lbnRzIiwiY29tcG9uZW50cyIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIm1hcmt1cCIsImNoaWxkcmVuIiwiY29tcG9uZW50IiwiaW5jbHVkZXMiLCJncmFuZEtpZHMiLCJmbGF0IiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiZ2V0Q29tcG9uZW50QnlOYW1lIiwiY29tcG9uZW50TmFtZSIsImdldENoaWxkQ29tcG9uZW50cyIsIl9jb252ZXJ0VG9SZWFjdENvbXBvbmVudCIsIl9jcmVhdGVTdHlsZXNoZWV0IiwiY3JlYXRlU3R5bGVzaGVldCIsImNyZWF0ZUNvbXBvbmVudCIsIl9jb2RlTW9kaWZpZXIiLCJfbmVzdGVkQ29tcG9uZW50U2V0dXAiLCJnZXRDb21wb25lbnRTdHJpbmciLCJjb252ZXJ0VG9SZWFjdGNvbXBvbmVudCIsImNvbXBvbmVudFN0cmluZyIsImV2YWwiLCJCYWJlbCIsInByZXNldHMiLCJwbHVnaW5zIiwiY29kZSIsImV2ZW50cyIsImV2ZW50IiwicmVwbGFjZSIsInN0YXRlT3ZlcmlkZU1hcmt1cCIsImNvbmZpZyIsImNoaWxkTmFtZSIsIm92ZXJpZGVTdGF0ZSIsImdldFN0YXRlZE1hcmt1cCIsImNoaWxkQ29tcG9uZW50cyIsImNoaWxkIiwicHVibGlzaGFibGVFdmVudHMiLCJwdWJsaXNoYWJsZSIsImV2ZW50VXNlZEluUGFyZW50IiwicHVibGlzaGFibGVFdmVudCIsImZpbmQiLCJwdWJsaXNoTmFtZSIsImZ1bmN0aW9uRGVmIiwiY29kZU1vZGlmaWVyIiwicmVkdWNlciIsInByb3BzIiwic3BsaXQiLCJnZXRDb21wb25lbnRFdmVudGVkTWFya3VwIiwiaXNFeHBvcnQiLCJhdHRyaWJ1dGVzIiwiZGF0YS1jb21wb25lbnROYW1lIiwidG9VcHBlckNhc2UiLCJhdHRyaWJ1dGVTdHJpbmciLCJhZGREYXRhQXR0cmlidXRlcyIsImNvbXBvbmVudFJlZHVjZXJzIiwiZnVuY3Rpb25OYW1lIiwiUmVhY3RDb21wb25lbnQiLCJzdGF0ZSIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsImxldHRlciIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJobXIiLCJsb2NhbHMiLCJ1cGRhdGVzZWxlY3RlZEluZGV4IiwiY3VycmVudFRhcmdldCIsImlubmVyVGV4dCIsInNlbGVjdGVkQ29tcG9uZW50IiwiZWxlbWVudHMiLCJzZWxlY3RlZEluZGV4IiwiZmluZEluZGV4Iiwic2V0U3RhdGUiLCJzZXRFZGl0TW9kZSIsInNhdmVFbGVtZW50IiwiZWxlbWVudCIsIm5ld0VsZW1lbnRzIiwiQXJyYXkiLCJlZGl0TW9kZSIsImVsZW1lbnRVbmRlckVkaXQiLCJuZXdFbGVtZW50IiwiTWF0aCIsImNlaWwiLCJyYW5kb20iLCJzaG93Iiwic2V0SXRlbSIsInRvZ2dsZUVkaXRvciIsInVwZGF0ZUV2ZW50Iiwib25EZWxldGUiLCJ1cGRhdGVDb25maWciLCJwYXJlbnROYW1lIiwib3ZlcnJpZGUiLCJkeW5hbWljU3R5bGUiLCJpbm5lckhUTUwiLCJib2R5IiwiX3JlYWN0IiwiTWVzc2FnZXNDb21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIl9fcHJvdG9fXyIsImdldFByb3RvdHlwZU9mIiwiQ29tcG9uZW50IiwibWVzc2FnZXMiLCJfcmVhY3QyIiwiY2xhc3NOYW1lIiwibWVzc2FnZSIsIl9NZXNzYWdlQ29tcG9uZW50MiIsImdldE5vZGVUcmVlIiwianN4IiwiZXJyb3IiLCJfZGVmaW5lUHJvcGVydHkiLCJSZWFjdCIsIkluZGV4IiwiX1Rvb2wyIiwiUmVhY3RET00iLCJyZW5kZXIiLCJnZXRFbGVtZW50QnlJZCIsImsiLCJmb3IiLCJxIiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiYWEiLCJiYSIsIkEiLCJpdGVyYXRvciIsIkIiLCJhIiwiYiIsImciLCJoIiwiZiIsImZyYW1lc1RvUG9wIiwiY2EiLCJDIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkQiLCJFIiwiY29udGV4dCIsInVwZGF0ZXIiLCJGIiwiRyIsImlzUmVhY3RDb21wb25lbnQiLCJmb3JjZVVwZGF0ZSIsIkgiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSSIsImN1cnJlbnQiLCJKIiwiSyIsIkwiLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk0iLCJkZWZhdWx0UHJvcHMiLCIkJHR5cGVvZiIsIl9vd25lciIsIk4iLCJPIiwiUCIsIlEiLCJwb3AiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJSIiwiVSIsIlMiLCJUIiwiaXNBcnJheSIsIm5leHQiLCJkb25lIiwiPSIsIjoiLCJlc2NhcGUiLCJlYSIsImZhIiwiViIsImRhIiwiVyIsIlgiLCJDaGlsZHJlbiIsInRvQXJyYXkiLCJvbmx5IiwiY3JlYXRlUmVmIiwiUHVyZUNvbXBvbmVudCIsImNyZWF0ZUNvbnRleHQiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJfY3VycmVudFZhbHVlIiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2NvbnRleHQiLCJmb3J3YXJkUmVmIiwibGF6eSIsIl9jdG9yIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJjb21wYXJlIiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZURlYnVnVmFsdWUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZVN0YXRlIiwiRnJhZ21lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiaXNWYWxpZEVsZW1lbnQiLCJ2ZXJzaW9uIiwidW5zdGFibGVfQ29uY3VycmVudE1vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudE93bmVyIiwiWSIsIloiLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImNvbnNvbGUiLCJoYSIsImlhIiwib25FcnJvciIsImphIiwic2xpY2UiLCJsYSIsIm1hIiwibmEiLCJvYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwicGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInFhIiwicmVnaXN0cmF0aW9uTmFtZSIsInJhIiwic2EiLCJkZXBlbmRlbmNpZXMiLCJ0YSIsInVhIiwidmEiLCJ3YSIsImthIiwieGEiLCJ5YSIsInphIiwiQWEiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJCYSIsImluamVjdEV2ZW50UGx1Z2luT3JkZXIiLCJpbmplY3RFdmVudFBsdWdpbnNCeU5hbWUiLCJDYSIsInN0YXRlTm9kZSIsImRpc2FibGVkIiwiRGEiLCJFYSIsIkZhIiwiR2EiLCJIYSIsInRhZyIsIklhIiwiSmEiLCJLYSIsIkxhIiwicmV0dXJuIiwiTWEiLCJkaXNwYXRjaENvbmZpZyIsIk5hIiwiX3RhcmdldEluc3QiLCJPYSIsIlBhIiwiUWEiLCJSYSIsIlNhIiwidG9Mb3dlckNhc2UiLCJUYSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlVhIiwiVmEiLCJXYSIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYSIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJjYiIsImRiIiwiZWIiLCJ0ZXh0Q29udGVudCIsImZiIiwiZ2IiLCJuYXRpdmVFdmVudCIsIkludGVyZmFjZSIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImliIiwiZXZlbnRQb29sIiwiamIiLCJkZXN0cnVjdG9yIiwiaGIiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwiZXh0ZW5kIiwia2IiLCJkYXRhIiwibGIiLCJtYiIsIm5iIiwib2IiLCJkb2N1bWVudE1vZGUiLCJwYiIsInFiIiwicmIiLCJzYiIsImJlZm9yZUlucHV0IiwiYnViYmxlZCIsImNhcHR1cmVkIiwiY29tcG9zaXRpb25FbmQiLCJjb21wb3NpdGlvblN0YXJ0IiwiY29tcG9zaXRpb25VcGRhdGUiLCJ0YiIsInViIiwia2V5Q29kZSIsInZiIiwiZGV0YWlsIiwid2IiLCJ6YiIsImxvY2FsZSIsIndoaWNoIiwieGIiLCJjdHJsS2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImNoYXIiLCJ5YiIsIkFiIiwiQmIiLCJDYiIsIkRiIiwiRWIiLCJGYiIsIkdiIiwiSGIiLCJJYiIsIkpiIiwiS2IiLCJMYiIsImNvbG9yIiwiZGF0ZSIsImRhdGV0aW1lIiwiZGF0ZXRpbWUtbG9jYWwiLCJlbWFpbCIsIm1vbnRoIiwibnVtYmVyIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIk1iIiwibm9kZU5hbWUiLCJOYiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsIm5vZGVUeXBlIiwiT2IiLCJQYiIsIlJiIiwiX3ZhbHVlVHJhY2tlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInNldCIsImNvbmZpZ3VyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJRYiIsIlNiIiwiY2hlY2tlZCIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJZYiIsIlpiIiwiJGIiLCJhYyIsImJjIiwiY2MiLCJkYyIsImVjIiwiZmMiLCJnYyIsImhjIiwiaWMiLCJkaXNwbGF5TmFtZSIsImpjIiwiX2RlYnVnT3duZXIiLCJfZGVidWdTb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJrYyIsImxjIiwibWMiLCJhY2NlcHRzQm9vbGVhbnMiLCJhdHRyaWJ1dGVOYW1lIiwiYXR0cmlidXRlTmFtZXNwYWNlIiwibXVzdFVzZVByb3BlcnR5IiwicHJvcGVydHlOYW1lIiwicmMiLCJzYyIsInRjIiwicGMiLCJpc05hTiIsInFjIiwidGVzdCIsIm9jIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ1YyIsInZjIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJ3YyIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJ4YyIsInljIiwiemMiLCJBYyIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiQmMiLCJjaGFuZ2UiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiZGV0YWNoRXZlbnQiLCJLYyIsIkxjIiwiYXR0YWNoRXZlbnQiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJRYyIsInZpZXciLCJSYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJTYyIsImdldE1vZGlmaWVyU3RhdGUiLCJUYyIsIlVjIiwiVmMiLCJXYyIsIlhjIiwiWWMiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIlpjIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiJGMiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImFkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJiZCIsImNkIiwiZGQiLCJlZCIsImVmZmVjdFRhZyIsImZkIiwiaGQiLCJzaWJsaW5nIiwiZ2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiamQiLCJjbGlwYm9hcmREYXRhIiwia2QiLCJsZCIsImNoYXJDb2RlIiwibWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwibmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0Iiwib2QiLCJsb2NhdGlvbiIsInJlcGVhdCIsInBkIiwiZGF0YVRyYW5zZmVyIiwicWQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwicmQiLCJzZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwidGQiLCJ1ZCIsInZkIiwid2QiLCJpc0ludGVyYWN0aXZlIiwieGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJ5ZCIsInpkIiwiQWQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkJkIiwiQ2QiLCJEZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiSmQiLCJLZCIsIkxkIiwibm9kZSIsIm9mZnNldCIsIk5kIiwiY29udGVudFdpbmRvdyIsIk9kIiwiY29udGVudEVkaXRhYmxlIiwiUWQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiTWQiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiZG9jdW1lbnRFbGVtZW50Iiwic3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsIm1pbiIsImdldFNlbGVjdGlvbiIsInJhbmdlQ291bnQiLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUmQiLCJTZCIsInNlbGVjdCIsIlRkIiwiVWQiLCJWZCIsIldkIiwiWGQiLCJZZCIsIm9uU2VsZWN0IiwiJGQiLCJaZCIsImFlIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJiZSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiY2UiLCJkZSIsImVlIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImZlIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsImdlIiwiaGUiLCJpZSIsImplIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm5hbWVzcGFjZVVSSSIsImtlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwibGUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIm1lIiwibmUiLCJ0cmltIiwib2UiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInBlIiwibWVudWl0ZW0iLCJhcmVhIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInFlIiwicmUiLCJpcyIsInNlIiwiYmx1ciIsInRlIiwidWUiLCJ2ZSIsIndlIiwiYXV0b0ZvY3VzIiwieGUiLCJfX2h0bWwiLCJ5ZSIsInNldFRpbWVvdXQiLCJ6ZSIsImNsZWFyVGltZW91dCIsIkFlIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsIkJlIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJEZSIsIkVlIiwiU2V0IiwiRmUiLCJHZSIsIkhlIiwiSWUiLCJKZSIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiS2UiLCJMZSIsIk1lIiwiTmUiLCJnZXRDaGlsZENvbnRleHQiLCJPZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJVZSIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiY29udGV4dERlcGVuZGVuY2llcyIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiVmUiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImNmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJkZiIsImZmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJnZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwiamYiLCJrZiIsImJhc2VTdGF0ZSIsInRmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImxmIiwibmYiLCJtZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ1ZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInZmIiwiY29udGV4dFR5cGUiLCJ3ZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsInhmIiwieWYiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInpmIiwiQWYiLCJfc3RyaW5nUmVmIiwiQmYiLCJDZiIsIk1hcCIsImRlbGV0ZSIsIkRmIiwiRWYiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsInF1ZXVlIiwiYmFzZVVwZGF0ZSIsIm5nIiwib2ciLCJwZyIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJkaXNwYXRjaCIsImFjdGlvbiIsInFnIiwibGFzdCIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsInJnIiwiZGVzdHJveSIsImRlcHMiLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwicmVhZENvbnRleHQiLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsIlFnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiUmciLCJwZW5kaW5nQ29udGV4dCIsIlNnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiVGciLCJVZyIsInRoZW4iLCJoZiIsIldlIiwiaHlkcmF0ZSIsImhpZGRlbiIsImZpcnN0Iiwib2JzZXJ2ZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsInN0YWNrIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsIm9uQ2xpY2siLCJvbmNsaWNrIiwicGgiLCJXZWFrU2V0IiwicWgiLCJyaCIsInNoIiwidGgiLCJ2aCIsImNvbXBvbmVudFdpbGxVbm1vdW50Iiwid2giLCJ4aCIsInloIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsInpoIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIkNlIiwiZGlzcGxheSIsInVoIiwiaGkiLCJYaCIsImhhcyIsImFkZCIsIkJoIiwiV2Vha01hcCIsIkNoIiwiRGgiLCJFaCIsImNvbXBvbmVudERpZENhdGNoIiwiRmgiLCJjb21wb25lbnRTdGFjayIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJVaCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVmgiLCJaaCIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImVmIiwiUGQiLCJZaCIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiZmluaXNoZWRXb3JrIiwiJGgiLCJhaSIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJiaSIsImNpIiwiZGkiLCJtYXhEdXJhdGlvbiIsInBpbmdDYWNoZSIsImVpIiwiZmkiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsImdpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsIm5pIiwib2kiLCJwaSIsInFpIiwicmkiLCJzaSIsInRpIiwidW5zdGFibGVfbm93IiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwidGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJCaSIsIkNpIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJEaSIsIkVpIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIkZpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsIkdpIiwiSGkiLCJJaSIsIkppIiwiS2kiLCJMaSIsIk5pIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJPaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJQaSIsIl9pbnRlcm5hbFJvb3QiLCJRaSIsIlNpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiUmkiLCJUaSIsIk1pIiwicXVlcnlTZWxlY3RvckFsbCIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJWaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIlRlIiwib3ZlcnJpZGVQcm9wcyIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJXaSIsIlhpIiwiZ2xvYmFsIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJGdW5jdGlvbiIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJfUmVkdWNlciIsIl9nZXROb2RlVHJlZSIsIlRvb2wiLCJfdGhpcyIsInByZXZpZXdDb21wb25lbnQiLCJzZWxlY3RlZEVsZW1lbnQiLCJub2RlVHJlZSIsIl9EcmFnZ2FibGVDb21wb25lbnQyIiwiX0VsZW1lbnRzMiIsIm9uUHJldmlldyIsInVwZGF0ZVByZXZpZXciLCJvblNlbGVjdGlvbiIsIl9FdmVudHMyIiwib25FdmVudHNVcGRhdGUiLCJvbkNvbmZpZ1VwZGF0ZSIsIl9FZGl0b3IyIiwib25TYXZlIiwiX1ByZXZpZXcyIiwiX1RhZ0V4cGxvcmVyMiIsIl9TdHlsZUV4cGxvcmVyMiIsIl9FdmVudHMiLCJDb21wb25lbnRzIiwiX3RoaXMyIiwiZWxlbWVudExpc3QiLCJfRWxlbWVudDIiLCJvblNlbGVjdGlvbkNoYW5nZSIsInB1Ymxpc2hEZXRhaWxzIiwib25FeHBvcnQiLCJFbGVtZW50IiwiZHJhZ2dhYmxlIiwib25EcmFnU3RhcnQiLCJoYW5kbGVEcmFnIiwic2VsZWN0aW9uQ2hhbmdlZCIsInByZXZpZXdFbGVtZW50IiwicGFyZW50RWxlbWVudCIsImRlbGV0ZUVsZW1lbnQiLCJzZXREYXRhIiwiZ2V0QXR0cmlidXRlIiwiX3ByZXBhcmVFbGVtZW50IiwicHJlcGFyZUVsZW1lbnQiLCJsb2ciLCJfdmFsaWRhdGUiLCJQcmV2aWV3IiwidmFsaWRhdGUiLCJyYW5kb21LZXkiLCJfRHluYW1pY0NvbXBvbmVudDIiLCJEeW5hbWljQ29tcG9uZW50IiwidmFsaWRhdGVDb21wb25lbnQiLCJldmVyeSIsImV2ZW50TmFtZSIsInZhbGlkYXRlRXZlbnRzIiwiRHJhZ2dhYmxlQ29tcG9uZW50IiwicG9zaXRpb24iLCJtaW5pbWlzZWQiLCJfdGhpczMiLCJvbkRyYWdFbmQiLCJtb3ZlRGl2IiwidGl0bGUiLCJ0b2dnbGVNaW5pbWlzZU1heGltaXNlIiwiRWRpdG9yIiwicGxhY2Vob2xkZXIiLCJvbkNoYW5nZSIsInVwZGF0ZU5hbWUiLCJwdWJsaXNoRWxlbWVudCIsInVwZGF0ZU1hcmt1cCIsInVwZGF0ZVN0eWxlIiwidXBkYXRlU3RhdGUiLCJnZXRQcm9wZXJ0eUNvbnRhaW5pbmdQcm9wcyIsInNlbGVjdGVkVGFnIiwiX01lc3NhZ2VzMiIsImV2ZW50c09mU2VsZWN0ZWRUYWciLCJjb25maWd1cmF0b3IiLCJjaGlsZENvbXBvbmVudE5hbWUiLCJldmVudE5hbWVzIiwiX0V2ZW50MiIsInNlbGVjdGVkVGFnSUQiLCJkZWxldGVFdmVudCIsIl9Db25maWd1cmF0b3IyIiwidXBkYXRlQ29uZmlndXJhdGlvbiIsIl9Ob2RlczIiLCJvblNlbGVjdGVkVGFnQ2hhbmdlZCIsInNlbGVjdGVkVGFnQ2hhbmdlZCIsIkNvbmZpZ3VyYXRvciIsInRvZ2dlbE92ZXJyaWRlIiwiTm9kZXMiLCJfdHlwZW9mIiwiRXZlbnQiLCJ1cGRhdGVQdWJsaXNoTmFtZSIsInVwZGF0ZUV2ZW50TmFtZSIsInVwZGF0ZVJlZHVjZXIiLCJ1cGRhdGVFdmVudFR5cGUiLCJwdWJsaXNoRXZlbnQiLCJfTWVzc2FnZXNDb21wb25lbnQiLCJfTWVzc2FnZXNDb21wb25lbnQyIiwiTWVzc2FnZUNvbXBvbmVudCIsIl9tb2R1bGUkZXhwb3J0cyIsIlRhZ0V4cGxvcmVyIiwiX1RhZ3MyIiwiX2NvbnZlcnRKU09OdG9IVE1MQXR0cmlidXRlcyIsIlRhZ3MiLCJjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMiLCJzdHJpbmciLCJwcm9wIiwiX3V0aWwiLCJTdHlsZUV4cGxvcmVyIiwicnVsZXMiLCJnZXRPYmplY3RGb3JtYXQiLCJydWxlIiwiX1J1bGUyIiwiUnVsZSIsIl9TZWxlY3RvcjIiLCJfRGVjbGFyYXRpb24yIiwiZGVjbGFyYXRpb24iLCJ2YWx1ZXMiLCJTZWxlY3RvciIsIm9uQmx1ciIsInZhbHVlQ2hhbmdlZCIsInVwZGF0ZVNlbGVjdG9yIiwiRGVjbGFyYXRpb24iLCJfUHJvcGVydHkyIiwiX1ZhbHVlMiIsIlByb3BlcnR5IiwiVmFsdWUiLCJjb252ZXJ0VG9TdHJpbmciLCJjb252ZXJ0VG9PYmplY3QiLCJzZWxlY3RvciIsInByb3BlcnRpZXMiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdK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c291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDExKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuICdAbWVkaWEgJyArIGl0ZW1bMl0gKyAneycgKyBjb250ZW50ICsgJ30nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9ICcoJyArIGl0ZW1bMl0gKyAnKSBhbmQgKCcgKyBtZWRpYVF1ZXJ5ICsgJyknO1xuICAgICAgICB9XG5cbiAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuICByZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufSIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCIvLyBEZXBlbmRlbmNpZXMuXG5cbmltcG9ydCB7Y3JlYXRlQ29tcG9uZW50fSBmcm9tIFwiLi4vY29udmVydC10by1yZWFjdC1jb21wb25lbnRcIjtcbmltcG9ydCB7Y3JlYXRlU3R5bGVzaGVldH0gZnJvbSBcIi4uL2pzeFRyYW5zcGlsZXIvY3JlYXRlLXN0eWxlc2hlZXRcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrTmVzdGVkQ29tcG9uZW50cyggbWFya3VwKSB7XG4gICAgbGV0IGNvbXBvbmVudHM9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1aS1lZGl0b3JcIikpO1xuICAgIHJldHVybiBjb21wb25lbnRzLmZpbHRlcihjb21wb25lbnQ9PiBtYXJrdXAuaW5jbHVkZXMoY29tcG9uZW50Lm5hbWUpKS5sZW5ndGggPjA7XG59XG5cbi8qKiBUYWtlcyBhIGNvbXBvbmVudCBhbmQgY29udmVydHMgaXQgYXMgYSByZWFjdCBjb21wb25lbnQgKi9cbmZ1bmN0aW9uIHNhdmVUb1dpbmRvdyggY29tcG9uZW50ICkge1xuICAgIGNyZWF0ZVN0eWxlc2hlZXQoY29tcG9uZW50LnN0eWxlKVxuICAgIHdpbmRvd1tjb21wb25lbnQubmFtZV0gPSBjcmVhdGVDb21wb25lbnQoY29tcG9uZW50KTtcbn1cblxuLyoqIFRha2VzIGNvbXBvbmVudHMgYW5kIHNhdmVzIHRoZW0gdG8gd2luZG93IGFzIHJlYWN0IE9iamVjdCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhdmVDb21wb25lbnRzVG9XaW5kb3coIG5lc3RlZENvbXBvbmVudHMpe1xuICAgIC8vIFRyYW5zcGlsZSB0aGVtIGFuZCBtYWtlIHRoZW0gZ2xvYmFsLlxuICAgIG5lc3RlZENvbXBvbmVudHMuZm9yRWFjaChzYXZlVG9XaW5kb3cpO1xufVxuXG4vKiogVGFrZXMgbWFya3VwIGFuZCByZXR1cm5zIGNoaWxkcmVuIGNvbXBvbmVudCBvYmplY3RzLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5lc3RlZENvbXBvbmVudHMgKHBhcmVudCkge1xuICAgIC8vIFNob3VsZCBiZSBhYmxlIHRvIGRldGVjdCBuZXN0ZWQgY29tcG9uZW50LlxuXG4gICAgbGV0IGNvbXBvbmVudHM9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1aS1lZGl0b3JcIikpO1xuICAgIGxldCBuZXN0ZWRDb21wb25lbnRzID0gW3BhcmVudF07XG4gICAgaWYoY2hlY2tOZXN0ZWRDb21wb25lbnRzKHBhcmVudC5tYXJrdXApKXtcbiAgICAgICAgLy8gZmluZCBhbGwgdGhlIG5lc3RlZCBjb21wb25lbnRzIGZyb20gdGhlIG1hcmt1cCBhbmQgcHVzaCBpdCB0byBuZXN0ZWRDb21wb25lbnRzLlxuICAgICAgICBsZXQgY2hpbGRyZW4gPSBjb21wb25lbnRzLmZpbHRlcihjb21wb25lbnQ9PiBwYXJlbnQubWFya3VwLmluY2x1ZGVzKGNvbXBvbmVudC5uYW1lKSk7XG4gICAgICAgIC8vIEZpbmQgZ3JhbmQga2lkcy5cbiAgICAgICAgbGV0IGdyYW5kS2lkcyA9IGNoaWxkcmVuLm1hcChnZXROZXN0ZWRDb21wb25lbnRzKS5mbGF0KDMpXG4gICAgICAgIG5lc3RlZENvbXBvbmVudHMucHVzaCguLi5ncmFuZEtpZHMpXG4gICAgfVxuICAgIHJldHVybiBuZXN0ZWRDb21wb25lbnRzLmZpbHRlcihjb21wb25lbnQ9PmNvbXBvbmVudCAmJiBjb21wb25lbnQubWFya3VwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbXBvbmVudEJ5TmFtZSAoY29tcG9uZW50TmFtZSkge1xuICAgIGxldCBjb21wb25lbnRzPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidWktZWRpdG9yXCIpKTtcbiAgICByZXR1cm4gY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50PT4gbWFya3VwLmluY2x1ZGVzKGNvbXBvbmVudC5uYW1lKSkubGVuZ3RoID4wO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hpbGRDb21wb25lbnRzIChtYXJrdXApe1xuICAgIGxldCBjb21wb25lbnRzPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidWktZWRpdG9yXCIpKTtcbiAgICByZXR1cm4gY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50PT4gbWFya3VwLmluY2x1ZGVzKGNvbXBvbmVudC5uYW1lKSk7XG59IiwiaW1wb3J0IHsgY29kZU1vZGlmaWVyIH0gZnJvbSBcIi4vY29kZU1vZGlmaWVyXCI7XG5pbXBvcnQgeyBnZXRDaGlsZENvbXBvbmVudHMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL25lc3RlZENvbXBvbmVudFNldHVwXCI7XG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudFN0cmluZyhjb21wb25lbnQpe1xuXG4gICAgaWYoIWNvbXBvbmVudC5tYXJrdXBbM10pe1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHJldHVybiBjb252ZXJ0VG9SZWFjdGNvbXBvbmVudChjb21wb25lbnQpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wb25lbnQoY29tcG9uZW50KXtcbiAgICBsZXQgY29tcG9uZW50U3RyaW5nID0gZ2V0Q29tcG9uZW50U3RyaW5nKGNvbXBvbmVudCk7XG4gICAgLy8gZXZhbCBkb2VzIG5vdCBldmFsdWF0ZSBjbGFzcyBpZiBub3QgZXhjbG9zZWQgaW4gcGFyYW50aGVzaXMuXG4gICAgcmV0dXJuIGV2YWwoQmFiZWwudHJhbnNmb3JtKGNvbXBvbmVudFN0cmluZywgeyBwcmVzZXRzOiBbJ3JlYWN0J10sIHBsdWdpbnM6IFtcInRyYW5zZm9ybS1lczIwMTUtY2xhc3Nlc1wiXSAgfSkuY29kZSlcbn1cblxuXG4vLyBFbGVtZW50cyB0byAgcmVhY3QgY29tcG9uZW50LlxuZnVuY3Rpb24gY29udmVydFRvUmVhY3Rjb21wb25lbnQgKGNvbXBvbmVudCl7XG5cbiAgICBjb21wb25lbnQuZXZlbnRzLmZvckVhY2goZXZlbnQ9PntcbiAgICAgICAgZXZlbnQuaWQgPSBldmVudC5pZC5yZXBsYWNlKFwiLVwiLFwiXCIpO1xuICAgIH0pXG5cbiAgICBsZXQgZ2V0Q29tcG9uZW50RXZlbnRlZE1hcmt1cCA9IChtYXJrdXAsIGV2ZW50cyk9PntcbiAgICAgICAgZXZlbnRzLmZvckVhY2goZXZlbnQ9PntcbiAgICAgICAgICAgIGxldCBpZCA9IGBpZD1cIiR7ZXZlbnQuaWR9XCJgO1xuICAgICAgICAgICAgbWFya3VwID0gbWFya3VwLnJlcGxhY2UoaWQsIGAke2lkfSAke2V2ZW50Lm5hbWV9PXt0aGlzLiR7ZXZlbnQuaWQrZXZlbnQubmFtZX0uYmluZCh0aGlzKX1gKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gVGhpcyB3YXMgYSBlYXN5IHRvIHRoaW5rIGJ1dCBoYXJkIHRvIHdyaXRlIGEgcmVhZGFibGUgY29kZS4gSSBrbm93IGNvbW1lbnRzIHdvbnQgaGVscC5cbiAgICAgICAgbGV0IGNoaWxkQ29tcG9uZW50cyA9IGdldENoaWxkQ29tcG9uZW50cyhtYXJrdXApO1xuICAgICAgICBpZihjaGlsZENvbXBvbmVudHMubGVuZ3RoPjApe1xuICAgICAgICAgICAgLy8gRm9yIGVhY2ggb2YgY2hpbGQgY29tcG9uZW50c1xuICAgICAgICAgICAgY2hpbGRDb21wb25lbnRzLmZvckVhY2goY2hpbGQ9PntcblxuICAgICAgICAgICAgICAgIC8vIEZyb20gZWFjaCBvZiBjaGlsZCBldmVudHMgZmlsdGVyIHRoZSBwdWJsaXNoYWJsZSBldmVudHMuXG4gICAgICAgICAgICAgICAgbGV0IHB1Ymxpc2hhYmxlRXZlbnRzID0gY2hpbGQuZXZlbnRzLmZpbHRlcihldmVudD0+ZXZlbnQucHVibGlzaGFibGU9PT10cnVlKTtcbiAgICAgICAgICAgICAgICAvLyBGaWx0ZXIgcHVibGlzaGFibGUgY2hpbGQgZXZlbnRzIHRoYXQgYXJlIGluIHBhcmVudC5cbiAgICAgICAgICAgICAgICAvLyBGb3IgZWFjaCBvZiBwdWJsaXNoYWJsZSBldmVudHNcbiAgICAgICAgICAgICAgICAvLyBGaW5kIHdoaWNoIGlzIHByZXNlbnQgaW4gdGhpcyBjb21wb25lbnQuZXZlbnRzLm5hbWVcbiAgICAgICAgICAgICAgICBpZihwdWJsaXNoYWJsZUV2ZW50cy5sZW5ndGghPTApe1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCBldmVudFVzZWRJblBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgcHVibGlzaGFibGVFdmVudHMuZm9yRWFjaChwdWJsaXNoYWJsZUV2ZW50PT57XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFVzZWRJblBhcmVudCA9IGNvbXBvbmVudC5ldmVudHMuZmluZChldmVudD0+ZXZlbnQubmFtZT09PXB1Ymxpc2hhYmxlRXZlbnQucHVibGlzaE5hbWUpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIGxldCBmdW5jdGlvbkRlZiA9IGNvZGVNb2RpZmllcihldmVudFVzZWRJblBhcmVudC5yZWR1Y2VyKTtcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgbGV0IHByb3BzID0gZXZlbnRVc2VkSW5QYXJlbnQubmFtZSsnPScrYHtmdW5jdGlvbigpeyR7ZnVuY3Rpb25EZWZ9fS5iaW5kKHRoaXMpfWBcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlbiBkbyBtYXJrdXAucmVwbGFjZVxuICAgICAgICAgICAgICAgICAgICBtYXJrdXAgPSBjb21wb25lbnQubWFya3VwLnJlcGxhY2UoY2hpbGQubmFtZSwgY2hpbGQubmFtZStcIiBcIitwcm9wcyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuIG1hcmt1cC5zcGxpdChcIntzdGF0ZS5cIikuam9pbihcInt0aGlzLnN0YXRlLlwiKTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICByZXR1cm4gbWFya3VwLnNwbGl0KFwie3N0YXRlLlwiKS5qb2luKFwie3RoaXMuc3RhdGUuXCIpXG4gICAgfVxuXG4gICAgLy8gY2hlY2tzIGlmIHN0YXRlIG92ZXJyaWRlIGlzIG9uLiB0aGVuIGFkZHMgc3RhdGUgcHJvcCB0byBjaGlsZCBcbiAgICBsZXQgZ2V0U3RhdGVkTWFya3VwID0gKG1hcmt1cCk9PntcbiAgICAgICAgLy8gZm9yIGFsbCB0aGUgY29uZmlnLlxuICAgICAgICAvLyBmaWx0ZXIgY2hpbGQgd2l0aCBvdmVyaWRlIHN0YXRlIGlzIHRydWVcbiAgICAgICAgbGV0IGNvbmZpZyA9IEpTT04ucGFyc2UoY29tcG9uZW50LmNvbmZpZyk7XG4gICAgICAgIGxldCBjaGlsZHJlbkNvbmZpZyA9IE9iamVjdC5rZXlzKGNvbmZpZyk7XG4gICAgICAgIGNoaWxkcmVuQ29uZmlnLmZvckVhY2goY2hpbGROYW1lPT57XG4gICAgICAgICAgICBpZihjb25maWdbY2hpbGROYW1lXS5vdmVyaWRlU3RhdGUpe1xuICAgICAgICAgICAgICAgIG1hcmt1cCA9IG1hcmt1cC5yZXBsYWNlKGNoaWxkTmFtZSwgY2hpbGROYW1lK2Agc3RhdGU9e3RoaXMuc3RhdGUuJHtjaGlsZE5hbWV9fWApXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBtYXJrdXA7XG4gICAgfVxuICAgIFxuICAgIGxldCBnZXRDb21wb25lbnRSZWR1Y2VycyA9IChldmVudHMpID0+IHtcbiAgICAgICAgcmV0dXJuIGV2ZW50cy5tYXAoZXZlbnQ9PntcbiAgICAgICAgICAgIGxldCBmdW5jdGlvbk5hbWUgPSBldmVudC5pZCtldmVudC5uYW1lO1xuICAgICAgICAgICAgbGV0IGZ1bmN0aW9uRGVmID0gY29kZU1vZGlmaWVyKGV2ZW50LnJlZHVjZXIpO1xuXG4gICAgICAgICAgICBpZihldmVudC5wdWJsaXNoYWJsZT09PXRydWUpe1xuICAgICAgICAgICAgICAgIHJldHVybiBgXG4gICAgICAgICAgICAgICAgICAgICR7ZnVuY3Rpb25OYW1lfSAoZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHtmdW5jdGlvbkRlZn1cbiAgICAgICAgICAgICAgICAgICAgICAgIGUuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuJHtldmVudC5wdWJsaXNoTmFtZX0/IHRoaXMucHJvcHMuJHtldmVudC5wdWJsaXNoTmFtZX0oZSk6bnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgICAgICAgICAke2Z1bmN0aW9uTmFtZX0gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR7ZnVuY3Rpb25EZWZ9XG4gICAgICAgICAgICAgICAgICAgIH1gXG4gICAgICAgIH0pLmpvaW4oXCJcXG5cIilcbiAgICB9XG4gICAgXG4gICAgbGV0IGFkZERhdGFBdHRyaWJ1dGVzID0gKGNvbXBvbmVudCwgaXNFeHBvcnQpID0+IHtcblxuICAgICAgICBpZighaXNFeHBvcnQpe1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgLy9GaW5kcyB0aGUgZmlyc3Qgc3BhY2UuIFRoaXMgdXN1YWxseSBtZWFucyB0aGUgdGFnIG5hbWUgZW5kaW5nIHBvaW50LiBidXQgdGhpcyB3aWxsIGZhaWwgYmVjYXV1c2Ugb2YgZXZlbnRzIGZvciBjaGlsZC4gYnV0IGxldHMgZ2l2ZSBpdCBhIHRyeS5cbiAgICAgICAgbGV0IGF0dHJpYnV0ZXMgPSB7XG4gICAgICAgICAgICBcImRhdGEtY29tcG9uZW50TmFtZVwiOiBjb21wb25lbnQubmFtZS50b1VwcGVyQ2FzZSgpLFxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGF0dHJpYnV0ZVN0cmluZyA9IEpTT04uc3RyaW5naWZ5KGF0dHJpYnV0ZXMpLnJlcGxhY2UoJ3tcIicsXCJcIikucmVwbGFjZShcIn1cIixcIlwiKS5yZXBsYWNlKFwiOlwiLFwiPVwiKS5yZXBsYWNlKCdcIicsXCJcIilcbiAgICAgICAgcmV0dXJuIGNvbXBvbmVudC5tYXJrdXAucmVwbGFjZShcIiBcIiwgYCAke2F0dHJpYnV0ZVN0cmluZ30gYClcbiAgICB9XG5cbiAgICBsZXQgY29tcG9uZW50RXZlbnRlZE1hcmt1cCA9IGdldENvbXBvbmVudEV2ZW50ZWRNYXJrdXAoYWRkRGF0YUF0dHJpYnV0ZXMoY29tcG9uZW50KSwgY29tcG9uZW50LmV2ZW50cylcbiAgICBsZXQgc3RhdGVPdmVyaWRlTWFya3VwID0gZ2V0U3RhdGVkTWFya3VwKGNvbXBvbmVudEV2ZW50ZWRNYXJrdXApXG4gICAgbGV0IGNvbXBvbmVudFJlZHVjZXJzID0gZ2V0Q29tcG9uZW50UmVkdWNlcnMoY29tcG9uZW50LmV2ZW50cylcbiAgICBsZXQgY29tcG9uZW50TmFtZSA9IGNvbXBvbmVudC5uYW1lLnNwbGl0KFwiIFwiKS5qb2luKFwiXCIpXG4gICAgbGV0IGNvbXBvbmVudFN0YXRlID0gY29tcG9uZW50LnN0YXRlXG4gICAgbGV0IFJlYWN0Q29tcG9uZW50ID0gXG4gICAgYChcbiAgICBjbGFzcyAke2NvbXBvbmVudE5hbWV9IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBcbiAgICAgICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLnByb3BzLnN0YXRlIHx8ICR7Y29tcG9uZW50U3RhdGV9O1xuICAgICAgICB9XG4gICAgXG4gICAgICAgICR7Y29tcG9uZW50UmVkdWNlcnN9XG4gICAgXG4gICAgICAgIHJlbmRlcigpIHtcbiAgICBcbiAgICAgICAgICAgIHJldHVybiAoJHtzdGF0ZU92ZXJpZGVNYXJrdXB9KVxuICAgICAgICB9XG4gICAgfSlcbiAgICBgXG4gICAgcmV0dXJuIFJlYWN0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBjcmVhdGVDb21wb25lbnQsXG4gICAgZ2V0Q29tcG9uZW50U3RyaW5nXG59IiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsIi8vIERlcGVuZGVuY2llcy5cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZXNlbGVjdGVkSW5kZXggKGUpIHtcbiAgICBsZXQgY29tcG9uZW50TmFtZSA9IGUuY3VycmVudFRhcmdldC5pbm5lclRleHQuc3BsaXQoXCJcXG5cIilbMF07XG4gICAgLy8gRmluZCB0aGUgZWxlbWVudCBmcm9tIHN0YXRlIHRoYXQgbWF0Y2hlcyB0aGUgY3VycmVudGx5IHNlbGVjdGVkIGVsZW1lbnQuXG4gICAgbGV0IHNlbGVjdGVkQ29tcG9uZW50ID0gdGhpcy5zdGF0ZS5lbGVtZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWU9PT1jb21wb25lbnROYW1lKTtcbiAgICBsZXQgc2VsZWN0ZWRJbmRleCA9IHRoaXMuc3RhdGUuZWxlbWVudHMuZmluZEluZGV4KGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWU9PT1jb21wb25lbnROYW1lKTtcblxuICAgIC8vIFVwZGF0ZSB0aGUgc3RhdGUgd2l0aCBzZWxlY3RlZEVsZW1lbnQuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHNlbGVjdGVkSW5kZXgsXG4gICAgICAgIG5hbWU6IHNlbGVjdGVkQ29tcG9uZW50Lm5hbWUsXG4gICAgICAgIG1hcmt1cDogc2VsZWN0ZWRDb21wb25lbnQubWFya3VwXG4gICAgfSlcblxuICAgIHRoaXMuc2V0RWRpdE1vZGUoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVFbGVtZW50IChlbGVtZW50KSB7XG4gICAgXG4gICAgbGV0IG5ld0VsZW1lbnRzID0gQXJyYXkuZnJvbSh0aGlzLnN0YXRlLmVsZW1lbnRzKTtcbiAgICBcbiAgICBpZih0aGlzLnN0YXRlLmVkaXRNb2RlKXtcbiAgICAgICAgLy8gRmluZCB0aGUgZWxlbWVudC5cbiAgICAgICAgbGV0IGVsZW1lbnRVbmRlckVkaXQgPSBuZXdFbGVtZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdO1xuXG4gICAgICAgIC8vIE1lcmdlLlxuICAgICAgICBlbGVtZW50VW5kZXJFZGl0ID0gT2JqZWN0LmFzc2lnbihlbGVtZW50VW5kZXJFZGl0LCBlbGVtZW50KVxuXG4gICAgICAgIC8vIFB1c2ggaXQgdG8gb3JpZ2luYWwgbGlzdC5cbiAgICAgICAgbmV3RWxlbWVudHNbdGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4XSA9IGVsZW1lbnRVbmRlckVkaXQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBsZXQgbmV3RWxlbWVudCA9IHtcbiAgICAgICAgICAgIG5hbWU6IGVsZW1lbnQubmFtZSxcbiAgICAgICAgICAgIG1hcmt1cDogZWxlbWVudC5tYXJrdXAsXG4gICAgICAgICAgICBldmVudHM6IFtdLFxuICAgICAgICAgICAgc3RhdGU6IGVsZW1lbnQuc3RhdGUsXG4gICAgICAgICAgICBzdHlsZTogZWxlbWVudC5zdHlsZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgICAgIGlkOiBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSoxMDAwKSxcbiAgICAgICAgICAgIGNvbmZpZzpcInt9XCJcbiAgICAgICAgfTtcblxuICAgICAgICBuZXdFbGVtZW50cy5wdXNoKG5ld0VsZW1lbnQpO1xuICAgIH1cblxuICAgIC8vIFVwZGF0ZSB0aGUgc3RhdGUgd2l0aCBuZXcgdmFsdWVzLlxuICAgIC8vIDEuIEluaXRpYWxpc2UgdGhlIGVkaXRTdGF0ZSB3aXRoIGRlZmF1bHQgdmFsdWVzLyBlbXB0eSBpdC5cbiAgICAvLyBUT0RPOiByZW1vdmUgZWRpdE1vZGUuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBuZXdFbGVtZW50cyxcbiAgICAgICAgZWRpdE1vZGU6IGZhbHNlLFxuICAgICAgICBlbGVtZW50OiB7XG4gICAgICAgICAgICBuYW1lOiBlbGVtZW50Lm5hbWUsXG4gICAgICAgICAgICBtYXJrdXA6IGVsZW1lbnQubWFya3VwLFxuICAgICAgICAgICAgc3R5bGU6IGVsZW1lbnQuc3R5bGUsXG4gICAgICAgICAgICBzdGF0ZTogZWxlbWVudC5zdGF0ZSxcbiAgICAgICAgICAgIGV2ZW50czogZWxlbWVudC5ldmVudHMgfHwgW11cbiAgICAgICAgfSxcbiAgICAgICAgc2hvdzogZmFsc2VcbiAgICB9KTtcblxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidWktZWRpdG9yXCIsIEpTT04uc3RyaW5naWZ5KG5ld0VsZW1lbnRzKSk7XG5cbiAgICAvLyBoaWRlIHRoZSBlZGl0b3IuXG4gICAgdGhpcy50b2dnbGVFZGl0b3IoKTtcbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlRXZlbnQgKGV2ZW50cykge1xuICAgIC8vIENyZWF0ZSBuZXcgc3RhdGUuXG4gICAgbGV0IG5ld0VsZW1lbnRzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZSkuZWxlbWVudHM7XG5cbiAgICBuZXdFbGVtZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdLmV2ZW50cyA9IGV2ZW50cztcblxuICAgIC8vIFNldCBzdGF0ZSB0byB0aGUgbmV3IHN0YXRlLlxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBlbGVtZW50czogbmV3RWxlbWVudHNcbiAgICB9KTtcblxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidWktZWRpdG9yXCIsIEpTT04uc3RyaW5naWZ5KG5ld0VsZW1lbnRzKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkRlbGV0ZShjb21wb25lbnROYW1lKSB7XG4gICAgLy8gR2V0IGFsbCB0aGUgZWxlbWVudHNcbiAgICBsZXQgZWxlbWVudHMgPSBBcnJheS5mcm9tKHRoaXMuc3RhdGUuZWxlbWVudHMpO1xuICAgIFxuICAgIC8vIEZpbmQgdGhlIGluZGV4IG9mIGVsZW1lbnQgdG8gYmUgZGVsZXRlZC5cbiAgICBsZXQgaW5kZXggPSBlbGVtZW50cy5maW5kSW5kZXgoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWNvbXBvbmVudE5hbWUpXG5cbiAgICAvLyBSZW1vdmUgdGhlIGVsZW1lbnQgZnJvbSB0aGUgbGlzdFxuICAgIGVsZW1lbnRzLnNwbGljZShpbmRleCwxKTtcblxuICAgIC8vIFVwZGF0ZSB0aGUgc3RhdGUgd2l0aCBuZXcgZWxlbWVudHMuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBlbGVtZW50c1xuICAgIH0pXG5cbiAgICAvLyBQZXJzaXN0IHRoZSBjaGFuZ2VzLlxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidWktZWRpdG9yXCIsIEpTT04uc3RyaW5naWZ5KGVsZW1lbnRzKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0b2dnbGVFZGl0b3IgKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzaG93OiAhdGhpcy5zdGF0ZS5zaG93XG4gICAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRFZGl0TW9kZSAoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVkaXRNb2RlOiB0cnVlLFxuICAgICAgICBzaG93OiB0cnVlXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUNvbmZpZyhjb25maWcpe1xuICAgIFxuICAgIGxldCBuZXdFbGVtZW50cyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuc3RhdGUpLmVsZW1lbnRzO1xuICAgIFxuICAgIGxldCBwYXJlbnQgPSBuZXdFbGVtZW50cy5maW5kKGVsZW1lbnQ9PmVsZW1lbnQubmFtZT09PWNvbmZpZy5wYXJlbnROYW1lKTtcbiAgICBsZXQgY2hpbGQgPSBuZXdFbGVtZW50cy5maW5kKGVsZW1lbnQ9PmVsZW1lbnQubmFtZT09PWNvbmZpZy5jaGlsZE5hbWUpO1xuXG4gICAgcGFyZW50LnN0YXRlID0gSlNPTi5wYXJzZShwYXJlbnQuc3RhdGUpO1xuXG4gICAgaWYocGFyZW50LmNvbmZpZyA9PT0gdW5kZWZpbmVkKXtcbiAgICAgICAgcGFyZW50LmNvbmZpZyA9IHt9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcGFyZW50LmNvbmZpZyA9IEpTT04ucGFyc2UocGFyZW50LmNvbmZpZyk7XG4gICAgfVxuICAgIHBhcmVudC5jb25maWdbY2hpbGQubmFtZV0gPSBwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdIHx8IHt9XG4gICAgcGFyZW50LmNvbmZpZ1tjaGlsZC5uYW1lXS5vdmVyaWRlU3RhdGUgPSBjb25maWcub3ZlcnJpZGVcbiAgICBcbiAgICBpZihwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdLm92ZXJpZGVTdGF0ZSkgeyAgICBcbiAgICAgICAgcGFyZW50LnN0YXRlW2NoaWxkLm5hbWVdID0gSlNPTi5wYXJzZShjaGlsZC5zdGF0ZSk7XG4gICAgfSBcbiAgICBlbHNlIHtcbiAgICAgICAgZGVsZXRlIHBhcmVudC5zdGF0ZVtjaGlsZC5uYW1lXTtcbiAgICAgICAgZGVsZXRlIHBhcmVudC5jb25maWdbY2hpbGQubmFtZV07XG4gICAgfVxuXG5cbiAgICBwYXJlbnQuc3RhdGUgPSBKU09OLnN0cmluZ2lmeShwYXJlbnQuc3RhdGUpXG4gICAgcGFyZW50LmNvbmZpZyA9IEpTT04uc3RyaW5naWZ5KHBhcmVudC5jb25maWcpXG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZWxlbWVudHM6IG5ld0VsZW1lbnRzXG4gICAgfSlcblxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidWktZWRpdG9yXCIsIEpTT04uc3RyaW5naWZ5KG5ld0VsZW1lbnRzKSk7XG59IiwiLy8gSW1wbGVtZW50IHN0eWxlc2hlZXQgY2xlYW51cFxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3R5bGVzaGVldChzdHlsZSkge1xuXG4gICAgdmFyIGR5bmFtaWNTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgZHluYW1pY1N0eWxlLnR5cGUgPSAndGV4dC9jc3MnO1xuICAgIGR5bmFtaWNTdHlsZS5pbm5lckhUTUwgPSBzdHlsZTtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGR5bmFtaWNTdHlsZSlcbn0iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuaW1wb3J0IE1lc3NhZ2VDb21wb25lbnQgZnJvbSBcIi4uL01lc3NhZ2VDb21wb25lbnRcIjtcblxuY2xhc3MgTWVzc2FnZXNDb21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IG1lc3NhZ2VzID0gdGhpcy5wcm9wcy5tZXNzYWdlcztcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb25zb2xlXCI+XG4gICAgICAgICAgICAgICAgICAgIHttZXNzYWdlcy5tYXAoKG1lc3NhZ2UsaW5kZXgpPT48TWVzc2FnZUNvbXBvbmVudCBrZXk9e2luZGV4fSBtZXNzYWdlPXttZXNzYWdlfS8+KX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgTWVzc2FnZXNDb21wb25lbnQ7IiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBXaHk/IEJlY2F1c2UgaW1wb3J0aW5nIFJlYWN0IGFzIHZhcmlhYmxlIGF0IGxpbmUjMiB3aWxsIGJlIGFsdGVydGVkIGJ5IGJhYmVsLiBLZWVwIGl0IGFzIGEgcHJvcGVydHksIGJhYmVsIHdpbGwgaWdub3JlIGl0Llxud2luZG93LlJlYWN0ID0gUmVhY3Q7XG53aW5kb3cuQ29tcG9uZW50ID0gUmVhY3QuQ29tcG9uZW50O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm9kZVRyZWUoanN4LCBzdHlsZSwgc3RhdGUsIGV2ZW50cykge1xuICAgIGxldCByZXN1bHQsIGVycm9yO1xuICAgIHRyeXtcbiAgICAgICAgcmVzdWx0ID0gZXZhbChCYWJlbC50cmFuc2Zvcm0oanN4LCB7IHByZXNldHM6IFsncmVhY3QnXSB9KS5jb2RlKVxuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIGVycm9yID0gZTtcbiAgICB9XG4gICAgZmluYWxseXtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycm9yOiBlcnJvcixcbiAgICAgICAgICAgIHJlc3VsdCwgcmVzdWx0XG4gICAgICAgIH07XG4gICAgfVxufSIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcblxuLy8gRGVwZW5kZW5jaWVzLlxuaW1wb3J0IFwiLi9JbmRleC9pbmRleC5jc3NcIjtcblxuLy8gQ29tcG9uZW50cy5cblxuaW1wb3J0IFRvb2wgZnJvbSBcIi4vVG9vbFwiO1xuXG5cbmNsYXNzIEluZGV4IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG5cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8VG9vbCAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5SZWFjdERPTS5yZW5kZXIoPEluZGV4IC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImluZGV4XCIpKTsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNlxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsYWE9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LGJhPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gY2EoYSxiLGQsYyxlLGcsaCxmKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bZCxjLGUsZyxoLGZdLG09MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW20rK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZD1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZCs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7Y2EoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixkKX12YXIgQz17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRD17fTtcbmZ1bmN0aW9uIEUoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q31FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0UucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9CKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7ayhILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPXtjdXJyZW50Om51bGx9LEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGQpe3ZhciBjPXZvaWQgMCxlPXt9LGc9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Zil7Zm9yKHZhciBsPUFycmF5KGYpLG09MDttPGY7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1sfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1lW2NdJiYoZVtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmgscHJvcHM6ZSxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIGRhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGQsYyl7aWYoUC5sZW5ndGgpe3ZhciBlPVAucG9wKCk7ZS5yZXN1bHQ9YTtlLmtleVByZWZpeD1iO2UuZnVuYz1kO2UuY29udGV4dD1jO2UuY291bnQ9MDtyZXR1cm4gZX1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpkLGNvbnRleHQ6Yyxjb3VudDowfX1cbmZ1bmN0aW9uIFIoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5QLmxlbmd0aCYmUC5wdXNoKGEpfVxuZnVuY3Rpb24gUyhhLGIsZCxjKXt2YXIgZT10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZXx8XCJib29sZWFuXCI9PT1lKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gZChjLGEsXCJcIj09PWI/XCIuXCIrVChhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaD0wO2g8YS5sZW5ndGg7aCsrKXtlPWFbaF07dmFyIGY9YitUKGUsaCk7Zys9UyhlLGYsZCxjKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUEmJmFbQV18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaD1cbjA7IShlPWEubmV4dCgpKS5kb25lOyllPWUudmFsdWUsZj1iK1QoZSxoKyspLGcrPVMoZSxmLGQsYyk7ZWxzZVwib2JqZWN0XCI9PT1lJiYoZD1cIlwiK2EsQihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWQ/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZCxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVShhLGIsZCl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixiLGQpfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGVhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGZhKGEsYixkKXt2YXIgYz1hLnJlc3VsdCxlPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1YoYSxjLGQsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTihhKSYmKGE9ZGEoYSxlKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKStkKSksYy5wdXNoKGEpKX1mdW5jdGlvbiBWKGEsYixkLGMsZSl7dmFyIGc9XCJcIjtudWxsIT1kJiYoZz0oXCJcIitkKS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpO2I9UShiLGcsYyxlKTtVKGEsZmEsYik7UihiKX1mdW5jdGlvbiBXKCl7dmFyIGE9SS5jdXJyZW50O251bGw9PT1hP0IoXCIzMjFcIik6dm9pZCAwO3JldHVybiBhfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VihhLGMsbnVsbCxiLGQpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO2I9UShudWxsLG51bGwsYixkKTtVKGEsZWEsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFUoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtWKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TihhKT92b2lkIDA6QihcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RSxQdXJlQ29tcG9uZW50OkcsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmJhLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOmFhLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNhbGxiYWNrKGEsYil9LHVzZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNvbnRleHQoYSxiKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VFZmZlY3QoYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLFxuYixkKXtyZXR1cm4gVygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGQpfSx1c2VEZWJ1Z1ZhbHVlOmZ1bmN0aW9uKCl7fSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUxheW91dEVmZmVjdChhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VNZW1vKGEsYil9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGQpe3JldHVybiBXKCkudXNlUmVkdWNlcihhLGIsZCl9LHVzZVJlZjpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVJlZihhKX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VTdGF0ZShhKX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixkKXtudWxsPT09YXx8dm9pZCAwPT09YT9CKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxlPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7aWYobnVsbCE9XG5iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpOLHZlcnNpb246XCIxNi44LjZcIixcbnVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlOngsdW5zdGFibGVfUHJvZmlsZXI6dSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpJLFJlYWN0Q3VycmVudE93bmVyOkosYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBsPVtjLGQsZSxmLGcsaF0saz0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGxbaysrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHgoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtiYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp4KFwiMjI3XCIpO2Z1bmN0aW9uIGNhKGEsYixjLGQsZSxmLGcsaCxsKXt2YXIgaz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxrKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGwpe2RhPSExO2VhPW51bGw7Y2EuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsbCl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGs9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHgoXCIxOThcIiksaz12b2lkIDA7ZmF8fChmYT0hMCxoYT1rKX19dmFyIGxhPW51bGwsbWE9e307XG5mdW5jdGlvbiBuYSgpe2lmKGxhKWZvcih2YXIgYSBpbiBtYSl7dmFyIGI9bWFbYV0sYz1sYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOngoXCI5NlwiLGEpO2lmKCFvYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp4KFwiOTdcIixhKTtvYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3BhLmhhc093blByb3BlcnR5KGgpP3goXCI5OVwiLGgpOnZvaWQgMDtwYVtoXT1mO3ZhciBsPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYobCl7Zm9yKGUgaW4gbClsLmhhc093blByb3BlcnR5KGUpJiZxYShsW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp4KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcWEoYSxiLGMpe3JhW2FdP3goXCIxMDBcIixhKTp2b2lkIDA7cmFbYV09YjtzYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBvYT1bXSxwYT17fSxyYT17fSxzYT17fSx0YT1udWxsLHVhPW51bGwsdmE9bnVsbDtmdW5jdGlvbiB3YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9dmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB4YShhLGIpe251bGw9PWI/eChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB5YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgemE9bnVsbDtmdW5jdGlvbiBBYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspd2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmd2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIEJhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe2xhP3goXCIxMDFcIik6dm9pZCAwO2xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO25hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTttYS5oYXNPd25Qcm9wZXJ0eShjKSYmbWFbY109PT1kfHwobWFbY10/eChcIjEwMlwiLGMpOnZvaWQgMCxtYVtjXT1kLGI9ITApfWImJm5hKCl9fTtcbmZ1bmN0aW9uIENhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIERhKGEpe251bGwhPT1hJiYoemE9eGEoemEsYSkpO2E9emE7emE9bnVsbDtpZihhJiYoeWEoYSxBYSksemE/eChcIjk1XCIpOnZvaWQgMCxmYSkpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fXZhciBFYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxGYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0VhLEdhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrRWE7ZnVuY3Rpb24gSGEoYSl7aWYoYVtGYV0pcmV0dXJuIGFbRmFdO2Zvcig7IWFbRmFdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbRmFdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gSWEoYSl7YT1hW0ZhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gSmEoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3goXCIzM1wiKX1mdW5jdGlvbiBLYShhKXtyZXR1cm4gYVtHYV18fG51bGx9ZnVuY3Rpb24gTGEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBNYShhLGIsYyl7aWYoYj1DYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gTmEoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1MYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspTWEoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylNYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBPYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1DYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFBhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmT2EoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gUWEoYSl7eWEoYSxOYSl9dmFyIFJhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gU2EoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGE9e2FuaW1hdGlvbmVuZDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWE9e30sVmE9e307XG5SYSYmKFZhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2EoYSl7aWYoVWFbYV0pcmV0dXJuIFVhW2FdO2lmKCFUYVthXSlyZXR1cm4gYTt2YXIgYj1UYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYSlyZXR1cm4gVWFbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYT1XYShcImFuaW1hdGlvbmVuZFwiKSxZYT1XYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYT1XYShcImFuaW1hdGlvbnN0YXJ0XCIpLCRhPVdhKFwidHJhbnNpdGlvbmVuZFwiKSxhYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmI9bnVsbCxjYj1udWxsLGRiPW51bGw7XG5mdW5jdGlvbiBlYigpe2lmKGRiKXJldHVybiBkYjt2YXIgYSxiPWNiLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGJiP2JiLnZhbHVlOmJiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGRiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gZmIoKXtyZXR1cm4hMH1mdW5jdGlvbiBnYigpe3JldHVybiExfVxuZnVuY3Rpb24geShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/ZmI6Z2I7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1nYjtyZXR1cm4gdGhpc31cbm4oeS5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1mYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1mYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1mYn0saXNQZXJzaXN0ZW50OmdiLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWdiO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7eS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG55LmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2hiKGMpO3JldHVybiBjfTtoYih5KTtmdW5jdGlvbiBpYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBqYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6eChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBoYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1pYjthLnJlbGVhc2U9amJ9dmFyIGtiPXkuZXh0ZW5kKHtkYXRhOm51bGx9KSxsYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbWI9WzksMTMsMjcsMzJdLG5iPVJhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxvYj1udWxsO1JhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihvYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHBiPVJhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhb2IscWI9UmEmJighbmJ8fG9iJiY4PG9iJiYxMT49b2IpLHJiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHNiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHRiPSExO1xuZnVuY3Rpb24gdWIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1tYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHZiKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHdiPSExO2Z1bmN0aW9uIHhiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB2YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7dGI9ITA7cmV0dXJuIHJiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXJiJiZ0Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB5YihhLGIpe2lmKHdiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFuYiYmdWIoYSxiKT8oYT1lYigpLGRiPWNiPWJiPW51bGwsd2I9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHFiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB6Yj17ZXZlbnRUeXBlczpzYixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYobmIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT1zYi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT1zYi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9c2IuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHdiP3ViKGEsYykmJihlPXNiLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9c2IuY29tcG9zaXRpb25TdGFydCk7ZT8ocWImJlwia29cIiE9PWMubG9jYWxlJiYod2J8fGUhPT1zYi5jb21wb3NpdGlvblN0YXJ0P2U9PT1zYi5jb21wb3NpdGlvbkVuZCYmd2ImJihmPWViKCkpOihiYj1kLGNiPVwidmFsdWVcImluIGJiP2JiLnZhbHVlOmJiLnRleHRDb250ZW50LHdiPVxuITApKSxlPWtiLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXZiKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxRYShlKSxmPWUpOmY9bnVsbDsoYT1wYj94YihhLGMpOnliKGEsYykpPyhiPWxiLmdldFBvb2xlZChzYi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsUWEoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sQWI9bnVsbCxCYj1udWxsLENiPW51bGw7ZnVuY3Rpb24gRGIoYSl7aWYoYT11YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIEFiP3goXCIyODBcIik6dm9pZCAwO3ZhciBiPXRhKGEuc3RhdGVOb2RlKTtBYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEViKGEpe0JiP0NiP0NiLnB1c2goYSk6Q2I9W2FdOkJiPWF9ZnVuY3Rpb24gRmIoKXtpZihCYil7dmFyIGE9QmIsYj1DYjtDYj1CYj1udWxsO0RiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylEYihiW2FdKX19XG5mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj0hMTtmdW5jdGlvbiBLYihhLGIpe2lmKEpiKXJldHVybiBhKGIpO0piPSEwO3RyeXtyZXR1cm4gR2IoYSxiKX1maW5hbGx5e2lmKEpiPSExLG51bGwhPT1CYnx8bnVsbCE9PUNiKUliKCksRmIoKX19dmFyIExiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIE1iKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhTGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gTmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIE9iKGEpe2lmKCFSYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBQYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gUWIoYSl7dmFyIGI9UGIoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFJiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1RYihhKSl9ZnVuY3Rpb24gU2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVBiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9dmFyIFRiPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1RiLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1xudmFyIFViPS9eKC4qKVtcXFxcXFwvXS8sej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFZiPXo/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsV2I9ej9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LFhiPXo/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LFliPXo/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LFpiPXo/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LCRiPXo/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGFjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsYmM9ej9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGNjPXo/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGRjPXo/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGVjPXo/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxmYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGdjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBoYyhhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9Z2MmJmFbZ2NdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBpYyhhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGJjOnJldHVyblwiQ29uY3VycmVudE1vZGVcIjtjYXNlIFhiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIFdiOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBaYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBZYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGRjOnJldHVyblwiU3VzcGVuc2VcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgYWM6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSAkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGNjOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXG5cIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBlYzpyZXR1cm4gaWMoYS50eXBlKTtjYXNlIGZjOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gaWMoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gamMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPWljKGEudHlwZSk7Yz1udWxsO2QmJihjPWljKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoVWIsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBrYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sbGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxtYz17fSxuYz17fTtcbmZ1bmN0aW9uIG9jKGEpe2lmKGxjLmNhbGwobmMsYSkpcmV0dXJuITA7aWYobGMuY2FsbChtYyxhKSlyZXR1cm4hMTtpZihrYy50ZXN0KGEpKXJldHVybiBuY1thXT0hMDttY1thXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFjKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQyhiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwyLCExLGEsbnVsbCl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMCxhLG51bGwpfSk7XG5bXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw0LCExLGEsbnVsbCl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDYsITEsYSxudWxsKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7dmFyIHJjPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gc2MoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsXG5zYyk7RFtiXT1uZXcgQyhiLDEsITEsYSxudWxsKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIil9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbmZ1bmN0aW9uIHRjKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KHFjKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9vYyhiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24gdWMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHZjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIHdjKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXVjKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24geGMoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YyhhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24geWMoYSxiKXt4YyhhLGIpO3ZhciBjPXVjKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP3pjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJnpjKGEsYi50eXBlLHVjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gQWMoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gemMoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBCYz17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBDYyhhLGIsYyl7YT15LmdldFBvb2xlZChCYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0ViKGMpO1FhKGEpO3JldHVybiBhfXZhciBEYz1udWxsLEVjPW51bGw7ZnVuY3Rpb24gRmMoYSl7RGEoYSl9XG5mdW5jdGlvbiBHYyhhKXt2YXIgYj1KYShhKTtpZihTYihiKSlyZXR1cm4gYX1mdW5jdGlvbiBIYyhhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBJYz0hMTtSYSYmKEljPU9iKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIEpjKCl7RGMmJihEYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixLYyksRWM9RGM9bnVsbCl9ZnVuY3Rpb24gS2MoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkdjKEVjKSYmKGE9Q2MoRWMsYSxOYihhKSksS2IoRmMsYSkpfWZ1bmN0aW9uIExjKGEsYixjKXtcImZvY3VzXCI9PT1hPyhKYygpLERjPWIsRWM9YyxEYy5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixLYykpOlwiYmx1clwiPT09YSYmSmMoKX1mdW5jdGlvbiBNYyhhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBHYyhFYyl9XG5mdW5jdGlvbiBOYyhhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIEdjKGIpfWZ1bmN0aW9uIE9jKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIEdjKGIpfVxudmFyIFBjPXtldmVudFR5cGVzOkJjLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6SWMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP0phKGIpOndpbmRvdyxmPXZvaWQgMCxnPXZvaWQgMCxoPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcInNlbGVjdFwiPT09aHx8XCJpbnB1dFwiPT09aCYmXCJmaWxlXCI9PT1lLnR5cGU/Zj1IYzpNYihlKT9JYz9mPU9jOihmPU1jLGc9TGMpOihoPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1oLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihmPU5jKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBDYyhmLGMsZCk7ZyYmZyhhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJnpjKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LFFjPXkuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxSYz17QWx0OlwiYWx0S2V5XCIsXG5Db250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBTYyhhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPVJjW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gVGMoKXtyZXR1cm4gU2N9XG52YXIgVWM9MCxWYz0wLFdjPSExLFhjPSExLFljPVFjLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpUYyxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1VYztVYz1hLnNjcmVlblg7cmV0dXJuIFdjP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooV2M9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1WYztWYz1hLnNjcmVlblk7cmV0dXJuIFhjP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooWGM9ITAsMCl9fSksWmM9WWMuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLCRjPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxhZD17ZXZlbnRUeXBlczokYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztmPyhmPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9IYShiKTpudWxsKTpmPW51bGw7aWYoZj09PWIpcmV0dXJuIG51bGw7dmFyIGc9dm9pZCAwLGg9dm9pZCAwLGw9dm9pZCAwLGs9dm9pZCAwO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1hKWc9WWMsaD0kYy5tb3VzZUxlYXZlLGw9JGMubW91c2VFbnRlcixrPVwibW91c2VcIjtcbmVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9WmMsaD0kYy5wb2ludGVyTGVhdmUsbD0kYy5wb2ludGVyRW50ZXIsaz1cInBvaW50ZXJcIjt2YXIgbT1udWxsPT1mP2U6SmEoZik7ZT1udWxsPT1iP2U6SmEoYik7YT1nLmdldFBvb2xlZChoLGYsYyxkKTthLnR5cGU9aytcImxlYXZlXCI7YS50YXJnZXQ9bTthLnJlbGF0ZWRUYXJnZXQ9ZTtjPWcuZ2V0UG9vbGVkKGwsYixjLGQpO2MudHlwZT1rK1wiZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1tO2Q9YjtpZihmJiZkKWE6e2I9ZjtlPWQ7az0wO2ZvcihnPWI7ZztnPUxhKGcpKWsrKztnPTA7Zm9yKGw9ZTtsO2w9TGEobCkpZysrO2Zvcig7MDxrLWc7KWI9TGEoYiksay0tO2Zvcig7MDxnLWs7KWU9TGEoZSksZy0tO2Zvcig7ay0tOyl7aWYoYj09PWV8fGI9PT1lLmFsdGVybmF0ZSlicmVhayBhO2I9TGEoYik7ZT1MYShlKX1iPW51bGx9ZWxzZSBiPW51bGw7ZT1iO2ZvcihiPVtdO2YmJmYhPT1lOyl7az1cbmYuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztiLnB1c2goZik7Zj1MYShmKX1mb3IoZj1bXTtkJiZkIT09ZTspe2s9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWsmJms9PT1lKWJyZWFrO2YucHVzaChkKTtkPUxhKGQpfWZvcihkPTA7ZDxiLmxlbmd0aDtkKyspT2EoYltkXSxcImJ1YmJsZWRcIixhKTtmb3IoZD1mLmxlbmd0aDswPGQtLTspT2EoZltkXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuW2EsY119fTtmdW5jdGlvbiBiZChhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIGNkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBkZChhLGIpe2lmKGJkKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighY2QuY2FsbChiLGNbZF0pfHwhYmQoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBlZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7Yi5yZXR1cm47KWlmKGI9Yi5yZXR1cm4sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBmZChhKXsyIT09ZWQoYSk/eChcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBnZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1lZChhKSwzPT09Yj94KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBmZChlKSxhO2lmKGc9PT1kKXJldHVybiBmZChlKSxiO2c9Zy5zaWJsaW5nfXgoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp4KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/eChcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP3goXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGQoYSl7YT1nZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBpZD15LmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksamQ9eS5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxrZD1RYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIGxkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIG1kPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxuZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sb2Q9UWMuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPW1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWxkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9uZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/bGQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/bGQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxwZD1ZYy5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSkscWQ9UWMuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGN9KSxyZD15LmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxzZD1ZYy5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHRkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1hhLFwiYW5pbWF0aW9uRW5kXCJdLFtZYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbWmEsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXG5bXCJlbmRlZFwiLFwiZW5kZWRcIl0sW1wiZXJyb3JcIixcImVycm9yXCJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJsb2FkXCIsXCJsb2FkXCJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCJdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCJdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCJdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCJdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiXSxbXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIl0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCJdLFxuW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCJdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCJdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCJdLFskYSxcInRyYW5zaXRpb25FbmRcIl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiXSxbXCJ3aGVlbFwiLFwid2hlZWxcIl1dLHVkPXt9LHZkPXt9O2Z1bmN0aW9uIHdkKGEsYil7dmFyIGM9YVswXTthPWFbMV07dmFyIGQ9XCJvblwiKyhhWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSk7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07dWRbYV09Yjt2ZFtjXT1ifVxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXG5bXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIl0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dkKGEsITApfSk7dGQuZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCExKX0pO1xudmFyIHhkPXtldmVudFR5cGVzOnVkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPXZkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12ZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PWxkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1vZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9a2Q7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1ZYzticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxucGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT1xZDticmVhaztjYXNlIFhhOmNhc2UgWWE6Y2FzZSBaYTphPWlkO2JyZWFrO2Nhc2UgJGE6YT1yZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1RYzticmVhaztjYXNlIFwid2hlZWxcIjphPXNkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9amQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1aYzticmVhaztkZWZhdWx0OmE9eX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1FhKGIpO3JldHVybiBifX0seWQ9eGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuemQ9W107ZnVuY3Rpb24gQWQoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZDtmb3IoZD1jO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighZClicmVhazthLmFuY2VzdG9ycy5wdXNoKGMpO2M9SGEoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9TmIoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPW51bGwsaD0wO2g8b2EubGVuZ3RoO2grKyl7dmFyIGw9b2FbaF07bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUpKSYmKGc9eGEoZyxsKSl9RGEoZyl9fXZhciBCZD0hMDtcbmZ1bmN0aW9uIEUoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCExKX1mdW5jdGlvbiBFZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPSh5ZChhKT9DZDpEZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIENkKGEsYil7SGIoRGQsYSxiKX1cbmZ1bmN0aW9uIERkKGEsYil7aWYoQmQpe3ZhciBjPU5iKGIpO2M9SGEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1lZChjKXx8KGM9bnVsbCk7aWYoemQubGVuZ3RoKXt2YXIgZD16ZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtLYihBZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPnpkLmxlbmd0aCYmemQucHVzaChhKX19fXZhciBGZD17fSxHZD0wLEhkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcbmZ1bmN0aW9uIElkKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLEhkKXx8KGFbSGRdPUdkKyssRmRbYVtIZF1dPXt9KTtyZXR1cm4gRmRbYVtIZF1dfWZ1bmN0aW9uIEpkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBLZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZChhLGIpe3ZhciBjPUtkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtkKGMpfX1mdW5jdGlvbiBNZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01kKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5kKCl7Zm9yKHZhciBhPXdpbmRvdyxiPUpkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPUpkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9kKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG5mdW5jdGlvbiBQZCgpe3ZhciBhPU5kKCk7aWYoT2QoYSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGEpdmFyIGI9e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2I9KGI9YS5vd25lckRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBjPWIuZ2V0U2VsZWN0aW9uJiZiLmdldFNlbGVjdGlvbigpO2lmKGMmJjAhPT1jLnJhbmdlQ291bnQpe2I9Yy5hbmNob3JOb2RlO3ZhciBkPWMuYW5jaG9yT2Zmc2V0LGU9Yy5mb2N1c05vZGU7Yz1jLmZvY3VzT2Zmc2V0O3RyeXtiLm5vZGVUeXBlLGUubm9kZVR5cGV9Y2F0Y2goQSl7Yj1udWxsO2JyZWFrIGF9dmFyIGY9MCxnPS0xLGg9LTEsbD0wLGs9MCxtPWEscD1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHQ7Oyl7bSE9PWJ8fDAhPT1kJiYzIT09bS5ub2RlVHlwZXx8KGc9ZitkKTttIT09ZXx8MCE9PWMmJjMhPT1tLm5vZGVUeXBlfHwoaD1mK2MpOzM9PT1tLm5vZGVUeXBlJiYoZis9bS5ub2RlVmFsdWUubGVuZ3RoKTtcbmlmKG51bGw9PT0odD1tLmZpcnN0Q2hpbGQpKWJyZWFrO3A9bTttPXR9Zm9yKDs7KXtpZihtPT09YSlicmVhayBiO3A9PT1iJiYrK2w9PT1kJiYoZz1mKTtwPT09ZSYmKytrPT09YyYmKGg9Zik7aWYobnVsbCE9PSh0PW0ubmV4dFNpYmxpbmcpKWJyZWFrO209cDtwPW0ucGFyZW50Tm9kZX1tPXR9Yj0tMT09PWd8fC0xPT09aD9udWxsOntzdGFydDpnLGVuZDpofX1lbHNlIGI9bnVsbH1iPWJ8fHtzdGFydDowLGVuZDowfX1lbHNlIGI9bnVsbDtyZXR1cm57Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTpifX1cbmZ1bmN0aW9uIFFkKGEpe3ZhciBiPU5kKCksYz1hLmZvY3VzZWRFbGVtLGQ9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmYyYmYy5vd25lckRvY3VtZW50JiZNZChjLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXtpZihudWxsIT09ZCYmT2QoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZihhPShiPWMub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3csYS5nZXRTZWxlY3Rpb24pe2E9YS5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jLnRleHRDb250ZW50Lmxlbmd0aCxmPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9mOk1hdGgubWluKGQuZW5kLGUpOyFhLmV4dGVuZCYmZj5kJiYoZT1kLGQ9ZixmPWUpO2U9TGQoYyxmKTt2YXIgZz1MZChjLFxuZCk7ZSYmZyYmKDEhPT1hLnJhbmdlQ291bnR8fGEuYW5jaG9yTm9kZSE9PWUubm9kZXx8YS5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8YS5mb2N1c05vZGUhPT1nLm5vZGV8fGEuZm9jdXNPZmZzZXQhPT1nLm9mZnNldCkmJihiPWIuY3JlYXRlUmFuZ2UoKSxiLnNldFN0YXJ0KGUubm9kZSxlLm9mZnNldCksYS5yZW1vdmVBbGxSYW5nZXMoKSxmPmQ/KGEuYWRkUmFuZ2UoYiksYS5leHRlbmQoZy5ub2RlLGcub2Zmc2V0KSk6KGIuc2V0RW5kKGcubm9kZSxnLm9mZnNldCksYS5hZGRSYW5nZShiKSkpfWI9W107Zm9yKGE9YzthPWEucGFyZW50Tm9kZTspMT09PWEubm9kZVR5cGUmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmZvY3VzJiZjLmZvY3VzKCk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9fVxudmFyIFJkPVJhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsU2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFRkPW51bGwsVWQ9bnVsbCxWZD1udWxsLFdkPSExO1xuZnVuY3Rpb24gWGQoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihXZHx8bnVsbD09VGR8fFRkIT09SmQoYykpcmV0dXJuIG51bGw7Yz1UZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZPZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBWZCYmZGQoVmQsYyk/bnVsbDooVmQ9YyxhPXkuZ2V0UG9vbGVkKFNkLnNlbGVjdCxVZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVRkLFFhKGEpLGEpfVxudmFyIFlkPXtldmVudFR5cGVzOlNkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPUlkKGUpO2Y9c2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9KYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKE1iKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVRkPWUsVWQ9YixWZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6VmQ9VWQ9VGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6V2Q9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBXZD0hMSxYZChjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihSZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIFhkKGMsZCl9cmV0dXJuIG51bGx9fTtCYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3RhPUthO3VhPUlhO3ZhPUphO0JhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46eGQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmFkLENoYW5nZUV2ZW50UGx1Z2luOlBjLFNlbGVjdEV2ZW50UGx1Z2luOllkLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46emJ9KTtmdW5jdGlvbiBaZChhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRkKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9WmQoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGFlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit1YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gYmUoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gY2UoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz94KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6eChcIjkzXCIpLGI9YlswXSksYz1iKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6dWMoYyl9fVxuZnVuY3Rpb24gZGUoYSxiKXt2YXIgYz11YyhiLnZhbHVlKSxkPXVjKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gZWUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIGZlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGdlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gaGUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2dlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIGllPXZvaWQgMCxqZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1mZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtpZT1pZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1pZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBrZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIGxlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LG1lPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhsZSkuZm9yRWFjaChmdW5jdGlvbihhKXttZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2xlW2JdPWxlW2FdfSl9KTtmdW5jdGlvbiBuZShhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8bGUuaGFzT3duUHJvcGVydHkoYSkmJmxlW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG9lKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPW5lKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHBlPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBxZShhLGIpe2ImJihwZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/eChcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj94KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOngoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3goXCI2MlwiLFwiXCIpOnZvaWQgMCl9XG5mdW5jdGlvbiByZShhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19XG5mdW5jdGlvbiBzZShhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1JZChhKTtiPXNhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2lmKCFjLmhhc093blByb3BlcnR5KGUpfHwhY1tlXSl7c3dpdGNoKGUpe2Nhc2UgXCJzY3JvbGxcIjpFZChcInNjcm9sbFwiLGEpO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6RWQoXCJmb2N1c1wiLGEpO0VkKFwiYmx1clwiLGEpO2MuYmx1cj0hMDtjLmZvY3VzPSEwO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpPYihlKSYmRWQoZSxhKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWIuaW5kZXhPZihlKSYmRShlLGEpfWNbZV09ITB9fX1mdW5jdGlvbiB0ZSgpe312YXIgdWU9bnVsbCx2ZT1udWxsO1xuZnVuY3Rpb24gd2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfWZ1bmN0aW9uIHhlKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH1cbnZhciB5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQWU9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEJlPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s7XG5mdW5jdGlvbiBDZShhLGIsYyxkLGUpe2FbR2FdPWU7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJnhjKGEsZSk7cmUoYyxkKTtkPXJlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/b2UoYSxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP2plKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9rZShhLGgpOnRjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjp5YyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/YWUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP2FlKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLFxuITApOmFlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1mdW5jdGlvbiBEZShhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIEVlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBGZT1bXSxHZT0tMTtmdW5jdGlvbiBGKGEpezA+R2V8fChhLmN1cnJlbnQ9RmVbR2VdLEZlW0dlXT1udWxsLEdlLS0pfWZ1bmN0aW9uIEcoYSxiKXtHZSsrO0ZlW0dlXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEhlPXt9LEg9e2N1cnJlbnQ6SGV9LEk9e2N1cnJlbnQ6ITF9LEllPUhlO1xuZnVuY3Rpb24gSmUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBIZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBKKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gS2UoYSl7RihJLGEpO0YoSCxhKX1mdW5jdGlvbiBMZShhKXtGKEksYSk7RihILGEpfVxuZnVuY3Rpb24gTWUoYSxiLGMpe0guY3VycmVudCE9PUhlP3goXCIxNjhcIik6dm9pZCAwO0coSCxiLGEpO0coSSxjLGEpfWZ1bmN0aW9uIE5lKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOngoXCIxMDhcIixpYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBPZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEhlO0llPUguY3VycmVudDtHKEgsYixhKTtHKEksSS5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gUGUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOngoXCIxNjlcIik7Yz8oYj1OZShhLGIsSWUpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixGKEksYSksRihILGEpLEcoSCxiLGEpKTpGKEksYSk7RyhJLGMsYSl9dmFyIFFlPW51bGwsUmU9bnVsbDtmdW5jdGlvbiBTZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gVGUoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7UWU9U2UoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1JlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBVZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuY29udGV4dERlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBLKGEsYixjLGQpe3JldHVybiBuZXcgVWUoYSxiLGMsZCl9XG5mdW5jdGlvbiBWZShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFdlKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBWZShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Y2MpcmV0dXJuIDExO2lmKGE9PT1lYylyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBYZShhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPUsoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2MuY29udGV4dERlcGVuZGVuY2llcz1hLmNvbnRleHREZXBlbmRlbmNpZXM7Yy5zaWJsaW5nPWEuc2libGluZztcbmMuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFllKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlWZShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBYYjpyZXR1cm4gWmUoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBiYzpyZXR1cm4gJGUoYyxlfDMsZixiKTtjYXNlIFliOnJldHVybiAkZShjLGV8MixmLGIpO2Nhc2UgWmI6cmV0dXJuIGE9SygxMixjLGIsZXw0KSxhLmVsZW1lbnRUeXBlPVpiLGEudHlwZT1aYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGRjOnJldHVybiBhPUsoMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9ZGMsYS50eXBlPWRjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSAkYjpnPTEwO2JyZWFrIGE7Y2FzZSBhYzpnPTk7YnJlYWsgYTtjYXNlIGNjOmc9MTE7YnJlYWsgYTtjYXNlIGVjOmc9XG4xNDticmVhayBhO2Nhc2UgZmM6Zz0xNjtkPW51bGw7YnJlYWsgYX14KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpfWI9SyhnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFplKGEsYixjLGQpe2E9Syg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gJGUoYSxiLGMsZCl7YT1LKDgsYSxkLGIpO2I9MD09PShiJjEpP1liOmJjO2EuZWxlbWVudFR5cGU9YjthLnR5cGU9YjthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gYWYoYSxiLGMpe2E9Syg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBiZihhLGIsYyl7Yj1LKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGNmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtkZihiLGEpfVxuZnVuY3Rpb24gZWYoYSxiKXthLmRpZEVycm9yPSExO2lmKDA9PT1iKWEuZWFybGllc3RQZW5kaW5nVGltZT0wLGEubGF0ZXN0UGVuZGluZ1RpbWU9MCxhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wO2Vsc2V7YjxhLmxhdGVzdFBpbmdlZFRpbWUmJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5sYXRlc3RQZW5kaW5nVGltZTswIT09YyYmKGM+Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5iJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2NmKGEsYik6YjxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsY2YoYSxiKSk6XG5iPmMmJmNmKGEsYil9ZGYoMCxhKX1mdW5jdGlvbiBmZihhLGIpe2EuZGlkRXJyb3I9ITE7YS5sYXRlc3RQaW5nZWRUaW1lPj1iJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZSxkPWEubGF0ZXN0UGVuZGluZ1RpbWU7Yz09PWI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWQ9PT1iP2EubGF0ZXN0UGVuZGluZ1RpbWU9MDpkOmQ9PT1iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1jKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2Q9YS5sYXRlc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWEubGF0ZXN0U3VzcGVuZGVkVGltZT1iOmM8Yj9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1iOmQ+YiYmKGEubGF0ZXN0U3VzcGVuZGVkVGltZT1iKTtkZihiLGEpfVxuZnVuY3Rpb24gZ2YoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtjPmImJihiPWMpO2E+YiYmKGI9YSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZGYoYSxiKXt2YXIgYz1iLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWIubGF0ZXN0U3VzcGVuZGVkVGltZSxlPWIuZWFybGllc3RQZW5kaW5nVGltZSxmPWIubGF0ZXN0UGluZ2VkVGltZTtlPTAhPT1lP2U6ZjswPT09ZSYmKDA9PT1hfHxkPGEpJiYoZT1kKTthPWU7MCE9PWEmJmM+YSYmKGE9Yyk7Yi5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1lO2IuZXhwaXJhdGlvblRpbWU9YX1mdW5jdGlvbiBMKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifVxuZnVuY3Rpb24gaGYoYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OmEuX3N0YXR1cz0wO2I9YS5fY3RvcjtiPWIoKTtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pO3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYS5fcmVzdWx0O2Nhc2UgMjp0aHJvdyBhLl9yZXN1bHQ7fWEuX3Jlc3VsdD1iO3Rocm93IGI7fX12YXIgamY9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBrZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciB0Zj17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWVkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9bGYoKTtkPW1mKGQsYSk7dmFyIGU9bmYoZCk7ZS50YWc9cmY7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO29mKCk7cGYoYSxlKTtxZihhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1sZigpO2M9bWYoYyxhKTt2YXIgZD1uZihjKTtkLnRhZz1cbnNmO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtvZigpO3BmKGEsZCk7cWYoYSxjKX19O2Z1bmN0aW9uIHVmKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWRkKGMsZCl8fCFkZChlLGYpOiEwfVxuZnVuY3Rpb24gdmYoYSxiLGMpe3ZhciBkPSExLGU9SGU7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9TShmKTooZT1KKGIpP0llOkguY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0plKGEsZSk6SGUpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj10ZjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiB3ZihhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmdGYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiB4ZihhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPWpmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9TShmKTooZj1KKGIpP0llOkguY3VycmVudCxlLmNvbnRleHQ9SmUoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoeWYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKGtmKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgemY9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIEFmKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDEhPT1jLnRhZz94KFwiMzA5XCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp4KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1qZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT94KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6eChcIjI5MFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gQmYoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJngoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIENmKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9WGUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1hZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9QWYoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVllKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPUFmKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9YmYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WmUoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWFmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBjPVllKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPUFmKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBXYjpyZXR1cm4gYj1iZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoemYoYil8fFxuaGMoYikpcmV0dXJuIGI9WmUoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7QmYoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB0KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09WGI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmwoYSxiLGMsZCk6bnVsbDtjYXNlIFdiOnJldHVybiBjLmtleT09PWU/ayhhLGIsYyxkKTpudWxsfWlmKHpmKGMpfHxoYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7QmYoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBBKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgVmI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PVhiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6bChiLGEsZCxlKTtjYXNlIFdiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxrKGIsYSxkLGUpfWlmKHpmKGQpfHxoYyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7QmYoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB2KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCxxPWcsdT1nPTAsQj1udWxsO251bGwhPT1xJiZ1PGgubGVuZ3RoO3UrKyl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdz10KGUscSxoW3VdLGspO2lmKG51bGw9PT13KXtudWxsPT09cSYmKHE9Qik7YnJlYWt9YSYmXG5xJiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodyxnLHUpO251bGw9PT1tP2w9dzptLnNpYmxpbmc9dzttPXc7cT1CfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYocT1wKGUsaFt1XSxrKSlnPWYocSxnLHUpLG51bGw9PT1tP2w9cTptLnNpYmxpbmc9cSxtPXE7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpO3U8aC5sZW5ndGg7dSsrKWlmKEI9QShxLGUsdSxoW3VdLGspKWEmJm51bGwhPT1CLmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PUIua2V5P3U6Qi5rZXkpLGc9ZihCLGcsdSksbnVsbD09PW0/bD1COm0uc2libGluZz1CLG09QjthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIFIoZSxnLGgsayl7dmFyIGw9aGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/eChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD94KFwiMTUxXCIpOnZvaWQgMDtcbmZvcih2YXIgbT1sPW51bGwscT1nLHU9Zz0wLEI9bnVsbCx3PWgubmV4dCgpO251bGwhPT1xJiYhdy5kb25lO3UrKyx3PWgubmV4dCgpKXtxLmluZGV4PnU/KEI9cSxxPW51bGwpOkI9cS5zaWJsaW5nO3ZhciB2PXQoZSxxLHcudmFsdWUsayk7aWYobnVsbD09PXYpe3F8fChxPUIpO2JyZWFrfWEmJnEmJm51bGw9PT12LmFsdGVybmF0ZSYmYihlLHEpO2c9Zih2LGcsdSk7bnVsbD09PW0/bD12Om0uc2libGluZz12O209djtxPUJ9aWYody5kb25lKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDshdy5kb25lO3UrKyx3PWgubmV4dCgpKXc9cChlLHcudmFsdWUsayksbnVsbCE9PXcmJihnPWYodyxnLHUpLG51bGw9PT1tP2w9dzptLnNpYmxpbmc9dyxtPXcpO3JldHVybiBsfWZvcihxPWQoZSxxKTshdy5kb25lO3UrKyx3PWgubmV4dCgpKXc9QShxLGUsdSx3LnZhbHVlLGspLG51bGwhPT13JiYoYSYmbnVsbCE9PXcuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09dy5rZXk/dTpcbncua2V5KSxnPWYodyxnLHUpLG51bGw9PT1tP2w9dzptLnNpYmxpbmc9dyxtPXcpO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PVhiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFZiOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09WGI6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09WGI/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPUFmKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9XG5rLnNpYmxpbmd9Zi50eXBlPT09WGI/KGQ9WmUoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVllKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPUFmKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBXYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWJmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxuXCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1hZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZih6ZihmKSlyZXR1cm4gdihhLGQsZixoKTtpZihoYyhmKSlyZXR1cm4gUihhLGQsZixoKTtsJiZCZihhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOmg9YS50eXBlLHgoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBEZj1DZighMCksRWY9Q2YoITEpLEZmPXt9LE49e2N1cnJlbnQ6RmZ9LEdmPXtjdXJyZW50OkZmfSxIZj17Y3VycmVudDpGZn07ZnVuY3Rpb24gSWYoYSl7YT09PUZmP3goXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfVxuZnVuY3Rpb24gSmYoYSxiKXtHKEhmLGIsYSk7RyhHZixhLGEpO0coTixGZixhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpoZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9aGUoYixjKX1GKE4sYSk7RyhOLGIsYSl9ZnVuY3Rpb24gS2YoYSl7RihOLGEpO0YoR2YsYSk7RihIZixhKX1mdW5jdGlvbiBMZihhKXtJZihIZi5jdXJyZW50KTt2YXIgYj1JZihOLmN1cnJlbnQpO3ZhciBjPWhlKGIsYS50eXBlKTtiIT09YyYmKEcoR2YsYSxhKSxHKE4sYyxhKSl9ZnVuY3Rpb24gTWYoYSl7R2YuY3VycmVudD09PWEmJihGKE4sYSksRihHZixhKSl9XG52YXIgTmY9MCxPZj0yLFBmPTQsUWY9OCxSZj0xNixTZj0zMixUZj02NCxVZj0xMjgsVmY9VGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixXZj0wLFhmPW51bGwsTz1udWxsLFA9bnVsbCxZZj1udWxsLFE9bnVsbCxaZj1udWxsLCRmPTAsYWc9bnVsbCxiZz0wLGNnPSExLGRnPW51bGwsZWc9MDtmdW5jdGlvbiBmZygpe3goXCIzMjFcIil9ZnVuY3Rpb24gZ2coYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighYmQoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIGhnKGEsYixjLGQsZSxmKXtXZj1mO1hmPWI7UD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtWZi5jdXJyZW50PW51bGw9PT1QP2lnOmpnO2I9YyhkLGUpO2lmKGNnKXtkbyBjZz0hMSxlZys9MSxQPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsLFpmPVlmLGFnPVE9Tz1udWxsLFZmLmN1cnJlbnQ9amcsYj1jKGQsZSk7d2hpbGUoY2cpO2RnPW51bGw7ZWc9MH1WZi5jdXJyZW50PWtnO2E9WGY7YS5tZW1vaXplZFN0YXRlPVlmO2EuZXhwaXJhdGlvblRpbWU9JGY7YS51cGRhdGVRdWV1ZT1hZzthLmVmZmVjdFRhZ3w9Ymc7YT1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtXZj0wO1pmPVE9WWY9UD1PPVhmPW51bGw7JGY9MDthZz1udWxsO2JnPTA7YT94KFwiMzAwXCIpOnZvaWQgMDtyZXR1cm4gYn1mdW5jdGlvbiBsZygpe1ZmLmN1cnJlbnQ9a2c7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2NnPSExO2RnPW51bGw7ZWc9MH1cbmZ1bmN0aW9uIG1nKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxxdWV1ZTpudWxsLGJhc2VVcGRhdGU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1RP1lmPVE9YTpRPVEubmV4dD1hO3JldHVybiBRfWZ1bmN0aW9uIG5nKCl7aWYobnVsbCE9PVpmKVE9WmYsWmY9US5uZXh0LE89UCxQPW51bGwhPT1PP08ubmV4dDpudWxsO2Vsc2V7bnVsbD09PVA/eChcIjMxMFwiKTp2b2lkIDA7Tz1QO3ZhciBhPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUscXVldWU6Ty5xdWV1ZSxiYXNlVXBkYXRlOk8uYmFzZVVwZGF0ZSxuZXh0Om51bGx9O1E9bnVsbD09PVE/WWY9YTpRLm5leHQ9YTtQPU8ubmV4dH1yZXR1cm4gUX1mdW5jdGlvbiBvZyhhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHBnKGEpe3ZhciBiPW5nKCksYz1iLnF1ZXVlO251bGw9PT1jP3goXCIzMTFcIik6dm9pZCAwO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO2lmKDA8ZWcpe3ZhciBkPWMuZGlzcGF0Y2g7aWYobnVsbCE9PWRnKXt2YXIgZT1kZy5nZXQoYyk7aWYodm9pZCAwIT09ZSl7ZGcuZGVsZXRlKGMpO3ZhciBmPWIubWVtb2l6ZWRTdGF0ZTtkbyBmPWEoZixlLmFjdGlvbiksZT1lLm5leHQ7d2hpbGUobnVsbCE9PWUpO2JkKGYsYi5tZW1vaXplZFN0YXRlKXx8KHFnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9PT1jLmxhc3QmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWY7cmV0dXJuW2YsZF19fXJldHVybltiLm1lbW9pemVkU3RhdGUsZF19ZD1jLmxhc3Q7dmFyIGc9Yi5iYXNlVXBkYXRlO2Y9Yi5iYXNlU3RhdGU7bnVsbCE9PWc/KG51bGwhPT1kJiYoZC5uZXh0PW51bGwpLGQ9Zy5uZXh0KTpkPW51bGwhPT1kP2QubmV4dDpudWxsO2lmKG51bGwhPT1cbmQpe3ZhciBoPWU9bnVsbCxsPWQsaz0hMTtkb3t2YXIgbT1sLmV4cGlyYXRpb25UaW1lO208V2Y/KGt8fChrPSEwLGg9ZyxlPWYpLG0+JGYmJigkZj1tKSk6Zj1sLmVhZ2VyUmVkdWNlcj09PWE/bC5lYWdlclN0YXRlOmEoZixsLmFjdGlvbik7Zz1sO2w9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09ZCk7a3x8KGg9ZyxlPWYpO2JkKGYsYi5tZW1vaXplZFN0YXRlKXx8KHFnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9aDtiLmJhc2VTdGF0ZT1lO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gcmcoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O251bGw9PT1hZz8oYWc9e2xhc3RFZmZlY3Q6bnVsbH0sYWcubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGI9YWcubGFzdEVmZmVjdCxudWxsPT09Yj9hZy5sYXN0RWZmZWN0PWEubmV4dD1hOihjPWIubmV4dCxiLm5leHQ9YSxhLm5leHQ9YyxhZy5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBzZyhhLGIsYyxkKXt2YXIgZT1tZygpO2JnfD1hO2UubWVtb2l6ZWRTdGF0ZT1yZyhiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIHRnKGEsYixjLGQpe3ZhciBlPW5nKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmZ2coZCxnLmRlcHMpKXtyZyhOZixjLGYsZCk7cmV0dXJufX1iZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLGYsZCl9ZnVuY3Rpb24gdWcoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiB2Zygpe31cbmZ1bmN0aW9uIHdnKGEsYixjKXsyNT5lZz92b2lkIDA6eChcIjMwMVwiKTt2YXIgZD1hLmFsdGVybmF0ZTtpZihhPT09WGZ8fG51bGwhPT1kJiZkPT09WGYpaWYoY2c9ITAsYT17ZXhwaXJhdGlvblRpbWU6V2YsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sbnVsbD09PWRnJiYoZGc9bmV3IE1hcCksYz1kZy5nZXQoYiksdm9pZCAwPT09YylkZy5zZXQoYixhKTtlbHNle2ZvcihiPWM7bnVsbCE9PWIubmV4dDspYj1iLm5leHQ7Yi5uZXh0PWF9ZWxzZXtvZigpO3ZhciBlPWxmKCk7ZT1tZihlLGEpO3ZhciBmPXtleHBpcmF0aW9uVGltZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5sYXN0O2lmKG51bGw9PT1nKWYubmV4dD1mO2Vsc2V7dmFyIGg9Zy5uZXh0O251bGwhPT1oJiYoZi5uZXh0PWgpO2cubmV4dD1mfWIubGFzdD1mO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PVxuZHx8MD09PWQuZXhwaXJhdGlvblRpbWUpJiYoZD1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWQpKXRyeXt2YXIgbD1iLmxhc3RSZW5kZXJlZFN0YXRlLGs9ZChsLGMpO2YuZWFnZXJSZWR1Y2VyPWQ7Zi5lYWdlclN0YXRlPWs7aWYoYmQoayxsKSlyZXR1cm59Y2F0Y2gobSl7fWZpbmFsbHl7fXFmKGEsZSl9fVxudmFyIGtnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZnLHVzZUNvbnRleHQ6ZmcsdXNlRWZmZWN0OmZnLHVzZUltcGVyYXRpdmVIYW5kbGU6ZmcsdXNlTGF5b3V0RWZmZWN0OmZnLHVzZU1lbW86ZmcsdXNlUmVkdWNlcjpmZyx1c2VSZWY6ZmcsdXNlU3RhdGU6ZmcsdXNlRGVidWdWYWx1ZTpmZ30saWc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXttZygpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0Ok0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHNnKDUxNixVZnxUZixhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gc2coNCxQZnxTZix1Zy5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHNnKDQsUGZ8U2YsYSxiKX0sXG51c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9bWcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9bWcoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPW1nKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3ZhciBiPW1nKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxcbmxhc3RSZW5kZXJlZFJlZHVjZXI6b2csbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXdnLmJpbmQobnVsbCxYZixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfSx1c2VEZWJ1Z1ZhbHVlOnZnfSxqZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3ZhciBjPW5nKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZnZyhiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0Zyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHRnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLFxuYil7cmV0dXJuIHRnKDQsUGZ8U2YsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW5nKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZnZyhiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpwZyx1c2VSZWY6ZnVuY3Rpb24oKXtyZXR1cm4gbmcoKS5tZW1vaXplZFN0YXRlfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXtyZXR1cm4gcGcob2csYSl9LHVzZURlYnVnVmFsdWU6dmd9LHhnPW51bGwseWc9bnVsbCx6Zz0hMTtcbmZ1bmN0aW9uIEFnKGEsYil7dmFyIGM9Syg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIEJnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBDZyhhKXtpZih6Zyl7dmFyIGI9eWc7aWYoYil7dmFyIGM9YjtpZighQmcoYSxiKSl7Yj1EZShjKTtpZighYnx8IUJnKGEsYikpe2EuZWZmZWN0VGFnfD0yO3pnPSExO3hnPWE7cmV0dXJufUFnKHhnLGMpfXhnPWE7eWc9RWUoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9Mix6Zz0hMSx4Zz1hfX1mdW5jdGlvbiBEZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjE4IT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1mdW5jdGlvbiBFZyhhKXtpZihhIT09eGcpcmV0dXJuITE7aWYoIXpnKXJldHVybiBEZyhhKSx6Zz0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIXhlKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj15ZztiOylBZyhhLGIpLGI9RGUoYik7RGcoYSk7eWc9eGc/RGUoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gRmcoKXt5Zz14Zz1udWxsO3pnPSExfVxudmFyIEdnPVRiLlJlYWN0Q3VycmVudE93bmVyLHFnPSExO2Z1bmN0aW9uIFMoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9FZihiLG51bGwsYyxkKTpEZihiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBIZyhhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7SWcoYixlKTtkPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBLZyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIVZlKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLExnKGEsYixnLGQsZSxmKTthPVllKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6ZGQsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gSmcoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9WGUoZyxkLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIExnKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmRkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHFnPSExLGU8Zik/SmcoYSxiLGYpOk1nKGEsYixjLGQsZil9ZnVuY3Rpb24gTmcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBNZyhhLGIsYyxkLGUpe3ZhciBmPUooYyk/SWU6SC5jdXJyZW50O2Y9SmUoYixmKTtJZyhiLGUpO2M9aGcoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxKZyhhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UyhhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIE9nKGEsYixjLGQsZSl7aWYoSihjKSl7dmFyIGY9ITA7T2UoYil9ZWxzZSBmPSExO0lnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSx2ZihiLGMsZCxlKSx4ZihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgbD1nLmNvbnRleHQsaz1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1NKGspOihrPUooYyk/SWU6SC5jdXJyZW50LGs9SmUoYixrKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspO1BnPSExO3ZhciB0PWIubWVtb2l6ZWRTdGF0ZTtsPWcuc3RhdGU9dDt2YXIgQT1iLnVwZGF0ZVF1ZXVlO251bGwhPT1BJiYoeWYoYixBLGQsZyxlKSxsPWIubWVtb2l6ZWRTdGF0ZSk7aCE9PWR8fHQhPT1sfHxJLmN1cnJlbnR8fFBnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtmKGIsYyxtLGQpLGw9Yi5tZW1vaXplZFN0YXRlKSwoaD1QZ3x8dWYoYixjLGgsZCx0LGwsaykpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXG5nLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9bCksZy5wcm9wcz1kLGcuc3RhdGU9bCxnLmNvbnRleHQ9ayxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6TChiLnR5cGUsaCksbD1nLmNvbnRleHQsaz1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1NKGspOihrPUooYyk/SWU6SC5jdXJyZW50LGs9SmUoYixrKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGwhPT1rKSYmd2YoYixnLGQsayksUGc9ITEsbD1iLm1lbW9pemVkU3RhdGUsdD1nLnN0YXRlPWwsQT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1BJiYoeWYoYixBLGQsZyxlKSx0PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGwhPT10fHxJLmN1cnJlbnR8fFBnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtmKGIsYyxtLGQpLHQ9Yi5tZW1vaXplZFN0YXRlKSwobT1QZ3x8dWYoYixjLGgsZCxsLHQsaykpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsdCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPVxudCksZy5wcm9wcz1kLGcuc3RhdGU9dCxnLmNvbnRleHQ9ayxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gUWcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gUWcoYSxiLGMsZCxlLGYpe05nKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZQZShiLGMsITEpLEpnKGEsYixmKTtkPWIuc3RhdGVOb2RlO0dnLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPURmKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9RGYoYixudWxsLGgsZikpOlMoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmUGUoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBSZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P01lKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJk1lKGEsYi5jb250ZXh0LCExKTtKZihhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBTZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtpZihudWxsPT09YSlpZihnKXt2YXIgaD1lLmZhbGxiYWNrO2E9WmUobnVsbCxkLDAsbnVsbCk7MD09PShiLm1vZGUmMSkmJihhLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKTtkPVplKGgsZCxjLG51bGwpO2Euc2libGluZz1kO2M9YTtjLnJldHVybj1kLnJldHVybj1ifWVsc2UgYz1kPUVmKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2UgbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZT8oZD1hLmNoaWxkLGg9ZC5zaWJsaW5nLGc/KGM9ZS5mYWxsYmFjayxlPVhlKGQsZC5wZW5kaW5nUHJvcHMsMCksMD09PShiLm1vZGUmMSkmJihnPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz1YZShoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1EZihiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1aZShudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1aZShnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPURmKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XG5mdW5jdGlvbiBKZyhhLGIsYyl7bnVsbCE9PWEmJihiLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/eChcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVhlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVhlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFRnKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxJLmN1cnJlbnQpcWc9ITA7ZWxzZXtpZihkPGMpe3FnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOlJnKGIpO0ZnKCk7YnJlYWs7Y2FzZSA1OkxmKGIpO2JyZWFrO2Nhc2UgMTpKKGIudHlwZSkmJk9lKGIpO2JyZWFrO2Nhc2UgNDpKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6VWcoYixiLm1lbW9pemVkUHJvcHMudmFsdWUpO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7aWYoMCE9PWQmJmQ+PWMpcmV0dXJuIFNnKGEsYixjKTtiPUpnKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9fXJldHVybiBKZyhhLGIsYyl9fWVsc2UgcWc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9XG5iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPUplKGIsSC5jdXJyZW50KTtJZyhiLGMpO2U9aGcobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtsZygpO2lmKEooZCkpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZrZihiLGQsZyxhKTtlLnVwZGF0ZXI9dGY7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9Yjt4ZihiLGQsYSxjKTtiPVFnKG51bGwsYixkLCEwLGYsXG5jKX1lbHNlIGIudGFnPTAsUyhudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2Y9Yi5wZW5kaW5nUHJvcHM7YT1oZihlKTtiLnR5cGU9YTtlPWIudGFnPVdlKGEpO2Y9TChhLGYpO2c9dm9pZCAwO3N3aXRjaChlKXtjYXNlIDA6Zz1NZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTpnPU9nKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxMTpnPUhnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxNDpnPUtnKG51bGwsYixhLEwoYS50eXBlLGYpLGQsYyk7YnJlYWs7ZGVmYXVsdDp4KFwiMzA2XCIsYSxcIlwiKX1yZXR1cm4gZztjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkwoZCxlKSxNZyhhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxcbmU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksT2coYSxiLGQsZSxjKTtjYXNlIDM6UmcoYik7ZD1iLnVwZGF0ZVF1ZXVlO251bGw9PT1kP3goXCIyODJcIik6dm9pZCAwO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWYoYixkLGIucGVuZGluZ1Byb3BzLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlGZygpLGI9SmcoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihlPShudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpJiZlLmh5ZHJhdGUpeWc9RWUoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbykseGc9YixlPXpnPSEwO2U/KGIuZWZmZWN0VGFnfD0yLGIuY2hpbGQ9RWYoYixudWxsLGQsYykpOihTKGEsYixkLGMpLEZnKCkpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIExmKGIpLG51bGw9PT1hJiZDZyhiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsXG5nPWUuY2hpbGRyZW4seGUoZCxlKT9nPW51bGw6bnVsbCE9PWYmJnhlKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLE5nKGEsYiksMSE9PWMmJmIubW9kZSYxJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihTKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZDZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIFNnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEpmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPURmKGIsbnVsbCxkLGMpOlMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksSGcoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO1VnKGIsZik7aWYobnVsbCE9PWcpe3ZhciBoPWcudmFsdWU7Zj1iZChoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSS5jdXJyZW50KXtiPUpnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBsPWguY29udGV4dERlcGVuZGVuY2llcztpZihudWxsIT09bCl7Zz1oLmNoaWxkO2Zvcih2YXIgaz1sLmZpcnN0O251bGwhPT1rOyl7aWYoay5jb250ZXh0PT09ZCYmMCE9PVxuKGsub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihrPW5mKGMpLGsudGFnPXNmLHBmKGgsaykpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7az1oLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtrPWM7Zm9yKHZhciBtPWgucmV0dXJuO251bGwhPT1tOyl7dmFyIHA9bS5hbHRlcm5hdGU7aWYobS5jaGlsZEV4cGlyYXRpb25UaW1lPGspbS5jaGlsZEV4cGlyYXRpb25UaW1lPWssbnVsbCE9PXAmJnAuY2hpbGRFeHBpcmF0aW9uVGltZTxrJiYocC5jaGlsZEV4cGlyYXRpb25UaW1lPWspO2Vsc2UgaWYobnVsbCE9PXAmJnAuY2hpbGRFeHBpcmF0aW9uVGltZTxrKXAuY2hpbGRFeHBpcmF0aW9uVGltZT1rO2Vsc2UgYnJlYWs7bT1tLnJldHVybn1sLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWs9ay5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/XG5udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z319UyhhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixJZyhiLGMpLGU9TShlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUyhhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9TChlLGIucGVuZGluZ1Byb3BzKSxmPUwoZS50eXBlLGYpLEtnKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBMZyhhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1cbmQ/ZTpMKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsSihkKT8oYT0hMCxPZShiKSk6YT0hMSxJZyhiLGMpLHZmKGIsZCxlLGMpLHhmKGIsZCxlLGMpLFFnKG51bGwsYixkLCEwLGEsYyl9eChcIjE1NlwiKX12YXIgVmc9e2N1cnJlbnQ6bnVsbH0sV2c9bnVsbCxYZz1udWxsLFlnPW51bGw7ZnVuY3Rpb24gVWcoYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7RyhWZyxjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gWmcoYSl7dmFyIGI9VmcuY3VycmVudDtGKFZnLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gSWcoYSxiKXtXZz1hO1lnPVhnPW51bGw7dmFyIGM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPj1iJiYocWc9ITApO2EuY29udGV4dERlcGVuZGVuY2llcz1udWxsfVxuZnVuY3Rpb24gTShhLGIpe2lmKFlnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilZZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtudWxsPT09WGc/KG51bGw9PT1XZz94KFwiMzA4XCIpOnZvaWQgMCxYZz1iLFdnLmNvbnRleHREZXBlbmRlbmNpZXM9e2ZpcnN0OmIsZXhwaXJhdGlvblRpbWU6MH0pOlhnPVhnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciAkZz0wLHJmPTEsc2Y9MixhaD0zLFBnPSExO2Z1bmN0aW9uIGJoKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIGNoKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBuZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6JGcscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gZGgoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPWJoKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1jaChlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1jaChkKSk7bnVsbD09PWV8fGQ9PT1lP2RoKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8oZGgoZCxiKSxkaChlLGIpKTooZGgoZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBlaChhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSk6ZmgoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiBmaChhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1jaChiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBnaChhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIHJmOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSBhaDphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMjA0OXw2NDtjYXNlICRnOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSBzZjpQZz0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIHlmKGEsYixjLGQsZSl7UGc9ITE7Yj1maChhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGw9Yi5maXJzdFVwZGF0ZSxrPWY7bnVsbCE9PWw7KXt2YXIgbT1sLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWwsZj1rKSxoPG0mJihoPW0pKTooaz1naChhLGIsbCxrLGMsZCksbnVsbCE9PWwuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdEVmZmVjdD9iLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1sOihiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1sLGIubGFzdEVmZmVjdD1sKSkpO2w9bC5uZXh0fW09bnVsbDtmb3IobD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWw7KXt2YXIgcD1sLmV4cGlyYXRpb25UaW1lO3A8ZT8obnVsbD09PW0mJihtPWwsbnVsbD09PWcmJihmPWspKSxoPHAmJihoPXApKTooaz1naChhLGIsbCxrLGMsZCksbnVsbCE9PWwuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9XG4zMixsLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q/Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PWw6KGIubGFzdENhcHR1cmVkRWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RDYXB0dXJlZEVmZmVjdD1sKSkpO2w9bC5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1tP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09bSYmKGY9ayk7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPW07YS5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1rfVxuZnVuY3Rpb24gaGgoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO2loKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDtpaChiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gaWgoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjE5MVwiLGMpOnZvaWQgMDtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gamgoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpqYyhiKX19ZnVuY3Rpb24ga2goYSl7YS5lZmZlY3RUYWd8PTR9dmFyIGxoPXZvaWQgMCxtaD12b2lkIDAsbmg9dm9pZCAwLG9oPXZvaWQgMDtsaD1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07bWg9ZnVuY3Rpb24oKXt9O1xubmg9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO0lmKE4uY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXZjKGcsZik7ZD12YyhnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9JGQoZyxmKTtkPSRkKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9YmUoZyxmKTtkPWJlKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9dGUpfXFlKGMsZCk7Zz1jPXZvaWQgMDt2YXIgaD1udWxsO2ZvcihjIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoYykmJmYuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPWZbY10paWYoXCJzdHlsZVwiPT09XG5jKXt2YXIgbD1mW2NdO2ZvcihnIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShnKSYmKGh8fChoPXt9KSxoW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1jJiZcImNoaWxkcmVuXCIhPT1jJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJlwiYXV0b0ZvY3VzXCIhPT1jJiYocmEuaGFzT3duUHJvcGVydHkoYyk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGMsbnVsbCkpO2ZvcihjIGluIGQpe3ZhciBrPWRbY107bD1udWxsIT1mP2ZbY106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYykmJmshPT1sJiYobnVsbCE9a3x8bnVsbCE9bCkpaWYoXCJzdHlsZVwiPT09YylpZihsKXtmb3IoZyBpbiBsKSFsLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoaHx8KGg9e30pLGhbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZsW2ddIT09a1tnXSYmKGh8fFxuKGg9e30pLGhbZ109a1tnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGs9az9rLl9faHRtbDp2b2lkIDAsbD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1rJiZsIT09ayYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1jP2w9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGE9YXx8W10pLnB1c2goYyxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1rJiZzZShlLGMpLGF8fGw9PT1rfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsaykpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJmtoKGIpfX07b2g9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJmtoKGIpfTtcbnZhciBwaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBxaChhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPWpjKGMpKTtudWxsIT09YyYmaWMoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmaWMoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gcmgoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7c2goYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gdGgoYSxiLGMpe2M9Yy51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkb3tpZigoZC50YWcmYSkhPT1OZil7dmFyIGU9ZC5kZXN0cm95O2QuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZSYmZSgpfShkLnRhZyZiKSE9PU5mJiYoZT1kLmNyZWF0ZSxkLmRlc3Ryb3k9ZSgpKTtkPWQubmV4dH13aGlsZShkIT09Yyl9fVxuZnVuY3Rpb24gdWgoYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PW5lKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09Yy50YWcmJm51bGwhPT1jLm1lbW9pemVkU3RhdGUpe2Q9Yy5jaGlsZC5zaWJsaW5nO2QucmV0dXJuPWM7Yz1kO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8XG5jLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiB2aChhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgUmUmJlJlKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIubGFzdEVmZmVjdCxudWxsIT09Yikpe3ZhciBjPWI9Yi5uZXh0O2Rve3ZhciBkPWMuZGVzdHJveTtpZih2b2lkIDAhPT1kKXt2YXIgZT1hO3RyeXtkKCl9Y2F0Y2goZil7c2goZSxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWIpfWJyZWFrO2Nhc2UgMTpyaChhKTtiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7c2goYSxmKX1icmVhaztjYXNlIDU6cmgoYSk7YnJlYWs7Y2FzZSA0OndoKGEpfX1cbmZ1bmN0aW9uIHhoKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24geWgoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoeGgoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXgoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp4KFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoa2UoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fHhoKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJlxuMiljb250aW51ZSBiO2lmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpaWYoYylpZihkKXt2YXIgZj1iLGc9ZS5zdGF0ZU5vZGUsaD1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxoKTpmLmluc2VydEJlZm9yZShnLGgpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZS5zdGF0ZU5vZGUsYyk7ZWxzZSBkPyhnPWIsaD1lLnN0YXRlTm9kZSw4PT09Zy5ub2RlVHlwZT8oZj1nLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoaCxnKSk6KGY9ZyxmLmFwcGVuZENoaWxkKGgpKSxnPWcuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09ZyYmdm9pZCAwIT09Z3x8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz10ZSkpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO1xuZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIHdoKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP3goXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZih2aChnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWcpe2lmKG51bGwhPT1iLmNoaWxkKXtkPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX19ZWxzZSBpZih2aChiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuO2I9Yi5yZXR1cm47ND09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319XG5mdW5jdGlvbiB6aChhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnRoKFBmLFFmLGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJkNlKGMsZixlLGEsZCxiKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpjPWIubWVtb2l6ZWRTdGF0ZTtkPXZvaWQgMDthPWI7bnVsbD09PWM/ZD0hMTooZD0hMCxhPWIuY2hpbGQsMD09PWMudGltZWRPdXRBdCYmKGMudGltZWRPdXRBdD1sZigpKSk7bnVsbCE9PWEmJnVoKGEsZCk7Yz1cbmIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMpe2IudXBkYXRlUXVldWU9bnVsbDt2YXIgZz1iLnN0YXRlTm9kZTtudWxsPT09ZyYmKGc9Yi5zdGF0ZU5vZGU9bmV3IHBoKTtjLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGM9QWguYmluZChudWxsLGIsYSk7Zy5oYXMoYSl8fChnLmFkZChhKSxhLnRoZW4oYyxjKSl9KX1icmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6eChcIjE2M1wiKX19dmFyIEJoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIENoKGEsYixjKXtjPW5mKGMpO2MudGFnPWFoO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtEaChkKTtxaChhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIEVoKGEsYixjKXtjPW5mKGMpO2MudGFnPWFoO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1GaD9GaD1uZXcgU2V0KFt0aGlzXSk6RmguYWRkKHRoaXMpKTt2YXIgYz1iLnZhbHVlLGU9Yi5zdGFjaztxaChhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWU/ZTpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIEdoKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkooYS50eXBlKSYmS2UoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gS2YoYSksTGUoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3goXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIE1mKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDE4OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gS2YoYSksbnVsbDtjYXNlIDEwOnJldHVybiBaZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIEhoPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsSWg9VGIuUmVhY3RDdXJyZW50T3duZXIsSmg9MTA3Mzc0MTgyMixLaD0hMSxUPW51bGwsTGg9bnVsbCxVPTAsTWg9LTEsTmg9ITEsVj1udWxsLE9oPSExLFBoPW51bGwsUWg9bnVsbCxSaD1udWxsLEZoPW51bGw7ZnVuY3Rpb24gU2goKXtpZihudWxsIT09VClmb3IodmFyIGE9VC5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmS2UoYik7YnJlYWs7Y2FzZSAzOktmKGIpO0xlKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTticmVhaztjYXNlIDQ6S2YoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKX1hPWEucmV0dXJufUxoPW51bGw7VT0wO01oPS0xO05oPSExO1Q9bnVsbH1cbmZ1bmN0aW9uIFRoKCl7Zm9yKDtudWxsIT09Vjspe3ZhciBhPVYuZWZmZWN0VGFnO2EmMTYmJmtlKFYuc3RhdGVOb2RlLFwiXCIpO2lmKGEmMTI4KXt2YXIgYj1WLmFsdGVybmF0ZTtudWxsIT09YiYmKGI9Yi5yZWYsbnVsbCE9PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKG51bGwpOmIuY3VycmVudD1udWxsKSl9c3dpdGNoKGEmMTQpe2Nhc2UgMjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OnloKFYpO1YuZWZmZWN0VGFnJj0tMzt6aChWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDQ6emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA4OmE9Vix3aChhKSxhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwsYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGEucmV0dXJuPW51bGwsYS5jaGlsZD1udWxsLGEubWVtb2l6ZWRTdGF0ZT1udWxsLGEudXBkYXRlUXVldWU9bnVsbCl9Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gVWgoKXtmb3IoO251bGwhPT1WOyl7aWYoVi5lZmZlY3RUYWcmMjU2KWE6e3ZhciBhPVYuYWx0ZXJuYXRlLGI9Vjtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGgoT2YsTmYsYik7YnJlYWsgYTtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpMKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6eChcIjE2M1wiKX19Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gVmgoYSxiKXtmb3IoO251bGwhPT1WOyl7dmFyIGM9Vi5lZmZlY3RUYWc7aWYoYyYzNil7dmFyIGQ9Vi5hbHRlcm5hdGUsZT1WLGY9Yjtzd2l0Y2goZS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGgoUmYsU2YsZSk7YnJlYWs7Y2FzZSAxOnZhciBnPWUuc3RhdGVOb2RlO2lmKGUuZWZmZWN0VGFnJjQpaWYobnVsbD09PWQpZy5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGg9ZS5lbGVtZW50VHlwZT09PWUudHlwZT9kLm1lbW9pemVkUHJvcHM6TChlLnR5cGUsZC5tZW1vaXplZFByb3BzKTtnLmNvbXBvbmVudERpZFVwZGF0ZShoLGQubWVtb2l6ZWRTdGF0ZSxnLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1kPWUudXBkYXRlUXVldWU7bnVsbCE9PWQmJmhoKGUsZCxnLGYpO2JyZWFrO2Nhc2UgMzpkPWUudXBkYXRlUXVldWU7aWYobnVsbCE9PWQpe2c9bnVsbDtpZihudWxsIT09ZS5jaGlsZClzd2l0Y2goZS5jaGlsZC50YWcpe2Nhc2UgNTpnPVxuZS5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmc9ZS5jaGlsZC5zdGF0ZU5vZGV9aGgoZSxkLGcsZil9YnJlYWs7Y2FzZSA1OmY9ZS5zdGF0ZU5vZGU7bnVsbD09PWQmJmUuZWZmZWN0VGFnJjQmJndlKGUudHlwZSxlLm1lbW9pemVkUHJvcHMpJiZmLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fWMmMTI4JiYoZT1WLnJlZixudWxsIT09ZSYmKGY9Vi5zdGF0ZU5vZGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGU/ZShmKTplLmN1cnJlbnQ9ZikpO2MmNTEyJiYoUGg9YSk7Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gV2goYSxiKXtSaD1RaD1QaD1udWxsO3ZhciBjPVc7Vz0hMDtkb3tpZihiLmVmZmVjdFRhZyY1MTIpe3ZhciBkPSExLGU9dm9pZCAwO3RyeXt2YXIgZj1iO3RoKFVmLE5mLGYpO3RoKE5mLFRmLGYpfWNhdGNoKGcpe2Q9ITAsZT1nfWQmJnNoKGIsZSl9Yj1iLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PWIpO1c9YztjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJlhoKGEsYyk7WHx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9ZnVuY3Rpb24gb2YoKXtudWxsIT09UWgmJkJlKFFoKTtudWxsIT09UmgmJlJoKCl9XG5mdW5jdGlvbiBaaChhLGIpe09oPUtoPSEwO2EuY3VycmVudD09PWI/eChcIjE3N1wiKTp2b2lkIDA7dmFyIGM9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWM/eChcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZD1iLmV4cGlyYXRpb25UaW1lLGU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2VmKGEsZT5kP2U6ZCk7SWguY3VycmVudD1udWxsO2Q9dm9pZCAwOzE8Yi5lZmZlY3RUYWc/bnVsbCE9PWIubGFzdEVmZmVjdD8oYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YixkPWIuZmlyc3RFZmZlY3QpOmQ9YjpkPWIuZmlyc3RFZmZlY3Q7dWU9QmQ7dmU9UGQoKTtCZD0hMTtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTt2YXIgZj12b2lkIDA7dHJ5e1VoKCl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO1xuZj12b2lkIDA7dHJ5e1RoKCl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfVFkKHZlKTt2ZT1udWxsO0JkPSEhdWU7dWU9bnVsbDthLmN1cnJlbnQ9Yjtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtmPXZvaWQgMDt0cnl7VmgoYSxjKX1jYXRjaChoKXtlPSEwLGY9aH1lJiYobnVsbD09PVY/eChcIjE3OFwiKTp2b2lkIDAsc2goVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9aWYobnVsbCE9PWQmJm51bGwhPT1QaCl7dmFyIGc9V2guYmluZChudWxsLGEsZCk7UWg9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxmdW5jdGlvbigpe3JldHVybiBBZShnKX0pO1JoPWd9S2g9T2g9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIFFlJiZRZShiLnN0YXRlTm9kZSk7Yz1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9XG5iPmM/YjpjOzA9PT1iJiYoRmg9bnVsbCk7JGgoYSxiKX1cbmZ1bmN0aW9uIGFpKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjEwMjQpKXtUPWE7YTp7dmFyIGU9YjtiPWE7dmFyIGY9VTt2YXIgZz1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDE2OmJyZWFrO2Nhc2UgMTU6Y2FzZSAwOmJyZWFrO2Nhc2UgMTpKKGIudHlwZSkmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTtnPWIuc3RhdGVOb2RlO2cucGVuZGluZ0NvbnRleHQmJihnLmNvbnRleHQ9Zy5wZW5kaW5nQ29udGV4dCxnLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1lfHxudWxsPT09ZS5jaGlsZClFZyhiKSxiLmVmZmVjdFRhZyY9LTM7bWgoYik7YnJlYWs7Y2FzZSA1Ok1mKGIpO3ZhciBoPUlmKEhmLmN1cnJlbnQpO2Y9Yi50eXBlO2lmKG51bGwhPT1lJiZudWxsIT1iLnN0YXRlTm9kZSluaChlLGIsZixnLGgpLGUucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9XG4xMjgpO2Vsc2UgaWYoZyl7dmFyIGw9SWYoTi5jdXJyZW50KTtpZihFZyhiKSl7Zz1iO2U9Zy5zdGF0ZU5vZGU7dmFyIGs9Zy50eXBlLG09Zy5tZW1vaXplZFByb3BzLHA9aDtlW0ZhXT1nO2VbR2FdPW07Zj12b2lkIDA7aD1rO3N3aXRjaChoKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkUoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGs9MDtrPGFiLmxlbmd0aDtrKyspRShhYltrXSxlKTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIsZSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RShcImVycm9yXCIsZSk7RShcImxvYWRcIixlKTticmVhaztjYXNlIFwiZm9ybVwiOkUoXCJyZXNldFwiLGUpO0UoXCJzdWJtaXRcIixlKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixlKTticmVhaztjYXNlIFwiaW5wdXRcIjp3YyhlLG0pO0UoXCJpbnZhbGlkXCIsZSk7c2UocCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShlLG0pLEUoXCJpbnZhbGlkXCIsZSksc2UocCxcIm9uQ2hhbmdlXCIpfXFlKGgsbSk7az1udWxsO2ZvcihmIGluIG0pbS5oYXNPd25Qcm9wZXJ0eShmKSYmKGw9bVtmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD9lLnRleHRDb250ZW50IT09bCYmKGs9W1wiY2hpbGRyZW5cIixsXSk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZlLnRleHRDb250ZW50IT09XCJcIitsJiYoaz1bXCJjaGlsZHJlblwiLFwiXCIrbF0pOnJhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1sJiZzZShwLGYpKTtzd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6UmIoZSk7QWMoZSxtLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpSYihlKTtlZShlLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS5vbkNsaWNrJiZcbihlLm9uY2xpY2s9dGUpfWY9aztnLnVwZGF0ZVF1ZXVlPWY7Zz1udWxsIT09Zj8hMDohMTtnJiZraChiKX1lbHNle209YjtwPWY7ZT1nO2s9OT09PWgubm9kZVR5cGU/aDpoLm93bmVyRG9jdW1lbnQ7bD09PWZlLmh0bWwmJihsPWdlKHApKTtsPT09ZmUuaHRtbD9cInNjcmlwdFwiPT09cD8oZT1rLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixrPWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBlLmlzP2s9ay5jcmVhdGVFbGVtZW50KHAse2lzOmUuaXN9KTooaz1rLmNyZWF0ZUVsZW1lbnQocCksXCJzZWxlY3RcIj09PXAmJihwPWssZS5tdWx0aXBsZT9wLm11bHRpcGxlPSEwOmUuc2l6ZSYmKHAuc2l6ZT1lLnNpemUpKSk6az1rLmNyZWF0ZUVsZW1lbnROUyhsLHApO2U9aztlW0ZhXT1tO2VbR2FdPWc7bGgoZSxiLCExLCExKTtwPWU7az1mO209Zzt2YXIgdD1oLEE9cmUoayxtKTtzd2l0Y2goayl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLFxucCk7aD1tO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYi5sZW5ndGg7aCsrKUUoYWJbaF0scCk7aD1tO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpFKFwiZXJyb3JcIixwKTtoPW07YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RShcImVycm9yXCIscCk7RShcImxvYWRcIixwKTtoPW07YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixwKTtFKFwic3VibWl0XCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RShcInRvZ2dsZVwiLHApO2g9bTticmVhaztjYXNlIFwiaW5wdXRcIjp3YyhwLG0pO2g9dmMocCxtKTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD0kZChwLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpwLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07aD1uKHt9LG0se3ZhbHVlOnZvaWQgMH0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmNlKHAsXG5tKTtoPWJlKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPW19cWUoayxoKTtsPXZvaWQgMDt2YXIgdj1rLFI9cCx1PWg7Zm9yKGwgaW4gdSlpZih1Lmhhc093blByb3BlcnR5KGwpKXt2YXIgcT11W2xdO1wic3R5bGVcIj09PWw/b2UoUixxKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhxPXE/cS5fX2h0bWw6dm9pZCAwLG51bGwhPXEmJmplKFIscSkpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIj09PXR5cGVvZiBxPyhcInRleHRhcmVhXCIhPT12fHxcIlwiIT09cSkmJmtlKFIscSk6XCJudW1iZXJcIj09PXR5cGVvZiBxJiZrZShSLFwiXCIrcSk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKHJhLmhhc093blByb3BlcnR5KGwpP251bGwhPXEmJnNlKHQsbCk6bnVsbCE9cSYmdGMoUixsLHEsQSkpfXN3aXRjaChrKXtjYXNlIFwiaW5wdXRcIjpSYihwKTtcbkFjKHAsbSwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIocCk7ZWUocCxtKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9bS52YWx1ZSYmcC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrdWMobS52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpoPXA7aC5tdWx0aXBsZT0hIW0ubXVsdGlwbGU7cD1tLnZhbHVlO251bGwhPXA/YWUoaCwhIW0ubXVsdGlwbGUscCwhMSk6bnVsbCE9bS5kZWZhdWx0VmFsdWUmJmFlKGgsISFtLm11bHRpcGxlLG0uZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihwLm9uY2xpY2s9dGUpfShnPXdlKGYsZykpJiZraChiKTtiLnN0YXRlTm9kZT1lfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2UgbnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjZcIik6dm9pZCAwO2JyZWFrO2Nhc2UgNjplJiZudWxsIT1iLnN0YXRlTm9kZT9vaChlLGIsZS5tZW1vaXplZFByb3BzLGcpOihcInN0cmluZ1wiIT09XG50eXBlb2YgZyYmKG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMCksZT1JZihIZi5jdXJyZW50KSxJZihOLmN1cnJlbnQpLEVnKGIpPyhnPWIsZj1nLnN0YXRlTm9kZSxlPWcubWVtb2l6ZWRQcm9wcyxmW0ZhXT1nLChnPWYubm9kZVZhbHVlIT09ZSkmJmtoKGIpKTooZj1iLGc9KDk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShnKSxnW0ZhXT1iLGYuc3RhdGVOb2RlPWcpKTticmVhaztjYXNlIDExOmJyZWFrO2Nhc2UgMTM6Zz1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZjtUPWI7YnJlYWsgYX1nPW51bGwhPT1nO2Y9bnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJiFnJiZmJiYoZT1lLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihoPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWg/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9aCk6KGIuZmlyc3RFZmZlY3Q9XG5iLmxhc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpO2lmKGd8fGYpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpLZihiKTttaChiKTticmVhaztjYXNlIDEwOlpnKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDE4OmJyZWFrO2RlZmF1bHQ6eChcIjE1NlwiKX1UPW51bGx9Yj1hO2lmKDE9PT1VfHwxIT09Yi5jaGlsZEV4cGlyYXRpb25UaW1lKXtnPTA7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZT1mLmV4cGlyYXRpb25UaW1lLGg9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGU+ZyYmKGc9ZSksaD5nJiYoZz1oKSxmPWYuc2libGluZztiLmNoaWxkRXhwaXJhdGlvblRpbWU9Z31pZihudWxsIT09VClyZXR1cm4gVDtudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyYxMDI0KSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiZcbihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKX1lbHNle2E9R2goYSxVKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTEwMjMsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTEwMjQpfWlmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNlIGJyZWFrfXJldHVybiBudWxsfVxuZnVuY3Rpb24gYmkoYSl7dmFyIGI9VGcoYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPWFpKGEpKTtJaC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBjaShhLGIpe0toP3goXCIyNDNcIik6dm9pZCAwO29mKCk7S2g9ITA7dmFyIGM9SGguY3VycmVudDtIaC5jdXJyZW50PWtnO3ZhciBkPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoZCE9PVV8fGEhPT1MaHx8bnVsbD09PVQpU2goKSxMaD1hLFU9ZCxUPVhlKExoLmN1cnJlbnQsbnVsbCxVKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBlPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVQmJiFkaSgpOylUPWJpKFQpO2Vsc2UgZm9yKDtudWxsIT09VDspVD1iaShUKX1jYXRjaCh1KXtpZihZZz1YZz1XZz1udWxsLGxnKCksbnVsbD09PVQpZT0hMCxEaCh1KTtlbHNle251bGw9PT1UP3goXCIyNzFcIik6dm9pZCAwO3ZhciBmPVQsZz1mLnJldHVybjtpZihudWxsPT09ZyllPSEwLERoKHUpO2Vsc2V7YTp7dmFyIGg9YSxsPWcsaz1mLG09dTtnPVU7ay5lZmZlY3RUYWd8PTEwMjQ7ay5maXJzdEVmZmVjdD1rLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09XG5tJiZcIm9iamVjdFwiPT09dHlwZW9mIG0mJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLnRoZW4pe3ZhciBwPW07bT1sO3ZhciB0PS0xLEE9LTE7ZG97aWYoMTM9PT1tLnRhZyl7dmFyIHY9bS5hbHRlcm5hdGU7aWYobnVsbCE9PXYmJih2PXYubWVtb2l6ZWRTdGF0ZSxudWxsIT09dikpe0E9MTAqKDEwNzM3NDE4MjItdi50aW1lZE91dEF0KTticmVha312PW0ucGVuZGluZ1Byb3BzLm1heER1cmF0aW9uO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgdilpZigwPj12KXQ9MDtlbHNlIGlmKC0xPT09dHx8djx0KXQ9dn1tPW0ucmV0dXJufXdoaWxlKG51bGwhPT1tKTttPWw7ZG97aWYodj0xMz09PW0udGFnKXY9dm9pZCAwPT09bS5tZW1vaXplZFByb3BzLmZhbGxiYWNrPyExOm51bGw9PT1tLm1lbW9pemVkU3RhdGU7aWYodil7bD1tLnVwZGF0ZVF1ZXVlO251bGw9PT1sPyhsPW5ldyBTZXQsbC5hZGQocCksbS51cGRhdGVRdWV1ZT1sKTpsLmFkZChwKTtpZigwPT09KG0ubW9kZSYxKSl7bS5lZmZlY3RUYWd8PVxuNjQ7ay5lZmZlY3RUYWcmPS0xOTU3OzE9PT1rLnRhZyYmKG51bGw9PT1rLmFsdGVybmF0ZT9rLnRhZz0xNzooZz1uZigxMDczNzQxODIzKSxnLnRhZz1zZixwZihrLGcpKSk7ay5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2JyZWFrIGF9az1oO2w9Zzt2YXIgUj1rLnBpbmdDYWNoZTtudWxsPT09Uj8oUj1rLnBpbmdDYWNoZT1uZXcgQmgsdj1uZXcgU2V0LFIuc2V0KHAsdikpOih2PVIuZ2V0KHApLHZvaWQgMD09PXYmJih2PW5ldyBTZXQsUi5zZXQocCx2KSkpO3YuaGFzKGwpfHwodi5hZGQobCksaz1laS5iaW5kKG51bGwsayxwLGwpLHAudGhlbihrLGspKTstMT09PXQ/aD0xMDczNzQxODIzOigtMT09PUEmJihBPTEwKigxMDczNzQxODIyLWdmKGgsZykpLTVFMyksaD1BK3QpOzA8PWgmJk1oPGgmJihNaD1oKTttLmVmZmVjdFRhZ3w9MjA0ODttLmV4cGlyYXRpb25UaW1lPWc7YnJlYWsgYX1tPW0ucmV0dXJufXdoaWxlKG51bGwhPT1tKTttPUVycm9yKChpYyhrLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1xuXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitqYyhrKSl9Tmg9ITA7bT1qaChtLGspO2g9bDtkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoLmVmZmVjdFRhZ3w9MjA0ODtoLmV4cGlyYXRpb25UaW1lPWc7Zz1DaChoLG0sZyk7ZWgoaCxnKTticmVhayBhO2Nhc2UgMTppZih0PW0sQT1oLnR5cGUsaz1oLnN0YXRlTm9kZSwwPT09KGguZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBBLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PWsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUZofHwhRmguaGFzKGspKSkpe2guZWZmZWN0VGFnfD0yMDQ4O1xuaC5leHBpcmF0aW9uVGltZT1nO2c9RWgoaCx0LGcpO2VoKGgsZyk7YnJlYWsgYX19aD1oLnJldHVybn13aGlsZShudWxsIT09aCl9VD1haShmKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO0toPSExO0hoLmN1cnJlbnQ9YztZZz1YZz1XZz1udWxsO2xnKCk7aWYoZSlMaD1udWxsLGEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZSBpZihudWxsIT09VClhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7Yz1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1jP3goXCIyODFcIik6dm9pZCAwO0xoPW51bGw7aWYoTmgpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxkfHwwIT09ZiYmZjxkfHwwIT09ZyYmZzxkKXtmZihhLGQpO2ZpKGEsYyxkLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtkPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZDtcbmI9YS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2ZpKGEsYyxkLGIsLTEpO3JldHVybn19YiYmLTEhPT1NaD8oZmYoYSxkKSxiPTEwKigxMDczNzQxODIyLWdmKGEsZCkpLGI8TWgmJihNaD1iKSxiPTEwKigxMDczNzQxODIyLWxmKCkpLGI9TWgtYixmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLDA+Yj8wOmIpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9ZCxhLmZpbmlzaGVkV29yaz1jKX19XG5mdW5jdGlvbiBzaChhLGIpe2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhkKSkpe2E9amgoYixhKTthPUVoKGMsYSwxMDczNzQxODIzKTtwZihjLGEpO3FmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWJyZWFrO2Nhc2UgMzphPWpoKGIsYSk7YT1DaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9amgoYixhKSxjPUNoKGEsYywxMDczNzQxODIzKSxwZihhLGMpLHFmKGEsMTA3Mzc0MTgyMykpfVxuZnVuY3Rpb24gbWYoYSxiKXt2YXIgYz1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsKCksZD12b2lkIDA7aWYoMD09PShiLm1vZGUmMSkpZD0xMDczNzQxODIzO2Vsc2UgaWYoS2gmJiFPaClkPVU7ZWxzZXtzd2l0Y2goYyl7Y2FzZSByLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5OmQ9MTA3Mzc0MTgyMzticmVhaztjYXNlIHIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk6ZD0xMDczNzQxODIyLTEwKigoKDEwNzM3NDE4MjItYSsxNSkvMTB8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWErNTAwKS8yNXwwKSsxKTticmVhaztjYXNlIHIudW5zdGFibGVfTG93UHJpb3JpdHk6Y2FzZSByLnVuc3RhYmxlX0lkbGVQcmlvcml0eTpkPTE7YnJlYWs7ZGVmYXVsdDp4KFwiMzEzXCIpfW51bGwhPT1MaCYmZD09PVUmJi0tZH1jPT09ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSYmXG4oMD09PWdpfHxkPGdpKSYmKGdpPWQpO3JldHVybiBkfWZ1bmN0aW9uIGVpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7aWYobnVsbCE9PUxoJiZVPT09YylMaD1udWxsO2Vsc2UgaWYoYj1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWEubGF0ZXN0U3VzcGVuZGVkVGltZSwwIT09YiYmYzw9YiYmYz49ZCl7YS5kaWRFcnJvcj0hMTtiPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwPT09Ynx8Yj5jKWEubGF0ZXN0UGluZ2VkVGltZT1jO2RmKGMsYSk7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpfX1mdW5jdGlvbiBBaChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPWxmKCk7Yj1tZihiLGEpO2E9aGkoYSxiKTtudWxsIT09YSYmKGNmKGEsYiksYj1hLmV4cGlyYXRpb25UaW1lLDAhPT1iJiZYaChhLGIpKX1cbmZ1bmN0aW9uIGhpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59cmV0dXJuIGV9XG5mdW5jdGlvbiBxZihhLGIpe2E9aGkoYSxiKTtudWxsIT09YSYmKCFLaCYmMCE9PVUmJmI+VSYmU2goKSxjZihhLGIpLEtoJiYhT2gmJkxoPT09YXx8WGgoYSxhLmV4cGlyYXRpb25UaW1lKSxpaT5qaSYmKGlpPTAseChcIjE4NVwiKSkpfWZ1bmN0aW9uIGtpKGEsYixjLGQsZSl7cmV0dXJuIHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfXZhciBsaT1udWxsLFk9bnVsbCxtaT0wLG5pPXZvaWQgMCxXPSExLG9pPW51bGwsWj0wLGdpPTAscGk9ITEscWk9bnVsbCxYPSExLHJpPSExLHNpPW51bGwsdGk9ci51bnN0YWJsZV9ub3coKSx1aT0xMDczNzQxODIyLSh0aS8xMHwwKSx2aT11aSxqaT01MCxpaT0wLHdpPW51bGw7ZnVuY3Rpb24geGkoKXt1aT0xMDczNzQxODIyLSgoci51bnN0YWJsZV9ub3coKS10aSkvMTB8MCl9XG5mdW5jdGlvbiB5aShhLGIpe2lmKDAhPT1taSl7aWYoYjxtaSlyZXR1cm47bnVsbCE9PW5pJiZyLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKG5pKX1taT1iO2E9ci51bnN0YWJsZV9ub3coKS10aTtuaT1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soemkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjItYiktYX0pfWZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7YS5leHBpcmF0aW9uVGltZT1kOzAhPT1lfHxkaSgpPzA8ZSYmKGEudGltZW91dEhhbmRsZT15ZShBaS5iaW5kKG51bGwsYSxiLGMpLGUpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1iKX1mdW5jdGlvbiBBaShhLGIsYyl7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YzthLmZpbmlzaGVkV29yaz1iO3hpKCk7dmk9dWk7QmkoYSxjKX1mdW5jdGlvbiAkaChhLGIpe2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfVxuZnVuY3Rpb24gbGYoKXtpZihXKXJldHVybiB2aTtDaSgpO2lmKDA9PT1afHwxPT09Wil4aSgpLHZpPXVpO3JldHVybiB2aX1mdW5jdGlvbiBYaChhLGIpe251bGw9PT1hLm5leHRTY2hlZHVsZWRSb290PyhhLmV4cGlyYXRpb25UaW1lPWIsbnVsbD09PVk/KGxpPVk9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihZPVkubmV4dFNjaGVkdWxlZFJvb3Q9YSxZLm5leHRTY2hlZHVsZWRSb290PWxpKSk6Yj5hLmV4cGlyYXRpb25UaW1lJiYoYS5leHBpcmF0aW9uVGltZT1iKTtXfHwoWD9yaSYmKG9pPWEsWj0xMDczNzQxODIzLERpKGEsMTA3Mzc0MTgyMywhMSkpOjEwNzM3NDE4MjM9PT1iP1loKDEwNzM3NDE4MjMsITEpOnlpKGEsYikpfVxuZnVuY3Rpb24gQ2koKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09WSlmb3IodmFyIGM9WSxkPWxpO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1ZP3goXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtsaT1ZPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1saSlsaT1lPWQubmV4dFNjaGVkdWxlZFJvb3QsWS5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1ZKXtZPWM7WS5uZXh0U2NoZWR1bGVkUm9vdD1saTtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1ZKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cbmEpYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19b2k9YjtaPWF9dmFyIEVpPSExO2Z1bmN0aW9uIGRpKCl7cmV0dXJuIEVpPyEwOnIudW5zdGFibGVfc2hvdWxkWWllbGQoKT9FaT0hMDohMX1mdW5jdGlvbiB6aSgpe3RyeXtpZighZGkoKSYmbnVsbCE9PWxpKXt4aSgpO3ZhciBhPWxpO2Rve3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7MCE9PWImJnVpPD1iJiYoYS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj11aSk7YT1hLm5leHRTY2hlZHVsZWRSb290fXdoaWxlKGEhPT1saSl9WWgoMCwhMCl9ZmluYWxseXtFaT0hMX19XG5mdW5jdGlvbiBZaChhLGIpe0NpKCk7aWYoYilmb3IoeGkoKSx2aT11aTtudWxsIT09b2kmJjAhPT1aJiZhPD1aJiYhKEVpJiZ1aT5aKTspRGkob2ksWix1aT5aKSxDaSgpLHhpKCksdmk9dWk7ZWxzZSBmb3IoO251bGwhPT1vaSYmMCE9PVomJmE8PVo7KURpKG9pLFosITEpLENpKCk7YiYmKG1pPTAsbmk9bnVsbCk7MCE9PVomJnlpKG9pLFopO2lpPTA7d2k9bnVsbDtpZihudWxsIT09c2kpZm9yKGE9c2ksc2k9bnVsbCxiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07dHJ5e2MuX29uQ29tcGxldGUoKX1jYXRjaChkKXtwaXx8KHBpPSEwLHFpPWQpfX1pZihwaSl0aHJvdyBhPXFpLHFpPW51bGwscGk9ITEsYTt9ZnVuY3Rpb24gQmkoYSxiKXtXP3goXCIyNTNcIik6dm9pZCAwO29pPWE7Wj1iO0RpKGEsYiwhMSk7WWgoMTA3Mzc0MTgyMywhMSl9XG5mdW5jdGlvbiBEaShhLGIsYyl7Vz94KFwiMjQ1XCIpOnZvaWQgMDtXPSEwO2lmKGMpe3ZhciBkPWEuZmluaXNoZWRXb3JrO251bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmKGRpKCk/YS5maW5pc2hlZFdvcms9ZDpGaShhLGQsYikpKX1lbHNlIGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQ/RmkoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSx6ZShkKSksY2koYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiZGaShhLGQsYikpO1c9ITF9XG5mdW5jdGlvbiBGaShhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YyYmKG51bGw9PT1zaT9zaT1bZF06c2kucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5leHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO2E9PT13aT9paSsrOih3aT1hLGlpPTApO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZnVuY3Rpb24oKXtaaChhLGIpfSl9ZnVuY3Rpb24gRGgoYSl7bnVsbD09PW9pP3goXCIyNDZcIik6dm9pZCAwO29pLmV4cGlyYXRpb25UaW1lPTA7cGl8fChwaT0hMCxxaT1hKX1mdW5jdGlvbiBHaShhLGIpe3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsoWD1jKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gSGkoYSxiKXtpZihYJiYhcmkpe3JpPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e3JpPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBJaShhLGIsYyl7WHx8V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApO3ZhciBkPVg7WD0hMDt0cnl7cmV0dXJuIHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMpfSl9ZmluYWxseXsoWD1kKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gSmkoYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOnsyPT09ZWQoYykmJjE9PT1jLnRhZz92b2lkIDA6eChcIjE3MFwiKTt2YXIgZz1jO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmc9Zy5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihKKGcudHlwZSkpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyk7eChcIjE3MVwiKTtnPXZvaWQgMH1pZigxPT09Yy50YWcpe3ZhciBoPWMudHlwZTtpZihKKGgpKXtjPU5lKGMsaCxnKTticmVhayBhfX1jPWd9ZWxzZSBjPUhlO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZTtlPW5mKGQpO2UucGF5bG9hZD17ZWxlbWVudDphfTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtcbm9mKCk7cGYoZixlKTtxZihmLGQpO3JldHVybiBkfWZ1bmN0aW9uIEtpKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPWxmKCk7ZT1tZihmLGUpO3JldHVybiBKaShhLGIsYyxlLGQpfWZ1bmN0aW9uIExpKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gTWkoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpXYixrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbkFiPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6eWMoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPUthKGQpO2U/dm9pZCAwOngoXCI5MFwiKTtTYihkKTt5YyhkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZGUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmFlKGEsISFjLm11bHRpcGxlLGIsITEpfX07XG5mdW5jdGlvbiBOaShhKXt2YXIgYj0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItbGYoKSs1MDApLzI1fDApKzEpO2I+PUpoJiYoYj1KaC0xKTt0aGlzLl9leHBpcmF0aW9uVGltZT1KaD1iO3RoaXMuX3Jvb3Q9YTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fbmV4dD1udWxsO3RoaXMuX2hhc0NoaWxkcmVuPXRoaXMuX2RpZENvbXBsZXRlPSExO3RoaXMuX2NoaWxkcmVuPW51bGw7dGhpcy5fZGVmZXI9ITB9TmkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt0aGlzLl9kZWZlcj92b2lkIDA6eChcIjI1MFwiKTt0aGlzLl9oYXNDaGlsZHJlbj0hMDt0aGlzLl9jaGlsZHJlbj1hO3ZhciBiPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxjPXRoaXMuX2V4cGlyYXRpb25UaW1lLGQ9bmV3IE9pO0ppKGEsYixudWxsLGMsZC5fb25Db21taXQpO3JldHVybiBkfTtcbk5pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbk5pLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDp4KFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP3goXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7QmkoYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07TmkucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIE9pKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9T2kucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbk9pLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O1xuZnVuY3Rpb24gUGkoYSxiLGMpe2I9SygzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxwaW5nQ2FjaGU6bnVsbCxlYXJsaWVzdFBlbmRpbmdUaW1lOjAsbGF0ZXN0UGVuZGluZ1RpbWU6MCxlYXJsaWVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0UGluZ2VkVGltZTowLGRpZEVycm9yOiExLHBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTowLGZpbmlzaGVkV29yazpudWxsLHRpbWVvdXRIYW5kbGU6LTEsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGwsaHlkcmF0ZTpjLG5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uOjAsZXhwaXJhdGlvblRpbWU6MCxmaXJzdEJhdGNoOm51bGwsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07dGhpcy5faW50ZXJuYWxSb290PWIuc3RhdGVOb2RlPWF9XG5QaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faW50ZXJuYWxSb290LGQ9bmV3IE9pO2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJmQudGhlbihiKTtLaShhLGMsbnVsbCxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1BpLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdCxjPW5ldyBPaTthPXZvaWQgMD09PWE/bnVsbDphO251bGwhPT1hJiZjLnRoZW4oYSk7S2kobnVsbCxiLG51bGwsYy5fb25Db21taXQpO3JldHVybiBjfTtQaS5wcm90b3R5cGUubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9pbnRlcm5hbFJvb3QsZT1uZXcgT2k7Yz12b2lkIDA9PT1jP251bGw6YztudWxsIT09YyYmZS50aGVuKGMpO0tpKGIsZCxhLGUuX29uQ29tbWl0KTtyZXR1cm4gZX07XG5QaS5wcm90b3R5cGUuY3JlYXRlQmF0Y2g9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgTmkodGhpcyksYj1hLl9leHBpcmF0aW9uVGltZSxjPXRoaXMuX2ludGVybmFsUm9vdCxkPWMuZmlyc3RCYXRjaDtpZihudWxsPT09ZCljLmZpcnN0QmF0Y2g9YSxhLl9uZXh0PW51bGw7ZWxzZXtmb3IoYz1udWxsO251bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YjspYz1kLGQ9ZC5fbmV4dDthLl9uZXh0PWQ7bnVsbCE9PWMmJihjLl9uZXh0PWEpfXJldHVybiBhfTtmdW5jdGlvbiBRaShhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9R2I9R2k7SGI9SWk7SWI9ZnVuY3Rpb24oKXtXfHwwPT09Z2l8fChZaChnaSwhMSksZ2k9MCl9O1xuZnVuY3Rpb24gUmkoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBQaShhLCExLGIpfVxuZnVuY3Rpb24gU2koYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBnPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7Zy5jYWxsKGEpfX1udWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9UmkoYyxkKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9TGkoZi5faW50ZXJuYWxSb290KTtoLmNhbGwoYSl9fUhpKGZ1bmN0aW9uKCl7bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX0pfXJldHVybiBMaShmLl9pbnRlcm5hbFJvb3QpfVxuZnVuY3Rpb24gVGkoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gTWkoYSxiLG51bGwsYyl9XG52YXIgVmk9e2NyZWF0ZVBvcnRhbDpUaSxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2b2lkIDA9PT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP3goXCIxODhcIik6eChcIjI2OFwiLE9iamVjdC5rZXlzKGEpKSk7YT1oZChiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe1FpKGIpP3ZvaWQgMDp4KFwiMjAwXCIpO3JldHVybiBTaShudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe1FpKGMpP3ZvaWQgMDp4KFwiMjAwXCIpO251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj9cbngoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIFNpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe1FpKGEpP3ZvaWQgMDp4KFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oSGkoZnVuY3Rpb24oKXtTaShudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpmdW5jdGlvbigpe3JldHVybiBUaS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKX0sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6R2ksdW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzOklpLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe1c/eChcIjE4N1wiKTp2b2lkIDA7dmFyIGM9WDtYPSEwO3RyeXtyZXR1cm4ga2koYSxiKX1maW5hbGx5e1g9YyxZaCgxMDczNzQxODIzLCExKX19LHVuc3RhYmxlX2NyZWF0ZVJvb3Q6VWksdW5zdGFibGVfZmx1c2hDb250cm9sbGVkOmZ1bmN0aW9uKGEpe3ZhciBiPVxuWDtYPSEwO3RyeXtraShhKX1maW5hbGx5eyhYPWIpfHxXfHxZaCgxMDczNzQxODIzLCExKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0lhLEphLEthLEJhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSxwYSxRYSxmdW5jdGlvbihhKXt5YShhLFBhKX0sRWIsRmIsRGQsRGFdfX07ZnVuY3Rpb24gVWkoYSxiKXtRaShhKT92b2lkIDA6eChcIjI5OVwiLFwidW5zdGFibGVfY3JlYXRlUm9vdFwiKTtyZXR1cm4gbmV3IFBpKGEsITAsbnVsbCE9YiYmITA9PT1iLmh5ZHJhdGUpfVxuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFRlKG4oe30sYSx7b3ZlcnJpZGVQcm9wczpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOlRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpIYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjguNlwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO3ZhciBXaT17ZGVmYXVsdDpWaX0sWGk9V2kmJlZpfHxXaTttb2R1bGUuZXhwb3J0cz1YaS5kZWZhdWx0fHxYaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTMuNlxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBkPW51bGwsZT0hMSxnPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWQuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxuZnVuY3Rpb24gdSgpe3ZhciBhPWQsYj1kLm5leHQ7aWYoZD09PWIpZD1udWxsO2Vsc2V7dmFyIGM9ZC5wcmV2aW91cztkPWMubmV4dD1iO2IucHJldmlvdXM9Y31hLm5leHQ9YS5wcmV2aW91cz1udWxsO2M9YS5jYWxsYmFjaztiPWEuZXhwaXJhdGlvblRpbWU7YT1hLnByaW9yaXR5TGV2ZWw7dmFyIGY9ZyxRPWw7Zz1hO2w9Yjt0cnl7dmFyIGg9YygpfWZpbmFsbHl7Zz1mLGw9UX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgaClpZihoPXtjYWxsYmFjazpoLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09ZClkPWgubmV4dD1oLnByZXZpb3VzPWg7ZWxzZXtjPW51bGw7YT1kO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2M9YTticmVha31hPWEubmV4dH13aGlsZShhIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1oLHAoKSk7Yj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWg7aC5uZXh0PWM7aC5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHYoKXtpZigtMT09PWsmJm51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKXttPSEwO3RyeXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJjE9PT1kLnByaW9yaXR5TGV2ZWwpfWZpbmFsbHl7bT0hMSxudWxsIT09ZD9wKCk6bj0hMX19fWZ1bmN0aW9uIHQoYSl7bT0hMDt2YXIgYj1lO2U9YTt0cnl7aWYoYSlmb3IoO251bGwhPT1kOyl7dmFyIGM9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihkLmV4cGlyYXRpb25UaW1lPD1jKXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJmQuZXhwaXJhdGlvblRpbWU8PWMpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09ZCl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYhdygpKX19ZmluYWxseXttPSExLGU9YixudWxsIT09ZD9wKCk6bj0hMSx2KCl9fVxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIEY9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpfTt2YXIgcixxLHcsRz1udWxsO1widW5kZWZpbmVkXCIhPT10eXBlb2Ygd2luZG93P0c9d2luZG93OlwidW5kZWZpbmVkXCIhPT10eXBlb2YgZ2xvYmFsJiYoRz1nbG9iYWwpO1xuaWYoRyYmRy5fc2NoZWRNb2NrKXt2YXIgSD1HLl9zY2hlZE1vY2s7cj1IWzBdO3E9SFsxXTt3PUhbMl07ZXhwb3J0cy51bnN0YWJsZV9ub3c9SFszXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBJPW51bGwsSj1mdW5jdGlvbihhKXtpZihudWxsIT09SSl0cnl7SShhKX1maW5hbGx5e0k9bnVsbH19O3I9ZnVuY3Rpb24oYSl7bnVsbCE9PUk/c2V0VGltZW91dChyLDAsYSk6KEk9YSxzZXRUaW1lb3V0KEosMCwhMSkpfTtxPWZ1bmN0aW9uKCl7ST1udWxsfTt3PWZ1bmN0aW9uKCl7cmV0dXJuITF9fWVsc2V7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIiksXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgSz1udWxsLEw9ITEsTT0tMSxOPSExLE89ITEsUD0wLFI9MzMsUz0zMzt3PWZ1bmN0aW9uKCl7cmV0dXJuIFA8PWV4cG9ydHMudW5zdGFibGVfbm93KCl9O3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtMPSExO3ZhciBhPUssYj1NO0s9bnVsbDtNPS0xO3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCksZj0hMTtpZigwPj1QLWMpaWYoLTEhPT1iJiZiPD1jKWY9ITA7ZWxzZXtOfHwoTj0hMCxFKFYpKTtLPWE7TT1iO3JldHVybn1pZihudWxsIT09YSl7Tz0hMDt0cnl7YShmKX1maW5hbGx5e089ITF9fX07XG52YXIgVj1mdW5jdGlvbihhKXtpZihudWxsIT09Syl7RShWKTt2YXIgYj1hLVArUztiPFMmJlI8Uz8oOD5iJiYoYj04KSxTPWI8Uj9SOmIpOlI9YjtQPWErUztMfHwoTD0hMCxVLnBvc3RNZXNzYWdlKHZvaWQgMCkpfWVsc2UgTj0hMX07cj1mdW5jdGlvbihhLGIpe0s9YTtNPWI7T3x8MD5iP1UucG9zdE1lc3NhZ2Uodm9pZCAwKTpOfHwoTj0hMCxFKFYpKX07cT1mdW5jdGlvbigpe0s9bnVsbDtMPSExO009LTF9fWV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O1xuZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1nLGY9aztnPWE7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKGcpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPWd9dmFyIGM9ZyxmPWs7Zz1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXt2YXIgYz0tMSE9PWs/azpleHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0KWI9YytiLnRpbWVvdXQ7ZWxzZSBzd2l0Y2goZyl7Y2FzZSAxOmI9YystMTticmVhaztjYXNlIDI6Yj1jKzI1MDticmVhaztjYXNlIDU6Yj1jKzEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmI9YysxRTQ7YnJlYWs7ZGVmYXVsdDpiPWMrNUUzfWE9e2NhbGxiYWNrOmEscHJpb3JpdHlMZXZlbDpnLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9O2lmKG51bGw9PT1kKWQ9YS5uZXh0PWEucHJldmlvdXM9YSxwKCk7ZWxzZXtjPW51bGw7dmFyIGY9ZDtkb3tpZihmLmV4cGlyYXRpb25UaW1lPmIpe2M9ZjticmVha31mPWYubmV4dH13aGlsZShmIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1hLHAoKSk7XG5iPWMucHJldmlvdXM7Yi5uZXh0PWMucHJldmlvdXM9YTthLm5leHQ9YzthLnByZXZpb3VzPWJ9cmV0dXJuIGF9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9YS5uZXh0O2lmKG51bGwhPT1iKXtpZihiPT09YSlkPW51bGw7ZWxzZXthPT09ZCYmKGQ9Yik7dmFyIGM9YS5wcmV2aW91cztjLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbH19O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWc7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9ZyxmPWs7Zz1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBnfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hZSYmKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPGx8fHcoKSl9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtudWxsIT09ZCYmcCgpfTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGR9O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJib2R5IHsgXFxuICAgIGNvbG9yOiAjZDlkOWQ5O1xcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWYsIEdlb3JnaWEsIHNlcmlmO1xcbn1cXG5cXG51bCB7XFxuICAgIGJvcmRlcjogMXB4ICM0MDQwNDAgc29saWQ7XFxufVxcblxcbmxpICwgbGFiZWwsIHAge1xcbiAgICBmb250LXNpemU6IDExcHg7XFxufVxcblxcbmg0LCBoNSwgaDYge1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzMzMztcXG59XFxuXFxuaW5wdXQsIHRleHRhcmVhIHsgXFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG4gICAgYmFja2dyb3VuZDogIzJiMmIyYjtcXG4gICAgY29sb3I6ICNkOWQ5ZDk7XFxuICAgIG9wYWNpdHk6IDAuNzU7XFxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XFxufVxcblxcbmlucHV0W3R5cGU9XFxcInRleHRcXFwiXSB7XFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGFyZWE7XFxufVxcblxcbnVsIGxhYmVsIGlucHV0IHtcXG4gICAgd2lkdGg6IDEwcHg7XFxufVxcblxcbnVsLCBsaSB7XFxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xcbiAgICBtYXJnaW4tdG9wOiAwcHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcXG59XFxuXFxuYnV0dG9uIHtcXG4gICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsMCwwLDAuOSk7XFxuICAgIGJvcmRlci13aWR0aDogMXB4O1xcbiAgICBwYWRkaW5nOiA3cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XFxuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XFxufVxcblxcbmJ1dHRvbiBpe1xcbiAgICBwYWRkaW5nLXJpZ2h0OjRweDtcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQ6IHJnYig0MywgNDMsIDQzKTtcXG59XFxuXFxudWwsbGksIHVsIGxhYmVsIHtcXG4gICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcXG59XFxuXFxudWwgbGFiZWw6aG92ZXIsIGxpOmhvdmVyLCAuY29udGVudDpob3ZlcntcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQ6IHJnYig0MywgNDMsIDQzKTtcXG59XFxuXFxuI2luZGV4e1xcbiAgICBtYXJnaW46LTRweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuLy8gRGVwZW5kZW5jaWVzLlxuaW1wb3J0IFwiLi4vSW5kZXgvaW5kZXguY3NzXCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBDb21wb25lbnRzIGZyb20gXCIuLi9FbGVtZW50c1wiO1xuaW1wb3J0IFByZXZpZXcgZnJvbSBcIi4uL1ByZXZpZXdcIjtcbmltcG9ydCBEcmFnZ2FibGVDb21wb25lbnQgZnJvbSBcIi4uL0RyYWdnYWJsZUNvbXBvbmVudFwiO1xuaW1wb3J0IEVkaXRvciBmcm9tIFwiLi4vRWRpdG9yXCI7XG5pbXBvcnQgRXZlbnRzIGZyb20gXCIuLi9FdmVudHNcIjtcbmltcG9ydCBUYWdFeHBsb3JlciBmcm9tIFwiLi4vVGFnRXhwbG9yZXJcIjtcbmltcG9ydCBTdHlsZUV4cGxvcmVyIGZyb20gXCIuLi9TdHlsZUV4cGxvcmVyXCI7XG5cbi8vIFJlZHVjZXJzLlxuaW1wb3J0IHsgdXBkYXRlRXZlbnQsIHVwZGF0ZUNvbmZpZywgc2F2ZUVsZW1lbnQsIHVwZGF0ZXNlbGVjdGVkSW5kZXgsIHNldEVkaXRNb2RlIH0gZnJvbSBcIi4uL0VsZW1lbnRzL1JlZHVjZXJcIjtcblxuLy8gVXRpbHNcbmltcG9ydCB7IGdldE5vZGVUcmVlIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9nZXQtbm9kZS10cmVlLmpzXCI7XG5cbmNsYXNzIFRvb2wgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVsZW1lbnRzOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidWktZWRpdG9yXCIpKSB8fCBbXSxcbiAgICAgICAgICAgIGNvbXBvbmVudHM6IFtdLFxuICAgICAgICAgICAgc2VsZWN0ZWRJbmRleDogLTEsXG4gICAgICAgICAgICBlbGVtZW50OiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICBtYXJrdXA6IFwiXCIsXG4gICAgICAgICAgICAgICAgc3R5bGU6IFwiXCIsXG4gICAgICAgICAgICAgICAgc3RhdGU6IFwieyB9XCIsXG4gICAgICAgICAgICAgICAgZXZlbnRzOiBbXVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByZXZpZXdDb21wb25lbnQ6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgIG1hcmt1cDogXCJcIixcbiAgICAgICAgICAgICAgICBzdHlsZTogXCJcIixcbiAgICAgICAgICAgICAgICBzdGF0ZTogXCJ7fVwiLFxuICAgICAgICAgICAgICAgIGV2ZW50czogW3tcbiAgICAgICAgICAgICAgICAgICAgaWQ6IFwiSUQxXCIsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgIHJlZHVjZXI6IFwiXCJcbiAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRlQ29uZmlnID0gdXBkYXRlQ29uZmlnLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudXBkYXRlRXZlbnQgPSB1cGRhdGVFdmVudC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNhdmVFbGVtZW50ID0gc2F2ZUVsZW1lbnQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy51cGRhdGVzZWxlY3RlZEluZGV4ID0gdXBkYXRlc2VsZWN0ZWRJbmRleC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNldEVkaXRNb2RlID0gc2V0RWRpdE1vZGUuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICB1cGRhdGVQcmV2aWV3KGVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBwcmV2aWV3Q29tcG9uZW50OiBlbGVtZW50XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBjb25zdCBzZWxlY3RlZEVsZW1lbnQgPSB0aGlzLnN0YXRlLmVsZW1lbnRzW3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleF0gfHwgdGhpcy5zdGF0ZS5lbGVtZW50O1xuICAgICAgICBsZXQgbm9kZVRyZWUgPSBnZXROb2RlVHJlZShzZWxlY3RlZEVsZW1lbnQubWFya3VwLCBzZWxlY3RlZEVsZW1lbnQuc3R5bGUsIEpTT04ucGFyc2Uoc2VsZWN0ZWRFbGVtZW50LnN0YXRlKSwgc2VsZWN0ZWRFbGVtZW50LmV2ZW50cyk7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPENvbXBvbmVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzPXt0aGlzLnN0YXRlLmVsZW1lbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25QcmV2aWV3PXt0aGlzLnVwZGF0ZVByZXZpZXcuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU2VsZWN0aW9uPXt0aGlzLnVwZGF0ZXNlbGVjdGVkSW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZEluZGV4PXt0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXh9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cblxuICAgICAgICAgICAgICAgICAgICA8RXZlbnRzXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ9e3NlbGVjdGVkRWxlbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzPXt0aGlzLnN0YXRlLmVsZW1lbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25FdmVudHNVcGRhdGU9e3RoaXMudXBkYXRlRXZlbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNvbmZpZ1VwZGF0ZT17dGhpcy51cGRhdGVDb25maWd9XG4gICAgICAgICAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgICAgICA8L0RyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICA8RWRpdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50PXtzZWxlY3RlZEVsZW1lbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtzZWxlY3RlZEVsZW1lbnQubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmt1cD17c2VsZWN0ZWRFbGVtZW50Lm1hcmt1cH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtzZWxlY3RlZEVsZW1lbnQuc3R5bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZT17c2VsZWN0ZWRFbGVtZW50LnN0YXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25TYXZlPXt0aGlzLnNhdmVFbGVtZW50fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuXG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPFByZXZpZXcgY29tcG9uZW50PXt0aGlzLnN0YXRlLnByZXZpZXdDb21wb25lbnR9IC8+XG4gICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG5cblxuXG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPFRhZ0V4cGxvcmVyIG5vZGU9e25vZGVUcmVlfSAvPlxuICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuXG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPFN0eWxlRXhwbG9yZXIgc3R5bGU9e3NlbGVjdGVkRWxlbWVudC5zdHlsZX0vPlxuICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRvb2w7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuLy8gU3R5bGVzLlxuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG4vLyBDb21wb25lbnRzLlxuXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vRWxlbWVudFwiO1xuXG4vLyBSZWR1Y2Vycy5cblxuaW1wb3J0IHt0b2dnbGVFZGl0b3IsIHNldEVkaXRNb2RlLCBvbkRlbGV0ZX0gZnJvbSBcIi4vUmVkdWNlclwiXG5cbi8vIEV2ZW50cy5cblxuaW1wb3J0IHtwdWJsaXNoRGV0YWlscywgb25FeHBvcnR9IGZyb20gXCIuL0V2ZW50c1wiO1xuXG5cbmNsYXNzIENvbXBvbmVudHMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVsZW1lbnRzOiB0aGlzLnByb3BzLmVsZW1lbnRzLFxuICAgICAgICAgICAgZWRpdE1vZGU6IGZhbHNlLFxuICAgICAgICAgICAgc2VsZWN0ZWRJbmRleDowXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5vbkRlbGV0ZSA9IG9uRGVsZXRlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudG9nZ2xlRWRpdG9yID0gdG9nZ2xlRWRpdG9yLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc2V0RWRpdE1vZGUgPSBzZXRFZGl0TW9kZS5iaW5kKHRoaXMpO1xuICAgIH1cblxuXG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgY29uc3QgZWxlbWVudExpc3QgPSB0aGlzLnN0YXRlLmVsZW1lbnRzLm1hcCgoZWxlbWVudCwgaW5kZXgpID0+IFxuICAgICAgICAgICAgPEVsZW1lbnQgXG4gICAgICAgICAgICAgICAga2V5ID0ge2luZGV4fSBcbiAgICAgICAgICAgICAgICBpbmRleCA9IHtpbmRleH1cbiAgICAgICAgICAgICAgICBzZWxlY3RlZEluZGV4ID0ge3RoaXMucHJvcHMuc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICBlbGVtZW50ID0ge2VsZW1lbnR9XG4gICAgICAgICAgICAgICAgb25TZWxlY3Rpb25DaGFuZ2UgPSB7dGhpcy5wcm9wcy5vblNlbGVjdGlvbn1cbiAgICAgICAgICAgICAgICBvblByZXZpZXcgPSB7cHVibGlzaERldGFpbHMuYmluZCh0aGlzKX0gXG4gICAgICAgICAgICAgICAgb25FeHBvcnQgPSB7b25FeHBvcnQuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICBvbkRlbGV0ZSA9IHt0aGlzLm9uRGVsZXRlLmJpbmQodGhpcyl9Lz5cbiAgICAgICAgKTtcblxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZWxlbWVudHNcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBlbGVtZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgQ29tcG9uZW50c1xuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAge2VsZW1lbnRMaXN0fVxuICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnRzO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIub3ZlcnJpZGUge1xcbiAgICBsaW5lLWhlaWdodDogMCU7XFxufVxcblxcbnRleHRhcmVhIHtcXG4gICAgaGVpZ2h0OiA3MHB4O1xcbiAgICB3aWR0aDogNDUwcHg7XFxufVxcblxcbi5lbGVtZW50c3tcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG5cXG4udGl0bGV7XFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDExcHg7XFxuICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XFxuICAgIGJhY2tncm91bmQ6IHJnYig2NCwgNjQsIDY0KTtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4uZWxlbWVudHMtdGFiIHtcXG4gICAgbGVmdDoxMHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge3NlbGVjdGlvbkNoYW5nZWQsIHByZXZpZXdFbGVtZW50LCBoYW5kbGVEcmFnfSBmcm9tIFwiLi9FdmVudHNcIjtcbmltcG9ydCAgXCIuL1N0eWxlLmNzc1wiO1xuXG5jbGFzcyBFbGVtZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIC8vIFJlbW92ZSB0aGlzLnByb3BzLmluZGV4LCBpbnN0ZWFkIHVzZSB0aGlzIGVsZW1lbnQgaW5zdGFuY2UgaW5kZXguIFJlbW92ZXMgZHVwbGljYXRlIGNvZGVcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFja2dyb3VuZFwiIGRyYWdnYWJsZT1cInRydWVcIiBpZD17dGhpcy5wcm9wcy5lbGVtZW50Lm5hbWV9IG9uRHJhZ1N0YXJ0PXtoYW5kbGVEcmFnLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgIDxsaSBcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lID0ge3RoaXMucHJvcHMuaW5kZXg9PT10aGlzLnByb3BzLnNlbGVjdGVkSW5kZXggPyBcInNlbGVjdGVkIGNvbXBvbmVudFwiOiBcImNvbXBvbmVudFwifVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrID0ge3NlbGVjdGlvbkNoYW5nZWQuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB7dGhpcy5wcm9wcy5pbmRleH0+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNvbXBvbmVudE5hbWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmVsZW1lbnQubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB7dGhpcy5wcm9wcy5pbmRleH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17cHJldmlld0VsZW1lbnQuYmluZCh0aGlzKX0+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLWV5ZVwiPjwvaT5QcmV2aWV3PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0ge3RoaXMucHJvcHMuaW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5wcm9wcy5vbkV4cG9ydH0+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLWZpbGUtZXhwb3J0XCI+PC9pPkV4cG9ydDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IHt0aGlzLnByb3BzLmluZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMucHJvcHMub25EZWxldGV9PjxpIGNsYXNzTmFtZT1cImZhIGZhLXRyYXNoXCI+PC9pPkRlbGV0ZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8LyBkaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFbGVtZW50O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdGlvbkNoYW5nZWQoZSkge1xuICAgIHRoaXMucHJvcHMub25TZWxlY3Rpb25DaGFuZ2UoZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcmV2aWV3RWxlbWVudChlKSB7XG4gICAgbGV0IGNvbXBvbmVudE5hbWUgPSBlLmN1cnJlbnRUYXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmlubmVyVGV4dC5zcGxpdChcIlxcblwiKVswXTtcbiAgICB0aGlzLnByb3BzLm9uUHJldmlldyhjb21wb25lbnROYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUVsZW1lbnQoZSkge1xuICAgIGxldCBjb21wb25lbnROYW1lID0gZS5jdXJyZW50VGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5pbm5lclRleHQuc3BsaXQoXCJcXG5cIilbMF07XG4gICAgdGhpcy5wcm9wcy5vbkRlbGV0ZShjb21wb25lbnROYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZURyYWcoZSl7XG4gICAgZS5kYXRhVHJhbnNmZXIuc2V0RGF0YShcImNvbXBvbmVudC1uYW1lXCIsIGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJpZFwiKSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2VsZWN0ZWQge1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmVlbjtcXG4gICAgYmFja2dyb3VuZDogcmdiKDQzLCA0MywgNDMpO1xcbn1cXG5cXG4uYmFja2dyb3VuZCB7XFxuICAgIGJhY2tncm91bmQ6IHJnYig2NCwgNjQsIDY0KTtcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzMzMzM7XFxufVxcblxcbi5jb21wb25lbnQge1xcbiAgICBkaXNwbGF5OmZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuXFxuLmNvbXBvbmVudCAuY29tcG9uZW50TmFtZXtcXG4gICAgcGFkZGluZzo3cHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsImltcG9ydCB7IHByZXBhcmVFbGVtZW50fSBmcm9tIFwiLi4vdXRpbGl0aWVzL2NvZGVHZW5lcmF0b3IvcHJlcGFyZUVsZW1lbnRcIjtcbmltcG9ydCB7wqBnZXROZXN0ZWRDb21wb25lbnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuaW1wb3J0IHsgZ2V0Q29tcG9uZW50U3RyaW5nIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jb252ZXJ0LXRvLXJlYWN0LWNvbXBvbmVudFwiO1xuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIHB1Ymxpc2hEZXRhaWxzKGNvbXBvbmVudE5hbWUpIHtcbiAgICAgICAgXG4gICAgLy8gV2FybmluZzogT2JqZWN0LmFzc2lnbiBkb2VzbnQgZHVwZSB0aGUgb3JpZ2luYWwgb2JqZWN0LiBJdCBvdmVycmlkZXMgb25seSB0aGUgdmFsdWVzLlxuICAgIC8vIE1heSBjYXVzZSBwcm9ibGVtIHdpdGggcmVmZXJlbmNlIHR5cGVzLlxuICAgIGxldCBlbGVtZW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmVsZW1lbnRzLmZpbmQoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWNvbXBvbmVudE5hbWUpKSk7XG5cbiAgICB0aGlzLnByb3BzLm9uUHJldmlldyhwcmVwYXJlRWxlbWVudChlbGVtZW50LCBlbGVtZW50Lm5hbWUpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uRXhwb3J0KCkge1xuICAgIGxldCBuZXN0ZWRDb21wb25lbnRzID0gZ2V0TmVzdGVkQ29tcG9uZW50cyh0aGlzLnN0YXRlLmVsZW1lbnRzW3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleF0pO1xuXG4gICAgY29uc29sZS5sb2cobmVzdGVkQ29tcG9uZW50cy5tYXAoZ2V0Q29tcG9uZW50U3RyaW5nKS5qb2luKFwiXCIpKTtcbn0iLCJleHBvcnQgZnVuY3Rpb24gcHJlcGFyZUVsZW1lbnQoZWxlbWVudCkge1xuXG4gICAgbGV0IGRlZmF1bHRzID0ge1xuICAgICAgICBzdGF0ZToge30sXG4gICAgICAgIHN0eWxlOiB7fVxuICAgIH07XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZGVmYXVsdHMsIGVsZW1lbnQpO1xufSIsImV4cG9ydCBmdW5jdGlvbiBjb2RlTW9kaWZpZXIocmVkdWNlcikge1xuICAgIHJldHVybiBgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgJHtyZWR1Y2VyfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG5gXG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmltcG9ydCBEeW5hbWljQ29tcG9uZW50IGZyb20gXCIuLi9EeW5hbWljQ29tcG9uZW50XCI7XG5pbXBvcnQge3ZhbGlkYXRlfSBmcm9tIFwiLi92YWxpZGF0ZVwiO1xuXG5jbGFzcyBQcmV2aWV3IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICB0cnl7XG4gICAgICAgICAgICB2YWxpZGF0ZSh0aGlzLnByb3BzLmNvbXBvbmVudClcbiAgICAgICAgfVxuICAgICAgICBjYXRjaChlKXtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSGVscHMgdG8gcmVyZW5kZXIgd2hlbiBjaGFuZ2VzIHRvIG1hcmt1cC9ldmVudHMgYXJlIG1hZGUgdG8gdGhlIGNvbXBvbmVudCBhbmQgcHJldmlldyB0aGVtLlxuICAgICAgICBsZXQgcmFuZG9tS2V5ID0gdGhpcy5wcm9wcy5jb21wb25lbnQuaWQqKH5+KE1hdGgucmFuZG9tKCkqMTApKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIHByZXZpZXdcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgIFByZXZpZXdcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8RHluYW1pY0NvbXBvbmVudCBrZXk9e3JhbmRvbUtleX0gY29tcG9uZW50PXt0aGlzLnByb3BzLmNvbXBvbmVudH0vPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFByZXZpZXc7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29udGFpbmVye1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDI2cHggLThweCBibGFjaztcXG4gICAgYmFja2dyb3VuZDogIzJDMzEzNDtcXG59XFxuXCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7Y3JlYXRlU3R5bGVzaGVldH0gZnJvbSBcIi4uL3V0aWxpdGllcy9qc3hUcmFuc3BpbGVyL2NyZWF0ZS1zdHlsZXNoZWV0XCI7XG5pbXBvcnQge2NyZWF0ZUNvbXBvbmVudH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jb252ZXJ0LXRvLXJlYWN0LWNvbXBvbmVudFwiO1xuXG5pbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuXG5jbGFzcyBEeW5hbWljQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuY29tcG9uZW50ID0gdGhpcy5wcm9wcy5jb21wb25lbnQ7XG4gICAgICAgIGNyZWF0ZVN0eWxlc2hlZXQodGhpcy5jb21wb25lbnQuc3R5bGUpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IGNyZWF0ZUNvbXBvbmVudCh0aGlzLmNvbXBvbmVudClcblxuICAgICAgICBpZighcmVzdWx0KXtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9ICAgICAgICBcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7UmVhY3QuY3JlYXRlRWxlbWVudChyZXN1bHQpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IER5bmFtaWNDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuYm94IHtcXG4gICAgbWFyZ2luOiA1cHg7XFxuICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6NXB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJcInVzZSBzdHJpY3RcIjtcblxuY29uc3QgaXNGdW5jdGlvbiA9IChmdW4pID0+IHtcbiAgICByZXR1cm4gdHlwZW9mIGZ1biA9PT0gXCJmdW5jdGlvblwiO1xufSBcblxuY29uc3QgdmFsaWRhdGVFdmVudHMgPSAoZXZlbnQpID0+IHtcbiAgICAvLyBGdXR1cmVcbiAgICAvLyBIYXMgYWNjZXNzIHRvIG9ubHkgc3RhdGUgYW5kIGV2ZW50IHBhcmFtZXRlci5cbiAgICAvLyBBbnkgdmFsaWQgamF2YXNjcmlwdCBzaG91bGQgd29ya1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhldmVudCkuZXZlcnkoZXZlbnROYW1lPT57XG4gICAgICAgIHJldHVybiBpc0Z1bmN0aW9uKGV2ZW50W2V2ZW50TmFtZV0pO1xuICAgIH0pXG59XG5cbmNvbnN0IHZhbGlkYXRlQ29tcG9uZW50ID0gKGNvbXBvbmVudCApID0+IHtcbiAgICAvLyBTaG91bGQgaGF2ZSBtYXJrdXAuXG4gICAgaWYoIWNvbXBvbmVudC5tYXJrdXAubGVuZ3RoPjApe1xuICAgICAgICBjb25zb2xlLmVycm9yKGNvbXBvbmVudCwgXCIgU2hvdWxkIGhhdmUgYSBtYXJrdXBcIik7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gU2hvdWxkIGhhdmUgc3RhdGUuXG4gICAgaWYoIWNvbXBvbmVudC5zdGF0ZSl7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoY29tcG9uZW50LFwiIFNob3VsZCBoYXZlIHN0YXRlIG9yIHBhc3MgZW1wdHkgb2JqZWN0XCIpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFNob3VsZCBoYXZlIHN0eWxlLlxuICAgIGlmKCFjb21wb25lbnQuc3R5bGUpe1xuICAgICAgICBjb25zb2xlLmVycm9yKGNvbXBvbmVudCwgXCIgU2hvdWxkIGhhdmUgc3R5bGUgb2JqZWN0LCBvciBwYXNzIGVtcHR5IG9iamVjdFwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFNob3VsZCBoYXZlIGV2ZW50cy5cbiAgICBpZighY29tcG9uZW50LmV2ZW50cyl7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoY29tcG9uZW50LCBcIiBTaG91bGQgaGF2ZSBldmVudHMgb2JqZWN0IG9yIHBhc3MgZW1wdHkgb2JqZWN0XCIpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYoIXZhbGlkYXRlRXZlbnRzKGNvbXBvbmVudC5ldmVudHMpKXtcbiAgICAgICAgY29uc29sZS5lcnJvcihjb21wb25lbnQuZXZlbnRzLCBcIiBTaG91bGQgaGF2ZSBmdW5jdGlvbiBoYXMgcHJvcGVydHkgdmFsdWVcIik7XG4gICAgfVxuXG59XG5cbmNvbnN0IHZhbGlkYXRlID0gKCBjb21wb25lbnRzICkgPT4ge1xuICAgIHJldHVybiB2YWxpZGF0ZUNvbXBvbmVudChjb21wb25lbnRzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgdmFsaWRhdGVcbn0iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuY2xhc3MgRHJhZ2dhYmxlQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGB1aS1lZGl0b3Itc2V0dGluZ3MtZHJhZ2dhYmxlLWNvbXBvbmVudC0ke3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfWApKSB8fCB7XG4gICAgICAgICAgICBzdHlsZTogIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgICAgICAgICAgICAgIHRvcDogXCIzMHB4XCIsXG4gICAgICAgICAgICAgICAgbGVmdDogXCIyMDBweFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWluaW1pc2VkOiBmYWxzZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgbW92ZURpdihlKXtcblxuICAgICAgICBsZXQgc3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKTtcbiAgICAgICAgc3RhdGUuc3R5bGUudG9wID0gZS5wYWdlWSArXCJweFwiXG4gICAgICAgIHN0YXRlLnN0eWxlLmxlZnQgPSBlLnBhZ2VYICtcInB4XCJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBzdHlsZSA6IHN0YXRlLnN0eWxlXG4gICAgICAgIH0sKCk9PntcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGB1aS1lZGl0b3Itc2V0dGluZ3MtZHJhZ2dhYmxlLWNvbXBvbmVudC0ke3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfWAsSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZSkpO1xuICAgICAgICB9KVxuXG4gICAgfVxuXG4gICAgdG9nZ2xlTWluaW1pc2VNYXhpbWlzZShlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbWluaW1pc2VkOiAhdGhpcy5zdGF0ZS5taW5pbWlzZWRcbiAgICAgICAgfSwoKT0+e1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYHVpLWVkaXRvci1zZXR0aW5ncy1kcmFnZ2FibGUtY29tcG9uZW50LSR7dGhpcy5wcm9wcy5jaGlsZHJlbi50eXBlLm5hbWV9YCxKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlKSk7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBkcmFnZ2FibGU9XCJ0cnVlXCIgaWQ9XCJtb3ZlXCIgb25EcmFnRW5kPXt0aGlzLm1vdmVEaXYuYmluZCh0aGlzKX0gc3R5bGU9e3RoaXMuc3RhdGUuc3R5bGV9ID5cbiAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cIk1vdmVcIiBjbGFzc05hbWU9XCJtb3ZlLWhhbmRsZVwiPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1hcnJvd3MtYWx0IGZhLXhzXCI+PC9pPlxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUubWluaW1pc2VkID8gICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cIk1pbmltaXNlXCIgY2xhc3NOYW1lPVwibWF4aW1pc2UtaGFuZGxlXCIgb25DbGljaz17dGhpcy50b2dnbGVNaW5pbWlzZU1heGltaXNlLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmFzIGZhLXdpbmRvdy1tYXhpbWl6ZSBmYS14c1wiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwiTWluaW1pc2VcIiBjbGFzc05hbWU9XCJtaW5pbWlzZS1oYW5kbGVcIiBvbkNsaWNrPXt0aGlzLnRvZ2dsZU1pbmltaXNlTWF4aW1pc2UuYmluZCh0aGlzKX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYXMgZmEtd2luZG93LW1pbmltaXplIGZhLXhzXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5taW5pbWlzZWQgPyBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGVkaXRvci10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+e3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmNoaWxkcmVuIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBEcmFnZ2FibGVDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIjbW92ZSA+IHNwYW57ICBcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGNvbG9yOiBibGFjaztcXG59XFxuXFxuI21vdmUgLm1vdmUtaGFuZGxle1xcbiAgICBjdXJzb3I6IG1vdmU7XFxufVxcblxcbiNtb3ZlIC5tb3ZlLWhhbmRsZSxcXG4jbW92ZSAubWluaW1pc2UtaGFuZGxlLFxcbiNtb3ZlIC5tYXhpbWlzZS1oYW5kbGUge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDJweDtcXG4gICAgcGFkZGluZy1yaWdodDogMnB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJcbi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcbmltcG9ydCB7dXBkYXRlTmFtZSwgdXBkYXRlTWFya3VwLCB1cGRhdGVTdHlsZSwgdXBkYXRlU3RhdGV9IGZyb20gXCIuL1JlZHVjZXJcIjtcblxuLyoqXG4gKiBTaG93cyBDb25maWd1cmF0b3Igb24gc2VsZWN0IG9mIHZhbGlkIGNoaWxkIGNvbXBvbmVudCBuYW1lIGluIHRoZSBtYXJrdXAgYW5kIG1vdXNlT3V0IGZyb20gbWFya3VwXG4gKiBIaWRlcyBDb25maWd1cmF0b3Igb24gbW91c2VMZWF2ZSBmcm9tIHRoZSBlZGl0b3IuXG4gKi9cbmNsYXNzIEVkaXRvciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICAvLyB0aGlzLnN0YXRlID0gey4uLiB0aGlzLnByb3BzLmVsZW1lbnR9O1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbmFtZTogdGhpcy5wcm9wcy5uYW1lLFxuICAgICAgICAgICAgbWFya3VwOiB0aGlzLnByb3BzLm1hcmt1cCxcbiAgICAgICAgICAgIHN0YXRlOiB0aGlzLnByb3BzLnN0YXRlLFxuICAgICAgICAgICAgc3R5bGU6IHRoaXMucHJvcHMuc3R5bGUsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgcHVibGlzaEVsZW1lbnQgKCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uU2F2ZSh7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLnN0YXRlLm5hbWUsXG4gICAgICAgICAgICBtYXJrdXA6IHRoaXMuc3RhdGUubWFya3VwLFxuICAgICAgICAgICAgc3R5bGU6IHRoaXMuc3RhdGUuc3R5bGUsXG4gICAgICAgICAgICBzdGF0ZTogdGhpcy5zdGF0ZS5zdGF0ZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IG5hbWU9IHRoaXMuc3RhdGUubmFtZTtcbiAgICAgICAgbGV0IG1hcmt1cD0gdGhpcy5zdGF0ZS5tYXJrdXA7XG4gICAgICAgIGxldCBzdHlsZT0gdGhpcy5zdGF0ZS5zdHlsZTtcbiAgICAgICAgbGV0IHN0YXRlPSB0aGlzLnN0YXRlLnN0YXRlO1xuICAgICAgICAvLyBUT0RPOiBTaG91bGQgcGFzcyB0aGUgY3VycmVudCBkYXRhLiBJbnN0ZWFkIG9mIGFjY2Vzc2luZyBpdCBmcm9tIGdsb2JhbFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZWRpdG9yLXRhYlwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5FZGl0b3I8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5Db21wb25lbnQgTmFtZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIGVsZW1lbnQgbmFtZVwiIHZhbHVlPXtuYW1lfSBvbkNoYW5nZT17dXBkYXRlTmFtZS5iaW5kKHRoaXMpfSBpZD1cImVsZW1lbnROYW1lXCIvPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMucHVibGlzaEVsZW1lbnQuYmluZCh0aGlzKX0gaWQ9XCJzYXZlXCI+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLXNhdmVcIj48L2k+U2F2ZTwvYnV0dG9uPiAgICBcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IE1hcmt1cDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgdmFsdWU9e21hcmt1cH0gb25DaGFuZ2U9e3VwZGF0ZU1hcmt1cC5iaW5kKHRoaXMpfSBpZD1cImVsZW1lbnRNYXJrdXBcIiB0aXRsZT1cIklEIGlzIG1hbmRhdG9yeSBmb3IgZXZlbnRzXCIvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IENTUzwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgdmFsdWU9e3N0eWxlfSBvbkNoYW5nZT17dXBkYXRlU3R5bGUuYmluZCh0aGlzKX0gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5Db21wb25lbnQgU3RhdGU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHZhbHVlPXtzdGF0ZX0gb25DaGFuZ2U9e3VwZGF0ZVN0YXRlLmJpbmQodGhpcyl9IGlkPVwiZWxlbWVudFN0YXRlXCIvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVkaXRvcjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmhpZGRlbntcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gUHVibGljLlxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlTmFtZSAoZXZlbnQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbmFtZTogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVNYXJrdXAgKGV2ZW50KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG1hcmt1cDogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiAgdXBkYXRlU3R5bGUgKGV2ZW50KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN0eWxlOiBldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVN0YXRlIChldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdGF0ZTogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm9wZXJ0eUNvbnRhaW5pbmdQcm9wcyhvYmope1xuICAgIC8vIEZldGNoIGxpc3Qgb2YgcHJvcHMgZnJvbSBjaGlsZC5cbiAgICBsZXQgcHJvcHMgPSBbXTtcbiAgICBsZXQgc3RhdGU7XG4gICAgdHJ5e1xuICAgICAgICBzdGF0ZSA9IEpTT04ucGFyc2Uob2JqLnN0YXRlKTtcbiAgICB9XG4gICAgY2F0Y2goZSl7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvcjogQ2hpbGQgc3RhdGUgaXMgYW4gaW52YWxpZCBqc29uLCB0cnkgYW4gb25saW5lIHZhbGlkYXRvciBvbiBiZWxvdyBzdHJpbmdcIilcbiAgICAgICAgY29uc29sZS5sb2coY2hpbGQuc3RhdGUpO1xuICAgIH1cbiAgICBmb3IobGV0IHByb3BlcnR5IGluIHN0YXRlKXtcbiAgICAgICAgaWYoc3RhdGVbcHJvcGVydHldLmluY2x1ZGVzKFwicHJvcFwiKSl7XG4gICAgICAgICAgICBwcm9wcy5wdXNoKHByb3BlcnR5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJvcHM7XG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIERlcGVuZGVuY2llcy5cblxuaW1wb3J0IHsgc2F2ZUNvbXBvbmVudHNUb1dpbmRvdywgZ2V0TmVzdGVkQ29tcG9uZW50cyB9IGZyb20gXCIuLi91dGlsaXRpZXMvbmVzdGVkQ29tcG9uZW50U2V0dXBcIjtcblxuLy8gQ29tcG9uZW50cy4gXG5cbmltcG9ydCBDb25maWd1cmF0b3IgZnJvbSBcIi4uL0NvbmZpZ3VyYXRvclwiO1xuaW1wb3J0IE5vZGVzIGZyb20gXCIuLi9Ob2Rlc1wiO1xuaW1wb3J0IEV2ZW50IGZyb20gXCIuLi9FdmVudFwiO1xuaW1wb3J0IGdldE1lc3NhZ2VzIGZyb20gXCIuL01lc3NhZ2VzXCI7XG5cbi8vIFN0eWxlcy5cblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuLy8gUmVkdWNlcnMuXG5cbmltcG9ydCB7IHVwZGF0ZUV2ZW50LCBzZWxlY3RlZFRhZ0NoYW5nZWQsIGRlbGV0ZUV2ZW50LCB1cGRhdGVDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4vUmVkdWNlclwiO1xuXG5cbi8vIFV0aWxzLlxuXG5pbXBvcnQgeyBnZXROb2RlVHJlZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvZ2V0LW5vZGUtdHJlZS5qc1wiO1xuXG5jbGFzcyBFdmVudHMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnID0gXCJcIjtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLnByb3BzLmVsZW1lbnQ7XG5cbiAgICAgICAgLy8gUmVwb3J0IGlmIG5vIGNvbXBvbmVudCBpcyBjcmVhdGVkLlxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lbGVtZW50cy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5TZXR0aW5nczwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8cD5Mb29rcyBsaWtlIHlvdSBkbyBub3QgaGF2ZSBhbnkgV2ViIGNvbXBvbmVudCBjcmVhdGVkLiBUeXBlIHNvbWUgXCJodG1sXCIgb24gdGhlIHJpZ2h0IFwiRWRpdG9yXCIgdGFiPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlcG9ydCBpZiBubyBjb21wb25lbnQgaXMgc2VsZWN0ZWQuXG4gICAgICAgIGlmIChlbGVtZW50Lm5hbWUgPT09IHVuZGVmaW5lZCAmJiB0aGlzLnN0YXRlLmVsZW1lbnRzLmxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlNldHRpbmdzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxwPkxvb2tzIGxpa2UgeW91IGhhdmUgbm90IHNlbGVjdGVkIGFueSBjb21wb25lbnQuIENsaWNrIG9uIGFueSBvZiB0aGUgY29tcG9uZW50IGluIHRoZSBsZWZ0IHBhbmUuPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IG5lc3RlZENvbXBvbmVudHMgPSBnZXROZXN0ZWRDb21wb25lbnRzKGVsZW1lbnQpO1xuXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBjb21wb25lbnQgaGFzIG5lc3RlZCBjb21wb25lbnRzLCBtYWtlIGl0IGF2YWlsYWJsZSBnbG9iYWxseSBmb3IgcHJldmlldy5cbiAgICAgICAgaWYgKG5lc3RlZENvbXBvbmVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgc2F2ZUNvbXBvbmVudHNUb1dpbmRvdyhuZXN0ZWRDb21wb25lbnRzKTtcblxuICAgICAgICAgICAgLy8gUmVuZGVyIG5lc3RlZENvbXBvbmVudCBpbiBub2Rlcy5cbiAgICAgICAgICAgIC8vIElmIHNlbGVjdGVkLCBzaG93IGluIGEgZHJvcCBkb3duIGxpc3Qgb2YgcHVibGlzaGVkIGV2ZW50cy5cbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBub2RlVHJlZSA9IGdldE5vZGVUcmVlKGVsZW1lbnQubWFya3VwLCBlbGVtZW50LnN0eWxlLCBKU09OLnBhcnNlKGVsZW1lbnQuc3RhdGUpLCBlbGVtZW50LmV2ZW50cyk7XG5cbiAgICAgICAgLy8gUmVwb3J0IGVycm9yLlxuICAgICAgICBpZiAobm9kZVRyZWUuZXJyb3IgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIGdldE1lc3NhZ2VzKG5vZGVUcmVlLmVycm9yKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlcG9ydCBlcnJvciBpZiBjb21wb25lbnQgaXMgbm90IFxuICAgICAgICBpZiAobm9kZVRyZWUucmVzdWx0ID09PSB1bmRlZmluZWQgJiYgdGhpcy5zdGF0ZS5lbGVtZW50cy5sZW5ndGggIT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5TZXR0aW5nczwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNlbGVjdGVkVGFnID0gdGhpcy5zdGF0ZS5zZWxlY3RlZFRhZyB8fCBcIlwiO1xuICAgICAgICBsZXQgZXZlbnRzT2ZTZWxlY3RlZFRhZywgY29uZmlndXJhdG9yO1xuICAgICAgICAvLyBDaGVjayBpZiBpdCBpcyBhIGNoaWxkIGNvbXBvbmVudFxuICAgICAgICBpZiAoc2VsZWN0ZWRUYWcuaW5jbHVkZXMoXCJjaGlsZC1jb21wb25lbnQtXCIpKSB7XG4gICAgICAgICAgICAvLyBHZXQgbGlzdCBvZiBjb21wb25lbnRzLlxuICAgICAgICAgICAgbGV0IGNvbXBvbmVudHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidWktZWRpdG9yXCIpKTtcblxuICAgICAgICAgICAgLy8gR2V0IGNoaWxkIGNvbXBvbmVudCBuYW1lIGZyb20gdGhlIHNlbGVjdGVkIHRhZy5cbiAgICAgICAgICAgIGxldCBjaGlsZENvbXBvbmVudE5hbWUgPSBzZWxlY3RlZFRhZy5zcGxpdChcImNoaWxkLWNvbXBvbmVudC1cIilbMV07XG5cbiAgICAgICAgICAgIC8vIEZpbmQgdGhlIGNoaWxkIGNvbXBvbmVudCBmcm9tIHRoZSBsaXN0IG9mIGNvbXBvbmVudHMuXG4gICAgICAgICAgICBsZXQgY2hpbGRDb21wb25lbnQgPSBjb21wb25lbnRzLmZpbmQoY29tcG9uZW50ID0+IGNvbXBvbmVudC5uYW1lID09PSBjaGlsZENvbXBvbmVudE5hbWUpO1xuXG4gICAgICAgICAgICAvLyBGaW5kIGV2ZW50cyB0aGF0IGFyZSBwdWJsaXNoYWJsZSBmcm9tIHRoZSBjaGlsZCBjb21wb25lbnQuXG4gICAgICAgICAgICBsZXQgZXZlbnROYW1lcyA9IGNoaWxkQ29tcG9uZW50LmV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gZXZlbnQucHVibGlzaGFibGUgPT09IHRydWUpLm1hcChwdWJsaXNoYWJsZUV2ZW50ID0+IHB1Ymxpc2hhYmxlRXZlbnQucHVibGlzaE5hbWUpO1xuXG4gICAgICAgICAgICAvLyBDcmVhdGUgZXZlbnQgdmlldyBmb3IgbGlzdCBvZiBhbGwgZXZlbnRzXG4gICAgICAgICAgICBjb25zdCBldmVudHMgPSBlbGVtZW50LmV2ZW50cy5tYXAoKGV2ZW50LCBpbmRleCkgPT4gPEV2ZW50IGtleT17aW5kZXh9IGluZGV4PXtpbmRleH0gZXZlbnQ9e2V2ZW50fSBzZWxlY3RlZFRhZ0lEPXtzZWxlY3RlZFRhZ30gZXZlbnROYW1lcz17ZXZlbnROYW1lc30gb25TYXZlPXt1cGRhdGVFdmVudC5iaW5kKHRoaXMpfSBkZWxldGVFdmVudD17ZGVsZXRlRXZlbnQuYmluZCh0aGlzKX0gLz4pO1xuXG4gICAgICAgICAgICAvLyBGaWx0ZXIgb3V0IGV2ZW50cyB0aGF0IGFyZSBub3QgcGFydCBvZiBzZWxlY3RlZFRhZ1xuICAgICAgICAgICAgZXZlbnRzT2ZTZWxlY3RlZFRhZyA9IHNlbGVjdGVkVGFnID8gZXZlbnRzLmZpbHRlcihldmVudCA9PiBzZWxlY3RlZFRhZy5pbmNsdWRlcyhldmVudC5wcm9wcy5ldmVudC5pZCkpIDogbnVsbDtcblxuICAgICAgICAgICAgY29uZmlndXJhdG9yID0gPENvbmZpZ3VyYXRvciBvbkNoYW5nZT17dXBkYXRlQ29uZmlndXJhdGlvbi5iaW5kKHRoaXMpfSBjaGlsZE5hbWU9e2NoaWxkQ29tcG9uZW50TmFtZX0gcGFyZW50PXtlbGVtZW50fSAvPjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50cyA9IGVsZW1lbnQuZXZlbnRzXG4gICAgICAgICAgICAgICAgLm1hcCgoZXZlbnQsIGluZGV4KSA9PiA8RXZlbnQga2V5PXtpbmRleH0gaW5kZXg9e2luZGV4fSBldmVudD17ZXZlbnR9IHNlbGVjdGVkVGFnSUQ9e3NlbGVjdGVkVGFnfSBldmVudE5hbWVzPXtbXX0gb25TYXZlPXt1cGRhdGVFdmVudC5iaW5kKHRoaXMpfSBkZWxldGVFdmVudD17ZGVsZXRlRXZlbnQuYmluZCh0aGlzKX0gLz4pO1xuICAgICAgICAgICAgZXZlbnRzT2ZTZWxlY3RlZFRhZyA9IHNlbGVjdGVkVGFnID8gZXZlbnRzLmZpbHRlcihldmVudCA9PiBzZWxlY3RlZFRhZy5pbmNsdWRlcyhldmVudC5wcm9wcy5ldmVudC5pZCkpIDogbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlNldHRpbmdzPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0YWdzXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Tm9kZXMgbm9kZT17bm9kZVRyZWUucmVzdWx0fSBvblNlbGVjdGVkVGFnQ2hhbmdlZD17c2VsZWN0ZWRUYWdDaGFuZ2VkLmJpbmQodGhpcyl9IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7Y29uZmlndXJhdG9yfVxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIEV2ZW50c1xuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEV4aXN0aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtldmVudHNPZlNlbGVjdGVkVGFnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBOZXdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEV2ZW50IGtleT17ZWxlbWVudC5ldmVudHMubGVuZ3RofSBldmVudE5hbWVzPXtbXX0gc2VsZWN0ZWRUYWdJRD17c2VsZWN0ZWRUYWd9IG9uU2F2ZT17dXBkYXRlRXZlbnQuYmluZCh0aGlzKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEV2ZW50cztcbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiXG5cblxuY2xhc3MgQ29uZmlndXJhdG9yIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgbGV0IGNvbmZpZyA9IEpTT04ucGFyc2UodGhpcy5wcm9wcy5wYXJlbnQuY29uZmlnKVt0aGlzLnByb3BzLmNoaWxkTmFtZV0gfHwge292ZXJpZGVTdGF0ZTpmYWxzZX07XG4gICAgICAgIFxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgb3ZlcnJpZGU6IGNvbmZpZy5vdmVyaWRlU3RhdGVcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHRvZ2dlbE92ZXJyaWRlKCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgb3ZlcnJpZGU6ICF0aGlzLnN0YXRlLm92ZXJyaWRlXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh7XG4gICAgICAgICAgICBvdmVycmlkZTogIXRoaXMuc3RhdGUub3ZlcnJpZGUsXG4gICAgICAgICAgICBjaGlsZE5hbWU6IHRoaXMucHJvcHMuY2hpbGROYW1lLFxuICAgICAgICAgICAgcGFyZW50TmFtZTogdGhpcy5wcm9wcy5wYXJlbnQubmFtZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgcmV0dXJuIChcblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcHRpb24tZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJvcHRpb24tZ3JvdXAtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGl0bGVcIj5DaGlsZCBDb25maWd1cmF0aW9uczwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicGFuZWwgZXhwYW5kZWRcIj48L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVudFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm9wdGlvblwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPk92ZXJyaWRlIGNoaWxkIHN0YXRlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBvbkNoYW5nZT17dGhpcy50b2dnZWxPdmVycmlkZS5iaW5kKHRoaXMpfSBjaGVja2VkPXt0aGlzLnN0YXRlLm92ZXJyaWRlID8gXCJjaGVja2VkXCIgOiBcIlwifSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb25maWd1cmF0b3I7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb25zb2xle1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHJpZ2h0OiAxNTBweDtcXG59XFxuXFxuLmVycm9yIHtcXG4gICAgY29sb3I6IHJlZDtcXG59XFxuXFxuLmV2ZW50IHsgXFxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgIzMzMzMzMztcXG4gICAgYmFja2dyb3VuZDogcmdiKDY0LCA2NCwgNjQpO1xcbn1cXG5cXG4uaW5mbyB7XFxuICAgIGNvbG9yOiB5ZWxsb3dncmVlbjtcXG59XFxuXFxubGFiZWwge1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG4uY29uZmlndXJhdG9yIHtcXG4gICAgYmFja2dyb3VuZDogcmdiKDY0LCA2NCwgNjQpO1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgICBwYWRkaW5nOiA1cHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5jbGFzcyBOb2RlcyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLnByb3BzLm5vZGU7XG5cbiAgICAgICAgdmFyIGlkID0gbm9kZS5wcm9wcy5pZCA/IChcIi1cIitub2RlLnByb3BzLmlkKSA6IFwiXCI7XG5cbiAgICAgICAgaWYoIW5vZGUpe1xuICAgICAgICAgICAgcmV0dXJuICg8c3Bhbj5udWxsPC9zcGFuPilcbiAgICAgICAgfVxuICAgICAgICBpZih0eXBlb2Ygbm9kZT09PVwic3RyaW5nXCIpe1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgPGxpPntub2RlfTwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQ2hlY2sgaWYgaXQgY29udGFpbnMgY2hpbGRyZW4uXG4gICAgICAgIGlmKG5vZGUucHJvcHMgJiYgQXJyYXkuaXNBcnJheShub2RlLnByb3BzLmNoaWxkcmVuKSl7XG4gICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLnByb3BzLmNoaWxkcmVuLm1hcCgoY2hpbGQsaW5kZXgpPT48Tm9kZXMga2V5PXtpbmRleH0gbm9kZT17Y2hpbGR9IG9uU2VsZWN0ZWRUYWdDaGFuZ2VkPXt0aGlzLnByb3BzLm9uU2VsZWN0ZWRUYWdDaGFuZ2VkfS8+KTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInNlbGVjdGVkRWxlbWVudFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnByb3BzLm9uU2VsZWN0ZWRUYWdDaGFuZ2VkfSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bm9kZS50eXBlICsgaWR9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGUgK2lkfVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgbm9kZSBjb250YWlucyBvbmx5IG9uZSBjaGlsZHJlbiwganN4IGdldCB0cmFuc3BpbGVkIHRvIG9iamVjdCByYXRoZXIgdGhhbiBhcnJheS5cbiAgICAgICAgZWxzZSBpZih0eXBlb2Ygbm9kZS5wcm9wcy5jaGlsZHJlbiA9PT0gXCJvYmplY3RcIil7XG4gICAgICAgICAgICBsZXQgY2hpbGQgPSBub2RlLnByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicmFkaW9cIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwic2VsZWN0ZWRFbGVtZW50XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtub2RlLnR5cGUraWR9Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGUgK2lkfVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8Tm9kZXMga2V5PXtpbmRleH0gbm9kZT17Y2hpbGR9IG9uU2VsZWN0ZWRUYWdDaGFuZ2VkPXt0aGlzLnByb3BzLm9uU2VsZWN0ZWRUYWdDaGFuZ2VkfS8+XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gbmVzdGVkIGNvbXBvbmVudC5cbiAgICAgICAgZWxzZSBpZih0eXBlb2Ygbm9kZS50eXBlID09PSBcImZ1bmN0aW9uXCIpe1xuICAgICAgICAgICAgcmV0dXJuICg8dWw+XG4gICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicmFkaW9cIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJzZWxlY3RlZEVsZW1lbnRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtcImNoaWxkLWNvbXBvbmVudC1cIitub2RlLnR5cGUubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnByb3BzLm9uU2VsZWN0ZWRUYWdDaGFuZ2VkfSBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGUubmFtZX1cbiAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInNlbGVjdGVkRWxlbWVudFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e25vZGUudHlwZStpZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnByb3BzLm9uU2VsZWN0ZWRUYWdDaGFuZ2VkfSBcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGUgK2lkfVxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBOb2RlczsiLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIlxuXG4vLyBDb21wb25lbnRzLlxuXG5pbXBvcnQgZ2V0TWVzc2FnZXMgZnJvbSBcIi4vTWVzc2FnZXNcIjtcblxuLy8gUmVkdWNlcnMuIFxuXG5pbXBvcnQge3VwZGF0ZUV2ZW50TmFtZSwgdXBkYXRlRXZlbnRUeXBlLCB1cGRhdGVQdWJsaXNoTmFtZSwgdXBkYXRlUmVkdWNlcn0gZnJvbSBcIi4vUmVkdWNlclwiO1xuXG4vLyBFdmVudHMuXG5cbmltcG9ydCB7cHVibGlzaEV2ZW50LCBkZWxldGVFdmVudH0gZnJvbSAnLi9FdmVudHMnO1xuXG5jbGFzcyBFdmVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbmFtZTogdGhpcy5wcm9wcy5ldmVudCA/IHRoaXMucHJvcHMuZXZlbnQubmFtZSA6IFwiXCIsXG4gICAgICAgICAgICByZWR1Y2VyOiB0aGlzLnByb3BzLmV2ZW50ID8gdGhpcy5wcm9wcy5ldmVudC5yZWR1Y2VyIDogXCJcIixcbiAgICAgICAgICAgIHB1Ymxpc2hhYmxlOiB0aGlzLnByb3BzLmV2ZW50ID8gdGhpcy5wcm9wcy5ldmVudC5wdWJsaXNoYWJsZSA6IFwiXCIsXG4gICAgICAgICAgICBwdWJsaXNoTmFtZTogdGhpcy5wcm9wcy5ldmVudCA/IHRoaXMucHJvcHMuZXZlbnQucHVibGlzaE5hbWUgOiBcIlwiLFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGlmICh0aGlzLnByb3BzLnNlbGVjdGVkVGFnSUQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIGdldE1lc3NhZ2VzKCk7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgcHVibGlzaE5hbWUgPSB0aGlzLnN0YXRlLnB1Ymxpc2hhYmxlPyA8aW5wdXQgdHlwZT1cInRleHRcIiBvbkNoYW5nZT17dXBkYXRlUHVibGlzaE5hbWUuYmluZCh0aGlzKX0gdmFsdWU9e3RoaXMuc3RhdGUucHVibGlzaE5hbWV9IHBsYWNlaG9sZGVyPVwiRW50ZXIgZXZlbnQgcHVibGlzaCBuYW1lIGZvciBvdGhlciBjb21wb25lbnRzIHRvIHN1YnNjcmliZSB0b1wiLz4gOiBudWxsO1xuICAgICAgICBsZXQgZXZlbnROYW1lcyA9IHRoaXMucHJvcHMuZXZlbnROYW1lcy5tYXAoZXZlbnROYW1lPT48b3B0aW9uIHZhbHVlPXtldmVudE5hbWV9Pjwvb3B0aW9uPilcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJldmVudFwiPlxuICAgICAgICAgICAgICAgIDxpbnB1dCBsaXN0PVwiYnJvd3NlcnNcIiB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXt1cGRhdGVFdmVudE5hbWUuYmluZCh0aGlzKX0gdmFsdWU9e3RoaXMuc3RhdGUubmFtZX0gcGxhY2Vob2xkZXI9XCJFbnRlciBldmVudCBuYW1lXCIgdGl0bGU9XCJFdmVudCBOYW1lXCIvPlxuICAgICAgICAgICAgICAgIDxkYXRhbGlzdCBpZD1cImJyb3dzZXJzXCI+XG4gICAgICAgICAgICAgICAgICAgIHtldmVudE5hbWVzfVxuICAgICAgICAgICAgICAgIDwvZGF0YWxpc3Q+XG4gICAgICAgICAgICAgICAgPGJyLz5cbiAgICAgICAgICAgICAgICA8dGV4dGFyZWEgb25DaGFuZ2U9e3VwZGF0ZVJlZHVjZXIuYmluZCh0aGlzKX0gdmFsdWU9e3RoaXMuc3RhdGUucmVkdWNlcn0gcGxhY2Vob2xkZXI9XCJFbnRlciBzdGF0ZSByZWR1Y2VyXCIgdGl0bGU9XCJSZWR1Y2VyXCIvPlxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG9uQ2hhbmdlPXt1cGRhdGVFdmVudFR5cGUuYmluZCh0aGlzKX0gY2hlY2tlZD17dGhpcy5zdGF0ZS5wdWJsaXNoYWJsZT8gXCJjaGVja2VkXCI6IFwiXCJ9Lz5cbiAgICAgICAgICAgICAgICAgICAgUHVibGlzaGFibGVcbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAge3B1Ymxpc2hOYW1lfVxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3B1Ymxpc2hFdmVudC5iaW5kKHRoaXMpfSBpZD1cInNhdmVFdmVudFwiPjxpIGNsYXNzTmFtZT1cImZhcyBmYS1zYXZlXCI+PC9pPlNhdmU8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtkZWxldGVFdmVudC5iaW5kKHRoaXMpfSBpZD1cImRlbGV0ZUV2ZW50XCI+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLXRyYXNoXCI+PC9pPkRlbGV0ZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFdmVudDtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnNvbGV7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDE1MHB4O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbn1cXG5cXG4uZXZlbnQgeyBcXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMzMzMzMzO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxufVxcblxcbi5pbmZvIHtcXG4gICAgY29sb3I6IHllbGxvd2dyZWVuO1xcbn1cXG5cXG5sYWJlbCB7XFxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XFxufVxcblxcbi5ldmVudCBpbnB1dCB7XFxuICAgIG1hcmdpbi1sZWZ0OjBweDtcXG59XFxuXFxuLmV2ZW50IHRleHRhcmVhIHtcXG4gICAgbWFyZ2luLXRvcDogOHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJpbXBvcnQgTWVzc2FnZXNDb21wb25lbnQgZnJvbSBcIi4uL01lc3NhZ2VzQ29tcG9uZW50XCI7XG5cbmZ1bmN0aW9uIGdldE1lc3NhZ2VzICgpIHtcbiAgICBsZXQgbWVzc2FnZXMgPSBbe1xuICAgICAgICB0eXBlOiBcImluZm9cIixcbiAgICAgICAgdGV4dDogXCIjMSBJTkZPOiBTZWxlY3QgYW55IGVsZW1lbnQgaW4gdGhlIGxlZnQgbW9zdCBwYW5lKGVkaXRvciBwYW5lKSB0byBzZWUgaXRzIGNvbnRlbnRcIlxuICAgIH0se1xuICAgICAgICB0eXBlOiBcImluZm9cIixcbiAgICAgICAgdGV4dDogXCIjMiBJTkZPOiBDbGljayBvbiAnQWRkJyB0byBhZGQgYW4gY29tcG9uZW50XCJcbiAgICB9XVxuXG4gICAgcmV0dXJuIDxNZXNzYWdlc0NvbXBvbmVudCBtZXNzYWdlcz17bWVzc2FnZXN9IC8+O1xufVxuXG5leHBvcnQgZGVmYXVsdCBnZXRNZXNzYWdlczsiLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb25zb2xle1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHJpZ2h0OiAxNTBweDtcXG4gICAgYm90dG9tOiA1MHB4O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbn1cXG5cXG5cXG4uaW5mbyB7XFxuICAgIGNvbG9yOiB5ZWxsb3dncmVlbjtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNsYXNzIE1lc3NhZ2VDb21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0ICBtZXNzYWdlID0gdGhpcy5wcm9wcy5tZXNzYWdlO1xuXG4gICAgICAgIGlmKG1lc3NhZ2UudHlwZSA9PT0gXCJlcnJvclwiIHx8IG1lc3NhZ2UudHlwZT09PSBcImluZm9cIikge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVbbWVzc2FnZS50eXBlXX0+XG4gICAgICAgICAgICAgICAgICAgIDxjb2RlPnttZXNzYWdlLnRleHR9PC9jb2RlPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UudHlwZSArIFwiIGlzIHVuaWRlbnRpZmllZCBtZXNzYWdlIHR5cGUgZm9yIDxNZXNzYWdlc0NvbXBvbmVudC8+LiBQbGVhc2UgdXNlIGVpdGhlciAnZXJyb3InIG9yICdpbmZvJyBvbmx5LiBJZiB5b3UgcmVxdWlyZSBhIGRpZmZlcmVudCB0eXBlLCByYWlzZSBhbiBpc3N1ZSwgc2VuZCBhIFBSXCIpXG4gICAgICAgICAgICByZXR1cm4gIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnNvbGVcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlZXJyb3JcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2RlPntcImVycm9yIDogdW5pZGVudGlmaWVkIG1lc3NhZ2UgdHlwZS4gUGxlYXNlIHVzZSBlaXRoZXIgZXJyb3IvIGluZm8gb25seVwifTwvY29kZT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgTWVzc2FnZUNvbXBvbmVudDsiLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlxcbi5lcnJvciB7XFxuICAgIGNvbG9yOiByZWQ7XFxufVxcblxcblxcbi5pbmZvIHtcXG4gICAgY29sb3I6IHllbGxvd2dyZWVuO1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJcbiAgZnVuY3Rpb24gIHVwZGF0ZUV2ZW50TmFtZShlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbmFtZTogZS50YXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgZnVuY3Rpb24gIHVwZGF0ZVJlZHVjZXIoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHJlZHVjZXI6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gZnVuY3Rpb24gICB1cGRhdGVQdWJsaXNoTmFtZShlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcHVibGlzaE5hbWU6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gIGZ1bmN0aW9uICB1cGRhdGVFdmVudFR5cGUoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcHVibGlzaGFibGU6IGUuY3VycmVudFRhcmdldC5jaGVja2VkXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgICAgIHVwZGF0ZUV2ZW50TmFtZSxcbiAgICAgICAgdXBkYXRlRXZlbnRUeXBlLFxuICAgICAgICB1cGRhdGVQdWJsaXNoTmFtZSxcbiAgICAgICAgdXBkYXRlRXZlbnRUeXBlLFxuICAgICAgICB1cGRhdGVSZWR1Y2VyXG4gICAgfSIsImV4cG9ydCBmdW5jdGlvbiBwdWJsaXNoRXZlbnQoKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25TYXZlKHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuc3RhdGUubmFtZSxcbiAgICAgICAgICAgIHJlZHVjZXI6IHRoaXMuc3RhdGUucmVkdWNlcixcbiAgICAgICAgICAgIGluZGV4OiB0aGlzLnByb3BzLmluZGV4LFxuICAgICAgICAgICAgcHVibGlzaGFibGU6IHRoaXMuc3RhdGUucHVibGlzaGFibGUsXG4gICAgICAgICAgICBwdWJsaXNoTmFtZTogdGhpcy5zdGF0ZS5wdWJsaXNoTmFtZVxuICAgICAgICB9KVxuICAgIH1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUV2ZW50KCl7XG4gICAgICAgIHRoaXMucHJvcHMuZGVsZXRlRXZlbnQodGhpcy5wcm9wcy5pbmRleCk7XG4gICAgfSIsImltcG9ydCBNZXNzYWdlc0NvbXBvbmVudCBmcm9tIFwiLi4vTWVzc2FnZXNDb21wb25lbnRcIjtcblxuZnVuY3Rpb24gZ2V0TWVzc2FnZXMgKGVycm9yKSB7XG5cbiAgICBsZXQgbWVzc2FnZXMgPSBbe1xuICAgICAgICB0eXBlOlwiZXJyb3JcIixcbiAgICAgICAgdGV4dDpcIkVSUk9SIDogXCIrZXJyb3IrXCJkZXZlbG9wZXIgbG9nOiBsb29rIGluIGNvbnNvbGUgcmVsYXRlZCB0byBldmFsXCJcbiAgICB9XVxuICAgIHJldHVybiAoXG4gICAgICAgIDxNZXNzYWdlc0NvbXBvbmVudCBtZXNzYWdlcyA9IHttZXNzYWdlc30vPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0TWVzc2FnZXM7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZXZlbnRzIHtcXG4gICAgYm9yZGVyOjFweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHJpZ2h0OiAxNTBweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUV2ZW50KGV2ZW50KSB7XG4gICAgICAgIGxldCBlbGVtZW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmVsZW1lbnQpKVxuICAgICAgICBldmVudC5pZCA9IHRoaXMuc3RhdGUuc2VsZWN0ZWRUYWcuc3BsaXQoXCItXCIpWzFdO1xuICAgICAgICAvLyBBZGQgXG4gICAgICAgIGlmIChldmVudC5pbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBlbGVtZW50LmV2ZW50cy5wdXNoKGV2ZW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEVkaXRcbiAgICAgICAgICAgIGVsZW1lbnQuZXZlbnRzW2V2ZW50LmluZGV4XSA9IGV2ZW50O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5wcm9wcy5vbkV2ZW50c1VwZGF0ZShlbGVtZW50LmV2ZW50cyk7XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdGVkVGFnQ2hhbmdlZChlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2VsZWN0ZWRUYWc6IGUuY3VycmVudFRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGV4cG9ydCBmdW5jdGlvbiBkZWxldGVFdmVudChpbmRleCkge1xuXG4gICAgICAgIC8vIEdldCBjdXJyZW50IGNvbXBvbmVudC5cbiAgICAgICAgbGV0IGVsZW1lbnQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUuZWxlbWVudCkpO1xuXG4gICAgICAgIC8vIFJlbW92ZSB0aGUgZXZlbnQgdG8gYmUgZGVsZXRlZC5cbiAgICAgICAgZWxlbWVudC5ldmVudHMuc3BsaWNlKGluZGV4LCAxKTtcblxuICAgICAgICAvLyBVcGRhdGUgZWxlbWVudHMgd2l0aCBuZXcgZXZlbnRzLlxuICAgICAgICB0aGlzLnByb3BzLm9uRXZlbnRzVXBkYXRlKGVsZW1lbnQuZXZlbnRzKTtcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gdXBkYXRlQ29uZmlndXJhdGlvbihjb25maWcpe1xuICAgICAgICB0aGlzLnByb3BzLm9uQ29uZmlnVXBkYXRlKGNvbmZpZyk7XG4gICAgfSIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBDb21wb25lbnRzLiBcblxuLy8gcHJpdmF0ZSAtIGV4cGFuZC9jb2xsYXBzZSBcbi8vIHB1YmxpYyAgLSBvbkNsaWNrIC0gU2hvdyBsaXN0IG9mIGNsYXNzZXMuIFxuaW1wb3J0IFRhZ3MgZnJvbSBcIi4vVGFnc1wiO1xuXG4vLyBTdHlsZXMuXG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmNsYXNzIFRhZ0V4cGxvcmVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IG5vZGVUcmVlID0gdGhpcy5wcm9wcy5ub2RlLnJlc3VsdDtcblxuICAgICAgICBpZihub2RlVHJlZT09PXVuZGVmaW5lZCB8fCB0aGlzLnByb3BzLm5vZGUuZXJyb3IhPT11bmRlZmluZWQpe1xuICAgICAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlRhZ0V4cGxvcmVyPC9kaXY+XG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInRhZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRhZ3Mgbm9kZT17bm9kZVRyZWV9Lz5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUYWdFeHBsb3JlcjtcbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXN9IGZyb20gXCIuLi91dGlsaXRpZXMvY29udmVydEpTT050b0hUTUxBdHRyaWJ1dGVzXCI7XG5jbGFzcyBUYWdzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICB2YXIgbm9kZSA9IHRoaXMucHJvcHMubm9kZTtcbiAgICAgICAgdmFyIHByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgbm9kZS5wcm9wcyk7IFxuICAgICAgICBcbiAgICAgICAgZGVsZXRlIHByb3BzLmNoaWxkcmVuXG5cbiAgICAgICAgcHJvcHMgPSBjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMocHJvcHMpO1xuXG4gICAgICAgIGlmKCFub2RlKXtcbiAgICAgICAgICAgIHJldHVybiAoPHNwYW4+bnVsbDwvc3Bhbj4pXG4gICAgICAgIH1cblxuICAgICAgICAvLyBDaGVjayBpZiBpdCBjb250YWlucyBjaGlsZHJlbi5cbiAgICAgICAgaWYobm9kZS5wcm9wcyAmJiBBcnJheS5pc0FycmF5KG5vZGUucHJvcHMuY2hpbGRyZW4pKXtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUucHJvcHMuY2hpbGRyZW4ubWFwKChjaGlsZCxpbmRleCk9PjxUYWdzIGtleT17aW5kZXh9IG5vZGU9e2NoaWxkfS8+KTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZX0gJHtwcm9wc30+YH1cbiAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgICAgICB7YDwvJHtub2RlLnR5cGV9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgbm9kZSBjb250YWlucyBvbmx5IG9uZSBjaGlsZHJlbiwganN4IGdldCB0cmFuc3BpbGVkIHRvIG9iamVjdCByYXRoZXIgdGhhbiBhcnJheS5cbiAgICAgICAgZWxzZSBpZih0eXBlb2Ygbm9kZS5wcm9wcy5jaGlsZHJlbiA9PT0gXCJvYmplY3RcIil7XG4gICAgICAgICAgICBsZXQgY2hpbGQgPSBub2RlLnByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgIHtgPCR7bm9kZS50eXBlfSAke3Byb3BzfT5gfVxuICAgICAgICAgICAgICAgICAgICAgICAgPFRhZ3Mga2V5PXtpbmRleH0gbm9kZT17Y2hpbGR9Lz5cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9ICAgICAgICAvLyBpZiBub2RlIGNvbnRhaW5zIG9ubHkgb25lIGNoaWxkcmVuLCBqc3ggZ2V0IHRyYW5zcGlsZWQgdG8gb2JqZWN0IHJhdGhlciB0aGFuIGFycmF5LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnByb3BzLmNoaWxkcmVuID09PSBcInN0cmluZ1wiKXtcbiAgICAgICAgICAgIGxldCBjaGlsZCA9IG5vZGUucHJvcHMuY2hpbGRyZW47XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PiR7Y2hpbGR9PC8ke25vZGUudHlwZX0+YH1cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBuZXN0ZWQgY29tcG9uZW50LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnR5cGUgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGUubmFtZX0+YH1cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlLm5hbWV9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjaGVjayBpZiBub2RlIGlzIG9iamVjdFxuICAgICAgICBpZih0eXBlb2Ygbm9kZS50eXBlID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZS5pZH0+YH1cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlLmlkfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PmB9XG4gICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGV9XG4gICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFnczsiLCJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMocHJvcHMpIHtcbiAgICBsZXQgc3RyaW5nID0gSlNPTi5zdHJpbmdpZnkocHJvcHMpO1xuICAgIE9iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKHByb3A9PnByb3BzW3Byb3BdPWAnJHtwcm9wc1twcm9wXX0nYCk7XG4gICAgLy8gRG9udCBjb25zaWRlciB0aGUgZW1wdHkgb2JqZWN0cy5cbiAgICBpZihzdHJpbmcubGVuZ3RoPjIpe1xuICAgICAgICBsZXQgbGlzdCA9IEpTT04uc3RyaW5naWZ5KHByb3BzKS5zcGxpdCgnXCInKS5tYXAoaXRlbT0+IHtcbiAgICAgICAgICAgIGlmKGl0ZW0uaW5jbHVkZXMoXCJ7XCIpIHx8IGl0ZW0uaW5jbHVkZXMoXCJ9XCIpKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoaXRlbT09PVwiOlwiKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCI9XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKGl0ZW09PT1cIixcIil7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiIFwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgfSkuZmlsdGVyKEJvb2xlYW4pXG5cbiAgICAgICAgcmV0dXJuIGxpc3Quam9pbihcIlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGFncyB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG59XFxuXFxuLnRhZ3MgbGkge1xcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBSdWxlIGZyb20gXCIuL1J1bGVcIjtcblxuaW1wb3J0IHtnZXRPYmplY3RGb3JtYXR9IGZyb20gXCIuL3V0aWxcIjtcbi8vIFN0eWxlcy5cblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgU3R5bGVFeHBsb3JlciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBzdHlsZSA9IHRoaXMucHJvcHMuc3R5bGU7XG4gICAgICAgIGxldCBydWxlcyA9IGdldE9iamVjdEZvcm1hdChzdHlsZSkubWFwKHJ1bGU9PjxSdWxlIHJ1bGU9e3J1bGV9IC8+KTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlN0eWxlRXhwbG9yZXI8L2Rpdj5cbiAgICAgICAgICAgICAgICB7cnVsZXN9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN0eWxlRXhwbG9yZXI7XG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuaW1wb3J0IFNlbGVjdG9yIGZyb20gXCIuL1NlbGVjdG9yXCI7XG5pbXBvcnQgRGVjbGFyYXRpb24gZnJvbSBcIi4vRGVjbGFyYXRpb25cIjtcblxuY2xhc3MgUnVsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJydWxlcyBjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8U2VsZWN0b3IgbmFtZT17T2JqZWN0LmtleXModGhpcy5wcm9wcy5ydWxlKVswXX0vPntcIiB7XCJ9XG4gICAgICAgICAgICAgICAgPERlY2xhcmF0aW9uIGRlY2xhcmF0aW9uPXtPYmplY3QudmFsdWVzKHRoaXMucHJvcHMucnVsZSlbMF19Lz5cbiAgICAgICAgICAgICAgICB7XCJ9XCJ9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJ1bGU7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5ydWxlcyB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG59XFxuXFxuLnJ1bGVzIGlucHV0IHtcXG4gICAgYm9yZGVyOiAwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG5jbGFzcyBTZWxlY3RvciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdXBkYXRlU2VsZWN0b3IoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbmFtZTogZS5jdXJyZW50VGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgdmFsdWVDaGFuZ2VkKCl7XG4gICAgICAgIGlmKHRoaXMucHJvcHMubmFtZSE9PXRoaXMuc3RhdGUubmFtZSl7XG4gICAgICAgICAgICAvLyB0aGVuIHNlbGVjdG9yIG5hbWUgY2hhbmdlZFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgdmFsdWU9e3RoaXMuc3RhdGUubmFtZX0gb25CbHVyPXt0aGlzLnZhbHVlQ2hhbmdlZC5iaW5kKHRoaXMpfSBvbkNoYW5nZT17dGhpcy51cGRhdGVTZWxlY3Rvci5iaW5kKHRoaXMpfS8+XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTZWxlY3RvcjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBQcm9wZXJ0eSBmcm9tIFwiLi9Qcm9wZXJ0eVwiO1xuaW1wb3J0IFZhbHVlIGZyb20gXCIuL1ZhbHVlXCI7XG5cbmNsYXNzIERlY2xhcmF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZWNsYXJhdGlvblwiPlxuICAgICAgICAgICAgICAgIHtPYmplY3Qua2V5cyh0aGlzLnByb3BzLmRlY2xhcmF0aW9uKS5tYXAodmFsdWU9PiA8ZGl2PjxQcm9wZXJ0eSB2YWx1ZT17dmFsdWV9Lz46PFZhbHVlIHZhbHVlPXt0aGlzLnByb3BzLmRlY2xhcmF0aW9uW3ZhbHVlXX0vPjwvZGl2Pil9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERlY2xhcmF0aW9uO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZGVjbGFyYXRpb257XFxuICAgIHBhZGRpbmctbGVmdDoxMHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgUHJvcGVydHkgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxzcGFuPnt0aGlzLnByb3BzLnZhbHVlfTwvc3Bhbj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb3BlcnR5O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgVmFsdWUgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxzcGFuPnt0aGlzLnByb3BzLnZhbHVlfTwvc3Bhbj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZhbHVlO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIl0pO1xuXG4iLCJcbmZ1bmN0aW9uIGNvbnZlcnRUb1N0cmluZyhwcm9wZXJ0eSl7XG4gICAgcmV0dXJuIGBcIiR7cHJvcGVydHkuc3BsaXQoXCI6XCIpWzBdLnRyaW0oKX1cIjpcIiR7cHJvcGVydHkuc3BsaXQoXCI6XCIpWzFdLnRyaW0oKX1cImBcbn1cblxuZnVuY3Rpb24gY29udmVydFRvT2JqZWN0KHJ1bGUpe1xuXG4gICAgdmFyIHNlbGVjdG9yID0gcnVsZS5zcGxpdChcIntcIilbMF0udHJpbSgpO1xuICAgIHZhciBwcm9wZXJ0aWVzID0gJ3snK3J1bGUuc3BsaXQoXCJ7XCIpWzFdLnNwbGl0KFwifVwiKVswXS5zcGxpdChcIjtcIikubWFwKHM9PnMudHJpbSgpKS5maWx0ZXIoQm9vbGVhbikubWFwKGNvbnZlcnRUb1N0cmluZykuam9pbihcIixcIikgKyd9JztcblxuICAgIHZhciBvYmogPSB7fTtcbiAgICBvYmpbc2VsZWN0b3JdID0gSlNPTi5wYXJzZShwcm9wZXJ0aWVzKVxuICAgIHJldHVybiBvYmo7XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE9iamVjdEZvcm1hdChzdHlsZSl7XG4gICAgdmFyIHJ1bGVzID0gc3R5bGUuc3BsaXQoXCJ9XCIpLmZpbHRlcihCb29sZWFuKS5tYXAoaXRlbT0+aXRlbStcIn1cIik7XG4gICAgcmV0dXJuIHJ1bGVzLm1hcChjb252ZXJ0VG9PYmplY3QpO1xufVxuXG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiXSk7XG5cbiJdLCJzb3VyY2VSb290IjoiIn0=