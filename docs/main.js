!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=13)}([function(e,t,n){"use strict";e.exports=n(14)},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(i=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}var i;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];null!=a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];null!=i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){var r,o,a={},i=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),u=null,s=0,c=[],f=n(21);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=a[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(b(r.parts[i],t))}else{var l=[];for(i=0;i<r.parts.length;i++)l.push(b(r.parts[i],t));a[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),c.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return y(t,e.attrs),m(e,t),t}function y(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function b(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var i=s++;n=u||(u=v(t)),r=x.bind(null,n,i,!1),o=x.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var i=n[o];(l=a[i.id]).refs--,r.push(l)}e&&d(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete a[l.id]}}}};var g,w=(g=[],function(e,t){return g[e]=t,g.filter(Boolean).join("\n")});function x(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.popHistory=function(){var e=a("ui-editor-history");if(!e)return;var t=e.pop();if(!e)return;i("ui-editor-history",e,!0),i("ui-editor",t,!0)},t.readData=a,t.writeData=i,t.readComponent=function(e){var t=a("ui-editor");if(!t)return;return t.find(function(t){return t.name===e})},t.writeComponent=function(e,t){if(!Array.isArray(e)&&e.name){var n=a("ui-editor"),r=n.findIndex(function(t){return t.name===e.name});t&&(e.markup=function(e){for(var t=(r=e,o="data-uuid",r.split(o).length-1),n=0;n<t;n++)e=e.replace(' data-uuid="'+n+'"',"");var r,o;return e}(e.idMarkup)),n[r]=e,i("ui-editor",n)}};var r=n(30);function o(e){var t=(0,r.getStartTags)(e.markup);e.idMarkup=e.markup;var n=t.map(function(e,t){return e.replace(">",' data-uuid="'+t+'">')});t.forEach(function(t,r){e.idMarkup=e.idMarkup.replace(t,n[r])})}function a(e){return console.log("READ"),window.components||(window.components=JSON.parse(localStorage.getItem(e))),window.components.length?("ui-editor"===e&&window.components.forEach(o),JSON.parse(JSON.stringify(window.components))):[]}function i(e,t,n){console.log("WRITE"),window.components=t,localStorage.setItem(e,JSON.stringify(t)),n||function(e){window.editorHistory=a("ui-editor-history"),editorHistory.push(e),localStorage.setItem("ui-editor-history",JSON.stringify(editorHistory))}(t)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkNestedComponents=i,t.saveComponentsToWindow=function(e){e.forEach(l)},t.getNestedComponents=function e(t){var n=(0,a.readData)("ui-editor");var r=[t];if(i(t.markup)){var o=n.filter(function(e){return t.markup.includes(e.name)}),l=o.map(e).flat(3);r.push.apply(r,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(l))}return r.filter(function(e){return e&&e.markup})},t.getChildComponents=function(e){return(0,a.readData)("ui-editor").filter(function(t){return e.includes(t.name)})};var r=n(8),o=n(9),a=n(3);function i(e){return(0,a.readData)("ui-editor").filter(function(t){return e.includes(t.name)}).length>0}function l(e){(0,o.createStylesheet)(e.style,e.name),window[e.name]=(0,r.createComponent)(e)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))o.call(n,c)&&(u[c]=n[c]);if(r){l=r(n);for(var f=0;f<l.length;f++)a.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateselectedIndex=function(e){var t=e.currentTarget.innerText.split("\n")[0],n=this.state.elements.find(function(e){return e.name===t}),r=this.state.elements.findIndex(function(e){return e.name===t});window.selectedcomponentname=n.name,this.setState({selectedIndex:r,name:n.name,markup:n.markup})},t.saveElement=function(e){var t=Array.from(this.state.elements),n=t.find(function(t){return t.name===e.name}),o=this.state.selectedIndex;if(n){var a=t[this.state.selectedIndex];a=Object.assign(a,e),t[this.state.selectedIndex]=a}else{var i={name:e.name,markup:e.markup,events:[],state:e.state||"{}",style:e.style,children:[],id:Math.ceil(1e3*Math.random()),config:"{}"};o=t.length-1,t.push(i)}this.setState({elements:t,element:{name:e.name,markup:e.markup,style:e.style,state:e.state,events:e.events||[]},selectedIndex:o}),(0,r.writeData)("ui-editor",t)},t.updateEvent=function(e){var t=Object.assign({},this.state).elements;t[this.state.selectedIndex].events=e,this.setState({elements:t}),(0,r.writeData)("ui-editor",t)},t.onDelete=function(e){var t=e.target.parentElement.parentElement.innerText.split("\n")[0];if(this.state.elements.find(function(e){return e.name===t}).length<1)return;var n=Array.from(this.state.elements),o=n.findIndex(function(e){return e.name===t});n.splice(o,1),this.setState({elements:n}),(0,r.writeData)("ui-editor",n)},t.updateConfig=function(e){var t=Object.assign({},this.state).elements,n=t.find(function(t){return t.name===e.parentName}),o=t.find(function(t){return t.name===e.childName});n.state=JSON.parse(n.state),void 0===n.config?n.config={}:n.config=JSON.parse(n.config);n.config[o.name]=n.config[o.name]||{},n.config[o.name].overideState=e.override,n.config[o.name].overideState?n.state[o.name]=JSON.parse(o.state):(delete n.state[o.name],delete n.config[o.name]);n.state=JSON.stringify(n.state),n.config=JSON.stringify(n.config),this.setState({elements:t}),(0,r.writeData)("ui-editor",t)};var r=n(3)},function(module,exports,__webpack_require__){"use strict";var _codeModifier=__webpack_require__(32),_nestedComponentSetup=__webpack_require__(4);function getComponentString(e,t){if(e.idMarkup[3])return convertToReactcomponent(e,t)}function createComponent(component){var componentString=getComponentString(component,{"drag-drop-feature":!0});return eval(Babel.transform(componentString,{presets:["react"],plugins:["transform-es2015-classes"]}).code)}function convertToReactcomponent(e,t){var n="markup";t&&t["drag-drop-feature"]&&(n="idMarkup"),e.events.forEach(function(e){e.id=e.id.replace("-","")});var r=function(t){var n=JSON.parse(e.config);return Object.keys(n).forEach(function(e){n[e].overideState&&(t=t.replace(e,e+" state={this.state."+e+"}"))}),t}(function(t,n){n.forEach(function(e){var n='id="'+e.id+'"';t=t.replace(n,n+" "+e.name+"={this."+(e.id+e.name)+".bind(this)}")});var r=(0,_nestedComponentSetup.getChildComponents)(t);return r.length>0?(r.forEach(function(n){var r=n.events.filter(function(e){return!0===e.publishable});if(0!=r.length){var o=void 0;r.forEach(function(t){o=e.events.find(function(e){return e.name===t.publishName})});var a=(0,_codeModifier.codeModifier)(o.reducer,e),i=o.name+"={function(e){"+a+"}.bind(this)}";t=e[t].replace(n.name,n.name+" "+i)}}),t.split("{state.").join("{this.state.")):t.split("{state.").join("{this.state.")}(function(e){return e[n].replace(">"," data-name='"+e.name+'\' {...this.props} draggable="true" onDragStart={window.eventCallbacks.handleDrag}>{this.props.children}')}(e),e.events)),o=e.events.map(function(t){var n=t.id+t.name,r=(0,_codeModifier.codeModifier)(t.reducer,e);return!0===t.publishable?"\n                    "+n+" (e) {\n                        "+r+"\n                        e.state = state;\n                        debugger;(1)\n                        this.props."+t.publishName+"? this.props."+t.publishName+"(e):null;\n                    }\n                    ":"\n                    "+n+" (e) {\n                        "+r+"\n                    }"}).join("\n");return"(\n    class "+e.name.split(" ").join("")+" extends Component {\n    \n        constructor(props) {\n            super(props);\n            this.state = this.props.state || "+e.state+";\n        }\n    \n        "+o+"\n    \n        render() {\n    \n            return ("+r+")\n        }\n    })\n    "}module.exports={createComponent:createComponent,getComponentString:getComponentString}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createStylesheet=function(e,t){[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(document.querySelectorAll("[data-component-name='ParentComponent']"))).forEach(function(e){e.remove()});var n=document.createElement("style");n.setAttribute("data-component-name",t),n.type="text/css",n.innerHTML=e,document.body.appendChild(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o);n(49);var i=l(n(51));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.messages;return a.default.createElement("div",{className:"console"},e.map(function(e,t){return a.default.createElement(i.default,{key:t,message:e})}))}}]),t}();t.default=u},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getNodeTree=getNodeTree;var _react=__webpack_require__(0),_react2=_interopRequireDefault(_react),_nestedComponentSetup=__webpack_require__(4),_localStorage=__webpack_require__(3);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function getNodeTree(element,jsx,style,state,events){var result=void 0,error=void 0;try{var nestedComponents=(0,_nestedComponentSetup.getNestedComponents)(element);nestedComponents.length>0&&(0,_nestedComponentSetup.saveComponentsToWindow)(nestedComponents),result=eval(Babel.transform(jsx,{presets:["react"]}).code)}catch(e){error=e}finally{return _defineProperty({error:error,result:result},"result",result)}}window.React=_react2.default,window.Component=_react2.default.Component,window.saveVariants=function(e,t,n,r){var o=(0,_localStorage.readData)("ui-editor");if(e===t){var a=o.find(function(t){return t.name===e.name});a.variants=a.variants||[a.state],a.variants.push(n),a.variants=[].concat(_toConsumableArray(new Set(a.variants.map(JSON.stringify)))).map(JSON.parse).filter(Boolean),(0,_localStorage.writeData)("ui-editor",o)}else{var i=o.find(function(t){return t.name===e.name}),l=o.find(function(e){return e.name===t.name});i.variants=i.variants||[JSON.parse(i.state)];var u=JSON.parse(i.state),s={};s[l.name]=n,u=Object.assign(u,s),i.variants.push(u),i.variants=[].concat(_toConsumableArray(new Set(i.variants.map(JSON.stringify)))).map(JSON.parse).filter(Boolean),(0,_localStorage.writeData)("ui-editor",o)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createComponent=function(e,t,n){e.idMarkup=e.idMarkup.replace('"'+n+'">','"'+n+'"><'+t+"></"+t+">"),(0,r.writeComponent)(e,!0)},t.deleteComponent=function(e,t,n){var a='data-uuid="'+n+'"';e.idMarkup=(0,o.deleteSubComponent)(e.idMarkup,a,t),(0,r.writeComponent)(e,!0)},t.moveComponent=function(){};var r=n(3),o=n(72)},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o),i=u(n(15));n(6);var l=u(n(22));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("div",null,a.default.createElement(l.default,null))}}]),t}();i.default.render(a.default.createElement(s,null),document.getElementById("index"))},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},w={};function x(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||g}function _(){}function E(e,t,n){this.props=e,this.context=t,this.refs=w,this.updater=n||g}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&b("85"),this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},_.prototype=x.prototype;var k=E.prototype=new _;k.constructor=E,r(k,x.prototype),k.isPureReactComponent=!0;var S={current:null},T={current:null},C=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)C.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:T.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var j=/\/+/g,M=[];function R(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case a:case i:u=!0}}if(u)return r(o,t,""===n?"."+U(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+U(l=t[s],s);u+=e(l,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=y&&t[y]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(l=t.next()).done;)u+=e(l=l.value,c=n+U(l,s++),r,o);else"object"===l&&b("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function U(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(j,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(j,"$&/")+"/"),D(e,z,t=R(t,a,r,o)),I(t)}function F(){var e=S.current;return null===e&&b("321"),e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,A,t=R(null,null,t,n)),I(t)},count:function(e){return D(e,function(){return null},null)},toArray:function(e){var t=[];return L(e,t,null,function(e){return e}),t},only:function(e){return N(e)||b("143"),e}},createRef:function(){return{current:null}},Component:x,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return F().useCallback(e,t)},useContext:function(e,t){return F().useContext(e,t)},useEffect:function(e,t){return F().useEffect(e,t)},useImperativeHandle:function(e,t,n){return F().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return F().useLayoutEffect(e,t)},useMemo:function(e,t){return F().useMemo(e,t)},useReducer:function(e,t,n){return F().useReducer(e,t,n)},useRef:function(e){return F().useRef(e)},useState:function(e){return F().useState(e)},Fragment:l,StrictMode:u,Suspense:m,createElement:P,cloneElement:function(e,t,n){null==e&&b("267",e);var o=void 0,i=r({},e.props),l=e.key,u=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,s=T.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)C.call(t,o)&&!O.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];i.children=c}return{$$typeof:a,type:e.type,key:l,ref:u,props:i,_owner:s}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:T,assign:r}},V={default:W},B=V&&W||V;e.exports=B.default||B},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(16)},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),a=n(17);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var l=!1,u=null,s=!1,c=null,f={onError:function(e){l=!0,u=e}};function d(e,t,n,r,o,a,i,s,c){l=!1,u=null,function(e,t,n,r,o,a,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||i("96",e),!y[n])for(var r in t.extractEvents||i("97",e),y[n]=t,n=t.eventTypes){var o=void 0,a=n[r],l=t,u=r;b.hasOwnProperty(u)&&i("99",u),b[u]=a;var s=a.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&v(s[o],l,u);o=!0}else a.registrationName?(v(a.registrationName,l,u),o=!0):o=!1;o||i("98",r,e)}}}function v(e,t,n){g[e]&&i("100",e),g[e]=t,w[e]=t.eventTypes[n].dependencies}var y=[],b={},g={},w={},x=null,_=null,E=null;function k(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),function(e,t,n,r,o,a,f,p,m){if(d.apply(this,arguments),l){if(l){var h=u;l=!1,u=null}else i("198"),h=void 0;s||(s=!0,c=h)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function T(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)k(e,t[r],n[r]);else t&&k(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var P={injectEventPluginOrder:function(e){p&&i("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&i("102",t),m[t]=r,n=!0)}n&&h()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function j(e){if(null!==e&&(C=S(C,e)),e=C,C=null,e&&(T(e,O),C&&i("95"),s))throw e=c,s=!1,c=null,e}var M=Math.random().toString(36).slice(2),R="__reactInternalInstance$"+M,I="__reactEventHandlers$"+M;function D(e){if(e[R])return e[R];for(;!e[R];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[R]).tag||6===e.tag?e:null}function U(e){return!(e=e[R])||5!==e.tag&&6!==e.tag?null:e}function A(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function z(e){return e[I]||null}function L(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function F(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=L(t);for(t=n.length;0<t--;)F(n[t],"captured",e);for(t=0;t<n.length;t++)F(n[t],"bubbled",e)}}function V(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&V(e._targetInst,null,e)}function H(e){T(e,W)}var $=!("undefined"==typeof window||!window.document||!window.document.createElement);function J(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var q={animationend:J("Animation","AnimationEnd"),animationiteration:J("Animation","AnimationIteration"),animationstart:J("Animation","AnimationStart"),transitionend:J("Transition","TransitionEnd")},Q={},K={};function Y(e){if(Q[e])return Q[e];if(!q[e])return e;var t,n=q[e];for(t in n)if(n.hasOwnProperty(t)&&t in K)return Q[e]=n[t];return e}$&&(K=document.createElement("div").style,"AnimationEvent"in window||(delete q.animationend.animation,delete q.animationiteration.animation,delete q.animationstart.animation),"TransitionEvent"in window||delete q.transitionend.transition);var X=Y("animationend"),G=Y("animationiteration"),Z=Y("animationstart"),ee=Y("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:le,this.isPropagationStopped=le,this}function se(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=se,e.release=ce}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=$&&"CompositionEvent"in window,ve=null;$&&"documentMode"in document&&(ve=document.documentMode);var ye=$&&"TextEvent"in window&&!ve,be=$&&(!he||ve&&8<ve&&11>=ve),ge=String.fromCharCode(32),we={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function _e(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ee(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ke=!1;var Se={eventTypes:we,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(he)e:{switch(e){case"compositionstart":o=we.compositionStart;break e;case"compositionend":o=we.compositionEnd;break e;case"compositionupdate":o=we.compositionUpdate;break e}o=void 0}else ke?_e(e,n)&&(o=we.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=we.compositionStart);return o?(be&&"ko"!==n.locale&&(ke||o!==we.compositionStart?o===we.compositionEnd&&ke&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,ke=!0)),o=de.getPooled(o,t,n,r),a?o.data=a:null!==(a=Ee(n))&&(o.data=a),H(o),a=o):a=null,(e=ye?function(e,t){switch(e){case"compositionend":return Ee(t);case"keypress":return 32!==t.which?null:(xe=!0,ge);case"textInput":return(e=t.data)===ge&&xe?null:e;default:return null}}(e,n):function(e,t){if(ke)return"compositionend"===e||!he&&_e(e,t)?(e=ae(),oe=re=ne=null,ke=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return be&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(we.beforeInput,t,n,r)).data=e,H(t)):t=null,null===a?t:null===t?a:[a,t]}},Te=null,Ce=null,Oe=null;function Pe(e){if(e=_(e)){"function"!=typeof Te&&i("280");var t=x(e.stateNode);Te(e.stateNode,e.type,t)}}function Ne(e){Ce?Oe?Oe.push(e):Oe=[e]:Ce=e}function je(){if(Ce){var e=Ce,t=Oe;if(Oe=Ce=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Me(e,t){return e(t)}function Re(e,t,n){return e(t,n)}function Ie(){}var De=!1;function Ue(e,t){if(De)return e(t);De=!0;try{return Me(e,t)}finally{De=!1,(null!==Ce||null!==Oe)&&(Ie(),je())}}var Ae={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ae[e.type]:"textarea"===t}function Le(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Fe(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ve(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Be(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var He=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;He.hasOwnProperty("ReactCurrentDispatcher")||(He.ReactCurrentDispatcher={current:null});var $e=/^(.*)[\\\/]/,Je="function"==typeof Symbol&&Symbol.for,qe=Je?Symbol.for("react.element"):60103,Qe=Je?Symbol.for("react.portal"):60106,Ke=Je?Symbol.for("react.fragment"):60107,Ye=Je?Symbol.for("react.strict_mode"):60108,Xe=Je?Symbol.for("react.profiler"):60114,Ge=Je?Symbol.for("react.provider"):60109,Ze=Je?Symbol.for("react.context"):60110,et=Je?Symbol.for("react.concurrent_mode"):60111,tt=Je?Symbol.for("react.forward_ref"):60112,nt=Je?Symbol.for("react.suspense"):60113,rt=Je?Symbol.for("react.memo"):60115,ot=Je?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ke:return"Fragment";case Qe:return"Portal";case Xe:return"Profiler";case Ye:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Ge:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=lt(e.type);n=null,r&&(n=lt(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace($e,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var st=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new pt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(dt,e)||!ct.call(ft,e)&&(st.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function bt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function gt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function wt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=bt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function xt(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function _t(e,t){xt(e,t);var n=bt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?kt(e,t.type,n):t.hasOwnProperty("defaultValue")&&kt(e,t.type,bt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Et(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function kt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new pt(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Tt(e,t,n){return(e=ue.getPooled(St.change,e,t,n)).type="change",Ne(n),H(e),e}var Ct=null,Ot=null;function Pt(e){j(e)}function Nt(e){if(Be(A(e)))return e}function jt(e,t){if("change"===e)return t}var Mt=!1;function Rt(){Ct&&(Ct.detachEvent("onpropertychange",It),Ot=Ct=null)}function It(e){"value"===e.propertyName&&Nt(Ot)&&Ue(Pt,e=Tt(Ot,e,Le(e)))}function Dt(e,t,n){"focus"===e?(Rt(),Ot=n,(Ct=t).attachEvent("onpropertychange",It)):"blur"===e&&Rt()}function Ut(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Ot)}function At(e,t){if("click"===e)return Nt(t)}function zt(e,t){if("input"===e||"change"===e)return Nt(t)}$&&(Mt=Fe("input")&&(!document.documentMode||9<document.documentMode));var Lt={eventTypes:St,_isInputEventSupported:Mt,extractEvents:function(e,t,n,r){var o=t?A(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=jt:ze(o)?Mt?a=zt:(a=Ut,i=Dt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=At),a&&(a=a(e,t)))return Tt(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&kt(o,"number",o.value)}},Ft=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Vt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Bt(){return Vt}var Ht=0,$t=0,Jt=!1,qt=!1,Qt=Ft.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Bt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ht;return Ht=e.screenX,Jt?"mousemove"===e.type?e.screenX-t:0:(Jt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,qt?"mousemove"===e.type?e.screenY-t:0:(qt=!0,0)}}),Kt=Qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Yt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Yt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(i=Qt,l=Yt.mouseLeave,u=Yt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Kt,l=Yt.pointerLeave,u=Yt.pointerEnter,s="pointer");var c=null==a?o:A(a);if(o=null==t?o:A(t),(e=i.getPooled(l,a,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,a&&r)e:{for(o=r,s=0,i=t=a;i;i=L(i))s++;for(i=0,u=o;u;u=L(u))i++;for(;0<s-i;)t=L(t),s--;for(;0<i-s;)o=L(o),i--;for(;s--;){if(t===o||t===o.alternate)break e;t=L(t),o=L(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(s=a.alternate)||s!==o);)t.push(a),a=L(a);for(a=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)a.push(r),r=L(r);for(r=0;r<t.length;r++)V(t[r],"bubbled",e);for(r=a.length;0<r--;)V(a[r],"captured",n);return[e,n]}};function Gt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Gt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Gt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}l||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Ft.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ft.extend({key:function(e){if(e.key){var t=sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=Qt.extend({dataTransfer:null}),pn=Ft.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Bt}),mn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=Qt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[X,"animationEnd"],[G,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},bn={};function gn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,bn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){gn(e,!0)}),vn.forEach(function(e){gn(e,!1)});var wn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=bn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=bn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case X:case G:case Z:e=on;break;case ee:e=mn;break;case"scroll":e=Ft;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Kt;break;default:e=ue}return H(t=e.getPooled(o,t,n,r)),t}},xn=wn.isInteractiveTopLevelEventType,_n=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Le(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,l=0;l<y.length;l++){var u=y[l];u&&(u=u.extractEvents(r,t,a,o))&&(i=S(i,u))}j(i)}}var kn=!0;function Sn(e,t){if(!t)return null;var n=(xn(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!1)}function Tn(e,t){if(!t)return null;var n=(xn(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!0)}function Cn(e,t){Re(On,e,t)}function On(e,t){if(kn){var n=Le(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),_n.length){var r=_n.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ue(En,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>_n.length&&_n.push(e)}}}var Pn={},Nn=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function Mn(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=Nn++,Pn[e[jn]]={}),Pn[e[jn]]}function Rn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function In(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Dn(e,t){var n,r=In(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=In(r)}}function Un(){for(var e=window,t=Rn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Rn((e=t.contentWindow).document)}return t}function An(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function zn(e){var t=Un(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&An(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=Dn(n,a);var i=Dn(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Ln=$&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Vn=null,Bn=null,Hn=!1;function $n(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hn||null==Wn||Wn!==Rn(n)?null:("selectionStart"in(n=Wn)&&An(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(Fn.select,Vn,e,t)).type="select",e.target=Wn,H(e),e))}var Jn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=Mn(a),o=w.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?A(t):window,e){case"focus":(ze(a)||"true"===a.contentEditable)&&(Wn=a,Vn=t,Bn=null);break;case"blur":Bn=Vn=Wn=null;break;case"mousedown":Hn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hn=!1,$n(n,r);case"selectionchange":if(Ln)break;case"keydown":case"keyup":return $n(n,r)}return null}};function qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Qn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+bt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Yn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:bt(n)}}function Xn(e,t){var n=bt(t.value),r=bt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Gn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}P.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=z,_=U,E=A,P.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Lt,SelectEventPlugin:Jn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr=void 0,rr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ir=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=Mn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=w[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Tn("scroll",e);break;case"focus":case"blur":Tn("focus",e),Tn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Fe(o)&&Tn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function pr(){}var mr=null,hr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,gr="function"==typeof clearTimeout?clearTimeout:void 0,wr=a.unstable_scheduleCallback,xr=a.unstable_cancelCallback;function _r(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Er(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var kr=[],Sr=-1;function Tr(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Cr(e,t){kr[++Sr]=e.current,e.current=t}var Or={},Pr={current:Or},Nr={current:!1},jr=Or;function Mr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Rr(e){return null!=(e=e.childContextTypes)}function Ir(e){Tr(Nr),Tr(Pr)}function Dr(e){Tr(Nr),Tr(Pr)}function Ur(e,t,n){Pr.current!==Or&&i("168"),Cr(Pr,t),Cr(Nr,n)}function Ar(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",lt(t)||"Unknown",a);return o({},n,r)}function zr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,jr=Pr.current,Cr(Pr,t),Cr(Nr,Nr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=Ar(e,t,jr),r.__reactInternalMemoizedMergedChildContext=t,Tr(Nr),Tr(Pr),Cr(Pr,t)):Tr(Nr),Cr(Nr,n)}var Fr=null,Wr=null;function Vr(e){return function(t){try{return e(t)}catch(e){}}}function Br(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new Br(e,t,n,r)}function $r(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Jr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function qr(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)$r(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ke:return Qr(n.children,o,a,t);case et:return Kr(n,3|o,a,t);case Ye:return Kr(n,2|o,a,t);case Xe:return(e=Hr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=a,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Ge:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=Hr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function Qr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Kr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Ye:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Yr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Xr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),to(t,e)}function Zr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),to(t,e)}function eo(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function to(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function no(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ro=(new r.Component).refs;function oo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=xl(),o=Ka(r=Qi(r,e));o.payload=t,null!=n&&(o.callback=n),Vi(),Xa(e,o),Xi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=xl(),o=Ka(r=Qi(r,e));o.tag=Ba,o.payload=t,null!=n&&(o.callback=n),Vi(),Xa(e,o),Xi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=xl(),r=Ka(n=Qi(n,e));r.tag=Ha,null!=t&&(r.callback=t),Vi(),Xa(e,r),Xi(e,n)}};function io(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function lo(e,t,n){var r=!1,o=Or,a=t.contextType;return"object"==typeof a&&null!==a?a=Wa(a):(o=Rr(t)?jr:Pr.current,a=(r=null!=(r=t.contextTypes))?Mr(e,o):Or),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function uo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=ro;var a=t.contextType;"object"==typeof a&&null!==a?o.context=Wa(a):(a=Rr(t)?jr:Pr.current,o.context=Mr(e,a)),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(oo(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var co=Array.isArray;function fo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("309"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===ro&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function po(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Jr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Yr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=fo(e,t,n),r.return=e,r):((r=qr(n.type,n.key,n.props,null,e.mode,r)).ref=fo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Xr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Qr(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Yr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case qe:return(n=qr(t.type,t.key,t.props,null,e.mode,n)).ref=fo(e,null,t),n.return=e,n;case Qe:return(t=Xr(t,e.mode,n)).return=e,t}if(co(t)||it(t))return(t=Qr(t,e.mode,n,null)).return=e,t;po(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case qe:return n.key===o?n.type===Ke?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case Qe:return n.key===o?c(e,t,n,r):null}if(co(n)||it(n))return null!==o?null:f(e,t,n,r,null);po(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ke?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case Qe:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(co(r)||it(r))return f(t,e=e.get(n)||null,r,o,null);po(t,r)}return null}function h(o,i,l,u){for(var s=null,c=null,f=i,h=i=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(o,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),i=a(y,i,h),null===c?s=y:c.sibling=y,c=y,f=v}if(h===l.length)return n(o,f),s;if(null===f){for(;h<l.length;h++)(f=d(o,l[h],u))&&(i=a(f,i,h),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);h<l.length;h++)(v=m(f,o,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),i=a(v,i,h),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach(function(e){return t(o,e)}),s}function v(o,l,u,s){var c=it(u);"function"!=typeof c&&i("150"),null==(u=c.call(u))&&i("151");for(var f=c=null,h=l,v=l=0,y=null,b=u.next();null!==h&&!b.done;v++,b=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var g=p(o,h,b.value,s);if(null===g){h||(h=y);break}e&&h&&null===g.alternate&&t(o,h),l=a(g,l,v),null===f?c=g:f.sibling=g,f=g,h=y}if(b.done)return n(o,h),c;if(null===h){for(;!b.done;v++,b=u.next())null!==(b=d(o,b.value,s))&&(l=a(b,l,v),null===f?c=b:f.sibling=b,f=b);return c}for(h=r(o,h);!b.done;v++,b=u.next())null!==(b=m(h,o,v,b.value,s))&&(e&&null!==b.alternate&&h.delete(null===b.key?v:b.key),l=a(b,l,v),null===f?c=b:f.sibling=b,f=b);return e&&h.forEach(function(e){return t(o,e)}),c}return function(e,r,a,u){var s="object"==typeof a&&null!==a&&a.type===Ke&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case qe:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?a.type===Ke:s.elementType===a.type){n(e,s.sibling),(r=o(s,a.type===Ke?a.props.children:a.props)).ref=fo(e,s,a),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===Ke?((r=Qr(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=qr(a.type,a.key,a.props,null,e.mode,u)).ref=fo(e,r,a),u.return=e,e=u)}return l(e);case Qe:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Xr(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Yr(a,e.mode,u)).return=e,e=r),l(e);if(co(a))return h(e,r,a,u);if(it(a))return v(e,r,a,u);if(c&&po(e,a),void 0===a&&!s)switch(e.tag){case 1:case 0:i("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var ho=mo(!0),vo=mo(!1),yo={},bo={current:yo},go={current:yo},wo={current:yo};function xo(e){return e===yo&&i("174"),e}function _o(e,t){Cr(wo,t),Cr(go,e),Cr(bo,yo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Tr(bo),Cr(bo,t)}function Eo(e){Tr(bo),Tr(go),Tr(wo)}function ko(e){xo(wo.current);var t=xo(bo.current),n=tr(t,e.type);t!==n&&(Cr(go,e),Cr(bo,n))}function So(e){go.current===e&&(Tr(bo),Tr(go))}var To=0,Co=2,Oo=4,Po=8,No=16,jo=32,Mo=64,Ro=128,Io=He.ReactCurrentDispatcher,Do=0,Uo=null,Ao=null,zo=null,Lo=null,Fo=null,Wo=null,Vo=0,Bo=null,Ho=0,$o=!1,Jo=null,qo=0;function Qo(){i("321")}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Gt(e[n],t[n]))return!1;return!0}function Yo(e,t,n,r,o,a){if(Do=a,Uo=t,zo=null!==e?e.memoizedState:null,Io.current=null===zo?sa:ca,t=n(r,o),$o){do{$o=!1,qo+=1,zo=null!==e?e.memoizedState:null,Wo=Lo,Bo=Fo=Ao=null,Io.current=ca,t=n(r,o)}while($o);Jo=null,qo=0}return Io.current=ua,(e=Uo).memoizedState=Lo,e.expirationTime=Vo,e.updateQueue=Bo,e.effectTag|=Ho,e=null!==Ao&&null!==Ao.next,Do=0,Wo=Fo=Lo=zo=Ao=Uo=null,Vo=0,Bo=null,Ho=0,e&&i("300"),t}function Xo(){Io.current=ua,Do=0,Wo=Fo=Lo=zo=Ao=Uo=null,Vo=0,Bo=null,Ho=0,$o=!1,Jo=null,qo=0}function Go(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Fo?Lo=Fo=e:Fo=Fo.next=e,Fo}function Zo(){if(null!==Wo)Wo=(Fo=Wo).next,zo=null!==(Ao=zo)?Ao.next:null;else{null===zo&&i("310");var e={memoizedState:(Ao=zo).memoizedState,baseState:Ao.baseState,queue:Ao.queue,baseUpdate:Ao.baseUpdate,next:null};Fo=null===Fo?Lo=e:Fo.next=e,zo=Ao.next}return Fo}function ea(e,t){return"function"==typeof t?t(e):t}function ta(e){var t=Zo(),n=t.queue;if(null===n&&i("311"),n.lastRenderedReducer=e,0<qo){var r=n.dispatch;if(null!==Jo){var o=Jo.get(n);if(void 0!==o){Jo.delete(n);var a=t.memoizedState;do{a=e(a,o.action),o=o.next}while(null!==o);return Gt(a,t.memoizedState)||(xa=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.lastRenderedState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(a=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,s=r,c=!1;do{var f=s.expirationTime;f<Do?(c||(c=!0,u=l,o=a),f>Vo&&(Vo=f)):a=s.eagerReducer===e?s.eagerState:e(a,s.action),l=s,s=s.next}while(null!==s&&s!==r);c||(u=l,o=a),Gt(a,t.memoizedState)||(xa=!0),t.memoizedState=a,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function na(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Bo?(Bo={lastEffect:null}).lastEffect=e.next=e:null===(t=Bo.lastEffect)?Bo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Bo.lastEffect=e),e}function ra(e,t,n,r){var o=Go();Ho|=e,o.memoizedState=na(t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Zo();r=void 0===r?null:r;var a=void 0;if(null!==Ao){var i=Ao.memoizedState;if(a=i.destroy,null!==r&&Ko(r,i.deps))return void na(To,n,a,r)}Ho|=e,o.memoizedState=na(t,n,a,r)}function aa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ia(){}function la(e,t,n){25>qo||i("301");var r=e.alternate;if(e===Uo||null!==r&&r===Uo)if($o=!0,e={expirationTime:Do,action:n,eagerReducer:null,eagerState:null,next:null},null===Jo&&(Jo=new Map),void 0===(n=Jo.get(t)))Jo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Vi();var o=xl(),a={expirationTime:o=Qi(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)a.next=a;else{var u=l.next;null!==u&&(a.next=u),l.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var s=t.lastRenderedState,c=r(s,n);if(a.eagerReducer=r,a.eagerState=c,Gt(c,s))return}catch(e){}Xi(e,o)}}var ua={readContext:Wa,useCallback:Qo,useContext:Qo,useEffect:Qo,useImperativeHandle:Qo,useLayoutEffect:Qo,useMemo:Qo,useReducer:Qo,useRef:Qo,useState:Qo,useDebugValue:Qo},sa={readContext:Wa,useCallback:function(e,t){return Go().memoizedState=[e,void 0===t?null:t],e},useContext:Wa,useEffect:function(e,t){return ra(516,Ro|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Go();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Go();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=la.bind(null,Uo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Go().memoizedState=e},useState:function(e){var t=Go();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ea,lastRenderedState:e}).dispatch=la.bind(null,Uo,e),[t.memoizedState,e]},useDebugValue:ia},ca={readContext:Wa,useCallback:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Wa,useEffect:function(e,t){return oa(516,Ro|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oa(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ta,useRef:function(){return Zo().memoizedState},useState:function(e){return ta(ea)},useDebugValue:ia},fa=null,da=null,pa=!1;function ma(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ha(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function va(e){if(pa){var t=da;if(t){var n=t;if(!ha(e,t)){if(!(t=_r(n))||!ha(e,t))return e.effectTag|=2,pa=!1,void(fa=e);ma(fa,n)}fa=e,da=Er(t)}else e.effectTag|=2,pa=!1,fa=e}}function ya(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;fa=e}function ba(e){if(e!==fa)return!1;if(!pa)return ya(e),pa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=da;t;)ma(e,t),t=_r(t);return ya(e),da=fa?_r(e.stateNode):null,!0}function ga(){da=fa=null,pa=!1}var wa=He.ReactCurrentOwner,xa=!1;function _a(e,t,n,r){t.child=null===e?vo(t,null,n,r):ho(t,e.child,n,r)}function Ea(e,t,n,r,o){n=n.render;var a=t.ref;return Fa(t,o),r=Yo(e,t,n,r,a,o),null===e||xa?(t.effectTag|=1,_a(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function ka(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||$r(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=qr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Sa(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Ma(e,t,a):(t.effectTag|=1,(e=Jr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Sa(e,t,n,r,o,a){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(xa=!1,o<a)?Ma(e,t,a):Ca(e,t,n,r,a)}function Ta(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ca(e,t,n,r,o){var a=Rr(n)?jr:Pr.current;return a=Mr(t,a),Fa(t,o),n=Yo(e,t,n,r,a,o),null===e||xa?(t.effectTag|=1,_a(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function Oa(e,t,n,r,o){if(Rr(n)){var a=!0;zr(t)}else a=!1;if(Fa(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),lo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;"object"==typeof s&&null!==s?s=Wa(s):s=Mr(t,s=Rr(n)?jr:Pr.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&uo(t,i,r,s),Ja=!1;var d=t.memoizedState;u=i.state=d;var p=t.updateQueue;null!==p&&(ti(t,p,r,i,o),u=t.memoizedState),l!==r||d!==u||Nr.current||Ja?("function"==typeof c&&(oo(t,n,c,r),u=t.memoizedState),(l=Ja||io(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,l=t.memoizedProps,i.props=t.type===t.elementType?l:no(t.type,l),u=i.context,"object"==typeof(s=n.contextType)&&null!==s?s=Wa(s):s=Mr(t,s=Rr(n)?jr:Pr.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&uo(t,i,r,s),Ja=!1,u=t.memoizedState,d=i.state=u,null!==(p=t.updateQueue)&&(ti(t,p,r,i,o),d=t.memoizedState),l!==r||u!==d||Nr.current||Ja?("function"==typeof c&&(oo(t,n,c,r),d=t.memoizedState),(c=Ja||io(t,n,l,r,u,d,s))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,s)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Pa(e,t,n,r,a,o)}function Pa(e,t,n,r,o,a){Ta(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Lr(t,n,!1),Ma(e,t,a);r=t.stateNode,wa.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=ho(t,e.child,null,a),t.child=ho(t,null,l,a)):_a(e,t,l,a),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?Ur(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ur(0,t.context,!1),_o(e,t.containerInfo)}function ja(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var l=o.fallback;e=Qr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Qr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=vo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,i?(n=o.fallback,o=Jr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Jr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=ho(t,r.child,o.children,n)):(l=e.child,i?(i=o.fallback,(o=Qr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Qr(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=ho(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Ma(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Jr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Jr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ra(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Nr.current)xa=!0;else if(r<n){switch(xa=!1,t.tag){case 3:Na(t),ga();break;case 5:ko(t);break;case 1:Rr(t.type)&&zr(t);break;case 4:_o(t,t.stateNode.containerInfo);break;case 10:za(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?ja(e,t,n):null!==(t=Ma(e,t,n))?t.sibling:null}return Ma(e,t,n)}}else xa=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Mr(t,Pr.current);if(Fa(t,n),o=Yo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Xo(),Rr(r)){var a=!0;zr(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&oo(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Pa(null,t,r,!0,a,n)}else t.tag=0,_a(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),a=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return $r(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),a=no(e,a),l=void 0,o){case 0:l=Ca(null,t,e,a,n);break;case 1:l=Oa(null,t,e,a,n);break;case 11:l=Ea(null,t,e,a,n);break;case 14:l=ka(null,t,e,no(e.type,a),r,n);break;default:i("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Ca(e,t,r,o=t.elementType===r?o:no(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oa(e,t,r,o=t.elementType===r?o:no(r,o),n);case 3:return Na(t),null===(r=t.updateQueue)&&i("282"),o=null!==(o=t.memoizedState)?o.element:null,ti(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ga(),t=Ma(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(da=Er(t.stateNode.containerInfo),fa=t,o=pa=!0),o?(t.effectTag|=2,t.child=vo(t,null,r,n)):(_a(e,t,r,n),ga()),t=t.child),t;case 5:return ko(t),null===e&&va(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,yr(r,o)?l=null:null!==a&&yr(r,a)&&(t.effectTag|=16),Ta(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(_a(e,t,l,n),t=t.child),t;case 6:return null===e&&va(t),null;case 13:return ja(e,t,n);case 4:return _o(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ho(t,null,r,n):_a(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,Ea(e,t,r,o=t.elementType===r?o:no(r,o),n);case 7:return _a(e,t,t.pendingProps,n),t.child;case 8:case 12:return _a(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,za(t,a=o.value),null!==l){var u=l.value;if(0===(a=Gt(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!Nr.current){t=Ma(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.contextDependencies;if(null!==s){l=u.child;for(var c=s.first;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===u.tag&&((c=Ka(n)).tag=Ha,Xa(u,c)),u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n),c=n;for(var f=u.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<c)f.childExpirationTime=c,null!==d&&d.childExpirationTime<c&&(d.childExpirationTime=c);else{if(!(null!==d&&d.childExpirationTime<c))break;d.childExpirationTime=c}f=f.return}s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}_a(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,Fa(t,n),r=r(o=Wa(o,a.unstable_observedBits)),t.effectTag|=1,_a(e,t,r,n),t.child;case 14:return a=no(o=t.type,t.pendingProps),ka(e,t,o,a=no(o.type,a),r,n);case 15:return Sa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:no(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Rr(r)?(e=!0,zr(t)):e=!1,Fa(t,n),lo(t,r,o),so(t,r,o,n),Pa(null,t,r,!0,e,n)}i("156")}var Ia={current:null},Da=null,Ua=null,Aa=null;function za(e,t){var n=e.type._context;Cr(Ia,n._currentValue),n._currentValue=t}function La(e){var t=Ia.current;Tr(Ia),e.type._context._currentValue=t}function Fa(e,t){Da=e,Aa=Ua=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(xa=!0),e.contextDependencies=null}function Wa(e,t){return Aa!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Aa=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ua?(null===Da&&i("308"),Ua=t,Da.contextDependencies={first:t,expirationTime:0}):Ua=Ua.next=t),e._currentValue}var Va=0,Ba=1,Ha=2,$a=3,Ja=!1;function qa(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Qa(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ka(e){return{expirationTime:e,tag:Va,payload:null,callback:null,next:null,nextEffect:null}}function Ya(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Xa(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=qa(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=qa(e.memoizedState),o=n.updateQueue=qa(n.memoizedState)):r=e.updateQueue=Qa(o):null===o&&(o=n.updateQueue=Qa(r));null===o||r===o?Ya(r,t):null===r.lastUpdate||null===o.lastUpdate?(Ya(r,t),Ya(o,t)):(Ya(r,t),o.lastUpdate=t)}function Ga(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=qa(e.memoizedState):Za(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Za(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Qa(t)),t}function ei(e,t,n,r,a,i){switch(n.tag){case Ba:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case $a:e.effectTag=-2049&e.effectTag|64;case Va:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case Ha:Ja=!0}return r}function ti(e,t,n,r,o){Ja=!1;for(var a=(t=Za(e,t)).baseState,i=null,l=0,u=t.firstUpdate,s=a;null!==u;){var c=u.expirationTime;c<o?(null===i&&(i=u,a=s),l<c&&(l=c)):(s=ei(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(c=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===c&&(c=u,null===i&&(a=s)),l<f&&(l=f)):(s=ei(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===c&&(a=s),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=c,e.expirationTime=l,e.memoizedState=s}function ni(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),ri(t.firstEffect,n),t.firstEffect=t.lastEffect=null,ri(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function ri(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function oi(e,t){return{value:e,source:t,stack:ut(t)}}function ai(e){e.effectTag|=4}var ii=void 0,li=void 0,ui=void 0,si=void 0;ii=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},li=function(){},ui=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var l=t.stateNode;switch(xo(bo.current),e=null,n){case"input":i=gt(l,i),r=gt(l,r),e=[];break;case"option":i=qn(l,i),r=qn(l,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Kn(l,i),r=Kn(l,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(l.onclick=pr)}cr(n,r),l=n=void 0;var u=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var s=i[n];for(l in s)s.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(g.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(u||(u={}),u[l]=c[l])}else u||(e||(e=[]),e.push(n,u)),u=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(g.hasOwnProperty(n)?(null!=c&&dr(a,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}u&&(e=e||[]).push("style",u),a=e,(t.updateQueue=a)&&ai(t)}},si=function(e,t,n,r){n!==r&&ai(t)};var ci="function"==typeof WeakSet?WeakSet:Set;function fi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){qi(e,t)}else t.current=null}function pi(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==To){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==To&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function mi(e){switch("function"==typeof Wr&&Wr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){qi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(di(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){qi(e,t)}break;case 5:di(e);break;case 4:yi(e)}}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(hi(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,l=o.stateNode,u=n;8===a.nodeType?a.parentNode.insertBefore(l,u):a.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(a=l.parentNode).insertBefore(u,l):(a=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==a.onclick||(a.onclick=pr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function yi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,l=a;;)if(mi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===a)break;for(;null===l.sibling;){if(null===l.return||l.return===a)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(a=r,l=t.stateNode,8===a.nodeType?a.parentNode.removeChild(l):a.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(mi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function bi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:pi(Oo,Po,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[I]=o,"input"===n&&"radio"===o.type&&null!=o.name&&xt(e,o),fr(n,r),r=fr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?ur(e,l):"dangerouslySetInnerHTML"===i?rr(e,l):"children"===i?or(e,l):yt(e,i,l,r)}switch(n){case"input":_t(e,o);break;case"textarea":Xn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Qn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Qn(e,!!o.multiple,o.defaultValue,!0):Qn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=xl())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new ci),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Qi(t=xl(),e),null!==(e=Yi(e,t))&&(Gr(e,t),0!==(t=e.expirationTime)&&_l(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var gi="function"==typeof WeakMap?WeakMap:Map;function wi(e,t,n){(n=Ka(n)).tag=$a,n.payload={element:null};var r=t.value;return n.callback=function(){jl(r),fi(e,t)},n}function xi(e,t,n){(n=Ka(n)).tag=$a;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ai?Ai=new Set([this]):Ai.add(this));var n=t.value,o=t.stack;fi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function _i(e){switch(e.tag){case 1:Rr(e.type)&&Ir();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Eo(),Dr(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return So(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Eo(),null;case 10:return La(e),null;default:return null}}var Ei=He.ReactCurrentDispatcher,ki=He.ReactCurrentOwner,Si=1073741822,Ti=!1,Ci=null,Oi=null,Pi=0,Ni=-1,ji=!1,Mi=null,Ri=!1,Ii=null,Di=null,Ui=null,Ai=null;function zi(){if(null!==Ci)for(var e=Ci.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Ir();break;case 3:Eo(),Dr();break;case 5:So(t);break;case 4:Eo();break;case 10:La(t)}e=e.return}Oi=null,Pi=0,Ni=-1,ji=!1,Ci=null}function Li(){for(;null!==Mi;){var e=Mi.effectTag;if(16&e&&or(Mi.stateNode,""),128&e){var t=Mi.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:vi(Mi),Mi.effectTag&=-3;break;case 6:vi(Mi),Mi.effectTag&=-3,bi(Mi.alternate,Mi);break;case 4:bi(Mi.alternate,Mi);break;case 8:yi(e=Mi),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Mi=Mi.nextEffect}}function Fi(){for(;null!==Mi;){if(256&Mi.effectTag)e:{var e=Mi.alternate,t=Mi;switch(t.tag){case 0:case 11:case 15:pi(Co,To,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:no(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}Mi=Mi.nextEffect}}function Wi(e,t){for(;null!==Mi;){var n=Mi.effectTag;if(36&n){var r=Mi.alternate,o=Mi,a=t;switch(o.tag){case 0:case 11:case 15:pi(No,jo,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:no(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ni(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ni(0,r,l)}break;case 5:a=o.stateNode,null===r&&4&o.effectTag&&vr(o.type,o.memoizedProps)&&a.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}128&n&&(null!==(o=Mi.ref)&&(a=Mi.stateNode,"function"==typeof o?o(a):o.current=a)),512&n&&(Ii=e),Mi=Mi.nextEffect}}function Vi(){null!==Di&&xr(Di),null!==Ui&&Ui()}function Bi(e,t){Ri=Ti=!0,e.current===t&&i("177");var n=e.pendingCommitExpirationTime;0===n&&i("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Gr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Gr(e,t)):t>n&&Gr(e,t)}to(0,e)}(e,o>r?o:r),ki.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=kn,hr=function(){var e=Un();if(An(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,u=0,s=0,c=e,f=null;t:for(;;){for(var d;c!==t||0!==r&&3!==c.nodeType||(i=a+r),c!==o||0!==n&&3!==c.nodeType||(l=a+n),3===c.nodeType&&(a+=c.nodeValue.length),null!==(d=c.firstChild);)f=c,c=d;for(;;){if(c===e)break t;if(f===t&&++u===r&&(i=a),f===o&&++s===n&&(l=a),null!==(d=c.nextSibling))break;f=(c=f).parentNode}c=d}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),kn=!1,Mi=r;null!==Mi;){o=!1;var l=void 0;try{Fi()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(Mi=r;null!==Mi;){o=!1,l=void 0;try{Li()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(zn(hr),hr=null,kn=!!mr,mr=null,e.current=t,Mi=r;null!==Mi;){o=!1,l=void 0;try{Wi(e,n)}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}if(null!==r&&null!==Ii){var u=function(e,t){Ui=Di=Ii=null;var n=rl;rl=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;pi(Ro,To,a),pi(To,Mo,a)}catch(e){r=!0,o=e}r&&qi(t,o)}t=t.nextEffect}while(null!==t);rl=n,0!==(n=e.expirationTime)&&_l(e,n),sl||rl||Cl(1073741823,!1)}.bind(null,e,r);Di=a.unstable_runWithPriority(a.unstable_NormalPriority,function(){return wr(u)}),Ui=u}Ti=Ri=!1,"function"==typeof Fr&&Fr(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Ai=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Hi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ci=e;e:{var a=t,l=Pi,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Rr(t.type)&&Ir();break;case 3:Eo(),Dr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==a&&null!==a.child||(ba(t),t.effectTag&=-3),li(t);break;case 5:So(t);var s=xo(wo.current);if(l=t.type,null!==a&&null!=t.stateNode)ui(a,t,l,u,s),a.ref!==t.ref&&(t.effectTag|=128);else if(u){var c=xo(bo.current);if(ba(t)){a=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=s;switch(a[R]=u,a[I]=d,l=void 0,s=f){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":wt(a,d),Sn("invalid",a),dr(p,"onChange");break;case"select":a._wrapperState={wasMultiple:!!d.multiple},Sn("invalid",a),dr(p,"onChange");break;case"textarea":Yn(a,d),Sn("invalid",a),dr(p,"onChange")}for(l in cr(s,d),f=null,d)d.hasOwnProperty(l)&&(c=d[l],"children"===l?"string"==typeof c?a.textContent!==c&&(f=["children",c]):"number"==typeof c&&a.textContent!==""+c&&(f=["children",""+c]):g.hasOwnProperty(l)&&null!=c&&dr(p,l));switch(s){case"input":Ve(a),Et(a,d,!0);break;case"textarea":Ve(a),Gn(a);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(a.onclick=pr)}l=f,u.updateQueue=l,(u=null!==l)&&ai(t)}else{d=t,p=l,a=u,f=9===s.nodeType?s:s.ownerDocument,c===Zn.html&&(c=er(p)),c===Zn.html?"script"===p?((a=f.createElement("div")).innerHTML="<script><\/script>",f=a.removeChild(a.firstChild)):"string"==typeof a.is?f=f.createElement(p,{is:a.is}):(f=f.createElement(p),"select"===p&&(p=f,a.multiple?p.multiple=!0:a.size&&(p.size=a.size))):f=f.createElementNS(c,p),(a=f)[R]=d,a[I]=u,ii(a,t,!1,!1),p=a;var m=s,h=fr(f=l,d=u);switch(f){case"iframe":case"object":Sn("load",p),s=d;break;case"video":case"audio":for(s=0;s<te.length;s++)Sn(te[s],p);s=d;break;case"source":Sn("error",p),s=d;break;case"img":case"image":case"link":Sn("error",p),Sn("load",p),s=d;break;case"form":Sn("reset",p),Sn("submit",p),s=d;break;case"details":Sn("toggle",p),s=d;break;case"input":wt(p,d),s=gt(p,d),Sn("invalid",p),dr(m,"onChange");break;case"option":s=qn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},s=o({},d,{value:void 0}),Sn("invalid",p),dr(m,"onChange");break;case"textarea":Yn(p,d),s=Kn(p,d),Sn("invalid",p),dr(m,"onChange");break;default:s=d}cr(f,s),c=void 0;var v=f,y=p,b=s;for(c in b)if(b.hasOwnProperty(c)){var w=b[c];"style"===c?ur(y,w):"dangerouslySetInnerHTML"===c?null!=(w=w?w.__html:void 0)&&rr(y,w):"children"===c?"string"==typeof w?("textarea"!==v||""!==w)&&or(y,w):"number"==typeof w&&or(y,""+w):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(g.hasOwnProperty(c)?null!=w&&dr(m,c):null!=w&&yt(y,c,w,h))}switch(f){case"input":Ve(p),Et(p,d,!1);break;case"textarea":Ve(p),Gn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+bt(d.value));break;case"select":(s=p).multiple=!!d.multiple,null!=(p=d.value)?Qn(s,!!d.multiple,p,!1):null!=d.defaultValue&&Qn(s,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof s.onClick&&(p.onclick=pr)}(u=vr(l,u))&&ai(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?si(a,t,a.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&i("166")),a=xo(wo.current),xo(bo.current),ba(t)?(l=(u=t).stateNode,a=u.memoizedProps,l[R]=u,(u=l.nodeValue!==a)&&ai(t)):(l=t,(u=(9===a.nodeType?a:a.ownerDocument).createTextNode(u))[R]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ci=t;break e}u=null!==u,l=null!==a&&null!==a.memoizedState,null!==a&&!u&&l&&(null!==(a=a.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=a,a.nextEffect=s):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Eo(),li(t);break;case 10:La(t);break;case 9:case 14:break;case 17:Rr(t.type)&&Ir();break;case 18:break;default:i("156")}Ci=null}if(t=e,1===Pi||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(a=l.expirationTime)>u&&(u=a),(s=l.childExpirationTime)>u&&(u=s),l=l.sibling;t.childExpirationTime=u}if(null!==Ci)return Ci;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=_i(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function $i(e){var t=Ra(e.alternate,e,Pi);return e.memoizedProps=e.pendingProps,null===t&&(t=Hi(e)),ki.current=null,t}function Ji(e,t){Ti&&i("243"),Vi(),Ti=!0;var n=Ei.current;Ei.current=ua;var r=e.nextExpirationTimeToWorkOn;r===Pi&&e===Oi&&null!==Ci||(zi(),Pi=r,Ci=Jr((Oi=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Ci&&!Sl();)Ci=$i(Ci);else for(;null!==Ci;)Ci=$i(Ci)}catch(t){if(Aa=Ua=Da=null,Xo(),null===Ci)o=!0,jl(t);else{null===Ci&&i("271");var a=Ci,l=a.return;if(null!==l){e:{var u=e,s=l,c=a,f=t;if(l=Pi,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=s;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=s;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(s=f.updateQueue)?((s=new Set).add(d),f.updateQueue=s):s.add(d),0==(1&f.mode)){f.effectTag|=64,c.effectTag&=-1957,1===c.tag&&(null===c.alternate?c.tag=17:((l=Ka(1073741823)).tag=Ha,Xa(c,l))),c.expirationTime=1073741823;break e}s=l;var v=(c=u).pingCache;null===v?(v=c.pingCache=new gi,h=new Set,v.set(d,h)):void 0===(h=v.get(d))&&(h=new Set,v.set(d,h)),h.has(s)||(h.add(s),c=Ki.bind(null,c,d,s),d.then(c,c)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-eo(u,l))-5e3),u=m+p),0<=u&&Ni<u&&(Ni=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(c))}ji=!0,f=oi(f,c),u=s;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Ga(u,l=wi(u,f,l));break e;case 1:if(p=f,m=u.type,c=u.stateNode,0==(64&u.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==c&&"function"==typeof c.componentDidCatch&&(null===Ai||!Ai.has(c)))){u.effectTag|=2048,u.expirationTime=l,Ga(u,l=xi(u,p,l));break e}}u=u.return}while(null!==u)}Ci=Hi(a);continue}o=!0,jl(t)}}break}if(Ti=!1,Ei.current=n,Aa=Ua=Da=null,Xo(),o)Oi=null,e.finishedWork=null;else if(null!==Ci)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&i("281"),Oi=null,ji){if(o=e.latestPendingTime,a=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==a&&a<r||0!==l&&l<r)return Zr(e,r),void wl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void wl(e,n,r,t,-1)}t&&-1!==Ni?(Zr(e,r),(t=10*(1073741822-eo(e,r)))<Ni&&(Ni=t),t=10*(1073741822-xl()),t=Ni-t,wl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function qi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ai||!Ai.has(r)))return Xa(n,e=xi(n,e=oi(t,e),1073741823)),void Xi(n,1073741823);break;case 3:return Xa(n,e=wi(n,e=oi(t,e),1073741823)),void Xi(n,1073741823)}n=n.return}3===e.tag&&(Xa(e,n=wi(e,n=oi(t,e),1073741823)),Xi(e,1073741823))}function Qi(e,t){var n=a.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ti&&!Ri)r=Pi;else{switch(n){case a.unstable_ImmediatePriority:r=1073741823;break;case a.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case a.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case a.unstable_LowPriority:case a.unstable_IdlePriority:r=1;break;default:i("313")}null!==Oi&&r===Pi&&--r}return n===a.unstable_UserBlockingPriority&&(0===il||r<il)&&(il=r),r}function Ki(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oi&&Pi===n?Oi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),to(n,e),0!==(n=e.expirationTime)&&_l(e,n)))}function Yi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Xi(e,t){null!==(e=Yi(e,t))&&(!Ti&&0!==Pi&&t>Pi&&zi(),Gr(e,t),Ti&&!Ri&&Oi===e||_l(e,e.expirationTime),vl>hl&&(vl=0,i("185")))}function Gi(e,t,n,r,o){return a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var Zi=null,el=null,tl=0,nl=void 0,rl=!1,ol=null,al=0,il=0,ll=!1,ul=null,sl=!1,cl=!1,fl=null,dl=a.unstable_now(),pl=1073741822-(dl/10|0),ml=pl,hl=50,vl=0,yl=null;function bl(){pl=1073741822-((a.unstable_now()-dl)/10|0)}function gl(e,t){if(0!==tl){if(t<tl)return;null!==nl&&a.unstable_cancelCallback(nl)}tl=t,e=a.unstable_now()-dl,nl=a.unstable_scheduleCallback(Tl,{timeout:10*(1073741822-t)-e})}function wl(e,t,n,r,o){e.expirationTime=r,0!==o||Sl()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),ml=pl,Ol(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function xl(){return rl?ml:(El(),0!==al&&1!==al||(bl(),ml=pl),ml)}function _l(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===el?(Zi=el=e,e.nextScheduledRoot=e):(el=el.nextScheduledRoot=e).nextScheduledRoot=Zi):t>e.expirationTime&&(e.expirationTime=t),rl||(sl?cl&&(ol=e,al=1073741823,Pl(e,1073741823,!1)):1073741823===t?Cl(1073741823,!1):gl(e,t))}function El(){var e=0,t=null;if(null!==el)for(var n=el,r=Zi;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===el)&&i("244"),r===r.nextScheduledRoot){Zi=el=r.nextScheduledRoot=null;break}if(r===Zi)Zi=o=r.nextScheduledRoot,el.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===el){(el=n).nextScheduledRoot=Zi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===el)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}ol=t,al=e}var kl=!1;function Sl(){return!!kl||!!a.unstable_shouldYield()&&(kl=!0)}function Tl(){try{if(!Sl()&&null!==Zi){bl();var e=Zi;do{var t=e.expirationTime;0!==t&&pl<=t&&(e.nextExpirationTimeToWorkOn=pl),e=e.nextScheduledRoot}while(e!==Zi)}Cl(0,!0)}finally{kl=!1}}function Cl(e,t){if(El(),t)for(bl(),ml=pl;null!==ol&&0!==al&&e<=al&&!(kl&&pl>al);)Pl(ol,al,pl>al),El(),bl(),ml=pl;else for(;null!==ol&&0!==al&&e<=al;)Pl(ol,al,!1),El();if(t&&(tl=0,nl=null),0!==al&&gl(ol,al),vl=0,yl=null,null!==fl)for(e=fl,fl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ll||(ll=!0,ul=e)}}if(ll)throw e=ul,ul=null,ll=!1,e}function Ol(e,t){rl&&i("253"),ol=e,al=t,Pl(e,t,!1),Cl(1073741823,!1)}function Pl(e,t,n){if(rl&&i("245"),rl=!0,n){var r=e.finishedWork;null!==r?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&(Sl()?e.finishedWork=r:Nl(e,r,t)))}else null!==(r=e.finishedWork)?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&Nl(e,r,t));rl=!1}function Nl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===fl?fl=[r]:fl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===yl?vl++:(yl=e,vl=0),a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){Bi(e,t)})}function jl(e){null===ol&&i("246"),ol.expirationTime=0,ll||(ll=!0,ul=e)}function Ml(e,t){var n=sl;sl=!0;try{return e(t)}finally{(sl=n)||rl||Cl(1073741823,!1)}}function Rl(e,t){if(sl&&!cl){cl=!0;try{return e(t)}finally{cl=!1}}return e(t)}function Il(e,t,n){sl||rl||0===il||(Cl(il,!1),il=0);var r=sl;sl=!0;try{return a.unstable_runWithPriority(a.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sl=r)||rl||Cl(1073741823,!1)}}function Dl(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Rr(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);i("171"),l=void 0}if(1===n.tag){var u=n.type;if(Rr(u)){n=Ar(n,u,l);break e}}n=l}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Ka(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Vi(),Xa(a,o),Xi(a,r),r}function Ul(e,t,n,r){var o=t.current;return Dl(e,t,n,o=Qi(xl(),o),r)}function Al(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function zl(e){var t=1073741822-25*(1+((1073741822-xl()+500)/25|0));t>=Si&&(t=Si-1),this._expirationTime=Si=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ll(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Fl(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vl(e,t,n,r,o){var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=Al(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Fl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Al(a._internalRoot);l.call(e)}}Rl(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return Al(a._internalRoot)}function Bl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wl(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Qe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Te=function(e,t,n){switch(t){case"input":if(_t(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=z(r);o||i("90"),Be(r),_t(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&Qn(e,!!n.multiple,t,!1)}},zl.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ll;return Dl(e,t,null,n,r._onCommit),r},zl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},zl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ol(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},zl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ll.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ll.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},Fl.prototype.render=function(e,t){var n=this._internalRoot,r=new Ll;return null!==(t=void 0===t?null:t)&&r.then(t),Ul(e,n,null,r._onCommit),r},Fl.prototype.unmount=function(e){var t=this._internalRoot,n=new Ll;return null!==(e=void 0===e?null:e)&&n.then(e),Ul(null,t,null,n._onCommit),n},Fl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ll;return null!==(n=void 0===n?null:n)&&o.then(n),Ul(t,r,e,o._onCommit),o},Fl.prototype.createBatch=function(){var e=new zl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Me=Ml,Re=Il,Ie=function(){rl||0===il||(Cl(il,!1),il=0)};var Hl,$l,Jl={createPortal:Bl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Wl(t)||i("200"),Vl(null,e,t,!0,n)},render:function(e,t,n){return Wl(t)||i("200"),Vl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Wl(n)||i("200"),(null==e||void 0===e._reactInternalFiber)&&i("38"),Vl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wl(e)||i("40"),!!e._reactRootContainer&&(Rl(function(){Vl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Bl.apply(void 0,arguments)},unstable_batchedUpdates:Ml,unstable_interactiveUpdates:Il,flushSync:function(e,t){rl&&i("187");var n=sl;sl=!0;try{return Gi(e,t)}finally{sl=n,Cl(1073741823,!1)}},unstable_createRoot:function(e,t){return Wl(e)||i("299","unstable_createRoot"),new Fl(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sl;sl=!0;try{Gi(e)}finally{(sl=t)||rl||Cl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[U,A,z,P.injectEventPluginsByName,b,H,function(e){T(e,B)},Ne,je,On,j]}};$l=(Hl={findFiberByHostInstance:D,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Fr=Vr(function(e){return t.onCommitFiberRoot(n,e)}),Wr=Vr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}}(o({},Hl,{overrideProps:null,currentDispatcherRef:He.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return $l?$l(e):null}}));var ql={default:Jl},Ql=ql&&Jl||ql;e.exports=Ql.default||Ql},function(e,t,n){"use strict";e.exports=n(18)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,l=!1,u=!1;function s(){if(!l){var e=n.expirationTime;u?E():u=!0,_(d,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,l=i;o=e,i=t;try{var u=r()}finally{o=a,i=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,s()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===a&&null!==n&&1===n.priorityLevel){l=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?s():u=!1}}}function d(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{c()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{c()}while(null!==n&&!k())}finally{l=!1,r=o,null!==n?s():u=!1,f()}}var p,m,h=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,b="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,g="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){p=b(function(t){y(m),e(t)}),m=v(function(){g(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var x=performance;t.unstable_now=function(){return x.now()}}else t.unstable_now=function(){return h.now()};var _,E,k,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var T=S._schedMock;_=T[0],E=T[1],k=T[2],t.unstable_now=T[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var C=null,O=function(e){if(null!==C)try{C(e)}finally{C=null}};_=function(e){null!==C?setTimeout(_,0,e):(C=e,setTimeout(O,0,!1))},E=function(){C=null},k=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof b&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var P=null,N=!1,j=-1,M=!1,R=!1,I=0,D=33,U=33;k=function(){return I<=t.unstable_now()};var A=new MessageChannel,z=A.port2;A.port1.onmessage=function(){N=!1;var e=P,n=j;P=null,j=-1;var r=t.unstable_now(),o=!1;if(0>=I-r){if(!(-1!==n&&n<=r))return M||(M=!0,w(L)),P=e,void(j=n);o=!0}if(null!==e){R=!0;try{e(o)}finally{R=!1}}};var L=function(e){if(null!==P){w(L);var t=e-I+U;t<U&&D<U?(8>t&&(t=8),U=t<D?D:t):D=t,I=e+U,N||(N=!0,z.postMessage(void 0))}else M=!1};_=function(e,t){P=e,j=t,R||0>t?z.postMessage(void 0):M||(M=!0,w(L))},E=function(){P=null,N=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,i=a;o=n,a=t.unstable_now();try{return e()}finally{o=r,a=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,s();else{i=null;var l=n;do{if(l.expirationTime>r){i=l;break}l=l.next}while(l!==n);null===i?i=n:i===n&&(n=e,s()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||k())},t.unstable_continueExecution=function(){null!==n&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(19))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,'body { \n    color: #d9d9d9;\n    font-family: Arial, sans-serif, Georgia, serif;\n}\n\nul {\n    border: 1px #404040 solid;\n}\n\nli , label, p {\n    font-size: 11px;\n}\n\nh4, h5, h6 {\n    border-bottom: 1px solid #333333;\n}\n\ninput, textarea { \n    font-size: 11px;\n    background: #2b2b2b;\n    color: #d9d9d9;\n    opacity: 0.75;\n    vertical-align: bottom;\n}\n\ninput[type="text"] {\n    -webkit-appearance: textarea;\n}\n\nul label input {\n    width: 10px;\n}\n\nul, li {\n    padding-left: 5px;\n    margin-top: 0px;\n    margin-bottom: 0px;\n}\n\nbutton {\n    color: rgba(255,255,255,0.5);\n    border-color: rgba(0,0,0,0.9);\n    border-width: 1px;\n    padding: 7px;\n    background-color: #343a40;\n    margin-left: 4px;\n}\n\nbutton i{\n    padding-right:4px;\n}\n\nbutton:hover {\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\nul,li, ul label {\n    color: rgba(255,255,255,0.5);\n}\n\nul label:hover, li:hover, .content:hover{\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\n#index{\n    margin:-4px;\n}',""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=y(o);n(6);var i=y(n(23)),l=y(n(33)),u=y(n(36)),s=y(n(40)),c=y(n(60)),f=y(n(63)),d=y(n(73)),p=y(n(92)),m=n(7),h=n(11),v=n(3);function y(e){return e&&e.__esModule?e:{default:e}}var b=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:(0,v.readData)("ui-editor")||[],components:[],selectedIndex:-1,element:{name:"",markup:"",style:"",state:"{ }",events:[]}},n.updateConfig=m.updateConfig.bind(n),n.updateEvent=m.updateEvent.bind(n),n.saveElement=m.saveElement.bind(n),n.updateselectedIndex=m.updateselectedIndex.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updatePreview",value:function(e){this.setState({previewComponent:e})}},{key:"updateStyles",value:function(){this.setState({element:this.state.elements[this.state.selectedIndex]})}},{key:"render",value:function(){var e=((0,v.readData)("ui-editor")||[])[this.state.selectedIndex]||this.state.element,t=(0,h.getNodeTree)(e,e.markup,e.style,JSON.parse(e.state),e.events);try{return a.default.createElement("div",null,a.default.createElement(l.default,null,a.default.createElement(i.default,{elements:this.state.elements,onSelection:this.updateselectedIndex,selectedIndex:this.state.selectedIndex})),a.default.createElement(l.default,null,a.default.createElement(s.default,{key:this.state.selectedIndex,element:e,elements:this.state.elements,onEventsUpdate:this.updateEvent,onConfigUpdate:this.updateConfig})),a.default.createElement(l.default,null,a.default.createElement(u.default,{key:Math.ceil(1e3*Math.random()),element:e,name:e.name,markup:e.markup,style:e.style,state:e.state,onSave:this.saveElement})),a.default.createElement(l.default,null,a.default.createElement(f.default,{component:e})),a.default.createElement(l.default,null,a.default.createElement(p.default,{node:t})),a.default.createElement(l.default,null,a.default.createElement(d.default,{key:Math.ceil(1e3*Math.random()),component:e,onEdit:this.updateStyles.bind(this)})),a.default.createElement(l.default,null,a.default.createElement(c.default,null)))}catch(e){return console.log(e),a.default.createElement(l.default,null,a.default.createElement(c.default,null))}}}]),t}();t.default=b},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=f(a);n(24);var l=f(n(26)),u=n(7),s=n(31),c=n(3);function f(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:n.props.elements,selectedIndex:0},n.onDelete=u.onDelete.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"createVariant",value:function(e){var t=JSON.parse(JSON.stringify(e));return t.name="Variant"+t.name,t.markup=t.markup.replace(/>(.*?)</g,">{state.variant}<"),"string"==typeof t.state?(t.state=JSON.parse(t.state),t.state.variant="text"):"object"===r(t.state)?t.state.variant="text":t.state={},t.state.variant="text",t.state=JSON.stringify(t.state),t}},{key:"generateVariant",value:function(e){var t=this.state.elements[e],n=this.createVariant(t),r=this.state.elements;r.push(n),this.setState({elements:r}),(0,c.writeData)("ui-editor",r)}},{key:"render",value:function(){var e=this,t=this.props.elements.map(function(t,n){return i.default.createElement(l.default,{key:n,index:n,selectedIndex:e.props.selectedIndex,element:t,onSelectionChange:e.props.onSelection,onExport:s.onExport.bind(e),onDelete:e.onDelete,onGenerateVariant:e.generateVariant.bind(e)})});return i.default.createElement("div",{className:"elements"},i.default.createElement("div",{className:"container elements-tab"},i.default.createElement("div",{className:"title"},"Components"),i.default.createElement("ul",null,t)))}}]),t}();t.default=d},function(e,t,n){var r=n(25);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".override {\n    line-height: 0%;\n}\n\ntextarea {\n    height: 70px;\n    width: 450px;\n}\n\n.elements{\n    position: fixed;\n}\n\n.title{\n    margin-top: 15px;\n    margin-bottom: 11px;\n    color: rgba(255,255,255,0.5);\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}\n\n.elements-tab {\n    left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(27);n(28);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"generateVariant",value:function(){this.props.onGenerateVariant(this.props.selectedIndex)}},{key:"render",value:function(){return i.default.createElement("div",{className:"background",draggable:"true",id:this.props.element.name,"data-name":this.props.element.name,onDragStart:l.handleDrag.bind(this)},i.default.createElement("li",{className:this.props.index===this.props.selectedIndex?"selected component":"component",onClick:l.selectionChanged.bind(this),index:this.props.index},i.default.createElement("span",{className:"componentName"},this.props.element.name),i.default.createElement("span",null,i.default.createElement("button",{index:this.props.index,onClick:this.generateVariant.bind(this)},i.default.createElement("i",{className:"fas fa-file-export"}),"Generate Variant"),i.default.createElement("button",{index:this.props.index,onClick:this.props.onExport},i.default.createElement("i",{className:"fas fa-file-export"}),"Export"),i.default.createElement("button",{index:this.props.index,onClick:this.props.onDelete},i.default.createElement("i",{className:"fa fa-trash"}),"Delete"))))}}]),t}();t.default=u},function(e,t,n){"use strict";function r(e){var t=event.target.getAttribute("data-name");e.dataTransfer.setData("component-name",t)}Object.defineProperty(t,"__esModule",{value:!0}),t.selectionChanged=function(e){this.props.onSelectionChange(e)},t.handleDrag=r,window.eventCallbacks={handleDrag:r}},function(e,t,n){var r=n(29);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".selected, .green {\n    border: 1px solid green;\n    background: rgb(43, 43, 43);\n}\n\n.background {\n    background: rgb(64, 64, 64);\n    border-bottom: 1px solid #333333;\n}\n\n.component {\n    display:flex;\n    justify-content: space-between;\n}\n\n.component .componentName{\n    padding:7px;\n}\n\n.thumbnail {\n    width: 50px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getStartTags=function(e){return e.split(">").filter(function(e){return!e.includes("/")}).filter(Boolean).map(function(e){return e+">"})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.onExport=function(){var e=(0,r.getNestedComponents)(this.state.elements[this.props.selectedIndex]);console.log(e.map(o.getComponentString).join(""))};var r=n(4),o=n(8)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.codeModifier=function(e,t){return"\n                        var state = JSON.parse(JSON.stringify(this.state))\n                        "+e+"\n                        this.setState(state);\n                        window.saveVariants("+window.selectedcomponentname+","+t.name+",state, e)\n"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(34);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=JSON.parse(localStorage.getItem("ui-editor-settings-draggable-component-"+n.props.children.type.name))||{style:{position:"fixed",top:"30px",left:"200px"},minimised:!1},n.state.draggable="false",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"moveDiv",value:function(e){var t=this;if("move"===e.target.id){var n=JSON.parse(JSON.stringify(this.state));n.style.top=e.pageY+"px",n.style.left=e.pageX+"px",this.setState({style:n.style},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}}},{key:"toggleMinimiseMaximise",value:function(e){var t=this;this.setState({minimised:!this.state.minimised},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}},{key:"onMouseEnter",value:function(){this.setState({draggable:"true"})}},{key:"onMouseLeave",value:function(){this.setState({draggable:"false"})}},{key:"render",value:function(){return i.default.createElement("div",{draggable:this.state.draggable,id:"move",onDragEnd:this.moveDiv.bind(this),style:this.state.style},i.default.createElement("span",{title:"Move",className:"move-handle",onMouseDown:this.onMouseEnter.bind(this),onMouseUp:this.onMouseLeave.bind(this)},i.default.createElement("i",{className:"fa fa-arrows-alt fa-xs"})),this.state.minimised?i.default.createElement("span",{title:"Minimise",className:"maximise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-maximize fa-xs"})):i.default.createElement("span",{title:"Minimise",className:"minimise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-minimize fa-xs"})),this.state.minimised?i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},this.props.children.type.name)):this.props.children)}}]),t}();t.default=l},function(e,t,n){var r=n(35);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"#move > span{  \n    border: 1px solid black;\n    color: black;\n}\n\n#move .move-handle{\n    cursor: move;\n}\n\n#move .move-handle,\n#move .minimise-handle,\n#move .maximise-handle {\n    padding-left: 2px;\n    padding-right: 2px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(37);var l=n(39),u=n(3);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=(0,u.readComponent)(n.props.name);return n.state={name:r?r.name:"",markup:r?r.markup:"",state:r?r.state:"",style:r?r.style:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"publishElement",value:function(){this.props.onSave({name:this.state.name,markup:this.state.markup,style:this.state.style,state:this.state.state})}},{key:"render",value:function(){var e=this.state.name,t=this.state.markup,n=this.state.style,r=this.state.state;return i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},"Editor"),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Name"),i.default.createElement("input",{type:"text",placeholder:"Enter element name",value:e,onChange:l.updateName.bind(this),id:"elementName"}),i.default.createElement("button",{onClick:this.publishElement.bind(this),id:"save"},i.default.createElement("i",{className:"fas fa-save"}),"Save")),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Markup"),i.default.createElement("textarea",{value:t,onChange:l.updateMarkup.bind(this),id:"elementMarkup",title:"ID is mandatory for events"})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component CSS"),i.default.createElement("textarea",{value:n,onChange:l.updateStyle.bind(this)})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component State"),i.default.createElement("textarea",{value:r,onChange:l.updateState.bind(this),id:"elementState"})))}}]),t}();t.default=s},function(e,t,n){var r=n(38);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".hidden{\n    display: none;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateName=function(e){this.setState({name:e.currentTarget.value})},t.updateMarkup=function(e){this.setState({markup:e.currentTarget.value})},t.updateStyle=function(e){this.setState({style:e.currentTarget.value})},t.updateState=function(e){this.setState({state:e.currentTarget.value})},t.getPropertyContainingProps=function(e){var t=[],n=void 0;try{n=JSON.parse(e.state)}catch(e){console.error("Error: Child state is an invalid json, try an online validator on below string"),console.log(child.state)}for(var r in n)n[r].includes("prop")&&t.push(r);return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=p(o),i=p(n(41)),l=p(n(44)),u=p(n(45)),s=p(n(56));n(57);var c=n(59),f=n(11),d=n(3);function p(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n.state.selectedTag="",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props.element;if(0==this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,'Looks like you do not have any Web component created. Type some "html" on the right "Editor" tab'));if(void 0===t.name&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,"Looks like you have not selected any component. Click on any of the component in the left pane."));var n=(0,f.getNodeTree)(t,t.markup,t.style,JSON.parse(t.state),t.events);if(void 0!==n.error)return(0,s.default)(n.error);if(void 0===n.result&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"));var r=this.state.selectedTag||"",o=void 0,p=void 0;if(r.includes("child-component-")){var m=(0,d.readData)("ui-editor"),h=r.split("child-component-")[1],v=m.find(function(e){return e.name===h}).events.filter(function(e){return!0===e.publishable}).map(function(e){return e.publishName}),y=t.events.map(function(t,n){return a.default.createElement(u.default,{key:n,index:n,event:t,selectedTagID:r,eventNames:v,onSave:c.updateEvent.bind(e),deleteEvent:c.deleteEvent.bind(e)})});o=r?y.filter(function(e){return r.includes(e.props.event.id)}):null,p=a.default.createElement(i.default,{onChange:c.updateConfiguration.bind(this),childName:h,parent:t})}else{var b=t.events.map(function(t,n){return a.default.createElement(u.default,{key:n,index:n,event:t,selectedTagID:r,eventNames:[],onSave:c.updateEvent.bind(e),deleteEvent:c.deleteEvent.bind(e)})});o=r?b.filter(function(e){return r.includes(e.props.event.id)}):null}return a.default.createElement("div",null,a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("div",{className:"tags"},a.default.createElement(l.default,{node:n.result,onSelectedTagChanged:c.selectedTagChanged.bind(this)})),p,a.default.createElement("div",{className:"title"},"Events"),a.default.createElement("div",null,a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"Existing",a.default.createElement("div",null,o))),a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"New",a.default.createElement("div",null,a.default.createElement(u.default,{key:t.events.length,eventNames:[],selectedTagID:r,onSave:c.updateEvent.bind(this)}))))))))}}]),t}();t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(42);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=JSON.parse(n.props.parent.config)[n.props.childName]||{overideState:!1};return n.state={override:r.overideState},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"toggelOverride",value:function(){this.setState({override:!this.state.override}),this.props.onChange({override:!this.state.override,childName:this.props.childName,parentName:this.props.parent.name})}},{key:"render",value:function(){return i.default.createElement("div",{className:"option-group"},i.default.createElement("p",{className:"option-group-label"},i.default.createElement("span",{className:"title"},"Child Configurations"),i.default.createElement("span",{className:"panel expanded"})),i.default.createElement("div",{className:"content"},i.default.createElement("div",{className:"option"},i.default.createElement("label",null,"Override child state"),i.default.createElement("input",{type:"checkbox",onChange:this.toggelOverride.bind(this),checked:this.state.override?"checked":""}))))}}]),t}();t.default=l},function(e,t,n){var r=n(43);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.configurator {\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r};var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this,n=this.props.node;if(!n)return l.default.createElement("span",null,"null");if("string"==typeof n)return l.default.createElement("li",null,n);var r=n.props.id?"-"+n.props.id:"";if(n.props&&Array.isArray(n.props.children)){var a=n.props.children.map(function(n,r){return l.default.createElement(t,{key:r,node:n,onSelectedTagChanged:e.props.onSelectedTagChanged})});return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:n.type+r}),n.type+r),a)}if("object"===o(n.props.children)){var i=n.props.children;return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:(n.type.name||n.type)+r}),n.type.name||n.type),l.default.createElement(t,{key:index,node:i,onSelectedTagChanged:this.props.onSelectedTagChanged}))}return"function"==typeof n.type?l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:"child-component-"+n.type.name,onChange:this.props.onSelectedTagChanged}),n.type.name)):l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:n.type+r,onChange:this.props.onSelectedTagChanged}),n.type+r))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=s(o);n(46);var i=s(n(48)),l=n(54),u=n(55);function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={name:n.props.event?n.props.event.name:"",reducer:n.props.event?n.props.event.reducer:"",publishable:n.props.event?n.props.event.publishable:"",publishName:n.props.event?n.props.event.publishName:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){if(void 0===this.props.selectedTagID)return(0,i.default)();var e=this.state.publishable?a.default.createElement("input",{type:"text",onChange:l.updatePublishName.bind(this),value:this.state.publishName,placeholder:"Enter event publish name for other components to subscribe to"}):null,t=this.props.eventNames.map(function(e){return a.default.createElement("option",{value:e})});return a.default.createElement("div",{className:"event"},a.default.createElement("input",{list:"browsers",type:"text",onChange:l.updateEventName.bind(this),value:this.state.name,placeholder:"Enter event name",title:"Event Name"}),a.default.createElement("datalist",{id:"browsers"},t),a.default.createElement("br",null),a.default.createElement("textarea",{onChange:l.updateReducer.bind(this),value:this.state.reducer,placeholder:"Enter state reducer",title:"Reducer"}),a.default.createElement("div",null,a.default.createElement("label",null,a.default.createElement("input",{type:"checkbox",onChange:l.updateEventType.bind(this),checked:this.state.publishable?"checked":""}),"Publishable"),e,a.default.createElement("button",{onClick:u.publishEvent.bind(this),id:"saveEvent"},a.default.createElement("i",{className:"fas fa-save"}),"Save"),a.default.createElement("button",{onClick:u.deleteEvent.bind(this),id:"deleteEvent"},a.default.createElement("i",{className:"fas fa-trash"}),"Delete")))}}]),t}();t.default=c},function(e,t,n){var r=n(47);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.event input {\n    margin-left:0px;\n}\n\n.event textarea {\n    margin-top: 8px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(10),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(){return React.createElement(a.default,{messages:[{type:"info",text:"#1 INFO: Select any element in the left most pane(editor pane) to see its content"},{type:"info",text:"#2 INFO: Click on 'Add' to add an component"}]})}},function(e,t,n){var r=n(50);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n    bottom: 50px;\n}\n\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(52);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){var e=this.props.message;return"error"===e.type||"info"===e.type?i.default.createElement("div",{className:e.type},i.default.createElement("code",null,e.text)):(console.error(e.type+" is unidentified message type for <MessagesComponent/>. Please use either 'error' or 'info' only. If you require a different type, raise an issue, send a PR"),i.default.createElement("div",{className:"console"},i.default.createElement("div",{className:"eerror"},i.default.createElement("code",null,"error : unidentified message type. Please use either error/ info only"))))}}]),t}();t.default=l},function(e,t,n){var r=n(53);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";var r;function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){this.setState({publishable:e.currentTarget.checked})}e.exports=(o(r={updateEventName:function(e){this.setState({name:e.target.value})},updateEventType:a,updatePublishName:function(e){this.setState({publishName:e.target.value})}},"updateEventType",a),o(r,"updateReducer",function(e){this.setState({reducer:e.target.value})}),r)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.publishEvent=function(){this.props.onSave({name:this.state.name,reducer:this.state.reducer,index:this.props.index,publishable:this.state.publishable,publishName:this.state.publishName})},t.deleteEvent=function(){this.props.deleteEvent(this.props.index)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(10),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){var t=[{type:"error",text:"ERROR : "+e+"developer log: look in console related to eval"}];return React.createElement(a.default,{messages:t})}},function(e,t,n){var r=n(58);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".events {\n    border:1px solid black;\n    padding: 5px;\n}\n\n.error {\n    color: red;\n    position: fixed;\n    right: 150px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));e.id=this.state.selectedTag.split("-")[1],void 0===e.index?t.events.push(e):t.events[e.index]=e;this.props.onEventsUpdate(t.events)},t.selectedTagChanged=function(e){this.setState({selectedTag:e.currentTarget.value})},t.deleteEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));t.events.splice(e,1),this.props.onEventsUpdate(t.events)},t.updateConfiguration=function(e){this.props.onConfigUpdate(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(3);n(61);var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"refreshToPrevious",value:function(){(0,l.popHistory)()}},{key:"render",value:function(){return i.default.createElement("div",{className:"container preview"},i.default.createElement("div",{className:"title"},"History"),i.default.createElement("div",null,i.default.createElement("button",{onClick:this.refreshToPrevious.bind(this)},"Go back")))}}]),t}();t.default=u},function(e,t,n){var r=n(62);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".container{\n    border: 1px solid black;\n    padding: 5px;\n    box-shadow: 0px 8px 26px -8px black;\n    background: #2C3134;\n}\n",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=s(o);n(64);var i=s(n(66)),l=s(n(69)),u=n(12);function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={events:{},coordinates:{},target:{}},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"setToDropMode",value:function(){var e=this;this.setState({events:{onDragOver:function(e){var t=document.querySelector(".dropPoint");t&&t.classList.remove("dropPoint"),e.target.classList.add("dropPoint"),e.preventDefault()}.bind(this),onDrop:function(t){t.preventDefault();var n=e.props.component,r=t.dataTransfer.getData("component-name"),o=t.target.getAttribute("data-uuid");(0,u.createComponent)(n,r,o),e.setState({events:{}})}.bind(this)}})}},{key:"setToEditMode",value:function(){var e=this;this.setState({events:{onMouseOver:function(e){if(e.target.getAttribute("data-uuid")>=0){var t=document.querySelector(".targetChild");t&&t.classList.remove("targetChild"),e.target.classList.add("targetChild")}console.log("MOUSE OVER")},onMouseLeave:function(t){var n=document.querySelector(".targetChild");n&&n.classList.remove("targetChild"),e.setState({coordinates:{}}),console.log("MOUSE LEAVE")},onClick:function(t){t.target.classList.remove("targetChild"),e.setState({coordinates:t.target.getBoundingClientRect(),events:{},target:t.target})}.bind(this)}})}},{key:"interactiveMode",value:function(){this.setState({events:{}})}},{key:"refresh",value:function(){this.setState({events:{},hideTool:!0})}},{key:"render",value:function(){var e=this.props.component.id*~~(10*Math.random());return a.default.createElement("div",{className:"container preview"},a.default.createElement("div",{className:"title"},"Preview"),a.default.createElement("div",null,a.default.createElement("button",{onClick:this.setToDropMode.bind(this)},a.default.createElement("i",{className:"fas fa-file-export"}),"Drop"),a.default.createElement("button",{onClick:this.setToEditMode.bind(this)},a.default.createElement("i",{className:"fas fa-file-export"}),"Edit"),a.default.createElement("button",{onClick:this.interactiveMode.bind(this)},a.default.createElement("i",{className:"fas fa-file-export"}),"Interact")),a.default.createElement(i.default,{key:e,component:this.props.component,events:this.state.events}),a.default.createElement(l.default,{coordinates:this.state.coordinates,component:this.props.component,target:this.state.target,refresh:this.refresh.bind(this),hide:this.state.hideTool}))}}]),t}();t.default=c},function(e,t,n){var r=n(65);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".container{\n    border: 1px solid black;\n    padding: 5px;\n    box-shadow: 0px 8px 26px -8px black;\n    background: #2C3134;\n}\n\n.dropPoint{\n    border: 1px solid green;\n}\n\n.targetChild{\n    border: 1px solid #3E8CE4;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(9),u=n(4);n(67);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={component:n.props.component},(0,l.createStylesheet)(n.state.component.style),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){if(""===this.state.component.name)return i.default.createElement("div",null,"No component selected.");var e=(0,u.getNestedComponents)(this.state.component);return e.length>0&&(0,u.saveComponentsToWindow)(e),window[this.state.component.name]?i.default.createElement("div",this.props.events,i.default.createElement(window[this.state.component.name])):i.default.createElement("div",null,"Component not rendered")}}]),t}();t.default=s},function(e,t,n){var r=n(68);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".box {\n    margin: 5px;\n    border:1px solid black;\n    padding:5px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(70);var l=n(12);var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"moveChildUp",value:function(e){target.getAttribute("data-uuid")}},{key:"moveChildDown",value:function(){}},{key:"deleteChild",value:function(){var e=this.props.target.getAttribute("data-name"),t=this.props.target.getAttribute("data-uuid");(0,l.deleteComponent)(this.props.component,e,t),this.props.refresh()}},{key:"render",value:function(){var e=this.props.coordinates,t={width:e.width||0,height:e.height||0,position:"fixed",top:e.y||0,left:e.x||0,display:this.props.hide?"none":"block"};return i.default.createElement("div",{className:"ui-overlay",style:t},i.default.createElement("div",{className:"focus-bar"},i.default.createElement("span",{title:"Move up"},i.default.createElement("button",{onClick:this.moveChildUp.bind(this)},i.default.createElement("i",{className:"fa fa-arrow-up"}))),i.default.createElement("span",{title:"Move down"},i.default.createElement("button",{onClick:this.moveChildDown.bind(this)},i.default.createElement("i",{className:"fa fa-arrow-down"}))),i.default.createElement("span",{title:"Delete"},i.default.createElement("button",{onClick:this.deleteChild.bind(this)},i.default.createElement("i",{className:"fa fa-trash"})))),i.default.createElement("div",{className:"highlights"},i.default.createElement("div",{className:"focus"})))}}]),t}();t.default=u},function(e,t,n){var r=n(71);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".focus-bar {\n    position: absolute;\n    pointer-events: all;\n    white-space: nowrap;\n    top: -20px;\n    height: 20px;\n    background-color: #3E8CE4;\n    border-radius: 2px 2px 0 0;\n    font: 16px/1 Arial, Helvetica, sans-serif;\n    color: #fff;\n}\n\n.focus-bar > span i {\n    vertical-align: middle;\n    font-size: 14px;\n    color: #fff;\n}\n\n.focus-bar .move-handle:first-child {\n    cursor: move !important;\n}\n\n.focus-bar > span {\n    padding: 5px;\n}\n\n.focus-bar > span:not(.move-handle):hover {\n    background-color: rgba(0,0,0,0.1);\n}\n\n\n.highlights .focus {\n    pointer-events: none;\n    border: 1px solid #3E8CE4;\n    border-radius: 2px;\n    border-top-left-radius: 0;\n    width: 100%;\n    height: 100%;\n\n    border-width: 1px;\n}\n\n.ui-overlay {\n    position: relative;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deleteSubComponent=function(e,t,n){var r=function(e,t,n){return function(e,t){var n="</"+t+">",r=e.indexOf(n)+n.length;return e.substr(0,r)}(function(e,t,n){var r=e.indexOf(t),o=e.substr(r);for(;0!==o.indexOf("<"+n);)r--,o=e.substr(r);return o}(e,'data-uuid="1"',n),n)}(e,0,n);return e.split(r).join("")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=s(o),i=s(n(74)),l=n(89),u=n(3);function s(e){return e&&e.__esModule?e:{default:e}}n(90);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.state=Object.assign({},n.props);var r=(0,u.readComponent)(n.state.component.name);return n.state.rules=(0,l.getObjectFormat)(r?r.style:""),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"addRule",value:function(){var e=Array.from(this.state.rules);e.unshift({selector:"newClass",declarations:[{property:"newProperty",value:""}]}),this.setState({rules:e})}},{key:"ruleUpdate",value:function(e,t){e.selector||(e=void 0);var n=this.state.rules;n[t]=e;var r=(0,u.readData)("ui-editor");(0,u.readComponent)(this.state.component.name).style=(0,l.convertToStyleString)(n.filter(Boolean)),(0,u.writeData)("ui-editor",r),this.props.onEdit()}},{key:"render",value:function(){var e=this,t=this.state.rules.map(function(t,n){return a.default.createElement(i.default,{key:Math.ceil(1e3*Math.random()),index:n,rule:t,onUpdate:e.ruleUpdate.bind(e)})});return a.default.createElement("div",{className:"container"},a.default.createElement("div",{className:"title"},"StyleExplorer",a.default.createElement("button",{onClick:this.addRule.bind(this)},"+")),t)}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(75);var i=u(n(77)),l=u(n(80));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props.rule),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updateSelector",value:function(e){this.props.onUpdate({selector:e,declarations:this.state.declarations},this.props.index)}},{key:"updateDeclarations",value:function(e){this.props.onUpdate({selector:this.state.selector,declarations:e},this.props.index)}},{key:"render",value:function(){return a.default.createElement("div",{className:"rules container"},a.default.createElement(i.default,{name:this.state.selector,key:Math.ceil(1e3*Math.random()),onEdit:this.updateSelector.bind(this)})," {",a.default.createElement(l.default,{declarations:this.state.declarations,key:Math.ceil(1e3*Math.random()),onEdit:this.updateDeclarations.bind(this)}),"}")}}]),t}();t.default=s},function(e,t,n){var r=n(76);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".rules {\n    font-size: 11px;\n}\n\n.rules input {\n    border: 0px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(78);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({name:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.name!==this.state.name&&this.props.onEdit(this.state.name)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){var e=this.state.name.includes("newClass")?"autoFocus":"";return i.default.createElement("input",{type:"text",value:this.state.name,autoFocus:e,onBlur:this.valueChanged.bind(this),onFocus:this.selectText.bind(this),onChange:this.updateSelector.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(79);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(81);var i=u(n(83)),l=u(n(86));function u(e){return e&&e.__esModule?e:{default:e}}function s(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"addNewDeclaration",value:function(e){var t=this.state.declarations;e+=1,this.setState({declarations:[].concat(s(t.slice(0,e)),[{property:"addProperty",value:""}],s(t.slice(e,t.length)))})}},{key:"onEdit",value:function(e,t,n){var r=this.state.declarations;r[n].property=t,this.setState({declarations:r}),r[n].value&&this.props.onEdit(r)}},{key:"onValueEdit",value:function(e,t,n){var r=this.state.declarations;r[n].value=t,this.setState({declarations:r}),this.props.onEdit(r)}},{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"declaration"},this.state.declarations.map(function(t,n){return a.default.createElement("div",{key:n},a.default.createElement(i.default,{index:n,key:Math.ceil(1e3*Math.random()),value:t.property,onEdit:e.onEdit.bind(e)}),":",a.default.createElement(l.default,{key:Math.ceil(1e3*Math.random()),index:n,value:t.value,onNewdeclaration:e.addNewDeclaration.bind(e),onEdit:e.onValueEdit.bind(e)}))}))}}]),t}();t.default=c},function(e,t,n){var r=n(82);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".declaration{\n    padding-left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(84);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({value:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.value!==this.state.value&&this.props.onEdit(this.props.value,this.state.value,this.props.index)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){var e=this.state.value.includes("addProperty")?"autoFocus":"";return i.default.createElement("input",{type:"text",value:this.state.value,autoFocus:e,onBlur:this.valueChanged.bind(this),onFocus:this.selectText.bind(this),onChange:this.updateSelector.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(85);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(87);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({value:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.name!==this.state.value&&this.props.onEdit(this.props.value,this.state.value,this.props.index)}},{key:"addNew",value:function(e){"Enter"==e.key&&this.props.onNewdeclaration(this.props.index)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){return i.default.createElement("input",{type:"text",value:this.state.value,onBlur:this.valueChanged.bind(this),onChange:this.updateSelector.bind(this),onFocus:this.selectText.bind(this),onKeyPress:this.addNew.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(88);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";function r(e){return'"'+e.split(":")[0].trim()+'":"'+e.split(":")[1].trim()+'"'}function o(e){var t=e.split("{")[0].trim(),n="{"+e.split("{")[1].split("}")[0].split(";").map(function(e){return e.trim()}).filter(Boolean).map(r).join(",")+"}",o=JSON.parse(n);return e={selector:t,declarations:Object.keys(o).map(function(e){return{property:e,value:o[e]}})}}function a(e){return e.selector+"    {\n"+e.declarations.map(function(e){return"    "+e.property+":     "+e.value+";"}).join("\n")+"\n}"}Object.defineProperty(t,"__esModule",{value:!0}),t.getObjectFormat=function(e){if(!e||0==e.length)return[];return e.split("}").filter(Boolean).map(function(e){return e+"}"}).map(o)},t.convertToStyleString=function(e){return e.map(a).join("\n")}},function(e,t,n){var r=n(91);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=l(n(93));function l(e){return e&&e.__esModule?e:{default:e}}n(95);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.node.result;return void 0===e||void 0!==this.props.node.error?a.default.createElement("div",null):a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"TagExplorer"),a.default.createElement("ul",{className:"tags"},a.default.createElement(i.default,{node:e})))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r},u=n(94);var s=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this.props.node,n=Object.assign({},e.props);if(delete n.children,n=(0,u.convertJSONtoHTMLAttributes)(n),!e||"string"==typeof e)return l.default.createElement("span",null,"null");if("string"==typeof e.props.children){var r=e.props.children;return l.default.createElement("li",null,"<"+e.type+" "+n+">"+r+"</"+e.type+">")}if(e.props&&Array.isArray(e.props.children)){var a=e.props.children.map(function(e,n){return l.default.createElement(t,{key:n,node:e})});return l.default.createElement("li",null,"<"+e.type+" "+n+">",a,"</"+e.type+">")}if("object"===o(e.props.children)){var i=e.props.children;return l.default.createElement("li",null,"<"+(e.type.name||e.type)+" "+n+">",l.default.createElement(t,{key:index,node:i}),"</"+(e.type.name||e.type)+">")}return"function"==typeof e.type?l.default.createElement("li",null,"<"+e.type.name+"/>"):"object"===o(e.type)?l.default.createElement("li",null,"<"+e.type.id+">","</"+e.type.id+">"):l.default.createElement("li",null,"<"+e.type+" "+n+">",e.type,"</"+e.type+">")}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertJSONtoHTMLAttributes=function(e){var t=JSON.stringify(e);if(Object.keys(e).forEach(function(t){return e[t]="'"+e[t]+"'"}),t.length>2){return JSON.stringify(e).split('"').map(function(e){if(!e.includes("{")&&!e.includes("}"))return":"===e?"=":","===e?" ":e}).filter(Boolean).join("")}return""}},function(e,t,n){var r=n(96);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".tags {\n    font-size: 11px;\n}\n\n.tags li {\n    padding-left:10px;\n}",""])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvbG9jYWxTdG9yYWdlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvbmVzdGVkQ29tcG9uZW50U2V0dXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0luZGV4L2luZGV4LmNzcz9kMGQ3Iiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50cy9SZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvY29udmVydC10by1yZWFjdC1jb21wb25lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9qc3hUcmFuc3BpbGVyL2NyZWF0ZS1zdHlsZXNoZWV0LmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlc0NvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2dldC1ub2RlLXRyZWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9Db21wb25lbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvSW5kZXgvaW5kZXguY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1Rvb2wvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50cy9TdHlsZS5jc3M/MGIwOCIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudHMvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3M/NjFhMyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9nZXQtc3RhcnQtdGFncy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudHMvRXZlbnRzLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvY29kZU1vZGlmaWVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9EcmFnZ2FibGVDb21wb25lbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0RyYWdnYWJsZUNvbXBvbmVudC9zdHlsZS5jc3M/MDgyYyIsIndlYnBhY2s6Ly8vLi9zcmMvRHJhZ2dhYmxlQ29tcG9uZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWRpdG9yL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FZGl0b3IvU3R5bGUuY3NzPzFiZmMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VkaXRvci9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VkaXRvci9SZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NvbmZpZ3VyYXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQ29uZmlndXJhdG9yL1N0eWxlLmNzcz9kZDU2Iiwid2VicGFjazovLy8uL3NyYy9Db25maWd1cmF0b3IvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9Ob2Rlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L1N0eWxlLmNzcz9mMzEzIiwid2VicGFjazovLy8uL3NyYy9FdmVudC9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L01lc3NhZ2VzLmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlc0NvbXBvbmVudC9zdHlsZS5jc3M/OGY3ZSIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZXNDb21wb25lbnQvc3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlQ29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlQ29tcG9uZW50L3N0eWxlLmNzcz80NzY4Iiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlQ29tcG9uZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvUmVkdWNlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvRXZlbnRzLmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudHMvTWVzc2FnZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50cy9TdHlsZS5jc3M/Nzk3MSIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL1JlZHVjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0hpc3RvcnkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0hpc3Rvcnkvc3R5bGUuY3NzPzBiMjEiLCJ3ZWJwYWNrOi8vLy4vc3JjL0hpc3Rvcnkvc3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9QcmV2aWV3L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9QcmV2aWV3L3N0eWxlLmNzcz82ZDQ4Iiwid2VicGFjazovLy8uL3NyYy9QcmV2aWV3L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvRHluYW1pY0NvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRHluYW1pY0NvbXBvbmVudC9zdHlsZS5jc3M/ZWQ3YiIsIndlYnBhY2s6Ly8vLi9zcmMvRHluYW1pY0NvbXBvbmVudC9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0ZvY3VzQmFyQ29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9Gb2N1c0JhckNvbXBvbmVudC9zdHlsZS5jc3M/ODdmYyIsIndlYnBhY2s6Ly8vLi9zcmMvRm9jdXNCYXJDb21wb25lbnQvc3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9Gb2N1c0JhckNvbXBvbmVudC9nZXRDb21wb25lbnRNYXJrdXAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL1N0eWxlLmNzcz8zYjk3Iiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvU2VsZWN0b3IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9TZWxlY3Rvci9TdHlsZS5jc3M/YmI4NSIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL1NlbGVjdG9yL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vU3R5bGUuY3NzPzJjZTYiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9Qcm9wZXJ0eS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1Byb3BlcnR5L1N0eWxlLmNzcz85NTgzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vUHJvcGVydHkvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vVmFsdWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9WYWx1ZS9TdHlsZS5jc3M/YjEyZCIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1ZhbHVlL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL1N0eWxlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1N0eWxlLmNzcz9mOTJhIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvVGFnRXhwbG9yZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1RhZ0V4cGxvcmVyL1RhZ3MuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9jb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1RhZ0V4cGxvcmVyL1N0eWxlLmNzcz9hYzQ0Iiwid2VicGFjazovLy8uL3NyYy9UYWdFeHBsb3Jlci9TdHlsZS5jc3MiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiaWQiLCJwdXNoIiwiZm4iLCJtZW1vIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZXRFbGVtZW50IiwidGFyZ2V0IiwicGFyZW50Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwib3B0aW9ucyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsIkVycm9yIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsIm5leHRTaWJsaW5nIiwiaW5zZXJ0QmVmb3JlIiwiYXBwZW5kQ2hpbGQiLCJmaXJzdENoaWxkIiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ1bmRlZmluZWQiLCJhdHRycyIsInR5cGUiLCJub25jZSIsIm5jIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsImVsIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJvYmoiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJ0cmFuc2Zvcm0iLCJkZWZhdWx0Iiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwibGluayIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsImluZGV4IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJwb3BIaXN0b3J5IiwiZWRpdG9ySGlzdG9yeSIsInJlYWREYXRhIiwibGFzdEl0ZW0iLCJwb3AiLCJ3cml0ZURhdGEiLCJyZWFkQ29tcG9uZW50IiwiY29tcG9uZW50TmFtZSIsImNvbXBvbmVudHMiLCJmaW5kIiwiY29tcG9uZW50Iiwid3JpdGVDb21wb25lbnQiLCJpZE1hcmt1cE1vZGlmaWVkIiwiQXJyYXkiLCJpc0FycmF5IiwiZmluZEluZGV4IiwiY29tcCIsIm1hcmt1cCIsImlkTWFya3VwIiwiaWRUYWdzQ291bnQiLCJzdHJpbmciLCJ3b3JkIiwic3BsaXQiLCJyZXBsYWNlIiwibm9JZE1hcmt1cCIsIl9nZXRTdGFydFRhZ3MiLCJJZE1hcmt1cCIsInN0YXJ0VGFncyIsImdldFN0YXJ0VGFncyIsImlkVGFncyIsInRhZyIsInN0YXJ0VGFnIiwiY29uc29sZSIsImxvZyIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIm5vUHVzaCIsInNldEl0ZW0iLCJwdXNoSGlzdG9yeSIsImNoZWNrTmVzdGVkQ29tcG9uZW50cyIsInNhdmVDb21wb25lbnRzVG9XaW5kb3ciLCJuZXN0ZWRDb21wb25lbnRzIiwic2F2ZVRvV2luZG93IiwiZ2V0TmVzdGVkQ29tcG9uZW50cyIsIl9sb2NhbFN0b3JhZ2UiLCJjaGlsZHJlbiIsImluY2x1ZGVzIiwiZ3JhbmRLaWRzIiwiZmxhdCIsIl90b0NvbnN1bWFibGVBcnJheSIsImdldENoaWxkQ29tcG9uZW50cyIsIl9jb252ZXJ0VG9SZWFjdENvbXBvbmVudCIsIl9jcmVhdGVTdHlsZXNoZWV0IiwiY3JlYXRlU3R5bGVzaGVldCIsImNyZWF0ZUNvbXBvbmVudCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsImxldHRlciIsImVyciIsInNob3VsZFVzZU5hdGl2ZSIsImZyb20iLCJzeW1ib2xzIiwidG8iLCJobXIiLCJsb2NhbHMiLCJ1cGRhdGVzZWxlY3RlZEluZGV4IiwiY3VycmVudFRhcmdldCIsImlubmVyVGV4dCIsInNlbGVjdGVkQ29tcG9uZW50Iiwic3RhdGUiLCJlbGVtZW50cyIsInNlbGVjdGVkSW5kZXgiLCJzZWxlY3RlZGNvbXBvbmVudG5hbWUiLCJzZXRTdGF0ZSIsInNhdmVFbGVtZW50IiwiZWxlbWVudCIsImVsZW1lbnRFeGlzdCIsImVsZW1lbnRVbmRlckVkaXQiLCJuZXdFbGVtZW50IiwiZXZlbnRzIiwiTWF0aCIsImNlaWwiLCJyYW5kb20iLCJjb25maWciLCJ1cGRhdGVFdmVudCIsIm5ld0VsZW1lbnRzIiwib25EZWxldGUiLCJldmVudCIsInBhcmVudEVsZW1lbnQiLCJ1cGRhdGVDb25maWciLCJwYXJlbnROYW1lIiwiY2hpbGQiLCJjaGlsZE5hbWUiLCJvdmVyaWRlU3RhdGUiLCJvdmVycmlkZSIsIl9jb2RlTW9kaWZpZXIiLCJfbmVzdGVkQ29tcG9uZW50U2V0dXAiLCJnZXRDb21wb25lbnRTdHJpbmciLCJjb252ZXJ0VG9SZWFjdGNvbXBvbmVudCIsImNvbXBvbmVudFN0cmluZyIsImRyYWctZHJvcC1mZWF0dXJlIiwiZXZhbCIsIkJhYmVsIiwicHJlc2V0cyIsInBsdWdpbnMiLCJjb2RlIiwic3RhdGVPdmVyaWRlTWFya3VwIiwiZ2V0U3RhdGVkTWFya3VwIiwiY2hpbGRDb21wb25lbnRzIiwicHVibGlzaGFibGVFdmVudHMiLCJwdWJsaXNoYWJsZSIsImV2ZW50VXNlZEluUGFyZW50IiwicHVibGlzaGFibGVFdmVudCIsInB1Ymxpc2hOYW1lIiwiZnVuY3Rpb25EZWYiLCJjb2RlTW9kaWZpZXIiLCJyZWR1Y2VyIiwicHJvcHMiLCJnZXRDb21wb25lbnRFdmVudGVkTWFya3VwIiwiZ2V0Q29tcG9uZW50TmFtZUluTWFya3VwIiwiY29tcG9uZW50UmVkdWNlcnMiLCJmdW5jdGlvbk5hbWUiLCJSZWFjdENvbXBvbmVudCIsInRvRGVsZXRlIiwicXVlcnlTZWxlY3RvckFsbCIsImR5bmFtaWNTdHlsZSIsImlubmVySFRNTCIsImJvZHkiLCJfcmVhY3QiLCJNZXNzYWdlc0NvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwiZ2V0UHJvdG90eXBlT2YiLCJDb21wb25lbnQiLCJtZXNzYWdlcyIsIl9yZWFjdDIiLCJjbGFzc05hbWUiLCJtZXNzYWdlIiwiX01lc3NhZ2VDb21wb25lbnQyIiwiZ2V0Tm9kZVRyZWUiLCJqc3giLCJlcnJvciIsIl9kZWZpbmVQcm9wZXJ0eSIsIlJlYWN0Iiwic2F2ZVZhcmlhbnRzIiwidmFyaWFudHMiLCJTZXQiLCJzb3VyY2VDb21wb25lbnQiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VzdGF0ZSIsIm5ld1N0YXRlIiwidXVpZCIsImRlbGV0ZUNvbXBvbmVudCIsInRhcmdldFV1aWQiLCJfZ2V0Q29tcG9uZW50TWFya3VwIiwiZGVsZXRlU3ViQ29tcG9uZW50IiwibW92ZUNvbXBvbmVudCIsIkluZGV4IiwiX1Rvb2wyIiwiUmVhY3RET00iLCJyZW5kZXIiLCJnZXRFbGVtZW50QnlJZCIsImsiLCJmb3IiLCJxIiwidSIsInYiLCJ3IiwieCIsInkiLCJ6IiwiYWEiLCJiYSIsIkEiLCJpdGVyYXRvciIsIkIiLCJhIiwiYiIsImciLCJoIiwiZiIsImZyYW1lc1RvUG9wIiwiY2EiLCJDIiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkQiLCJFIiwiY29udGV4dCIsInVwZGF0ZXIiLCJGIiwiRyIsImlzUmVhY3RDb21wb25lbnQiLCJmb3JjZVVwZGF0ZSIsIkgiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiSSIsImN1cnJlbnQiLCJKIiwiSyIsIkwiLCJyZWYiLCJfX3NlbGYiLCJfX3NvdXJjZSIsIk0iLCJkZWZhdWx0UHJvcHMiLCIkJHR5cGVvZiIsIl9vd25lciIsIk4iLCJPIiwiUCIsIlEiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJSIiwiVSIsIlMiLCJUIiwibmV4dCIsImRvbmUiLCI9IiwiOiIsImVzY2FwZSIsImVhIiwiZmEiLCJWIiwiZGEiLCJXIiwiWCIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm9ubHkiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfY29udGV4dCIsImZvcndhcmRSZWYiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImNvbXBhcmUiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlRGVidWdWYWx1ZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50T3duZXIiLCJZIiwiWiIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiaGEiLCJpYSIsIm9uRXJyb3IiLCJqYSIsInNsaWNlIiwibGEiLCJtYSIsIm5hIiwib2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInBhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJxYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJyYSIsInNhIiwiZGVwZW5kZW5jaWVzIiwidGEiLCJ1YSIsInZhIiwid2EiLCJrYSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsInJldHVybiIsIk1hIiwiZGlzcGF0Y2hDb25maWciLCJOYSIsIl90YXJnZXRJbnN0IiwiT2EiLCJQYSIsIlFhIiwiUmEiLCJTYSIsInRvTG93ZXJDYXNlIiwiVGEiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYSIsIlZhIiwiV2EiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGEiLCJZYSIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwidGV4dENvbnRlbnQiLCJmYiIsImdiIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpYiIsImV2ZW50UG9vbCIsImpiIiwiZGVzdHJ1Y3RvciIsImhiIiwiZ2V0UG9vbGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiZXZlbnRQaGFzZSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwidGltZVN0YW1wIiwiRGF0ZSIsIm5vdyIsImlzVHJ1c3RlZCIsImV4dGVuZCIsImtiIiwiZGF0YSIsImxiIiwibWIiLCJuYiIsIm9iIiwiZG9jdW1lbnRNb2RlIiwicGIiLCJxYiIsInJiIiwic2IiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwidGIiLCJ1YiIsImtleUNvZGUiLCJ2YiIsImRldGFpbCIsIndiIiwiemIiLCJsb2NhbGUiLCJ3aGljaCIsInhiIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwieWIiLCJBYiIsIkJiIiwiQ2IiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJNYiIsIm5vZGVOYW1lIiwiTmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIk9iIiwiUGIiLCJSYiIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiUWIiLCJTYiIsImNoZWNrZWQiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiZGlzcGxheU5hbWUiLCJqYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwia2MiLCJsYyIsIm1jIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInJjIiwic2MiLCJ0b1VwcGVyQ2FzZSIsInRjIiwicGMiLCJpc05hTiIsInFjIiwidGVzdCIsIm9jIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ1YyIsInZjIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJ3YyIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJ4YyIsInljIiwiemMiLCJBYyIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiQmMiLCJjaGFuZ2UiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiZGV0YWNoRXZlbnQiLCJLYyIsIkxjIiwiYXR0YWNoRXZlbnQiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJRYyIsInZpZXciLCJSYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJTYyIsImdldE1vZGlmaWVyU3RhdGUiLCJUYyIsIlVjIiwiVmMiLCJXYyIsIlhjIiwiWWMiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIlpjIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiJGMiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImFkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJiZCIsImNkIiwiZGQiLCJlZCIsImVmZmVjdFRhZyIsImZkIiwiaGQiLCJzaWJsaW5nIiwiZ2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiamQiLCJjbGlwYm9hcmREYXRhIiwia2QiLCJsZCIsImNoYXJDb2RlIiwibWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwibmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0Iiwib2QiLCJsb2NhdGlvbiIsInJlcGVhdCIsInBkIiwiZGF0YVRyYW5zZmVyIiwicWQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwicmQiLCJzZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwidGQiLCJ1ZCIsInZkIiwid2QiLCJpc0ludGVyYWN0aXZlIiwieGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJ5ZCIsInpkIiwiQWQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkJkIiwiQ2QiLCJEZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiSmQiLCJLZCIsIkxkIiwibm9kZSIsIm9mZnNldCIsIk5kIiwiY29udGVudFdpbmRvdyIsIk9kIiwiY29udGVudEVkaXRhYmxlIiwiUWQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiTWQiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiZG9jdW1lbnRFbGVtZW50Iiwic3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsIm1pbiIsImdldFNlbGVjdGlvbiIsInJhbmdlQ291bnQiLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUmQiLCJTZCIsInNlbGVjdCIsIlRkIiwiVWQiLCJWZCIsIldkIiwiWGQiLCJZZCIsIm9uU2VsZWN0IiwiJGQiLCJaZCIsImFlIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJiZSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiY2UiLCJkZSIsImVlIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImZlIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsImdlIiwiaGUiLCJpZSIsImplIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm5hbWVzcGFjZVVSSSIsImtlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwibGUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIm1lIiwibmUiLCJ0cmltIiwib2UiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInBlIiwibWVudWl0ZW0iLCJhcmVhIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInFlIiwicmUiLCJpcyIsInNlIiwiYmx1ciIsInRlIiwidWUiLCJ2ZSIsIndlIiwiYXV0b0ZvY3VzIiwieGUiLCJfX2h0bWwiLCJ5ZSIsInNldFRpbWVvdXQiLCJ6ZSIsImNsZWFyVGltZW91dCIsIkFlIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsIkJlIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJEZSIsIkVlIiwiRmUiLCJHZSIsIkhlIiwiSWUiLCJKZSIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiS2UiLCJMZSIsIk1lIiwiTmUiLCJnZXRDaGlsZENvbnRleHQiLCJPZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJVZSIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiY29udGV4dERlcGVuZGVuY2llcyIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiVmUiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImNmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJkZiIsImZmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJnZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwiamYiLCJrZiIsImJhc2VTdGF0ZSIsInRmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImxmIiwibmYiLCJtZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ1ZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInZmIiwiY29udGV4dFR5cGUiLCJ3ZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsInhmIiwieWYiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInpmIiwiQWYiLCJfc3RyaW5nUmVmIiwiQmYiLCJDZiIsIk1hcCIsImRlbGV0ZSIsIkRmIiwiRWYiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsInF1ZXVlIiwiYmFzZVVwZGF0ZSIsIm5nIiwib2ciLCJwZyIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJkaXNwYXRjaCIsImFjdGlvbiIsInFnIiwibGFzdCIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsInJnIiwiZGVzdHJveSIsImRlcHMiLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwicmVhZENvbnRleHQiLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsIlFnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiUmciLCJwZW5kaW5nQ29udGV4dCIsIlNnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiVGciLCJVZyIsInRoZW4iLCJoZiIsIldlIiwiaHlkcmF0ZSIsImhpZGRlbiIsImZpcnN0Iiwib2JzZXJ2ZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsInN0YWNrIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsIm9uQ2xpY2siLCJvbmNsaWNrIiwicGgiLCJXZWFrU2V0IiwicWgiLCJyaCIsInNoIiwidGgiLCJ2aCIsImNvbXBvbmVudFdpbGxVbm1vdW50Iiwid2giLCJ4aCIsInloIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsInpoIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIkNlIiwiZGlzcGxheSIsInVoIiwiaGkiLCJYaCIsImhhcyIsImFkZCIsIkJoIiwiV2Vha01hcCIsIkNoIiwiRGgiLCJFaCIsImNvbXBvbmVudERpZENhdGNoIiwiRmgiLCJjb21wb25lbnRTdGFjayIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJVaCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVmgiLCJaaCIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImVmIiwiUGQiLCJZaCIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiZmluaXNoZWRXb3JrIiwiJGgiLCJhaSIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJiaSIsImNpIiwiZGkiLCJtYXhEdXJhdGlvbiIsInBpbmdDYWNoZSIsImVpIiwiZmkiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsImdpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsIm5pIiwib2kiLCJwaSIsInFpIiwicmkiLCJzaSIsInRpIiwidW5zdGFibGVfbm93IiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwidGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJCaSIsIkNpIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJEaSIsIkVpIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIkZpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsIkdpIiwiSGkiLCJJaSIsIkppIiwiS2kiLCJMaSIsIk5pIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJPaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJQaSIsIl9pbnRlcm5hbFJvb3QiLCJRaSIsIlNpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiUmkiLCJUaSIsIk1pIiwiZm9ybSIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsIlZpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2NyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiVGUiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsIldpIiwiWGkiLCJnbG9iYWwiLCJwcmV2aW91cyIsInByaW9yaXR5TGV2ZWwiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInBlcmZvcm1hbmNlIiwiX3NjaGVkTW9jayIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIkZ1bmN0aW9uIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCIkMSIsIl9SZWR1Y2VyIiwiX2dldE5vZGVUcmVlIiwiVG9vbCIsIl90aGlzIiwicHJldmlld0NvbXBvbmVudCIsInNlbGVjdGVkRWxlbWVudCIsIm5vZGVUcmVlIiwiX0RyYWdnYWJsZUNvbXBvbmVudDIiLCJfRWxlbWVudHMyIiwib25TZWxlY3Rpb24iLCJfRXZlbnRzMiIsIm9uRXZlbnRzVXBkYXRlIiwib25Db25maWdVcGRhdGUiLCJfRWRpdG9yMiIsIm9uU2F2ZSIsIl9QcmV2aWV3MiIsIl9UYWdFeHBsb3JlcjIiLCJfU3R5bGVFeHBsb3JlcjIiLCJvbkVkaXQiLCJ1cGRhdGVTdHlsZXMiLCJfSGlzdG9yeTIiLCJfRXZlbnRzIiwiQ29tcG9uZW50cyIsInZhcmlhbnQiLCJfdHlwZW9mIiwiY3VycmVudENvbXBvbmVudCIsImNyZWF0ZVZhcmlhbnQiLCJfdGhpczIiLCJlbGVtZW50TGlzdCIsIl9FbGVtZW50MiIsIm9uU2VsZWN0aW9uQ2hhbmdlIiwib25FeHBvcnQiLCJvbkdlbmVyYXRlVmFyaWFudCIsImdlbmVyYXRlVmFyaWFudCIsIkVsZW1lbnQiLCJkcmFnZ2FibGUiLCJkYXRhLW5hbWUiLCJvbkRyYWdTdGFydCIsImhhbmRsZURyYWciLCJzZWxlY3Rpb25DaGFuZ2VkIiwiZ2V0QXR0cmlidXRlIiwic2V0RGF0YSIsImV2ZW50Q2FsbGJhY2tzIiwiRHJhZ2dhYmxlQ29tcG9uZW50IiwicG9zaXRpb24iLCJtaW5pbWlzZWQiLCJfdGhpczMiLCJvbkRyYWdFbmQiLCJtb3ZlRGl2IiwidGl0bGUiLCJvbk1vdXNlRG93biIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VVcCIsIm9uTW91c2VMZWF2ZSIsInRvZ2dsZU1pbmltaXNlTWF4aW1pc2UiLCJFZGl0b3IiLCJwbGFjZWhvbGRlciIsIm9uQ2hhbmdlIiwidXBkYXRlTmFtZSIsInB1Ymxpc2hFbGVtZW50IiwidXBkYXRlTWFya3VwIiwidXBkYXRlU3R5bGUiLCJ1cGRhdGVTdGF0ZSIsImdldFByb3BlcnR5Q29udGFpbmluZ1Byb3BzIiwic2VsZWN0ZWRUYWciLCJfTWVzc2FnZXMyIiwiZXZlbnRzT2ZTZWxlY3RlZFRhZyIsImNvbmZpZ3VyYXRvciIsImNoaWxkQ29tcG9uZW50TmFtZSIsImV2ZW50TmFtZXMiLCJfRXZlbnQyIiwic2VsZWN0ZWRUYWdJRCIsImRlbGV0ZUV2ZW50IiwiX0NvbmZpZ3VyYXRvcjIiLCJ1cGRhdGVDb25maWd1cmF0aW9uIiwiX05vZGVzMiIsIm9uU2VsZWN0ZWRUYWdDaGFuZ2VkIiwic2VsZWN0ZWRUYWdDaGFuZ2VkIiwiQ29uZmlndXJhdG9yIiwidG9nZ2VsT3ZlcnJpZGUiLCJOb2RlcyIsIkV2ZW50IiwidXBkYXRlUHVibGlzaE5hbWUiLCJldmVudE5hbWUiLCJ1cGRhdGVFdmVudE5hbWUiLCJ1cGRhdGVSZWR1Y2VyIiwidXBkYXRlRXZlbnRUeXBlIiwicHVibGlzaEV2ZW50IiwiX01lc3NhZ2VzQ29tcG9uZW50IiwiX01lc3NhZ2VzQ29tcG9uZW50MiIsIk1lc3NhZ2VDb21wb25lbnQiLCJfbW9kdWxlJGV4cG9ydHMiLCJIaXN0b3J5IiwicmVmcmVzaFRvUHJldmlvdXMiLCJfQ29tcG9uZW50MiIsIlByZXZpZXciLCJjb29yZGluYXRlcyIsIm9uRHJhZ092ZXIiLCJwcmV2aW91c0Ryb3AiLCJjbGFzc0xpc3QiLCJvbkRyb3AiLCJnZXREYXRhIiwib25Nb3VzZU92ZXIiLCJwcmVTZWxlY3RlZGNoaWxkIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaGlkZVRvb2wiLCJyYW5kb21LZXkiLCJzZXRUb0Ryb3BNb2RlIiwic2V0VG9FZGl0TW9kZSIsImludGVyYWN0aXZlTW9kZSIsIl9EeW5hbWljQ29tcG9uZW50MiIsIl9Gb2N1c0JhckNvbXBvbmVudDIiLCJyZWZyZXNoIiwiaGlkZSIsIkR5bmFtaWNDb21wb25lbnQiLCJGb2N1c0JhckNvbXBvbmVudCIsIm1vdmVDaGlsZFVwIiwibW92ZUNoaWxkRG93biIsImRlbGV0ZUNoaWxkIiwiY29tcG9uZW50TWFya3VwIiwic3VzcGVjdCIsImNsb3NlVGFnIiwiY2xvc2VUYWdJbmRleCIsInN1YnN0ciIsInBhcnNlUmlnaHQiLCJ1dWlkSW5kZXgiLCJwYXJzZUxlZnQiLCJnZXRDb21wb25lbnRNYXJrdXAiLCJfU3R5bGUiLCJTdHlsZUV4cGxvcmVyIiwicnVsZXMiLCJnZXRPYmplY3RGb3JtYXQiLCJuZXdSdWxlcyIsInVuc2hpZnQiLCJzZWxlY3RvciIsImRlY2xhcmF0aW9ucyIsInJ1bGUiLCJjb252ZXJ0VG9TdHlsZVN0cmluZyIsIl9SdWxlMiIsIm9uVXBkYXRlIiwicnVsZVVwZGF0ZSIsImFkZFJ1bGUiLCJSdWxlIiwiX1NlbGVjdG9yMiIsInVwZGF0ZVNlbGVjdG9yIiwiX0RlY2xhcmF0aW9uMiIsInVwZGF0ZURlY2xhcmF0aW9ucyIsIlNlbGVjdG9yIiwib25CbHVyIiwidmFsdWVDaGFuZ2VkIiwib25Gb2N1cyIsInNlbGVjdFRleHQiLCJEZWNsYXJhdGlvbiIsInByZXZpb3VzVmFsdWUiLCJjdXJyZW50VmFsdWUiLCJkZWNsYXJhdGlvbiIsIl9Qcm9wZXJ0eTIiLCJfVmFsdWUyIiwib25OZXdkZWNsYXJhdGlvbiIsImFkZE5ld0RlY2xhcmF0aW9uIiwib25WYWx1ZUVkaXQiLCJQcm9wZXJ0eSIsIlZhbHVlIiwib25LZXlQcmVzcyIsImFkZE5ldyIsImNvbnZlcnRUb1N0cmluZyIsImNvbnZlcnRUb09iamVjdCIsInByb3BlcnRpZXMiLCJydWxlVG9TdHJpbmciLCJUYWdFeHBsb3JlciIsIl9UYWdzMiIsIl9jb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMiLCJUYWdzIiwiY29udmVydEpTT050b0hUTUxBdHRyaWJ1dGVzIiwicHJvcCJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGlCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJQUFJSSxFQUFLWCxPQUFPWSxPQUFPLE1BR3ZCLEdBRkExQixFQUFvQmtCLEVBQUVPLEdBQ3RCWCxPQUFPQyxlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFBVEYsRUFBbUIsSUFBSSxJQUFJTSxLQUFPTixFQUFPckIsRUFBb0JVLEVBQUVlLEVBQUlFLEVBQUssU0FBU0EsR0FBTyxPQUFPTixFQUFNTSxJQUFRQyxLQUFLLEtBQU1ELElBQzlJLE9BQU9GLEdBSVJ6QixFQUFvQjZCLEVBQUksU0FBUzFCLEdBQ2hDLElBQUlTLEVBQVNULEdBQVVBLEVBQU9xQixXQUM3QixXQUF3QixPQUFPckIsRUFBZ0IsU0FDL0MsV0FBOEIsT0FBT0EsR0FFdEMsT0FEQUgsRUFBb0JVLEVBQUVFLEVBQVEsSUFBS0EsR0FDNUJBLEdBSVJaLEVBQW9CYSxFQUFJLFNBQVNpQixFQUFRQyxHQUFZLE9BQU9qQixPQUFPa0IsVUFBVUMsZUFBZTFCLEtBQUt1QixFQUFRQyxJQUd6Ry9CLEVBQW9Ca0MsRUFBSSxHQUlqQmxDLEVBQW9CQSxFQUFvQm1DLEVBQUksSSwrQkMvRW5EaEMsRUFBT0QsUUFBVUYsRUFBUSxLLDZCQ0kzQkcsRUFBT0QsUUFBVSxTQUFVa0MsR0FDekIsSUFBSUMsRUFBTyxHQWdEWCxPQTlDQUEsRUFBS0MsU0FBVyxXQUNkLE9BQU9DLEtBQUtDLElBQUksU0FBVUMsR0FDeEIsSUFBSUMsRUErQ1YsU0FBZ0NELEVBQU1MLEdBQ3BDLElBQUlNLEVBQVVELEVBQUssSUFBTSxHQUNyQkUsRUFBYUYsRUFBSyxHQUV0QixJQUFLRSxFQUNILE9BQU9ELEVBR1QsR0FBSU4sR0FBZ0MsbUJBQVRRLEtBQXFCLENBQzlDLElBQUlDLEdBV1dDLEVBWGVILEVBZXpCLG1FQUZNQyxLQUFLRyxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVKLE1BRXRDLE9BZGpCSyxFQUFhUixFQUFXUyxRQUFRWixJQUFJLFNBQVVhLEdBQ2hELE1BQU8saUJBQW1CVixFQUFXVyxXQUFhRCxFQUFTLFFBRTdELE1BQU8sQ0FBQ1gsR0FBU2EsT0FBT0osR0FBWUksT0FBTyxDQUFDVixJQUFnQlcsS0FBSyxNQU9yRSxJQUFtQlYsRUFKakIsTUFBTyxDQUFDSixHQUFTYyxLQUFLLE1BL0RKQyxDQUF1QmhCLEVBQU1MLEdBRTNDLE9BQUlLLEVBQUssR0FDQSxVQUFZQSxFQUFLLEdBQUssSUFBTUMsRUFBVSxJQUV0Q0EsSUFFUmMsS0FBSyxLQUlWbkIsRUFBS2pDLEVBQUksU0FBVUUsRUFBU29ELEdBQ0gsaUJBQVpwRCxJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxFQUFTLE1BSzdCLElBRkEsSUFBSXFELEVBQXlCLEdBRXBCdkQsRUFBSSxFQUFHQSxFQUFJbUMsS0FBS3FCLE9BQVF4RCxJQUFLLENBQ3BDLElBQUl5RCxFQUFLdEIsS0FBS25DLEdBQUcsR0FFUCxNQUFOeUQsSUFDRkYsRUFBdUJFLElBQU0sR0FJakMsSUFBS3pELEVBQUksRUFBR0EsRUFBSUUsRUFBUXNELE9BQVF4RCxJQUFLLENBQ25DLElBQUlxQyxFQUFPbkMsRUFBUUYsR0FLSixNQUFYcUMsRUFBSyxJQUFla0IsRUFBdUJsQixFQUFLLE1BQzlDaUIsSUFBZWpCLEVBQUssR0FDdEJBLEVBQUssR0FBS2lCLEVBQ0RBLElBQ1RqQixFQUFLLEdBQUssSUFBTUEsRUFBSyxHQUFLLFVBQVlpQixFQUFhLEtBR3JEckIsRUFBS3lCLEtBQUtyQixNQUtUSixJLGdCQ25EVCxJQUV3QjBCLEVBQ25CQyxFQUhEQyxFQUFjLEdBV2RDLEdBVG9CSCxFQVNGLFdBTXJCLE9BQU9JLFFBQVVDLFVBQVlBLFNBQVNDLE1BQVFGLE9BQU9HLE1BWjlDLFdBRU4sWUFEb0IsSUFBVE4sSUFBc0JBLEVBQU9ELEVBQUdRLE1BQU1oQyxLQUFNaUMsWUFDaERSLElBb0JMUyxFQUFhLFNBQVdWLEdBQzNCLElBQUlDLEVBQU8sR0FFWCxPQUFPLFNBQVNVLEVBQVFDLEdBTVQsR0FBc0IsbUJBQVhELEVBQ0gsT0FBT0EsSUFFZixRQUE0QixJQUFqQlYsRUFBS1UsR0FBeUIsQ0FDdEQsSUFBSUUsRUFwQlMsU0FBVUYsRUFBUUMsR0FDaEMsT0FBSUEsRUFDS0EsRUFBT0UsY0FBY0gsR0FFdkJOLFNBQVNTLGNBQWNILElBZ0JEbkUsS0FBS2dDLEtBQU1tQyxFQUFRQyxHQUUvQyxHQUFJUixPQUFPVyxtQkFBcUJGLGFBQXVCVCxPQUFPVyxrQkFDN0QsSUFHQ0YsRUFBY0EsRUFBWUcsZ0JBQWdCQyxLQUN6QyxNQUFNQyxHQUNQTCxFQUFjLEtBR2hCWixFQUFLVSxHQUFVRSxFQUVoQixPQUFPWixFQUFLVSxJQTFCRyxHQThCYlEsRUFBWSxLQUNaQyxFQUFtQixFQUNuQkMsRUFBc0IsR0FFdEJDLEVBQVVyRixFQUFRLElBcUR0QixTQUFTc0YsRUFBZ0JDLEVBQVFDLEdBQ2hDLElBQUssSUFBSXBGLEVBQUksRUFBR0EsRUFBSW1GLEVBQU8zQixPQUFReEQsSUFBSyxDQUN2QyxJQUFJcUMsRUFBTzhDLEVBQU9uRixHQUNkcUYsRUFBV3hCLEVBQVl4QixFQUFLb0IsSUFFaEMsR0FBRzRCLEVBQVUsQ0FDWkEsRUFBU0MsT0FFVCxJQUFJLElBQUlDLEVBQUksRUFBR0EsRUFBSUYsRUFBU0csTUFBTWhDLE9BQVErQixJQUN6Q0YsRUFBU0csTUFBTUQsR0FBR2xELEVBQUttRCxNQUFNRCxJQUc5QixLQUFNQSxFQUFJbEQsRUFBS21ELE1BQU1oQyxPQUFRK0IsSUFDNUJGLEVBQVNHLE1BQU05QixLQUFLK0IsRUFBU3BELEVBQUttRCxNQUFNRCxHQUFJSCxRQUV2QyxDQUNOLElBQUlJLEVBQVEsR0FFWixJQUFRRCxFQUFJLEVBQUdBLEVBQUlsRCxFQUFLbUQsTUFBTWhDLE9BQVErQixJQUNyQ0MsRUFBTTlCLEtBQUsrQixFQUFTcEQsRUFBS21ELE1BQU1ELEdBQUlILElBR3BDdkIsRUFBWXhCLEVBQUtvQixJQUFNLENBQUNBLEdBQUlwQixFQUFLb0IsR0FBSTZCLEtBQU0sRUFBR0UsTUFBT0EsS0FLeEQsU0FBU0UsRUFBY3pELEVBQU1tRCxHQUk1QixJQUhBLElBQUlELEVBQVMsR0FDVFEsRUFBWSxHQUVQM0YsRUFBSSxFQUFHQSxFQUFJaUMsRUFBS3VCLE9BQVF4RCxJQUFLLENBQ3JDLElBQUlxQyxFQUFPSixFQUFLakMsR0FDWnlELEVBQUsyQixFQUFRUSxLQUFPdkQsRUFBSyxHQUFLK0MsRUFBUVEsS0FBT3ZELEVBQUssR0FJbER3RCxFQUFPLENBQUNDLElBSEZ6RCxFQUFLLEdBR08wRCxNQUZWMUQsRUFBSyxHQUVtQkssVUFEcEJMLEVBQUssSUFHakJzRCxFQUFVbEMsR0FDVGtDLEVBQVVsQyxHQUFJK0IsTUFBTTlCLEtBQUttQyxHQURYVixFQUFPekIsS0FBS2lDLEVBQVVsQyxHQUFNLENBQUNBLEdBQUlBLEVBQUkrQixNQUFPLENBQUNLLEtBSWpFLE9BQU9WLEVBR1IsU0FBU2EsRUFBb0JaLEVBQVNhLEdBQ3JDLElBQUkzQixFQUFTRCxFQUFXZSxFQUFRYyxZQUVoQyxJQUFLNUIsRUFDSixNQUFNLElBQUk2QixNQUFNLCtHQUdqQixJQUFJQyxFQUFnQ3BCLEVBQW9CQSxFQUFvQnhCLE9BQVMsR0FFckYsR0FBeUIsUUFBckI0QixFQUFRaUIsU0FDTkQsRUFFTUEsRUFBOEJFLFlBQ3hDaEMsRUFBT2lDLGFBQWFOLEVBQU9HLEVBQThCRSxhQUV6RGhDLEVBQU9rQyxZQUFZUCxHQUpuQjNCLEVBQU9pQyxhQUFhTixFQUFPM0IsRUFBT21DLFlBTW5DekIsRUFBb0J0QixLQUFLdUMsUUFDbkIsR0FBeUIsV0FBckJiLEVBQVFpQixTQUNsQi9CLEVBQU9rQyxZQUFZUCxPQUNiLElBQWdDLGlCQUFyQmIsRUFBUWlCLFdBQXlCakIsRUFBUWlCLFNBQVNLLE9BSW5FLE1BQU0sSUFBSVAsTUFBTSw4TEFIaEIsSUFBSUcsRUFBY2pDLEVBQVdlLEVBQVFpQixTQUFTSyxPQUFRcEMsR0FDdERBLEVBQU9pQyxhQUFhTixFQUFPSyxJQU03QixTQUFTSyxFQUFvQlYsR0FDNUIsR0FBeUIsT0FBckJBLEVBQU1XLFdBQXFCLE9BQU8sRUFDdENYLEVBQU1XLFdBQVdDLFlBQVlaLEdBRTdCLElBQUlhLEVBQU05QixFQUFvQitCLFFBQVFkLEdBQ25DYSxHQUFPLEdBQ1Q5QixFQUFvQmdDLE9BQU9GLEVBQUssR0FJbEMsU0FBU0csRUFBb0I3QixHQUM1QixJQUFJYSxFQUFRakMsU0FBU2tELGNBQWMsU0FNbkMsUUFKMEJDLElBQXZCL0IsRUFBUWdDLE1BQU1DLE9BQ2hCakMsRUFBUWdDLE1BQU1DLEtBQU8saUJBR0tGLElBQXhCL0IsRUFBUWdDLE1BQU1FLE1BQXFCLENBQ3JDLElBQUlBLEVBZ0NOLFdBQ0ssRUFJSixPQUFPMUgsRUFBQTJILEdBckNNQyxHQUNSRixJQUNIbEMsRUFBUWdDLE1BQU1FLE1BQVFBLEdBT3hCLE9BSEFHLEVBQVN4QixFQUFPYixFQUFRZ0MsT0FDeEJwQixFQUFtQlosRUFBU2EsR0FFckJBLEVBaUJSLFNBQVN3QixFQUFVQyxFQUFJTixHQUN0QjFHLE9BQU9pSCxLQUFLUCxHQUFPUSxRQUFRLFNBQVVyRyxHQUNwQ21HLEVBQUdHLGFBQWF0RyxFQUFLNkYsRUFBTTdGLE1BWTdCLFNBQVNrRSxFQUFVcUMsRUFBSzFDLEdBQ3ZCLElBQUlhLEVBQU84QixFQUFRQyxFQUFRQyxFQUczQixHQUFJN0MsRUFBUThDLFdBQWFKLEVBQUloQyxJQUFLLENBSzlCLEtBSkFtQyxFQUFzQyxtQkFBdEI3QyxFQUFROEMsVUFDeEI5QyxFQUFROEMsVUFBVUosRUFBSWhDLEtBQ3RCVixFQUFROEMsVUFBVUMsUUFBUUwsRUFBSWhDLE1BUzdCLE9BQU8sYUFKUGdDLEVBQUloQyxJQUFNbUMsRUFVZixHQUFJN0MsRUFBUU4sVUFBVyxDQUN0QixJQUFJc0QsRUFBYXJELElBRWpCa0IsRUFBUW5CLElBQWNBLEVBQVltQyxFQUFtQjdCLElBRXJEMkMsRUFBU00sRUFBb0I3RyxLQUFLLEtBQU15RSxFQUFPbUMsR0FBWSxHQUMzREosRUFBU0ssRUFBb0I3RyxLQUFLLEtBQU15RSxFQUFPbUMsR0FBWSxRQUczRE4sRUFBSXBGLFdBQ1csbUJBQVI0RixLQUN3QixtQkFBeEJBLElBQUlDLGlCQUNvQixtQkFBeEJELElBQUlFLGlCQUNLLG1CQUFUQyxNQUNTLG1CQUFUakcsTUFFUHlELEVBbEVGLFNBQTRCYixHQUMzQixJQUFJc0QsRUFBTzFFLFNBQVNrRCxjQUFjLFFBVWxDLFlBUjBCQyxJQUF2Qi9CLEVBQVFnQyxNQUFNQyxPQUNoQmpDLEVBQVFnQyxNQUFNQyxLQUFPLFlBRXRCakMsRUFBUWdDLE1BQU11QixJQUFNLGFBRXBCbEIsRUFBU2lCLEVBQU10RCxFQUFRZ0MsT0FDdkJwQixFQUFtQlosRUFBU3NELEdBRXJCQSxFQXVERUUsQ0FBa0J4RCxHQUMxQjJDLEVBaUZGLFNBQXFCVyxFQUFNdEQsRUFBUzBDLEdBQ25DLElBQUloQyxFQUFNZ0MsRUFBSWhDLElBQ1ZwRCxFQUFZb0YsRUFBSXBGLFVBUWhCbUcsT0FBZ0QxQixJQUFsQy9CLEVBQVEwRCx1QkFBdUNwRyxHQUU3RDBDLEVBQVEwRCx1QkFBeUJELEtBQ3BDL0MsRUFBTWIsRUFBUWEsSUFHWHBELElBRUhvRCxHQUFPLHVEQUF5RHRELEtBQUtHLFNBQVNDLG1CQUFtQkMsS0FBS0MsVUFBVUosTUFBZ0IsT0FHakksSUFBSXFHLEVBQU8sSUFBSU4sS0FBSyxDQUFDM0MsR0FBTSxDQUFFdUIsS0FBTSxhQUUvQjJCLEVBQVNOLEVBQUtPLEtBRWxCUCxFQUFLTyxLQUFPWCxJQUFJQyxnQkFBZ0JRLEdBRTdCQyxHQUFRVixJQUFJRSxnQkFBZ0JRLElBNUdWeEgsS0FBSyxLQUFNeUUsRUFBT2IsR0FDdEM0QyxFQUFTLFdBQ1JyQixFQUFtQlYsR0FFaEJBLEVBQU1nRCxNQUFNWCxJQUFJRSxnQkFBZ0J2QyxFQUFNZ0QsU0FHMUNoRCxFQUFRZ0IsRUFBbUI3QixHQUMzQjJDLEVBc0RGLFNBQXFCOUIsRUFBTzZCLEdBQzNCLElBQUloQyxFQUFNZ0MsRUFBSWhDLElBQ1ZDLEVBQVErQixFQUFJL0IsTUFFYkEsR0FDRkUsRUFBTTRCLGFBQWEsUUFBUzlCLEdBRzdCLEdBQUdFLEVBQU1pRCxXQUNSakQsRUFBTWlELFdBQVdDLFFBQVVyRCxNQUNyQixDQUNOLEtBQU1HLEVBQU1RLFlBQ1hSLEVBQU1ZLFlBQVlaLEVBQU1RLFlBR3pCUixFQUFNTyxZQUFZeEMsU0FBU29GLGVBQWV0RCxNQXJFdEJ0RSxLQUFLLEtBQU15RSxHQUMvQitCLEVBQVMsV0FDUnJCLEVBQW1CVixLQU1yQixPQUZBOEIsRUFBT0QsR0FFQSxTQUFzQnVCLEdBQzVCLEdBQUlBLEVBQVEsQ0FDWCxHQUNDQSxFQUFPdkQsTUFBUWdDLEVBQUloQyxLQUNuQnVELEVBQU90RCxRQUFVK0IsRUFBSS9CLE9BQ3JCc0QsRUFBTzNHLFlBQWNvRixFQUFJcEYsVUFFekIsT0FHRHFGLEVBQU9ELEVBQU11QixRQUVickIsS0ExUEhqSSxFQUFPRCxRQUFVLFNBQVNtQyxFQUFNbUQsR0FDL0IsR0FBcUIsb0JBQVZrRSxPQUF5QkEsT0FDWCxpQkFBYnRGLFNBQXVCLE1BQU0sSUFBSW1DLE1BQU0saUVBR25EZixFQUFVQSxHQUFXLElBRWJnQyxNQUFpQyxpQkFBbEJoQyxFQUFRZ0MsTUFBcUJoQyxFQUFRZ0MsTUFBUSxHQUkvRGhDLEVBQVFOLFdBQTBDLGtCQUF0Qk0sRUFBUU4sWUFBeUJNLEVBQVFOLFVBQVloQixLQUcxRXNCLEVBQVFjLGFBQVlkLEVBQVFjLFdBQWEsUUFHaERkLEVBQVFpQixXQUFVakIsRUFBUWlCLFNBQVcsVUFFMUMsSUFBSWxCLEVBQVNPLEVBQWF6RCxFQUFNbUQsR0FJaEMsT0FGQUYsRUFBZUMsRUFBUUMsR0FFaEIsU0FBaUJtRSxHQUd2QixJQUZBLElBQUlDLEVBQVksR0FFUHhKLEVBQUksRUFBR0EsRUFBSW1GLEVBQU8zQixPQUFReEQsSUFBSyxDQUN2QyxJQUFJcUMsRUFBTzhDLEVBQU9uRixJQUNkcUYsRUFBV3hCLEVBQVl4QixFQUFLb0IsS0FFdkI2QixPQUNUa0UsRUFBVTlGLEtBQUsyQixHQUdia0UsR0FFRnJFLEVBRGdCUSxFQUFhNkQsRUFBU25FLEdBQ1pBLEdBRzNCLElBQVNwRixFQUFJLEVBQUdBLEVBQUl3SixFQUFVaEcsT0FBUXhELElBQUssQ0FDMUMsSUFBSXFGLEVBRUosR0FBcUIsS0FGakJBLEVBQVdtRSxFQUFVeEosSUFFYnNGLEtBQVksQ0FDdkIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlGLEVBQVNHLE1BQU1oQyxPQUFRK0IsSUFBS0YsRUFBU0csTUFBTUQsWUFFeEQxQixFQUFZd0IsRUFBUzVCLFFBa05oQyxJQUNLZ0csRUFEREMsR0FDQ0QsRUFBWSxHQUVULFNBQVVFLEVBQU9DLEdBR3ZCLE9BRkFILEVBQVVFLEdBQVNDLEVBRVpILEVBQVVJLE9BQU9DLFNBQVMxRyxLQUFLLFFBSXhDLFNBQVNpRixFQUFxQnBDLEVBQU8wRCxFQUFPM0IsRUFBUUYsR0FDbkQsSUFBSWhDLEVBQU1rQyxFQUFTLEdBQUtGLEVBQUloQyxJQUU1QixHQUFJRyxFQUFNaUQsV0FDVGpELEVBQU1pRCxXQUFXQyxRQUFVTyxFQUFZQyxFQUFPN0QsT0FDeEMsQ0FDTixJQUFJaUUsRUFBVS9GLFNBQVNvRixlQUFldEQsR0FDbENrRSxFQUFhL0QsRUFBTStELFdBRW5CQSxFQUFXTCxJQUFRMUQsRUFBTVksWUFBWW1ELEVBQVdMLElBRWhESyxFQUFXeEcsT0FDZHlDLEVBQU1NLGFBQWF3RCxFQUFTQyxFQUFXTCxJQUV2QzFELEVBQU1PLFlBQVl1RCxNLGdGQ25WTEUsV0FBVCxXQUVILElBQUlDLEVBQWdCQyxFQUFTLHFCQUM3QixJQUFJRCxFQUNBLE9BR0osSUFBSUUsRUFBV0YsRUFBY0csTUFFN0IsSUFBSUgsRUFDQSxPQUdKSSxFQUFVLG9CQUFxQkosR0FBZSxHQUU5Q0ksRUFBVSxZQUFhRixHQUFVLEksRUF5Q3JCRCxXLEVBMEJBRyxZLEVBU0FDLGNBQVQsU0FBdUJDLEdBQzFCLElBQUlDLEVBQWFOLEVBQVMsYUFDMUIsSUFBSU0sRUFDQSxPQUVKLE9BQU9BLEVBQVdDLEtBQUssU0FBQUMsR0FBQSxPQUFXQSxFQUFVcEssT0FBT2lLLEssRUFHdkNJLGVBQVQsU0FBd0JyRyxFQUFRc0csR0FFbkMsSUFBSUMsTUFBTUMsUUFBUXhHLElBQVdBLEVBQU9oRSxLQUFLLENBQ3JDLElBQUlrSyxFQUFhTixFQUFVLGFBQ3ZCUixFQUFRYyxFQUFXTyxVQUFVLFNBQUFDLEdBQUEsT0FBTUEsRUFBSzFLLE9BQVNnRSxFQUFPaEUsT0FDekRzSyxJQUNDdEcsRUFBTzJHLE9BaEVuQixTQUFxQkMsR0FNakIsSUFIQSxJQUFJQyxHQVBPQyxFQU9hRixFQVBMRyxFQU9jLFlBTjFCRCxFQUFPRSxNQUFNRCxHQUFNOUgsT0FBUyxHQVMzQnhELEVBQUUsRUFBRUEsRUFBRW9MLEVBQVlwTCxJQUN0Qm1MLEVBQVdBLEVBQVNLLFFBQVQsZUFBZ0N4TCxFQUFoQyxJQUFzQyxJQVh6RCxJQUFlcUwsRUFBUUMsRUFjbkIsT0FBT0gsRUFzRGlCTSxDQUFXbEgsRUFBTzRHLFdBRXRDVixFQUFXZCxHQUFTcEYsRUFDcEIrRixFQUFVLFlBQWFHLEtBcEgvQixJQUFBaUIsRUFBQTlMLEVBQUEsSUEyQkEsU0FBUytMLEVBQVVoQixHQUVmLElBQUlpQixHQUFZLEVBQUFGLEVBQUFHLGNBQWFsQixFQUFVTyxRQUd2Q1AsRUFBVVEsU0FBV1IsRUFBVU8sT0FHL0IsSUFBSVksRUFBU0YsRUFBVXhKLElBQUksU0FBQzJKLEVBQUtwQyxHQUM3QixPQUFPb0MsRUFBSVAsUUFBUSxJQUFaLGVBQStCN0IsRUFBL0IsUUFJWGlDLEVBQVVoRSxRQUFRLFNBQUNvRSxFQUFVckMsR0FDekJnQixFQUFVUSxTQUFXUixFQUFVUSxTQUFTSyxRQUFRUSxFQUFVRixFQUFPbkMsTUF1QmxFLFNBQVNRLEVBQVM1SSxHQVdyQixPQUxBMEssUUFBUUMsSUFBSSxRQUNSbkksT0FBTzBHLGFBQ1AxRyxPQUFPMEcsV0FBYTVILEtBQUtzSixNQUFNQyxhQUFhQyxRQUFROUssS0FHckR3QyxPQUFPMEcsV0FBV2pILFFBRVIsY0FBTmpDLEdBR0N3QyxPQUFPMEcsV0FBVzdDLFFBQVErRCxHQUd2QjlJLEtBQUtzSixNQUFNdEosS0FBS0MsVUFBVWlCLE9BQU8wRyxjQUdyQyxHQUlKLFNBQVNILEVBQVUvSSxFQUFLa0osRUFBWTZCLEdBQ3ZDTCxRQUFRQyxJQUFJLFNBQ1puSSxPQUFPMEcsV0FBYUEsRUFDcEIyQixhQUFhRyxRQUFRaEwsRUFBS3NCLEtBQUtDLFVBQVUySCxJQUNyQzZCLEdBNUZSLFNBQXFCN0IsR0FDakIxRyxPQUFPbUcsY0FBZ0JDLEVBQVMscUJBQ2hDRCxjQUFjeEcsS0FBSytHLEdBQ25CMkIsYUFBYUcsUUFBUSxvQkFBb0IxSixLQUFLQyxVQUFVb0gsZ0JBMEZwRHNDLENBQVkvQixLLGdGQ3pGSmdDLHdCLEVBY0FDLHVCQUFULFNBQWlDQyxHQUVwQ0EsRUFBaUIvRSxRQUFRZ0YsSSxFQUliQyxvQkFBVCxTQUFTQSxFQUFxQnRJLEdBR2pDLElBQUlrRyxHQUFZLEVBQUFxQyxFQUFBM0MsVUFBUyxhQUN6QixJQUFJd0MsRUFBbUIsQ0FBQ3BJLEdBQ3hCLEdBQUdrSSxFQUFzQmxJLEVBQU8yRyxRQUFRLENBRXBDLElBQUk2QixFQUFXdEMsRUFBV1osT0FBTyxTQUFBYyxHQUFBLE9BQVlwRyxFQUFPMkcsT0FBTzhCLFNBQVNyQyxFQUFVcEssUUFFMUUwTSxFQUFZRixFQUFTM0ssSUFBSXlLLEdBQXFCSyxLQUFLLEdBQ3ZEUCxFQUFpQmpKLEtBQWpCUyxNQUFBd0ksRSxzSEFBQVEsQ0FBeUJGLElBRTdCLE9BQU9OLEVBQWlCOUMsT0FBTyxTQUFBYyxHQUFBLE9BQVdBLEdBQWFBLEVBQVVPLFUsRUFHckRrQyxtQkFBVCxTQUE2QmxDLEdBRWhDLE9BRGdCLEVBQUE0QixFQUFBM0MsVUFBUyxhQUNQTixPQUFPLFNBQUFjLEdBQUEsT0FBWU8sRUFBTzhCLFNBQVNyQyxFQUFVcEssU0F6Q25FLElBQUE4TSxFQUFBek4sRUFBQSxHQUNBME4sRUFBQTFOLEVBQUEsR0FDQWtOLEVBQUFsTixFQUFBLEdBRU8sU0FBUzZNLEVBQXVCdkIsR0FJbkMsT0FGaUIsRUFBQTRCLEVBQUEzQyxVQUFTLGFBRVJOLE9BQU8sU0FBQWMsR0FBQSxPQUFZTyxFQUFPOEIsU0FBU3JDLEVBQVVwSyxRQUFPaUQsT0FBUSxFQUlsRixTQUFTb0osRUFBY2pDLElBQ25CLEVBQUEyQyxFQUFBQyxrQkFBaUI1QyxFQUFVMUUsTUFBTzBFLEVBQVVwSyxNQUM1Q3dELE9BQU80RyxFQUFVcEssT0FBUSxFQUFBOE0sRUFBQUcsaUJBQWdCN0MsSzs7Ozs7RUNSN0MsSUFBSThDLEVBQXdCL00sT0FBTytNLHNCQUMvQjVMLEVBQWlCbkIsT0FBT2tCLFVBQVVDLGVBQ2xDNkwsRUFBbUJoTixPQUFPa0IsVUFBVStMLHFCQUV4QyxTQUFTQyxFQUFTQyxHQUNqQixHQUFJQSxRQUNILE1BQU0sSUFBSUMsVUFBVSx5REFHckIsT0FBT3BOLE9BQU9tTixHQStDZjlOLEVBQU9ELFFBNUNQLFdBQ0MsSUFDQyxJQUFLWSxPQUFPcU4sT0FDWCxPQUFPLEVBTVIsSUFBSUMsRUFBUSxJQUFJQyxPQUFPLE9BRXZCLEdBREFELEVBQU0sR0FBSyxLQUNrQyxNQUF6Q3ROLE9BQU93TixvQkFBb0JGLEdBQU8sR0FDckMsT0FBTyxFQUtSLElBREEsSUFBSUcsRUFBUSxHQUNIbk8sRUFBSSxFQUFHQSxFQUFJLEdBQUlBLElBQ3ZCbU8sRUFBTSxJQUFNRixPQUFPRyxhQUFhcE8sSUFBTUEsRUFLdkMsR0FBd0IsZUFIWFUsT0FBT3dOLG9CQUFvQkMsR0FBTy9MLElBQUksU0FBVVgsR0FDNUQsT0FBTzBNLEVBQU0xTSxLQUVIMkIsS0FBSyxJQUNmLE9BQU8sRUFJUixJQUFJaUwsRUFBUSxHQUlaLE1BSEEsdUJBQXVCOUMsTUFBTSxJQUFJM0QsUUFBUSxTQUFVMEcsR0FDbERELEVBQU1DLEdBQVVBLElBR2YseUJBREU1TixPQUFPaUgsS0FBS2pILE9BQU9xTixPQUFPLEdBQUlNLElBQVFqTCxLQUFLLElBTTlDLE1BQU9tTCxHQUVSLE9BQU8sR0FJUUMsR0FBb0I5TixPQUFPcU4sT0FBUyxTQUFVekosRUFBUXJCLEdBS3RFLElBSkEsSUFBSXdMLEVBRUFDLEVBREFDLEVBQUtmLEVBQVN0SixHQUdUdkMsRUFBSSxFQUFHQSxFQUFJcUMsVUFBVVosT0FBUXpCLElBQUssQ0FHMUMsSUFBSyxJQUFJUixLQUZUa04sRUFBTy9OLE9BQU8wRCxVQUFVckMsSUFHbkJGLEVBQWUxQixLQUFLc08sRUFBTWxOLEtBQzdCb04sRUFBR3BOLEdBQU9rTixFQUFLbE4sSUFJakIsR0FBSWtNLEVBQXVCLENBQzFCaUIsRUFBVWpCLEVBQXNCZ0IsR0FDaEMsSUFBSyxJQUFJek8sRUFBSSxFQUFHQSxFQUFJME8sRUFBUWxMLE9BQVF4RCxJQUMvQjBOLEVBQWlCdk4sS0FBS3NPLEVBQU1DLEVBQVExTyxNQUN2QzJPLEVBQUdELEVBQVExTyxJQUFNeU8sRUFBS0MsRUFBUTFPLE1BTWxDLE9BQU8yTyxJLGdCQ3ZGUixJQUFJck0sRUFBVTFDLEVBQVEsSUFFQSxpQkFBWjBDLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUk4QyxFQUFVLENBQUN3SixLQUFNLEVBRXJCMUcsZUFQSUEsRUFRSmhDLGdCQUFxQmlCLEdBRVJ2SCxFQUFRLEVBQVJBLENBQTZEMEMsRUFBUzhDLEdBRWhGOUMsRUFBUXVNLFNBQVE5TyxFQUFPRCxRQUFVd0MsRUFBUXVNLFMsZ0ZDWjVCQyxvQkFBVCxTQUE4QmpLLEdBQ2pDLElBQUkyRixFQUFnQjNGLEVBQUVrSyxjQUFjQyxVQUFVekQsTUFBTSxNQUFNLEdBRXREMEQsRUFBb0I5TSxLQUFLK00sTUFBTUMsU0FBU3pFLEtBQUssU0FBQUMsR0FBQSxPQUFXQSxFQUFVcEssT0FBT2lLLElBQ3pFNEUsRUFBZ0JqTixLQUFLK00sTUFBTUMsU0FBU25FLFVBQVUsU0FBQUwsR0FBQSxPQUFXQSxFQUFVcEssT0FBT2lLLElBRTlFekcsT0FBT3NMLHNCQUF3QkosRUFBa0IxTyxLQUVqRDRCLEtBQUttTixTQUFTLENBQ1ZGLGdCQUNBN08sS0FBTTBPLEVBQWtCMU8sS0FDeEIySyxPQUFRK0QsRUFBa0IvRCxVLEVBSWxCcUUsWUFBVCxTQUFzQkMsR0FFekIsSUFBSS9FLEVBQWFLLE1BQU0yRCxLQUFLdE0sS0FBSytNLE1BQU1DLFVBR25DTSxFQUFlaEYsRUFBV0MsS0FBSyxTQUFBQyxHQUFBLE9BQVdBLEVBQVVwSyxPQUFPaVAsRUFBUWpQLE9BQ25FNk8sRUFBZ0JqTixLQUFLK00sTUFBTUUsY0FFL0IsR0FBR0ssRUFBYSxDQUVaLElBQUlDLEVBQW1CakYsRUFBV3RJLEtBQUsrTSxNQUFNRSxlQUc3Q00sRUFBbUJoUCxPQUFPcU4sT0FBTzJCLEVBQWtCRixHQUduRC9FLEVBQVd0SSxLQUFLK00sTUFBTUUsZUFBaUJNLE1BR3RDLENBQ0QsSUFBSUMsRUFBYSxDQUNicFAsS0FBTWlQLEVBQVFqUCxLQUNkMkssT0FBUXNFLEVBQVF0RSxPQUNoQjBFLE9BQVEsR0FDUlYsTUFBT00sRUFBUU4sT0FBUyxLQUN4QmpKLE1BQU91SixFQUFRdkosTUFDZjhHLFNBQVUsR0FDVnRKLEdBQUlvTSxLQUFLQyxLQUFtQixJQUFkRCxLQUFLRSxVQUNuQkMsT0FBTyxNQUdYWixFQUFnQjNFLEVBQVdqSCxPQUFPLEVBQ2xDaUgsRUFBVy9HLEtBQUtpTSxHQUdwQnhOLEtBQUttTixTQUFTLENBQ1ZILFNBQVUxRSxFQUNWK0UsUUFBUyxDQUNMalAsS0FBTWlQLEVBQVFqUCxLQUNkMkssT0FBUXNFLEVBQVF0RSxPQUNoQmpGLE1BQU91SixFQUFRdkosTUFDZmlKLE1BQU9NLEVBQVFOLE1BQ2ZVLE9BQVFKLEVBQVFJLFFBQVUsSUFFOUJSLGNBQWVBLEtBR25CLEVBQUF0QyxFQUFBeEMsV0FBVSxZQUFhRyxJLEVBSVh3RixZQUFULFNBQXNCTCxHQUV6QixJQUFJTSxFQUFjeFAsT0FBT3FOLE9BQU8sR0FBSTVMLEtBQUsrTSxPQUFPQyxTQUVoRGUsRUFBWS9OLEtBQUsrTSxNQUFNRSxlQUFlUSxPQUFTQSxFQUcvQ3pOLEtBQUttTixTQUFTLENBQ1ZILFNBQVVlLEtBR2QsRUFBQXBELEVBQUF4QyxXQUFVLFlBQWE0RixJLEVBSVhDLFNBQVQsU0FBa0JDLEdBQ3JCLElBQUk1RixFQUFnQjRGLEVBQU05TCxPQUFPK0wsY0FBY0EsY0FBY3JCLFVBQVV6RCxNQUFNLE1BQU0sR0FFbkYsR0FBR3BKLEtBQUsrTSxNQUFNQyxTQUFTekUsS0FBSyxTQUFBQyxHQUFBLE9BQVdBLEVBQVVwSyxPQUFPaUssSUFBZWhILE9BQU8sRUFDMUUsT0FHSixJQUFJMkwsRUFBV3JFLE1BQU0yRCxLQUFLdE0sS0FBSytNLE1BQU1DLFVBR2pDeEYsRUFBUXdGLEVBQVNuRSxVQUFVLFNBQUFMLEdBQUEsT0FBV0EsRUFBVXBLLE9BQU9pSyxJQUczRDJFLEVBQVNuSSxPQUFPMkMsRUFBTSxHQUd0QnhILEtBQUttTixTQUFTLENBQ1ZILFNBQVVBLEtBSWQsRUFBQXJDLEVBQUF4QyxXQUFVLFlBQWE2RSxJLEVBSVhtQixhQUFULFNBQXNCTixHQUV6QixJQUFJRSxFQUFjeFAsT0FBT3FOLE9BQU8sR0FBSTVMLEtBQUsrTSxPQUFPQyxTQUU1QzVLLEVBQVMyTCxFQUFZeEYsS0FBSyxTQUFBOEUsR0FBQSxPQUFTQSxFQUFRalAsT0FBT3lQLEVBQU9PLGFBQ3pEQyxFQUFRTixFQUFZeEYsS0FBSyxTQUFBOEUsR0FBQSxPQUFTQSxFQUFRalAsT0FBT3lQLEVBQU9TLFlBRTVEbE0sRUFBTzJLLE1BQVFyTSxLQUFLc0osTUFBTTVILEVBQU8ySyxZQUVaL0gsSUFBbEI1QyxFQUFPeUwsT0FDTnpMLEVBQU95TCxPQUFTLEdBR2hCekwsRUFBT3lMLE9BQVNuTixLQUFLc0osTUFBTTVILEVBQU95TCxRQUV0Q3pMLEVBQU95TCxPQUFPUSxFQUFNalEsTUFBUWdFLEVBQU95TCxPQUFPUSxFQUFNalEsT0FBUyxHQUN6RGdFLEVBQU95TCxPQUFPUSxFQUFNalEsTUFBTW1RLGFBQWVWLEVBQU9XLFNBRTdDcE0sRUFBT3lMLE9BQU9RLEVBQU1qUSxNQUFNbVEsYUFDekJuTSxFQUFPMkssTUFBTXNCLEVBQU1qUSxNQUFRc0MsS0FBS3NKLE1BQU1xRSxFQUFNdEIsZUFHckMzSyxFQUFPMkssTUFBTXNCLEVBQU1qUSxhQUNuQmdFLEVBQU95TCxPQUFPUSxFQUFNalEsT0FJL0JnRSxFQUFPMkssTUFBUXJNLEtBQUtDLFVBQVV5QixFQUFPMkssT0FDckMzSyxFQUFPeUwsT0FBU25OLEtBQUtDLFVBQVV5QixFQUFPeUwsUUFFdEM3TixLQUFLbU4sU0FBUyxDQUNWSCxTQUFVZSxLQUdkLEVBQUFwRCxFQUFBeEMsV0FBVSxZQUFhNEYsSUEvSTNCLElBQUFwRCxFQUFBbE4sRUFBQSxJLDBEQ0ZBLElBQUFnUixjQUFBaFIsb0JBQUEsSUFDQWlSLHNCQUFBalIsb0JBQUEsR0FFQSxTQUFTa1IsbUJBQW1CbkcsRUFBV3ZGLEdBRW5DLEdBQUl1RixFQUFVUSxTQUFTLEdBR3ZCLE9BQU80Rix3QkFBd0JwRyxFQUFXdkYsR0FHOUMsU0FBU29JLGdCQUFnQjdDLFdBQ3JCLElBQUlxRyxnQkFBa0JGLG1CQUFtQm5HLFVBQVcsQ0FBQ3NHLHFCQUFvQixJQUV6RSxPQUFPQyxLQUFLQyxNQUFNakosVUFBVThJLGdCQUFpQixDQUFFSSxRQUFTLENBQUMsU0FBVUMsUUFBUyxDQUFDLDhCQUFnQ0MsTUFLakgsU0FBU1Asd0JBQXlCcEcsRUFBV3ZGLEdBTXpDLElBQUk4RixFQUFTLFNBQ1Y5RixHQUFXQSxFQUFRLHVCQUNsQjhGLEVBQVMsWUFFYlAsRUFBVWlGLE9BQU9oSSxRQUFRLFNBQUF3SSxHQUNyQkEsRUFBTTNNLEdBQUsyTSxFQUFNM00sR0FBRytILFFBQVEsSUFBSSxNQUdwQyxJQWdGSStGLEVBckNrQixTQUFDckcsR0FHbkIsSUFBSThFLEVBQVNuTixLQUFLc0osTUFBTXhCLEVBQVVxRixRQU9sQyxPQU5xQnRQLE9BQU9pSCxLQUFLcUksR0FDbEJwSSxRQUFRLFNBQUE2SSxHQUNoQlQsRUFBT1MsR0FBV0MsZUFDakJ4RixFQUFTQSxFQUFPTSxRQUFRaUYsRUFBV0Esd0JBQWdDQSxFQUFoQyxRQUdwQ3ZGLEVBMkJjc0csQ0E1RU8sU0FBQ3RHLEVBQVEwRSxHQUNyQ0EsRUFBT2hJLFFBQVEsU0FBQXdJLEdBQ1gsSUFBSTNNLEVBQUtBLE9BQU8yTSxFQUFNM00sR0FBbEIsSUFDSnlILEVBQVNBLEVBQU9NLFFBQVEvSCxFQUFPQSxFQUF0QixJQUE0QjJNLEVBQU03UCxLQUFsQyxXQUFnRDZQLEVBQU0zTSxHQUFHMk0sRUFBTTdQLE1BQS9ELGtCQUtiLElBQUlrUixHQUFrQixFQUFBWixzQkFBQXpELG9CQUFtQmxDLEdBQ3pDLE9BQUd1RyxFQUFnQmpPLE9BQU8sR0FFdEJpTyxFQUFnQjdKLFFBQVEsU0FBQTRJLEdBR3BCLElBQUlrQixFQUFvQmxCLEVBQU1aLE9BQU8vRixPQUFPLFNBQUF1RyxHQUFBLE9BQTJCLElBQXBCQSxFQUFNdUIsY0FJekQsR0FBNkIsR0FBMUJELEVBQWtCbE8sT0FBVSxDQUUzQixJQUFJb08sU0FDSkYsRUFBa0I5SixRQUFRLFNBQUFpSyxHQUN0QkQsRUFBb0JqSCxFQUFVaUYsT0FBT2xGLEtBQUssU0FBQTBGLEdBQUEsT0FBT0EsRUFBTTdQLE9BQU9zUixFQUFpQkMsZ0JBRW5GLElBQUlDLEdBQWMsRUFBQW5CLGNBQUFvQixjQUFhSixFQUFrQkssUUFBU3RILEdBRXREdUgsRUFBUU4sRUFBa0JyUixLQUFLLGlCQUFvQndSLEVBQTNDLGdCQUVaN0csRUFBU1AsRUFBVU8sR0FBUU0sUUFBUWdGLEVBQU1qUSxLQUFNaVEsRUFBTWpRLEtBQUssSUFBSTJSLE1BSS9EaEgsRUFBT0ssTUFBTSxXQUFXbkksS0FBSyxpQkFHakM4SCxFQUFPSyxNQUFNLFdBQVduSSxLQUFLLGdCQXdDWCtPLENBL0VDLFNBQUN4SCxHQUMzQixPQUFPQSxFQUFVTyxHQUFRTSxRQUFRLElBQTFCLGVBQTZDYixFQUFVcEssS0FBdkQsNEdBNkVnQjZSLENBQXlCekgsR0FDeUJBLEVBQVVpRixTQUVuRnlDLEVBQXlDMUgsRUFBVWlGLE9BeEJyQ3hOLElBQUksU0FBQWdPLEdBQ2QsSUFBSWtDLEVBQWVsQyxFQUFNM00sR0FBRzJNLEVBQU03UCxLQUM5QndSLEdBQWMsRUFBQW5CLGNBQUFvQixjQUFhNUIsRUFBTTZCLFFBQVN0SCxHQUU5QyxPQUF1QixJQUFwQnlGLEVBQU11QixZQUNMLHlCQUNNVyxFQUROLG1DQUVVUCxFQUZWLHdIQUtxQjNCLEVBQU0wQixZQUwzQixnQkFLc0QxQixFQUFNMEIsWUFMNUQseURBU0oseUJBQ1VRLEVBRFYsbUNBRWNQLEVBRmQsNEJBSUQzTyxLQUFLLE1BMEJaLE1BakJxQm1QLGdCQUZENUgsRUFBVXBLLEtBQUtnTCxNQUFNLEtBQUtuSSxLQUFLLElBRS9DLHFJQURpQnVILEVBQVV1RSxNQUMzQiwrQkFTRW1ELEVBVEYseURBYWNkLEVBYmQsNkJBb0JSeFIsT0FBT0QsUUFBVSxDQUNiME4sZ0NBQ0FzRCx3QyxnRkN6SVl2RCxpQkFBVCxTQUEwQnRILEVBQU8xRixHQUVyQmlTLEdBQVhBLE8sc0hBQUFBLENBQWV4TyxTQUFTeU8saUJBQWlCLDZDQUNwQzdLLFFBQVEsU0FBQXZGLEdBQ2JBLEVBQUsyRixXQUVULElBQUkwSyxFQUFlMU8sU0FBU2tELGNBQWMsU0FDMUN3TCxFQUFhN0ssYUFBYSxzQkFBdUJ0SCxHQUNqRG1TLEVBQWFyTCxLQUFPLFdBQ3BCcUwsRUFBYUMsVUFBWTFNLEVBQ3pCakMsU0FBUzRPLEtBQUtwTSxZQUFZa00sSyx1VUNWOUJHLEVBQUFqVCxFQUFBLEcsT0FFQUEsRUFBQSxJQUVBLEksSUFBQUEsRUFBQSxLLHVEQUVNa1QsRSxZQUNGLFNBQUFBLEVBQVlaLEdBQU8sTyw0RkFBQWEsQ0FBQTVRLEtBQUEyUSxHLGlLQUFBRSxDQUFBN1EsTUFBQTJRLEVBQUFHLFdBQUF2UyxPQUFBd1MsZUFBQUosSUFBQTNTLEtBQUFnQyxLQUNUK1AsSSxtVUFGa0JpQixhLG9DQU94QixJQUFJQyxFQUFXalIsS0FBSytQLE1BQU1rQixTQUN0QixPQUNJQyxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsV0FDVkYsRUFBU2hSLElBQUksU0FBQ21SLEVBQVE1SixHQUFULE9BQWlCMEosRUFBQWxMLFFBQUFqQixjQUFDc00sRUFBQXJMLFFBQUQsQ0FBa0I1RyxJQUFLb0ksRUFBTzRKLFFBQVNBLFcsZUFPM0VULEcseUhDdUJDVyx3QkFoRGhCLElBQUFaLE9BQUFqVCxvQkFBQSxHLHVDQUVBaVIsc0JBQUFqUixvQkFBQSxHQUNBa04sY0FBQWxOLG9CQUFBLEcsdVZBNkNPLFNBQVM2VCxZQUFZakUsUUFBU2tFLElBQUt6TixNQUFPaUosTUFBT1UsUUFFcEQsSUFBSTNILGNBQVEwTCxhQUNaLElBQ0ksSUFBSWhILGtCQUFtQixFQUFBa0Usc0JBQUFoRSxxQkFBb0IyQyxTQUN2QzdDLGlCQUFpQm5KLE9BQVMsSUFDMUIsRUFBQXFOLHNCQUFBbkUsd0JBQXVCQyxrQkFFM0IxRSxPQUFTaUosS0FBS0MsTUFBTWpKLFVBQVV3TCxJQUFLLENBQUV0QyxRQUFTLENBQUMsV0FBWUUsTUFDN0QsTUFBTXpNLEdBQ0o4TyxNQUFROU8sRUFQWixRQVVJLE9BQUErTyxnQkFBQSxDQUNJRCxNQUFPQSxNQUNQMUwsZUFGSixTQUVZQSxTQXhEcEJsRSxPQUFPOFAsTUFBUUEsZ0JBQ2Y5UCxPQUFPb1AsVUFBWVUsZ0JBQU1WLFVBQ3pCcFAsT0FBTytQLGFBQWUsU0FBVTdRLEVBQVFxQixFQUFRNEssRUFBT2tCLEdBRW5ELElBQUkzRixHQUFhLEVBQUFxQyxjQUFBM0MsVUFBUyxhQUUxQixHQUFHbEgsSUFBU3FCLEVBQU8sQ0FDZixJQUFJcUcsRUFBWUYsRUFBV0MsS0FBSyxTQUFBQyxHQUFBLE9BQVdBLEVBQVVwSyxPQUFTMEMsRUFBTzFDLE9BQ3JFb0ssRUFBVW9KLFNBQVdwSixFQUFVb0osVUFBWSxDQUFDcEosRUFBVXVFLE9BQ3REdkUsRUFBVW9KLFNBQVNyUSxLQUFLd0wsR0FDeEJ2RSxFQUFVb0osU0FBVyxHQUFBNVEsT0FBQWdLLG1CQUFJLElBQUk2RyxJQUFJckosRUFBVW9KLFNBQVMzUixJQUFJUyxLQUFLQyxjQUFhVixJQUFJUyxLQUFLc0osT0FBT3RDLE9BQU9DLFVBQ2pHLEVBQUFnRCxjQUFBeEMsV0FBVSxZQUFZRyxPQUV0QixDQU9BLElBQUl3SixFQUFrQnhKLEVBQVdDLEtBQUssU0FBQUMsR0FBQSxPQUFXQSxFQUFVcEssT0FBUzBDLEVBQU8xQyxPQUN2RTJULEVBQWtCekosRUFBV0MsS0FBSyxTQUFBQyxHQUFBLE9BQVdBLEVBQVVwSyxPQUFTK0QsRUFBTy9ELE9BSzNFMFQsRUFBZ0JGLFNBQVdFLEVBQWdCRixVQUFZLENBQUNsUixLQUFLc0osTUFBTThILEVBQWdCL0UsUUFFbkYsSUFBSWlGLEVBQWN0UixLQUFLc0osTUFBTThILEVBQWdCL0UsT0FFekNrRixFQUFXLEdBQ2ZBLEVBQVNGLEVBQWdCM1QsTUFBUTJPLEVBRWpDaUYsRUFBY3pULE9BQU9xTixPQUFPb0csRUFBWUMsR0FFeENILEVBQWdCRixTQUFTclEsS0FBS3lRLEdBQzlCRixFQUFnQkYsU0FBVyxHQUFBNVEsT0FBQWdLLG1CQUFJLElBQUk2RyxJQUFJQyxFQUFnQkYsU0FBUzNSLElBQUlTLEtBQUtDLGNBQWFWLElBQUlTLEtBQUtzSixPQUFPdEMsT0FBT0MsVUFDN0csRUFBQWdELGNBQUF4QyxXQUFVLFlBQVlHLE0sZ0ZDekNkK0MsZ0JBQVQsU0FBeUJqSixFQUFRd0gsRUFBS3NJLEdBQ3pDOVAsRUFBTzRHLFNBQVc1RyxFQUFPNEcsU0FBU0ssUUFBaEIsSUFBNEI2SSxFQUE1QixTQUF5Q0EsRUFBekMsTUFBbUR0SSxFQUFuRCxNQUE0REEsRUFBNUQsTUFDbEIsRUFBQWUsRUFBQWxDLGdCQUFlckcsR0FBUSxJLEVBR1grUCxnQkFBVCxTQUF5Qi9QLEVBQU93SCxFQUFLc0ksR0FDeEMsSUFBSUUsRUFBYUEsY0FBY0YsRUFBM0IsSUFFSjlQLEVBQU80RyxVQUFXLEVBQUFxSixFQUFBQyxvQkFBbUJsUSxFQUFPNEcsU0FBVW9KLEVBQVl4SSxJQUVsRSxFQUFBZSxFQUFBbEMsZ0JBQWVyRyxHQUFRLEksRUFHWG1RLGNBQVQsYUFoQlAsSUFBQTVILEVBQUFsTixFQUFBLEdBQ0E0VSxFQUFBNVUsRUFBQSxLLHNSQ0NBaVQsRUFBQWpULEVBQUEsRyxXQUNBQSxFQUFBLEtBR0FBLEVBQUEsR0FJQSxJLElBQUFBLEVBQUEsSyx1REFHTStVLEUsWUFDRixTQUFBQSxFQUFZekMsR0FBTyxPLDRGQUFBYSxDQUFBNVEsS0FBQXdTLEcsaUtBQUEzQixDQUFBN1EsTUFBQXdTLEVBQUExQixXQUFBdlMsT0FBQXdTLGVBQUF5QixJQUFBeFUsS0FBQWdDLEtBQ1QrUCxJLG1VQUZNaUIsYSxvQ0FTWixPQUNJRSxFQUFBbEwsUUFBQWpCLGNBQUEsV0FDSW1NLEVBQUFsTCxRQUFBakIsY0FBQzBOLEVBQUF6TSxRQUFELFcsS0FNaEIwTSxVQUFTQyxPQUFPekIsRUFBQWxMLFFBQUFqQixjQUFDeU4sRUFBRCxNQUFXM1EsU0FBUytRLGVBQWUsVzs7Ozs7Ozs7R0NyQnRDLElBQUlDLEVBQUVwVixFQUFRLEdBQWlCNkIsRUFBRSxtQkFBb0JWLFFBQVFBLE9BQU9rVSxJQUFJblQsRUFBRUwsRUFBRVYsT0FBT2tVLElBQUksaUJBQWlCLE1BQU1DLEVBQUV6VCxFQUFFVixPQUFPa1UsSUFBSSxnQkFBZ0IsTUFBTW5VLEVBQUVXLEVBQUVWLE9BQU9rVSxJQUFJLGtCQUFrQixNQUFNL1QsRUFBRU8sRUFBRVYsT0FBT2tVLElBQUkscUJBQXFCLE1BQU1FLEVBQUUxVCxFQUFFVixPQUFPa1UsSUFBSSxrQkFBa0IsTUFBTUcsRUFBRTNULEVBQUVWLE9BQU9rVSxJQUFJLGtCQUFrQixNQUFNSSxFQUFFNVQsRUFBRVYsT0FBT2tVLElBQUksaUJBQWlCLE1BQU1LLEVBQUU3VCxFQUFFVixPQUFPa1UsSUFBSSx5QkFBeUIsTUFBTU0sRUFBRTlULEVBQUVWLE9BQU9rVSxJQUFJLHFCQUFxQixNQUFNTyxFQUFFL1QsRUFBRVYsT0FBT2tVLElBQUksa0JBQWtCLE1BQU1RLEVBQUdoVSxFQUFFVixPQUFPa1UsSUFBSSxjQUNwZixNQUFNUyxFQUFHalUsRUFBRVYsT0FBT2tVLElBQUksY0FBYyxNQUFNVSxFQUFFLG1CQUFvQjVVLFFBQVFBLE9BQU82VSxTQUMvRSxTQUFTQyxFQUFFQyxHQUFHLElBQUksSUFBSUMsRUFBRTNSLFVBQVVaLE9BQU8sRUFBRWxELEVBQUUseURBQXlEd1YsRUFBRXpWLEVBQUUsRUFBRUEsRUFBRTBWLEVBQUUxVixJQUFJQyxHQUFHLFdBQVdzQyxtQkFBbUJ3QixVQUFVL0QsRUFBRSxLQUR6RSxTQUFZeVYsRUFBRUMsRUFBRXpWLEVBQUVELEVBQUV3RSxFQUFFbVIsRUFBRUMsRUFBRUMsR0FBRyxJQUFJSixFQUFFLENBQVUsR0FBVEEsT0FBRSxPQUFVLElBQVNDLEVBQUVELEVBQUUzUCxNQUFNLHFJQUFxSSxDQUFDLElBQUlsRyxFQUFFLENBQUNLLEVBQUVELEVBQUV3RSxFQUFFbVIsRUFBRUMsRUFBRUMsR0FBRzlWLEVBQUUsR0FBRTBWLEVBQUUzUCxNQUFNNFAsRUFBRXZLLFFBQVEsTUFBTSxXQUFXLE9BQU92TCxFQUFFRyxTQUFVRyxLQUFLLHNCQUFzQyxNQUFoQnVWLEVBQUVLLFlBQVksRUFBUUwsR0FDM1BNLEVBQUcsRUFBRyx5QkFBeUJOLEVBQUUsNEhBQTRIeFYsR0FBRyxJQUFJK1YsRUFBRSxDQUFDQyxVQUFVLFdBQVcsT0FBTSxHQUFJQyxtQkFBbUIsYUFBYUMsb0JBQW9CLGFBQWFDLGdCQUFnQixjQUFjQyxFQUFFLEdBQzVjLFNBQVNDLEVBQUViLEVBQUVDLEVBQUV6VixHQUFHNkIsS0FBSytQLE1BQU00RCxFQUFFM1QsS0FBS3lVLFFBQVFiLEVBQUU1VCxLQUFLbUQsS0FBS29SLEVBQUV2VSxLQUFLMFUsUUFBUXZXLEdBQUcrVixFQUFzUixTQUFTUyxLQUE2QixTQUFTQyxFQUFFakIsRUFBRUMsRUFBRXpWLEdBQUc2QixLQUFLK1AsTUFBTTRELEVBQUUzVCxLQUFLeVUsUUFBUWIsRUFBRTVULEtBQUttRCxLQUFLb1IsRUFBRXZVLEtBQUswVSxRQUFRdlcsR0FBRytWLEVBQXBZTSxFQUFFL1UsVUFBVW9WLGlCQUFpQixHQUFHTCxFQUFFL1UsVUFBVTBOLFNBQVMsU0FBU3dHLEVBQUVDLEdBQUcsaUJBQWtCRCxHQUFHLG1CQUFvQkEsR0FBRyxNQUFNQSxHQUFFRCxFQUFFLE1BQWExVCxLQUFLMFUsUUFBUUosZ0JBQWdCdFUsS0FBSzJULEVBQUVDLEVBQUUsYUFBYVksRUFBRS9VLFVBQVVxVixZQUFZLFNBQVNuQixHQUFHM1QsS0FBSzBVLFFBQVFOLG1CQUFtQnBVLEtBQUsyVCxFQUFFLGdCQUE4QmdCLEVBQUVsVixVQUFVK1UsRUFBRS9VLFVBQXNGLElBQUlzVixFQUFFSCxFQUFFblYsVUFBVSxJQUFJa1YsRUFDeGVJLEVBQUVDLFlBQVlKLEVBQUUvQixFQUFFa0MsRUFBRVAsRUFBRS9VLFdBQVdzVixFQUFFRSxzQkFBcUIsRUFBRyxJQUFJQyxFQUFFLENBQUNDLFFBQVEsTUFBTUMsRUFBRSxDQUFDRCxRQUFRLE1BQU1FLEVBQUU5VyxPQUFPa0IsVUFBVUMsZUFBZTRWLEVBQUUsQ0FBQ2xXLEtBQUksRUFBR21XLEtBQUksRUFBR0MsUUFBTyxFQUFHQyxVQUFTLEdBQ3ZLLFNBQVNDLEVBQUUvQixFQUFFQyxFQUFFelYsR0FBRyxJQUFJRCxPQUFFLEVBQU93RSxFQUFFLEdBQUdtUixFQUFFLEtBQUtDLEVBQUUsS0FBSyxHQUFHLE1BQU1GLEVBQUUsSUFBSTFWLFVBQUssSUFBUzBWLEVBQUUyQixNQUFNekIsRUFBRUYsRUFBRTJCLFVBQUssSUFBUzNCLEVBQUV4VSxNQUFNeVUsRUFBRSxHQUFHRCxFQUFFeFUsS0FBS3dVLEVBQUV5QixFQUFFclgsS0FBSzRWLEVBQUUxVixLQUFLb1gsRUFBRTVWLGVBQWV4QixLQUFLd0UsRUFBRXhFLEdBQUcwVixFQUFFMVYsSUFBSSxJQUFJNlYsRUFBRTlSLFVBQVVaLE9BQU8sRUFBRSxHQUFHLElBQUkwUyxFQUFFclIsRUFBRWtJLFNBQVN6TSxPQUFPLEdBQUcsRUFBRTRWLEVBQUUsQ0FBQyxJQUFJLElBQUlqVyxFQUFFNkssTUFBTW9MLEdBQUc5VixFQUFFLEVBQUVBLEVBQUU4VixFQUFFOVYsSUFBSUgsRUFBRUcsR0FBR2dFLFVBQVVoRSxFQUFFLEdBQUd5RSxFQUFFa0ksU0FBUzlNLEVBQUUsR0FBRzZWLEdBQUdBLEVBQUVnQyxhQUFhLElBQUl6WCxLQUFLNlYsRUFBRUosRUFBRWdDLGtCQUFlLElBQVNqVCxFQUFFeEUsS0FBS3dFLEVBQUV4RSxHQUFHNlYsRUFBRTdWLElBQUksTUFBTSxDQUFDMFgsU0FBU2pXLEVBQUV1RixLQUFLeU8sRUFBRXZVLElBQUl5VSxFQUFFMEIsSUFBSXpCLEVBQUUvRCxNQUFNck4sRUFBRW1ULE9BQU9ULEVBQUVELFNBQzlVLFNBQVNXLEVBQUVuQyxHQUFHLE1BQU0saUJBQWtCQSxHQUFHLE9BQU9BLEdBQUdBLEVBQUVpQyxXQUFXalcsRUFBMEcsSUFBSW9XLEVBQUUsT0FBT0MsRUFBRSxHQUFHLFNBQVNDLEVBQUV0QyxFQUFFQyxFQUFFelYsRUFBRUQsR0FBRyxHQUFHOFgsRUFBRTNVLE9BQU8sQ0FBQyxJQUFJcUIsRUFBRXNULEVBQUU5TixNQUE4RCxPQUF4RHhGLEVBQUVvRCxPQUFPNk4sRUFBRWpSLEVBQUV3VCxVQUFVdEMsRUFBRWxSLEVBQUV5VCxLQUFLaFksRUFBRXVFLEVBQUUrUixRQUFRdlcsRUFBRXdFLEVBQUUwVCxNQUFNLEVBQVMxVCxFQUFFLE1BQU0sQ0FBQ29ELE9BQU82TixFQUFFdUMsVUFBVXRDLEVBQUV1QyxLQUFLaFksRUFBRXNXLFFBQVF2VyxFQUFFa1ksTUFBTSxHQUM3YixTQUFTQyxFQUFFMUMsR0FBR0EsRUFBRTdOLE9BQU8sS0FBSzZOLEVBQUV1QyxVQUFVLEtBQUt2QyxFQUFFd0MsS0FBSyxLQUFLeEMsRUFBRWMsUUFBUSxLQUFLZCxFQUFFeUMsTUFBTSxFQUFFLEdBQUdKLEVBQUUzVSxRQUFRMlUsRUFBRXpVLEtBQUtvUyxHQUUrRSxTQUFTMkMsRUFBRTNDLEVBQUVDLEVBQUV6VixHQUFHLE9BQU8sTUFBTXdWLEVBQUUsRUFEdE4sU0FBUzRDLEVBQUU1QyxFQUFFQyxFQUFFelYsRUFBRUQsR0FBRyxJQUFJd0UsU0FBU2lSLEVBQUssY0FBY2pSLEdBQUcsWUFBWUEsSUFBRWlSLEVBQUUsTUFBSyxJQUFJRSxHQUFFLEVBQUcsR0FBRyxPQUFPRixFQUFFRSxHQUFFLE9BQVEsT0FBT25SLEdBQUcsSUFBSyxTQUFTLElBQUssU0FBU21SLEdBQUUsRUFBRyxNQUFNLElBQUssU0FBUyxPQUFPRixFQUFFaUMsVUFBVSxLQUFLalcsRUFBRSxLQUFLb1QsRUFBRWMsR0FBRSxHQUFJLEdBQUdBLEVBQUUsT0FBTzFWLEVBQUVELEVBQUV5VixFQUFFLEtBQUtDLEVBQUUsSUFBSTRDLEVBQUU3QyxFQUFFLEdBQUdDLEdBQUcsRUFBeUIsR0FBdkJDLEVBQUUsRUFBRUQsRUFBRSxLQUFLQSxFQUFFLElBQUlBLEVBQUUsSUFBT2pMLE1BQU1DLFFBQVErSyxHQUFHLElBQUksSUFBSUcsRUFBRSxFQUFFQSxFQUFFSCxFQUFFdFMsT0FBT3lTLElBQUksQ0FBUSxJQUFJQyxFQUFFSCxFQUFFNEMsRUFBZjlULEVBQUVpUixFQUFFRyxHQUFlQSxHQUFHRCxHQUFHMEMsRUFBRTdULEVBQUVxUixFQUFFNVYsRUFBRUQsUUFBUSxHQUFpQzZWLEVBQTlCLE9BQU9KLEdBQUcsaUJBQWtCQSxFQUFJLEtBQW1DLG1CQUE3QkksRUFBRVAsR0FBR0csRUFBRUgsSUFBSUcsRUFBRSxlQUFzQ0ksRUFBRSxLQUFNLG1CQUFvQkEsRUFBRSxJQUFJSixFQUFFSSxFQUFFL1YsS0FBSzJWLEdBQUdHLEVBQ3BmLElBQUlwUixFQUFFaVIsRUFBRThDLFFBQVFDLE1BQTZCN0MsR0FBRzBDLEVBQTFCN1QsRUFBRUEsRUFBRTVELE1BQU1pVixFQUFFSCxFQUFFNEMsRUFBRTlULEVBQUVvUixLQUFjM1YsRUFBRUQsT0FBTyxXQUFXd0UsR0FBV2dSLEVBQUUsS0FBSyxvQkFBZHZWLEVBQUUsR0FBR3dWLEdBQStCLHFCQUFxQnBWLE9BQU9pSCxLQUFLbU8sR0FBRzFTLEtBQUssTUFBTSxJQUFJOUMsRUFBRSxJQUFLLE9BQU8wVixFQUFxQzBDLENBQUU1QyxFQUFFLEdBQUdDLEVBQUV6VixHQUFHLFNBQVNxWSxFQUFFN0MsRUFBRUMsR0FBRyxNQUFNLGlCQUFrQkQsR0FBRyxPQUFPQSxHQUFHLE1BQU1BLEVBQUV2VSxJQUhqSSxTQUFnQnVVLEdBQUcsSUFBSUMsRUFBRSxDQUFDK0MsSUFBSSxLQUFLQyxJQUFJLE1BQU0sTUFBTSxLQUFLLEdBQUdqRCxHQUFHdEssUUFBUSxRQUFRLFNBQVNzSyxHQUFHLE9BQU9DLEVBQUVELEtBR2tDa0QsQ0FBT2xELEVBQUV2VSxLQUFLd1UsRUFBRTdULFNBQVMsSUFBSSxTQUFTK1csRUFBR25ELEVBQUVDLEdBQUdELEVBQUV3QyxLQUFLblksS0FBSzJWLEVBQUVjLFFBQVFiLEVBQUVELEVBQUV5QyxTQUM3VyxTQUFTVyxFQUFHcEQsRUFBRUMsRUFBRXpWLEdBQUcsSUFBSUQsRUFBRXlWLEVBQUU3TixPQUFPcEQsRUFBRWlSLEVBQUV1QyxVQUFVdkMsRUFBRUEsRUFBRXdDLEtBQUtuWSxLQUFLMlYsRUFBRWMsUUFBUWIsRUFBRUQsRUFBRXlDLFNBQVN6TixNQUFNQyxRQUFRK0ssR0FBR3FELEVBQUVyRCxFQUFFelYsRUFBRUMsRUFBRSxTQUFTd1YsR0FBRyxPQUFPQSxJQUFJLE1BQU1BLElBQUltQyxFQUFFbkMsS0FBS0EsRUFKdEosU0FBWUEsRUFBRUMsR0FBRyxNQUFNLENBQUNnQyxTQUFTalcsRUFBRXVGLEtBQUt5TyxFQUFFek8sS0FBSzlGLElBQUl3VSxFQUFFMkIsSUFBSTVCLEVBQUU0QixJQUFJeEYsTUFBTTRELEVBQUU1RCxNQUFNOEYsT0FBT2xDLEVBQUVrQyxRQUlrRW9CLENBQUd0RCxFQUFFalIsSUFBSWlSLEVBQUV2VSxLQUFLd1UsR0FBR0EsRUFBRXhVLE1BQU11VSxFQUFFdlUsSUFBSSxJQUFJLEdBQUd1VSxFQUFFdlUsS0FBS2lLLFFBQVEwTSxFQUFFLE9BQU8sS0FBSzVYLElBQUlELEVBQUVxRCxLQUFLb1MsSUFBSSxTQUFTcUQsRUFBRXJELEVBQUVDLEVBQUV6VixFQUFFRCxFQUFFd0UsR0FBRyxJQUFJbVIsRUFBRSxHQUFHLE1BQU0xVixJQUFJMFYsR0FBRyxHQUFHMVYsR0FBR2tMLFFBQVEwTSxFQUFFLE9BQU8sS0FBa0JPLEVBQUUzQyxFQUFFb0QsRUFBakJuRCxFQUFFcUMsRUFBRXJDLEVBQUVDLEVBQUUzVixFQUFFd0UsSUFBYTJULEVBQUV6QyxHQUFHLFNBQVNzRCxJQUFJLElBQUl2RCxFQUFFdUIsRUFBRUMsUUFBaUMsT0FBekIsT0FBT3hCLEdBQUVELEVBQUUsT0FBcUJDLEVBQzdZLElBQUl3RCxFQUFFLENBQUNDLFNBQVMsQ0FBQ25YLElBQUksU0FBUzBULEVBQUVDLEVBQUV6VixHQUFHLEdBQUcsTUFBTXdWLEVBQUUsT0FBT0EsRUFBRSxJQUFJelYsRUFBRSxHQUFtQixPQUFoQjhZLEVBQUVyRCxFQUFFelYsRUFBRSxLQUFLMFYsRUFBRXpWLEdBQVVELEdBQUd1SCxRQUFRLFNBQVNrTyxFQUFFQyxFQUFFelYsR0FBRyxHQUFHLE1BQU13VixFQUFFLE9BQU9BLEVBQXFCMkMsRUFBRTNDLEVBQUVtRCxFQUF2QmxELEVBQUVxQyxFQUFFLEtBQUssS0FBS3JDLEVBQUV6VixJQUFha1ksRUFBRXpDLElBQUl3QyxNQUFNLFNBQVN6QyxHQUFHLE9BQU8yQyxFQUFFM0MsRUFBRSxXQUFXLE9BQU8sTUFBTSxPQUFPMEQsUUFBUSxTQUFTMUQsR0FBRyxJQUFJQyxFQUFFLEdBQXFDLE9BQWxDb0QsRUFBRXJELEVBQUVDLEVBQUUsS0FBSyxTQUFTRCxHQUFHLE9BQU9BLElBQVdDLEdBQUcwRCxLQUFLLFNBQVMzRCxHQUF3QixPQUFyQm1DLEVBQUVuQyxJQUFVRCxFQUFFLE9BQWNDLElBQUk0RCxVQUFVLFdBQVcsTUFBTSxDQUFDcEMsUUFBUSxPQUFPbkUsVUFBVXdELEVBQUVnRCxjQUFjNUMsRUFBRTZDLGNBQWMsU0FBUzlELEVBQUVDLEdBQ2pWLFlBRG9WLElBQVNBLElBQUlBLEVBQUUsT0FBTUQsRUFBRSxDQUFDaUMsU0FBUzFDLEVBQUV3RSxzQkFBc0I5RCxFQUM3ZitELGNBQWNoRSxFQUFFaUUsZUFBZWpFLEVBQUVrRSxhQUFhLEVBQUVDLFNBQVMsS0FBS0MsU0FBUyxPQUFRRCxTQUFTLENBQUNsQyxTQUFTM0MsRUFBRStFLFNBQVNyRSxHQUFVQSxFQUFFb0UsU0FBU3BFLEdBQUdzRSxXQUFXLFNBQVN0RSxHQUFHLE1BQU0sQ0FBQ2lDLFNBQVN4QyxFQUFFVCxPQUFPZ0IsSUFBSXVFLEtBQUssU0FBU3ZFLEdBQUcsTUFBTSxDQUFDaUMsU0FBU3JDLEVBQUc0RSxNQUFNeEUsRUFBRXlFLFNBQVMsRUFBRUMsUUFBUSxPQUFPNVcsS0FBSyxTQUFTa1MsRUFBRUMsR0FBRyxNQUFNLENBQUNnQyxTQUFTdEMsRUFBR3BPLEtBQUt5TyxFQUFFMkUsYUFBUSxJQUFTMUUsRUFBRSxLQUFLQSxJQUFJMkUsWUFBWSxTQUFTNUUsRUFBRUMsR0FBRyxPQUFPc0QsSUFBSXFCLFlBQVk1RSxFQUFFQyxJQUFJNEUsV0FBVyxTQUFTN0UsRUFBRUMsR0FBRyxPQUFPc0QsSUFBSXNCLFdBQVc3RSxFQUFFQyxJQUFJNkUsVUFBVSxTQUFTOUUsRUFBRUMsR0FBRyxPQUFPc0QsSUFBSXVCLFVBQVU5RSxFQUFFQyxJQUFJOEUsb0JBQW9CLFNBQVMvRSxFQUNwZ0JDLEVBQUV6VixHQUFHLE9BQU8rWSxJQUFJd0Isb0JBQW9CL0UsRUFBRUMsRUFBRXpWLElBQUl3YSxjQUFjLGFBQWFDLGdCQUFnQixTQUFTakYsRUFBRUMsR0FBRyxPQUFPc0QsSUFBSTBCLGdCQUFnQmpGLEVBQUVDLElBQUlpRixRQUFRLFNBQVNsRixFQUFFQyxHQUFHLE9BQU9zRCxJQUFJMkIsUUFBUWxGLEVBQUVDLElBQUlrRixXQUFXLFNBQVNuRixFQUFFQyxFQUFFelYsR0FBRyxPQUFPK1ksSUFBSTRCLFdBQVduRixFQUFFQyxFQUFFelYsSUFBSTRhLE9BQU8sU0FBU3BGLEdBQUcsT0FBT3VELElBQUk2QixPQUFPcEYsSUFBSXFGLFNBQVMsU0FBU3JGLEdBQUcsT0FBT3VELElBQUk4QixTQUFTckYsSUFBSXNGLFNBQVN0YSxFQUFFdWEsV0FBV25hLEVBQUVvYSxTQUFTOUYsRUFBRXRPLGNBQWMyUSxFQUFFMEQsYUFBYSxTQUFTekYsRUFBRUMsRUFBRXpWLEdBQUcsTUFBT3dWLEdBQWNELEVBQUUsTUFBTUMsR0FBVSxJQUFJelYsT0FBRSxFQUFPd0UsRUFBRW1RLEVBQUUsR0FBR2MsRUFBRTVELE9BQU84RCxFQUFFRixFQUFFdlUsSUFBSTBVLEVBQUVILEVBQUU0QixJQUFJeEIsRUFBRUosRUFBRWtDLE9BQU8sR0FBRyxNQUN0ZmpDLEVBQUUsTUFBQyxJQUFTQSxFQUFFMkIsTUFBTXpCLEVBQUVGLEVBQUUyQixJQUFJeEIsRUFBRXFCLEVBQUVELGNBQVMsSUFBU3ZCLEVBQUV4VSxNQUFNeVUsRUFBRSxHQUFHRCxFQUFFeFUsS0FBSyxJQUFJdEIsT0FBRSxFQUE0RCxJQUFJSSxLQUF6RHlWLEVBQUV6TyxNQUFNeU8sRUFBRXpPLEtBQUt5USxlQUFlN1gsRUFBRTZWLEVBQUV6TyxLQUFLeVEsY0FBdUIvQixFQUFFeUIsRUFBRXJYLEtBQUs0VixFQUFFMVYsS0FBS29YLEVBQUU1VixlQUFleEIsS0FBS3dFLEVBQUV4RSxRQUFHLElBQVMwVixFQUFFMVYsU0FBSSxJQUFTSixFQUFFQSxFQUFFSSxHQUFHMFYsRUFBRTFWLElBQXlCLEdBQUcsS0FBeEJBLEVBQUUrRCxVQUFVWixPQUFPLEdBQVdxQixFQUFFa0ksU0FBU3pNLE9BQU8sR0FBRyxFQUFFRCxFQUFFLENBQUNKLEVBQUU2SyxNQUFNekssR0FBRyxJQUFJLElBQUlELEVBQUUsRUFBRUEsRUFBRUMsRUFBRUQsSUFBSUgsRUFBRUcsR0FBR2dFLFVBQVVoRSxFQUFFLEdBQUd5RSxFQUFFa0ksU0FBUzlNLEVBQUUsTUFBTSxDQUFDOFgsU0FBU2pXLEVBQUV1RixLQUFLeU8sRUFBRXpPLEtBQUs5RixJQUFJeVUsRUFBRTBCLElBQUl6QixFQUFFL0QsTUFBTXJOLEVBQUVtVCxPQUFPOUIsSUFBSXNGLGNBQWMsU0FBUzFGLEdBQUcsSUFBSUMsRUFBRThCLEVBQUVyVyxLQUFLLEtBQUtzVSxHQUFZLE9BQVRDLEVBQUUxTyxLQUFLeU8sRUFBU0MsR0FBRzBGLGVBQWV4RCxFQUFFeUQsUUFBUSxTQUNqZkMsd0JBQXdCckcsRUFBRXNHLGtCQUFrQnpHLEVBQUUwRyxtREFBbUQsQ0FBQ0MsdUJBQXVCekUsRUFBRTBFLGtCQUFrQnhFLEVBQUV4SixPQUFPaUgsSUFBSWdILEVBQUUsQ0FBQzdULFFBQVFtUixHQUFHMkMsRUFBRUQsR0FBRzFDLEdBQUcwQyxFQUFFamMsRUFBT0QsUUFBUW1jLEVBQUU5VCxTQUFTOFQsRyw4QkN0QjVNLFNBQVNDLElBRVAsR0FDNEMsb0JBQW5DQyxnQ0FDNEMsbUJBQTVDQSwrQkFBK0JELFNBY3hDLElBRUVDLCtCQUErQkQsU0FBU0EsR0FDeEMsTUFBTzNOLEdBR1B0QyxRQUFRMEgsTUFBTXBGLElBT2hCMk4sR0FDQW5jLEVBQU9ELFFBQVVGLEVBQVEsSzs7Ozs7Ozs7R0N0QmQsSUFBSTZWLEVBQUc3VixFQUFRLEdBQVM2QixFQUFFN0IsRUFBUSxHQUFpQmtCLEVBQUVsQixFQUFRLElBQzFFLFNBQVMwVixFQUFFUSxHQUFHLElBQUksSUFBSUMsRUFBRTNSLFVBQVVaLE9BQU8sRUFBRW5ELEVBQUUseURBQXlEeVYsRUFBRXhWLEVBQUUsRUFBRUEsRUFBRXlWLEVBQUV6VixJQUFJRCxHQUFHLFdBQVd1QyxtQkFBbUJ3QixVQUFVOUQsRUFBRSxLQUQxRSxTQUFZd1YsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxFQUFFcVIsRUFBRUYsRUFBRUMsR0FBRyxJQUFJSCxFQUFFLENBQVUsR0FBVEEsT0FBRSxPQUFVLElBQVNDLEVBQUVELEVBQUUzUCxNQUFNLHFJQUFxSSxDQUFDLElBQUlsRyxFQUFFLENBQUNJLEVBQUVDLEVBQUV1RSxFQUFFcVIsRUFBRUYsRUFBRUMsR0FBR2pCLEVBQUUsR0FBRWMsRUFBRTNQLE1BQU00UCxFQUFFdkssUUFBUSxNQUFNLFdBQVcsT0FBT3ZMLEVBQUUrVSxTQUFVelUsS0FBSyxzQkFBc0MsTUFBaEJ1VixFQUFFSyxZQUFZLEVBQVFMLEdBQzFQSixFQUFHLEVBQUcseUJBQXlCSSxFQUFFLDRIQUE0SHpWLEdBQUdvVixHQUFVSCxFQUFFLE9BQ2pWLElBQUk4RCxHQUFHLEVBQUdILEVBQUcsS0FBS0MsR0FBRyxFQUFHa0QsRUFBRyxLQUFLQyxFQUFHLENBQUNDLFFBQVEsU0FBU3hHLEdBQUdzRCxHQUFHLEVBQUdILEVBQUduRCxJQUFJLFNBQVN5RyxFQUFHekcsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxFQUFFcVIsRUFBRUYsRUFBRUMsRUFBRWhXLEdBQUdtWixHQUFHLEVBQUdILEVBQUcsS0FEMk8sU0FBWW5ELEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFdUUsRUFBRXFSLEVBQUVGLEVBQUVDLEVBQUVoVyxHQUFHLElBQUkrVSxFQUFFbEssTUFBTWxKLFVBQVU0YSxNQUFNcmMsS0FBS2lFLFVBQVUsR0FBRyxJQUFJMlIsRUFBRTVSLE1BQU05RCxFQUFFMlUsR0FBRyxNQUFNNVUsR0FBRytCLEtBQUttYSxRQUFRbGMsS0FDdlYrRCxNQUFNa1ksRUFBR2pZLFdBQWlKLElBQUlxWSxFQUFHLEtBQUtDLEVBQUcsR0FDOVIsU0FBU0MsSUFBSyxHQUFHRixFQUFHLElBQUksSUFBSTNHLEtBQUs0RyxFQUFHLENBQUMsSUFBSTNHLEVBQUUyRyxFQUFHNUcsR0FBR3pWLEVBQUVvYyxFQUFHMVYsUUFBUStPLEdBQXlCLElBQXJCLEVBQUV6VixHQUFTaVYsRUFBRSxLQUFLUSxJQUFPOEcsRUFBR3ZjLEdBQTRELElBQUksSUFBSUMsS0FBaEV5VixFQUFFOEcsZUFBcUJ2SCxFQUFFLEtBQUtRLEdBQUc4RyxFQUFHdmMsR0FBRzBWLEVBQUUxVixFQUFFMFYsRUFBRStHLFdBQTBCLENBQUMsSUFBSWpZLE9BQUUsRUFBV3FSLEVBQUU3VixFQUFFQyxHQUFHMFYsRUFBRUQsRUFBRUUsRUFBRTNWLEVBQUV5YyxFQUFHbGIsZUFBZW9VLElBQUdYLEVBQUUsS0FBS1csR0FBVThHLEVBQUc5RyxHQUFHQyxFQUFFLElBQUlqVyxFQUFFaVcsRUFBRThHLHdCQUF3QixHQUFHL2MsRUFBRSxDQUFDLElBQUk0RSxLQUFLNUUsRUFBRUEsRUFBRTRCLGVBQWVnRCxJQUFJb1ksRUFBR2hkLEVBQUU0RSxHQUFHbVIsRUFBRUMsR0FBR3BSLEdBQUUsT0FBUXFSLEVBQUVnSCxrQkFBa0JELEVBQUcvRyxFQUFFZ0gsaUJBQWlCbEgsRUFBRUMsR0FBR3BSLEdBQUUsR0FBSUEsR0FBRSxFQUFHQSxHQUFTeVEsRUFBRSxLQUFLaFYsRUFBRXdWLEtBQ2phLFNBQVNtSCxFQUFHbkgsRUFBRUMsRUFBRTFWLEdBQUc4YyxFQUFHckgsSUFBR1IsRUFBRSxNQUFNUSxHQUFVcUgsRUFBR3JILEdBQUdDLEVBQUVxSCxFQUFHdEgsR0FBR0MsRUFBRStHLFdBQVd6YyxHQUFHZ2QsYUFBYSxJQUFJVCxFQUFHLEdBQUdHLEVBQUcsR0FBR0ksRUFBRyxHQUFHQyxFQUFHLEdBQUdFLEVBQUcsS0FBS0MsRUFBRyxLQUFLQyxFQUFHLEtBQUssU0FBU0MsRUFBRzNILEVBQUVDLEVBQUUxVixHQUFHLElBQUlDLEVBQUV3VixFQUFFek8sTUFBTSxnQkFBZ0J5TyxFQUFFL0csY0FBY3lPLEVBQUduZCxHQUZyRSxTQUFZeVYsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxFQUFFcVIsRUFBRUYsRUFBRUMsRUFBRWhXLEdBQTRCLEdBQXpCc2MsRUFBR3BZLE1BQU1oQyxLQUFLaUMsV0FBY2dWLEVBQUcsQ0FBQyxHQUFHQSxFQUFHLENBQUMsSUFBSXBFLEVBQUVpRSxFQUFHRyxHQUFHLEVBQUdILEVBQUcsVUFBVTNELEVBQUUsT0FBT04sT0FBRSxFQUFPa0UsSUFBS0EsR0FBRyxFQUFHa0QsRUFBR3BILElBRTFEMEksQ0FBR3BkLEVBQUV5VixPQUFFLEVBQU9ELEdBQUdBLEVBQUUvRyxjQUFjLEtBQUssU0FBUzRPLEVBQUc3SCxFQUFFQyxHQUEwQixPQUF2QixNQUFNQSxHQUFFVCxFQUFFLE1BQWdCLE1BQU1RLEVBQVNDLEVBQUtqTCxNQUFNQyxRQUFRK0ssR0FBT2hMLE1BQU1DLFFBQVFnTCxJQUFVRCxFQUFFcFMsS0FBS1MsTUFBTTJSLEVBQUVDLEdBQUdELElBQUVBLEVBQUVwUyxLQUFLcVMsR0FBVUQsR0FBU2hMLE1BQU1DLFFBQVFnTCxHQUFHLENBQUNELEdBQUczUyxPQUFPNFMsR0FBRyxDQUFDRCxFQUFFQyxHQUNuYixTQUFTNkgsRUFBRzlILEVBQUVDLEVBQUUxVixHQUFHeUssTUFBTUMsUUFBUStLLEdBQUdBLEVBQUVsTyxRQUFRbU8sRUFBRTFWLEdBQUd5VixHQUFHQyxFQUFFNVYsS0FBS0UsRUFBRXlWLEdBQUcsSUFBSStILEVBQUcsS0FBSyxTQUFTQyxFQUFHaEksR0FBRyxHQUFHQSxFQUFFLENBQUMsSUFBSUMsRUFBRUQsRUFBRWlJLG1CQUFtQjFkLEVBQUV5VixFQUFFa0ksbUJBQW1CLEdBQUdsVCxNQUFNQyxRQUFRZ0wsR0FBRyxJQUFJLElBQUl6VixFQUFFLEVBQUVBLEVBQUV5VixFQUFFdlMsU0FBU3NTLEVBQUVtSSx1QkFBdUIzZCxJQUFJbWQsRUFBRzNILEVBQUVDLEVBQUV6VixHQUFHRCxFQUFFQyxTQUFTeVYsR0FBRzBILEVBQUczSCxFQUFFQyxFQUFFMVYsR0FBR3lWLEVBQUVpSSxtQkFBbUIsS0FBS2pJLEVBQUVrSSxtQkFBbUIsS0FBS2xJLEVBQUVvSSxnQkFBZ0JwSSxFQUFFcUIsWUFBWWdILFFBQVFySSxJQUM3VixJQUFJc0ksRUFBRyxDQUFDQyx1QkFBdUIsU0FBU3ZJLEdBQUcyRyxHQUFHbkgsRUFBRSxPQUFjbUgsRUFBRzNSLE1BQU1sSixVQUFVNGEsTUFBTXJjLEtBQUsyVixHQUFHNkcsS0FBTTJCLHlCQUF5QixTQUFTeEksR0FBRyxJQUFTelYsRUFBTDBWLEdBQUUsRUFBSyxJQUFJMVYsS0FBS3lWLEVBQUUsR0FBR0EsRUFBRWpVLGVBQWV4QixHQUFHLENBQUMsSUFBSUMsRUFBRXdWLEVBQUV6VixHQUFHcWMsRUFBRzdhLGVBQWV4QixJQUFJcWMsRUFBR3JjLEtBQUtDLElBQUlvYyxFQUFHcmMsSUFBR2lWLEVBQUUsTUFBTWpWLEdBQVVxYyxFQUFHcmMsR0FBR0MsRUFBRXlWLEdBQUUsR0FBSUEsR0FBRzRHLE1BQzlRLFNBQVM0QixFQUFHekksRUFBRUMsR0FBRyxJQUFJMVYsRUFBRXlWLEVBQUUwSSxVQUFVLElBQUluZSxFQUFFLE9BQU8sS0FBSyxJQUFJQyxFQUFFZ2QsRUFBR2pkLEdBQUcsSUFBSUMsRUFBRSxPQUFPLEtBQUtELEVBQUVDLEVBQUV5VixHQUFHRCxFQUFFLE9BQU9DLEdBQUcsSUFBSyxVQUFVLElBQUssaUJBQWlCLElBQUssZ0JBQWdCLElBQUssdUJBQXVCLElBQUssY0FBYyxJQUFLLHFCQUFxQixJQUFLLGNBQWMsSUFBSyxxQkFBcUIsSUFBSyxZQUFZLElBQUssb0JBQW9CelYsR0FBR0EsRUFBRW1lLFlBQXFCbmUsSUFBSSxZQUFid1YsRUFBRUEsRUFBRXpPLE9BQXVCLFVBQVV5TyxHQUFHLFdBQVdBLEdBQUcsYUFBYUEsSUFBSUEsR0FBR3hWLEVBQUUsTUFBTXdWLEVBQUUsUUFBUUEsR0FBRSxFQUFHLE9BQUdBLEVBQVMsTUFBS3pWLEdBQUcsbUJBQW9CQSxHQUFFaVYsRUFBRSxNQUFNUyxTQUFTMVYsR0FDdGVBLEdBQUUsU0FBU3FlLEVBQUc1SSxHQUF3QyxHQUFyQyxPQUFPQSxJQUFJK0gsRUFBR0YsRUFBR0UsRUFBRy9ILElBQUlBLEVBQUUrSCxFQUFHQSxFQUFHLEtBQVEvSCxJQUFJOEgsRUFBRzlILEVBQUVnSSxHQUFJRCxHQUFHdkksRUFBRSxNQUFhNEQsR0FBSSxNQUFNcEQsRUFBRXNHLEVBQUdsRCxHQUFHLEVBQUdrRCxFQUFHLEtBQUt0RyxFQUFHLElBQUk2SSxFQUFHOU8sS0FBS0UsU0FBUzdOLFNBQVMsSUFBSXNhLE1BQU0sR0FBR29DLEVBQUcsMkJBQTJCRCxFQUFHRSxFQUFHLHdCQUF3QkYsRUFBRyxTQUFTRyxFQUFHaEosR0FBRyxHQUFHQSxFQUFFOEksR0FBSSxPQUFPOUksRUFBRThJLEdBQUksTUFBTTlJLEVBQUU4SSxJQUFLLEtBQUc5SSxFQUFFbFAsV0FBK0IsT0FBTyxLQUEzQmtQLEVBQUVBLEVBQUVsUCxXQUFvQyxPQUFPLEtBQWZrUCxFQUFFQSxFQUFFOEksSUFBaUI3UyxLQUFLLElBQUkrSixFQUFFL0osSUFBSStKLEVBQUUsS0FBSyxTQUFTaUosRUFBR2pKLEdBQVcsUUFBUkEsRUFBRUEsRUFBRThJLEtBQWMsSUFBSTlJLEVBQUUvSixLQUFLLElBQUkrSixFQUFFL0osSUFBSSxLQUFLK0osRUFDamIsU0FBU2tKLEVBQUdsSixHQUFHLEdBQUcsSUFBSUEsRUFBRS9KLEtBQUssSUFBSStKLEVBQUUvSixJQUFJLE9BQU8rSixFQUFFMEksVUFBVWxKLEVBQUUsTUFBTSxTQUFTMkosRUFBR25KLEdBQUcsT0FBT0EsRUFBRStJLElBQUssS0FBSyxTQUFTSyxFQUFHcEosR0FBRyxHQUFHQSxFQUFFQSxFQUFFcUosYUFBYXJKLEdBQUcsSUFBSUEsRUFBRS9KLEtBQUssT0FBTytKLEdBQUksS0FBSyxTQUFTc0osRUFBR3RKLEVBQUVDLEVBQUUxVixJQUFNMFYsRUFBRXdJLEVBQUd6SSxFQUFFelYsRUFBRWdmLGVBQWVyQyx3QkFBd0JqSCxPQUFJMVYsRUFBRTBkLG1CQUFtQkosRUFBR3RkLEVBQUUwZCxtQkFBbUJoSSxHQUFHMVYsRUFBRTJkLG1CQUFtQkwsRUFBR3RkLEVBQUUyZCxtQkFBbUJsSSxJQUM1VSxTQUFTd0osRUFBR3hKLEdBQUcsR0FBR0EsR0FBR0EsRUFBRXVKLGVBQWVyQyx3QkFBd0IsQ0FBQyxJQUFJLElBQUlqSCxFQUFFRCxFQUFFeUosWUFBWWxmLEVBQUUsR0FBRzBWLEdBQUcxVixFQUFFcUQsS0FBS3FTLEdBQUdBLEVBQUVtSixFQUFHbkosR0FBRyxJQUFJQSxFQUFFMVYsRUFBRW1ELE9BQU8sRUFBRXVTLEtBQUtxSixFQUFHL2UsRUFBRTBWLEdBQUcsV0FBV0QsR0FBRyxJQUFJQyxFQUFFLEVBQUVBLEVBQUUxVixFQUFFbUQsT0FBT3VTLElBQUlxSixFQUFHL2UsRUFBRTBWLEdBQUcsVUFBVUQsSUFBSSxTQUFTMEosRUFBRzFKLEVBQUVDLEVBQUUxVixHQUFHeVYsR0FBR3pWLEdBQUdBLEVBQUVnZixlQUFlbkMsbUJBQW1CbkgsRUFBRXdJLEVBQUd6SSxFQUFFelYsRUFBRWdmLGVBQWVuQyxxQkFBcUI3YyxFQUFFMGQsbUJBQW1CSixFQUFHdGQsRUFBRTBkLG1CQUFtQmhJLEdBQUcxVixFQUFFMmQsbUJBQW1CTCxFQUFHdGQsRUFBRTJkLG1CQUFtQmxJLElBQUksU0FBUzJKLEVBQUczSixHQUFHQSxHQUFHQSxFQUFFdUosZUFBZW5DLGtCQUFrQnNDLEVBQUcxSixFQUFFeUosWUFBWSxLQUFLekosR0FDaGUsU0FBUzRKLEVBQUc1SixHQUFHOEgsRUFBRzlILEVBQUV3SixHQUFJLElBQUlLLElBQUssb0JBQXFCNWIsU0FBU0EsT0FBT0MsV0FBV0QsT0FBT0MsU0FBU2tELGVBQWUsU0FBUzBZLEVBQUc5SixFQUFFQyxHQUFHLElBQUkxVixFQUFFLEdBQWtGLE9BQS9FQSxFQUFFeVYsRUFBRStKLGVBQWU5SixFQUFFOEosY0FBY3hmLEVBQUUsU0FBU3lWLEdBQUcsU0FBU0MsRUFBRTFWLEVBQUUsTUFBTXlWLEdBQUcsTUFBTUMsRUFBUzFWLEVBQUUsSUFBSXlmLEVBQUcsQ0FBQ0MsYUFBYUgsRUFBRyxZQUFZLGdCQUFnQkksbUJBQW1CSixFQUFHLFlBQVksc0JBQXNCSyxlQUFlTCxFQUFHLFlBQVksa0JBQWtCTSxjQUFjTixFQUFHLGFBQWEsa0JBQWtCTyxFQUFHLEdBQUdDLEVBQUcsR0FDbk0sU0FBU0MsRUFBR3ZLLEdBQUcsR0FBR3FLLEVBQUdySyxHQUFHLE9BQU9xSyxFQUFHckssR0FBRyxJQUFJZ0ssRUFBR2hLLEdBQUcsT0FBT0EsRUFBRSxJQUFZelYsRUFBUjBWLEVBQUUrSixFQUFHaEssR0FBSyxJQUFJelYsS0FBSzBWLEVBQUUsR0FBR0EsRUFBRWxVLGVBQWV4QixJQUFJQSxLQUFLK2YsRUFBRyxPQUFPRCxFQUFHckssR0FBR0MsRUFBRTFWLEdBQUcsT0FBT3lWLEVBQTlYNkosSUFBS1MsRUFBR3BjLFNBQVNrRCxjQUFjLE9BQU9qQixNQUFNLG1CQUFtQmxDLGdCQUFnQitiLEVBQUdDLGFBQWFPLGlCQUFpQlIsRUFBR0UsbUJBQW1CTSxpQkFBaUJSLEVBQUdHLGVBQWVLLFdBQVcsb0JBQW9CdmMsZUFBZStiLEVBQUdJLGNBQWNLLFlBQ3hPLElBQUlDLEVBQUdILEVBQUcsZ0JBQWdCSSxFQUFHSixFQUFHLHNCQUFzQkssRUFBR0wsRUFBRyxrQkFBa0JNLEdBQUdOLEVBQUcsaUJBQWlCTyxHQUFHLHNOQUFzTnJWLE1BQU0sS0FBS3NWLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQzVWLFNBQVNDLEtBQUssR0FBR0QsR0FBRyxPQUFPQSxHQUFHLElBQUlqTCxFQUFrQnhWLEVBQWhCeVYsRUFBRStLLEdBQUd6Z0IsRUFBRTBWLEVBQUV2UyxPQUFTcUIsRUFBRSxVQUFVZ2MsR0FBR0EsR0FBRzVmLE1BQU00ZixHQUFHSSxZQUFZL0ssRUFBRXJSLEVBQUVyQixPQUFPLElBQUlzUyxFQUFFLEVBQUVBLEVBQUV6VixHQUFHMFYsRUFBRUQsS0FBS2pSLEVBQUVpUixHQUFHQSxLQUFLLElBQUlFLEVBQUUzVixFQUFFeVYsRUFBRSxJQUFJeFYsRUFBRSxFQUFFQSxHQUFHMFYsR0FBR0QsRUFBRTFWLEVBQUVDLEtBQUt1RSxFQUFFcVIsRUFBRTVWLEdBQUdBLEtBQUssT0FBT3lnQixHQUFHbGMsRUFBRTJYLE1BQU0xRyxFQUFFLEVBQUV4VixFQUFFLEVBQUVBLE9BQUUsR0FBUSxTQUFTNGdCLEtBQUssT0FBTSxFQUFHLFNBQVNDLEtBQUssT0FBTSxFQUNsUSxTQUFTNUwsR0FBRU8sRUFBRUMsRUFBRTFWLEVBQUVDLEdBQTRGLElBQUksSUFBSXVFLEtBQWpHMUMsS0FBS2tkLGVBQWV2SixFQUFFM1QsS0FBS29kLFlBQVl4SixFQUFFNVQsS0FBS2lmLFlBQVkvZ0IsRUFBRXlWLEVBQUUzVCxLQUFLZ1YsWUFBWWtLLFVBQXlCdkwsRUFBRWpVLGVBQWVnRCxNQUFNa1IsRUFBRUQsRUFBRWpSLElBQUkxQyxLQUFLMEMsR0FBR2tSLEVBQUUxVixHQUFHLFdBQVd3RSxFQUFFMUMsS0FBS21DLE9BQU9oRSxFQUFFNkIsS0FBSzBDLEdBQUd4RSxFQUFFd0UsSUFBZ0ksT0FBNUgxQyxLQUFLbWYsb0JBQW9CLE1BQU1qaEIsRUFBRWtoQixpQkFBaUJsaEIsRUFBRWtoQixrQkFBaUIsSUFBS2xoQixFQUFFbWhCLGFBQWFOLEdBQUdDLEdBQUdoZixLQUFLOGIscUJBQXFCa0QsR0FBVWhmLEtBR3JGLFNBQVNzZixHQUFHM0wsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsR0FBRzZCLEtBQUt1ZixVQUFVbGUsT0FBTyxDQUFDLElBQUlxQixFQUFFMUMsS0FBS3VmLFVBQVVyWCxNQUEyQixPQUFyQmxJLEtBQUtoQyxLQUFLMEUsRUFBRWlSLEVBQUVDLEVBQUUxVixFQUFFQyxHQUFVdUUsRUFBRSxPQUFPLElBQUkxQyxLQUFLMlQsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsU0FBU3FoQixHQUFHN0wsR0FBR0EsYUFBYTNULE1BQVltVCxFQUFFLE9BQU9RLEVBQUU4TCxhQUFhLEdBQUd6ZixLQUFLdWYsVUFBVWxlLFFBQVFyQixLQUFLdWYsVUFBVWhlLEtBQUtvUyxHQUM5ZSxTQUFTK0wsR0FBRy9MLEdBQUdBLEVBQUU0TCxVQUFVLEdBQUc1TCxFQUFFZ00sVUFBVUwsR0FBRzNMLEVBQUVxSSxRQUFRd0QsR0FIdkRsZ0IsRUFBRThULEdBQUUzVCxVQUFVLENBQUNtZ0IsZUFBZSxXQUFXNWYsS0FBS29mLGtCQUFpQixFQUFHLElBQUl6TCxFQUFFM1QsS0FBS2lmLFlBQVl0TCxJQUFJQSxFQUFFaU0sZUFBZWpNLEVBQUVpTSxpQkFBaUIsa0JBQW1Cak0sRUFBRTBMLGNBQWMxTCxFQUFFMEwsYUFBWSxHQUFJcmYsS0FBS21mLG1CQUFtQkosS0FBS2MsZ0JBQWdCLFdBQVcsSUFBSWxNLEVBQUUzVCxLQUFLaWYsWUFBWXRMLElBQUlBLEVBQUVrTSxnQkFBZ0JsTSxFQUFFa00sa0JBQWtCLGtCQUFtQmxNLEVBQUVtTSxlQUFlbk0sRUFBRW1NLGNBQWEsR0FBSTlmLEtBQUs4YixxQkFBcUJpRCxLQUFLZ0IsUUFBUSxXQUFXL2YsS0FBSytiLGFBQWFnRCxJQUFJaEQsYUFBYWlELEdBQUdTLFdBQVcsV0FBVyxJQUNwZDdMLEVBRHdkRCxFQUFFM1QsS0FBS2dWLFlBQVlrSyxVQUN6ZSxJQUFJdEwsS0FBS0QsRUFBRTNULEtBQUs0VCxHQUFHLEtBQUs1VCxLQUFLaWYsWUFBWWpmLEtBQUtvZCxZQUFZcGQsS0FBS2tkLGVBQWUsS0FBS2xkLEtBQUs4YixxQkFBcUI5YixLQUFLbWYsbUJBQW1CSCxHQUFHaGYsS0FBSzZiLG1CQUFtQjdiLEtBQUs0YixtQkFBbUIsUUFBUXhJLEdBQUU4TCxVQUFVLENBQUNoYSxLQUFLLEtBQUsvQyxPQUFPLEtBQUt5SyxjQUFjLFdBQVcsT0FBTyxNQUFNb1QsV0FBVyxLQUFLQyxRQUFRLEtBQUtDLFdBQVcsS0FBS0MsVUFBVSxTQUFTeE0sR0FBRyxPQUFPQSxFQUFFd00sV0FBV0MsS0FBS0MsT0FBT2pCLGlCQUFpQixLQUFLa0IsVUFBVSxNQUM5WWxOLEdBQUVtTixPQUFPLFNBQVM1TSxHQUFHLFNBQVNDLEtBQUssU0FBUzFWLElBQUksT0FBT0MsRUFBRTZELE1BQU1oQyxLQUFLaUMsV0FBVyxJQUFJOUQsRUFBRTZCLEtBQUs0VCxFQUFFblUsVUFBVXRCLEVBQUVzQixVQUFVLElBQUlpRCxFQUFFLElBQUlrUixFQUFtSCxPQUFqSHRVLEVBQUVvRCxFQUFFeEUsRUFBRXVCLFdBQVd2QixFQUFFdUIsVUFBVWlELEVBQUV4RSxFQUFFdUIsVUFBVXVWLFlBQVk5VyxFQUFFQSxFQUFFZ2hCLFVBQVU1ZixFQUFFLEdBQUduQixFQUFFK2dCLFVBQVV2TCxHQUFHelYsRUFBRXFpQixPQUFPcGlCLEVBQUVvaUIsT0FBT2IsR0FBR3hoQixHQUFVQSxHQUFHd2hCLEdBQUd0TSxJQUNsTSxJQUFJb04sR0FBR3BOLEdBQUVtTixPQUFPLENBQUNFLEtBQUssT0FBT0MsR0FBR3ROLEdBQUVtTixPQUFPLENBQUNFLEtBQUssT0FBT0UsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUlDLEdBQUdwRCxHQUFJLHFCQUFxQjViLE9BQU9pZixHQUFHLEtBQUtyRCxHQUFJLGlCQUFpQjNiLFdBQVdnZixHQUFHaGYsU0FBU2lmLGNBQ3ZOLElBQUlDLEdBQUd2RCxHQUFJLGNBQWM1YixTQUFTaWYsR0FBR0csR0FBR3hELEtBQU1vRCxJQUFJQyxJQUFJLEVBQUVBLElBQUksSUFBSUEsSUFBSUksR0FBR25WLE9BQU9HLGFBQWEsSUFBSWlWLEdBQUcsQ0FBQ0MsWUFBWSxDQUFDdEcsd0JBQXdCLENBQUN1RyxRQUFRLGdCQUFnQkMsU0FBUyx3QkFBd0JuRyxhQUFhLENBQUMsaUJBQWlCLFdBQVcsWUFBWSxVQUFVb0csZUFBZSxDQUFDekcsd0JBQXdCLENBQUN1RyxRQUFRLG1CQUFtQkMsU0FBUywyQkFBMkJuRyxhQUFhLHVEQUF1RDlSLE1BQU0sTUFBTW1ZLGlCQUFpQixDQUFDMUcsd0JBQXdCLENBQUN1RyxRQUFRLHFCQUM3ZUMsU0FBUyw2QkFBNkJuRyxhQUFhLHlEQUF5RDlSLE1BQU0sTUFBTW9ZLGtCQUFrQixDQUFDM0csd0JBQXdCLENBQUN1RyxRQUFRLHNCQUFzQkMsU0FBUyw4QkFBOEJuRyxhQUFhLDBEQUEwRDlSLE1BQU0sT0FBT3FZLElBQUcsRUFDaFUsU0FBU0MsR0FBRy9OLEVBQUVDLEdBQUcsT0FBT0QsR0FBRyxJQUFLLFFBQVEsT0FBTyxJQUFJZ04sR0FBRy9iLFFBQVFnUCxFQUFFK04sU0FBUyxJQUFLLFVBQVUsT0FBTyxNQUFNL04sRUFBRStOLFFBQVEsSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLE9BQU8sT0FBTSxFQUFHLFFBQVEsT0FBTSxHQUFJLFNBQVNDLEdBQUdqTyxHQUFjLE1BQU0saUJBQWpCQSxFQUFFQSxFQUFFa08sU0FBa0MsU0FBU2xPLEVBQUVBLEVBQUU4TSxLQUFLLEtBQUssSUFBSXFCLElBQUcsRUFFMVEsSUFBSUMsR0FBRyxDQUFDcEgsV0FBV3VHLEdBQUd4RyxjQUFjLFNBQVMvRyxFQUFFQyxFQUFFMVYsRUFBRUMsR0FBRyxJQUFJdUUsT0FBRSxFQUFXcVIsT0FBRSxFQUFPLEdBQUc2TSxHQUFHaE4sRUFBRSxDQUFDLE9BQU9ELEdBQUcsSUFBSyxtQkFBbUJqUixFQUFFd2UsR0FBR0ssaUJBQWlCLE1BQU0zTixFQUFFLElBQUssaUJBQWlCbFIsRUFBRXdlLEdBQUdJLGVBQWUsTUFBTTFOLEVBQUUsSUFBSyxvQkFBb0JsUixFQUFFd2UsR0FBR00sa0JBQWtCLE1BQU01TixFQUFFbFIsT0FBRSxPQUFZb2YsR0FBR0osR0FBRy9OLEVBQUV6VixLQUFLd0UsRUFBRXdlLEdBQUdJLGdCQUFnQixZQUFZM04sR0FBRyxNQUFNelYsRUFBRXlqQixVQUFVamYsRUFBRXdlLEdBQUdLLGtCQUM1SyxPQUQ4TDdlLEdBQUdzZSxJQUFJLE9BQU85aUIsRUFBRThqQixTQUFTRixJQUFJcGYsSUFBSXdlLEdBQUdLLGlCQUFpQjdlLElBQUl3ZSxHQUFHSSxnQkFBZ0JRLEtBQUsvTixFQUFFOEssT0FBWUYsR0FBRyxVQUFSRCxHQUFHdmdCLEdBQWtCdWdCLEdBQUc1ZixNQUFNNGYsR0FBR0ksWUFBWWdELElBQ2xmLElBQUtwZixFQUFFOGQsR0FBR2IsVUFBVWpkLEVBQUVrUixFQUFFMVYsRUFBRUMsR0FBRzRWLEVBQUVyUixFQUFFK2QsS0FBSzFNLEVBQVcsUUFBUkEsRUFBRTZOLEdBQUcxakIsTUFBY3dFLEVBQUUrZCxLQUFLMU0sR0FBSXdKLEVBQUc3YSxHQUFHcVIsRUFBRXJSLEdBQUdxUixFQUFFLE1BQU1KLEVBQUVvTixHQUhpTCxTQUFZcE4sRUFBRUMsR0FBRyxPQUFPRCxHQUFHLElBQUssaUJBQWlCLE9BQU9pTyxHQUFHaE8sR0FBRyxJQUFLLFdBQVcsT0FBRyxLQUFLQSxFQUFFcU8sTUFBYSxNQUFLUixJQUFHLEVBQVVSLElBQUcsSUFBSyxZQUFZLE9BQU90TixFQUFFQyxFQUFFNk0sUUFBU1EsSUFBSVEsR0FBRyxLQUFLOU4sRUFBRSxRQUFRLE9BQU8sTUFHMVd1TyxDQUFHdk8sRUFBRXpWLEdBRnBHLFNBQVl5VixFQUFFQyxHQUFHLEdBQUdrTyxHQUFHLE1BQU0sbUJBQW1Cbk8sSUFBSWlOLElBQUljLEdBQUcvTixFQUFFQyxJQUFJRCxFQUFFa0wsS0FBS0QsR0FBR0QsR0FBR0QsR0FBRyxLQUFLb0QsSUFBRyxFQUFHbk8sR0FBRyxLQUFLLE9BQU9BLEdBQUcsSUFBSyxRQUFRLE9BQU8sS0FBSyxJQUFLLFdBQVcsS0FBS0MsRUFBRXVPLFNBQVN2TyxFQUFFd08sUUFBUXhPLEVBQUV5TyxVQUFVek8sRUFBRXVPLFNBQVN2TyxFQUFFd08sT0FBTyxDQUFDLEdBQUd4TyxFQUFFME8sTUFBTSxFQUFFMU8sRUFBRTBPLEtBQUtqaEIsT0FBTyxPQUFPdVMsRUFBRTBPLEtBQUssR0FBRzFPLEVBQUVxTyxNQUFNLE9BQU9uVyxPQUFPRyxhQUFhMkgsRUFBRXFPLE9BQU8sT0FBTyxLQUFLLElBQUssaUJBQWlCLE9BQU9qQixJQUFJLE9BQU9wTixFQUFFb08sT0FBTyxLQUFLcE8sRUFBRTZNLEtBQUssUUFBUSxPQUFPLE1BRTNSOEIsQ0FBRzVPLEVBQUV6VixNQUFLMFYsRUFBRThNLEdBQUdmLFVBQVV1QixHQUFHQyxZQUFZdk4sRUFBRTFWLEVBQUVDLElBQUtzaUIsS0FBSzlNLEVBQUU0SixFQUFHM0osSUFBSUEsRUFBRSxLQUFZLE9BQU9HLEVBQUVILEVBQUUsT0FBT0EsRUFBRUcsRUFBRSxDQUFDQSxFQUFFSCxLQUFLNE8sR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxHQUFHaFAsR0FBRyxHQUFHQSxFQUFFeUgsRUFBR3pILEdBQUcsQ0FBQyxtQkFBb0I2TyxJQUFHclAsRUFBRSxPQUFjLElBQUlTLEVBQUV1SCxFQUFHeEgsRUFBRTBJLFdBQVdtRyxHQUFHN08sRUFBRTBJLFVBQVUxSSxFQUFFek8sS0FBSzBPLElBQUksU0FBU2dQLEdBQUdqUCxHQUFHOE8sR0FBR0MsR0FBR0EsR0FBR25oQixLQUFLb1MsR0FBRytPLEdBQUcsQ0FBQy9PLEdBQUc4TyxHQUFHOU8sRUFBRSxTQUFTa1AsS0FBSyxHQUFHSixHQUFHLENBQUMsSUFBSTlPLEVBQUU4TyxHQUFHN08sRUFBRThPLEdBQW9CLEdBQWpCQSxHQUFHRCxHQUFHLEtBQUtFLEdBQUdoUCxHQUFNQyxFQUFFLElBQUlELEVBQUUsRUFBRUEsRUFBRUMsRUFBRXZTLE9BQU9zUyxJQUFJZ1AsR0FBRy9PLEVBQUVELEtBQzdkLFNBQVNtUCxHQUFHblAsRUFBRUMsR0FBRyxPQUFPRCxFQUFFQyxHQUFHLFNBQVNtUCxHQUFHcFAsRUFBRUMsRUFBRTFWLEdBQUcsT0FBT3lWLEVBQUVDLEVBQUUxVixHQUFHLFNBQVM4a0IsTUFBTSxJQUFJQyxJQUFHLEVBQUcsU0FBU0MsR0FBR3ZQLEVBQUVDLEdBQUcsR0FBR3FQLEdBQUcsT0FBT3RQLEVBQUVDLEdBQUdxUCxJQUFHLEVBQUcsSUFBSSxPQUFPSCxHQUFHblAsRUFBRUMsR0FBRyxRQUFXcVAsSUFBRyxHQUFHLE9BQU9SLElBQUksT0FBT0MsTUFBR00sS0FBS0gsT0FBTSxJQUFJTSxHQUFHLENBQUNDLE9BQU0sRUFBR0MsTUFBSyxFQUFHQyxVQUFTLEVBQUdDLGtCQUFpQixFQUFHQyxPQUFNLEVBQUdDLE9BQU0sRUFBR0MsUUFBTyxFQUFHQyxVQUFTLEVBQUdDLE9BQU0sRUFBR0MsUUFBTyxFQUFHQyxLQUFJLEVBQUdDLE1BQUssRUFBR0MsTUFBSyxFQUFHQyxLQUFJLEVBQUdDLE1BQUssR0FBSSxTQUFTQyxHQUFHeFEsR0FBRyxJQUFJQyxFQUFFRCxHQUFHQSxFQUFFeVEsVUFBVXpRLEVBQUV5USxTQUFTMUcsY0FBYyxNQUFNLFVBQVU5SixJQUFJdVAsR0FBR3hQLEVBQUV6TyxNQUFNLGFBQWEwTyxFQUN4YyxTQUFTeVEsR0FBRzFRLEdBQTZGLE9BQTFGQSxFQUFFQSxFQUFFeFIsUUFBUXdSLEVBQUUyUSxZQUFZMWlCLFFBQVMyaUIsMEJBQTBCNVEsRUFBRUEsRUFBRTRRLHlCQUFnQyxJQUFJNVEsRUFBRTZRLFNBQVM3USxFQUFFbFAsV0FBV2tQLEVBQUUsU0FBUzhRLEdBQUc5USxHQUFHLElBQUk2SixFQUFHLE9BQU0sRUFBWSxJQUFJNUosR0FBYkQsRUFBRSxLQUFLQSxLQUFhOVIsU0FBcUcsT0FBNUYrUixLQUFJQSxFQUFFL1IsU0FBU2tELGNBQWMsUUFBU1csYUFBYWlPLEVBQUUsV0FBV0MsRUFBRSxtQkFBb0JBLEVBQUVELElBQVdDLEVBQUUsU0FBUzhRLEdBQUcvUSxHQUFHLElBQUlDLEVBQUVELEVBQUV6TyxLQUFLLE9BQU95TyxFQUFFQSxFQUFFeVEsV0FBVyxVQUFVelEsRUFBRStKLGdCQUFnQixhQUFhOUosR0FBRyxVQUFVQSxHQUVuWSxTQUFTK1EsR0FBR2hSLEdBQUdBLEVBQUVpUixnQkFBZ0JqUixFQUFFaVIsY0FEdkQsU0FBWWpSLEdBQUcsSUFBSUMsRUFBRThRLEdBQUcvUSxHQUFHLFVBQVUsUUFBUXpWLEVBQUVLLE9BQU9zbUIseUJBQXlCbFIsRUFBRXFCLFlBQVl2VixVQUFVbVUsR0FBR3pWLEVBQUUsR0FBR3dWLEVBQUVDLEdBQUcsSUFBSUQsRUFBRWpVLGVBQWVrVSxTQUFJLElBQXFCMVYsR0FBRyxtQkFBb0JBLEVBQUVRLEtBQUssbUJBQW9CUixFQUFFNG1CLElBQUksQ0FBQyxJQUFJcGlCLEVBQUV4RSxFQUFFUSxJQUFJcVYsRUFBRTdWLEVBQUU0bUIsSUFBaUwsT0FBN0t2bUIsT0FBT0MsZUFBZW1WLEVBQUVDLEVBQUUsQ0FBQ21SLGNBQWEsRUFBR3JtQixJQUFJLFdBQVcsT0FBT2dFLEVBQUUxRSxLQUFLZ0MsT0FBTzhrQixJQUFJLFNBQVNuUixHQUFHeFYsRUFBRSxHQUFHd1YsRUFBRUksRUFBRS9WLEtBQUtnQyxLQUFLMlQsTUFBTXBWLE9BQU9DLGVBQWVtVixFQUFFQyxFQUFFLENBQUNuVixXQUFXUCxFQUFFTyxhQUFtQixDQUFDdW1CLFNBQVMsV0FBVyxPQUFPN21CLEdBQUc4bUIsU0FBUyxTQUFTdFIsR0FBR3hWLEVBQUUsR0FBR3dWLEdBQUd1UixhQUFhLFdBQVd2UixFQUFFaVIsY0FDeGYsWUFBWWpSLEVBQUVDLE1BQXVEdVIsQ0FBR3hSLElBQUksU0FBU3lSLEdBQUd6UixHQUFHLElBQUlBLEVBQUUsT0FBTSxFQUFHLElBQUlDLEVBQUVELEVBQUVpUixjQUFjLElBQUloUixFQUFFLE9BQU0sRUFBRyxJQUFJMVYsRUFBRTBWLEVBQUVvUixXQUFlN21CLEVBQUUsR0FBcUQsT0FBbER3VixJQUFJeFYsRUFBRXVtQixHQUFHL1EsR0FBR0EsRUFBRTBSLFFBQVEsT0FBTyxRQUFRMVIsRUFBRTdVLFFBQU82VSxFQUFFeFYsS0FBYUQsSUFBRzBWLEVBQUVxUixTQUFTdFIsSUFBRyxHQUFPLElBQUkyUixHQUFHaFMsRUFBR29HLG1EQUFtRDRMLEdBQUc1bEIsZUFBZSw0QkFBNEI0bEIsR0FBRzNMLHVCQUF1QixDQUFDeEUsUUFBUSxPQUM5WSxJQUFJb1EsR0FBRyxjQUFjbFMsR0FBRSxtQkFBb0J6VSxRQUFRQSxPQUFPa1UsSUFBSTBTLEdBQUduUyxHQUFFelUsT0FBT2tVLElBQUksaUJBQWlCLE1BQU0yUyxHQUFHcFMsR0FBRXpVLE9BQU9rVSxJQUFJLGdCQUFnQixNQUFNNFMsR0FBR3JTLEdBQUV6VSxPQUFPa1UsSUFBSSxrQkFBa0IsTUFBTTZTLEdBQUd0UyxHQUFFelUsT0FBT2tVLElBQUkscUJBQXFCLE1BQU04UyxHQUFHdlMsR0FBRXpVLE9BQU9rVSxJQUFJLGtCQUFrQixNQUFNK1MsR0FBR3hTLEdBQUV6VSxPQUFPa1UsSUFBSSxrQkFBa0IsTUFBTWdULEdBQUd6UyxHQUFFelUsT0FBT2tVLElBQUksaUJBQWlCLE1BQU1pVCxHQUFHMVMsR0FBRXpVLE9BQU9rVSxJQUFJLHlCQUF5QixNQUFNa1QsR0FBRzNTLEdBQUV6VSxPQUFPa1UsSUFBSSxxQkFBcUIsTUFBTW1ULEdBQUc1UyxHQUFFelUsT0FBT2tVLElBQUksa0JBQWtCLE1BQU1vVCxHQUFHN1MsR0FBRXpVLE9BQU9rVSxJQUFJLGNBQ3ZlLE1BQU1xVCxHQUFHOVMsR0FBRXpVLE9BQU9rVSxJQUFJLGNBQWMsTUFBTXNULEdBQUcsbUJBQW9CeG5CLFFBQVFBLE9BQU82VSxTQUFTLFNBQVM0UyxHQUFHMVMsR0FBRyxPQUFHLE9BQU9BLEdBQUcsaUJBQWtCQSxFQUFTLEtBQXdDLG1CQUFuQ0EsRUFBRXlTLElBQUl6UyxFQUFFeVMsS0FBS3pTLEVBQUUsZUFBMENBLEVBQUUsS0FDaE4sU0FBUzJTLEdBQUczUyxHQUFHLEdBQUcsTUFBTUEsRUFBRSxPQUFPLEtBQUssR0FBRyxtQkFBb0JBLEVBQUUsT0FBT0EsRUFBRTRTLGFBQWE1UyxFQUFFdlYsTUFBTSxLQUFLLEdBQUcsaUJBQWtCdVYsRUFBRSxPQUFPQSxFQUFFLE9BQU9BLEdBQUcsS0FBS29TLEdBQUcsTUFBTSxpQkFBaUIsS0FBS0wsR0FBRyxNQUFNLFdBQVcsS0FBS0QsR0FBRyxNQUFNLFNBQVMsS0FBS0csR0FBRyxNQUFNLFdBQVcsS0FBS0QsR0FBRyxNQUFNLGFBQWEsS0FBS00sR0FBRyxNQUFNLFdBQVcsR0FBRyxpQkFBa0J0UyxFQUFFLE9BQU9BLEVBQUVpQyxVQUFVLEtBQUtrUSxHQUFHLE1BQU0sbUJBQW1CLEtBQUtELEdBQUcsTUFBTSxtQkFBbUIsS0FBS0csR0FBRyxJQUFJcFMsRUFBRUQsRUFBRWhCLE9BQW1DLE9BQTVCaUIsRUFBRUEsRUFBRTJTLGFBQWEzUyxFQUFFeFYsTUFBTSxHQUFVdVYsRUFBRTRTLGNBQWMsS0FBSzNTLEVBQUUsY0FBY0EsRUFDbmYsSUFBSSxjQUFjLEtBQUtzUyxHQUFHLE9BQU9JLEdBQUczUyxFQUFFek8sTUFBTSxLQUFLaWhCLEdBQUcsR0FBR3hTLEVBQUUsSUFBSUEsRUFBRXlFLFFBQVF6RSxFQUFFMEUsUUFBUSxLQUFLLE9BQU9pTyxHQUFHM1MsR0FBRyxPQUFPLEtBQUssU0FBUzZTLEdBQUc3UyxHQUFHLElBQUlDLEVBQUUsR0FBRyxFQUFFLENBQUNELEVBQUUsT0FBT0EsRUFBRS9KLEtBQUssS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEVBQUUsSUFBSTFMLEVBQUUsR0FBRyxNQUFNeVYsRUFBRSxRQUFRLElBQUl4VixFQUFFd1YsRUFBRThTLFlBQVkvakIsRUFBRWlSLEVBQUUrUyxhQUFhM1MsRUFBRXVTLEdBQUczUyxFQUFFek8sTUFBTWhILEVBQUUsS0FBS0MsSUFBSUQsRUFBRW9vQixHQUFHbm9CLEVBQUUrRyxPQUFPL0csRUFBRTRWLEVBQUVBLEVBQUUsR0FBR3JSLEVBQUVxUixFQUFFLFFBQVFyUixFQUFFaWtCLFNBQVN0ZCxRQUFRa2MsR0FBRyxJQUFJLElBQUk3aUIsRUFBRWtrQixXQUFXLElBQUkxb0IsSUFBSTZWLEVBQUUsZ0JBQWdCN1YsRUFBRSxLQUFLQSxFQUFFLGFBQWFDLEdBQUcsV0FBVzRWLEVBQUVILEdBQUcxVixFQUFFeVYsRUFBRUEsRUFBRXFKLGFBQWFySixHQUFHLE9BQU9DLEVBQ3pjLElBQUlpVCxHQUFHLDhWQUE4VkMsR0FBR3ZvQixPQUFPa0IsVUFBVUMsZUFBZXFuQixHQUFHLEdBQUczaEIsR0FBRyxHQUV6TCxTQUFTOE8sR0FBRVAsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxHQUFHMUMsS0FBS2duQixnQkFBZ0IsSUFBSXBULEdBQUcsSUFBSUEsR0FBRyxJQUFJQSxFQUFFNVQsS0FBS2luQixjQUFjOW9CLEVBQUU2QixLQUFLa25CLG1CQUFtQnhrQixFQUFFMUMsS0FBS21uQixnQkFBZ0JqcEIsRUFBRThCLEtBQUtvbkIsYUFBYXpULEVBQUUzVCxLQUFLa0YsS0FBSzBPLEVBQUUsSUFBSVcsR0FBRSxHQUNuWSx1SUFBdUluTCxNQUFNLEtBQUszRCxRQUFRLFNBQVNrTyxHQUFHWSxHQUFFWixHQUFHLElBQUlPLEdBQUVQLEVBQUUsR0FBRSxFQUFHQSxFQUFFLFFBQVEsQ0FBQyxDQUFDLGdCQUFnQixrQkFBa0IsQ0FBQyxZQUFZLFNBQVMsQ0FBQyxVQUFVLE9BQU8sQ0FBQyxZQUFZLGVBQWVsTyxRQUFRLFNBQVNrTyxHQUFHLElBQUlDLEVBQUVELEVBQUUsR0FBR1ksR0FBRVgsR0FBRyxJQUFJTSxHQUFFTixFQUFFLEdBQUUsRUFBR0QsRUFBRSxHQUFHLFFBQVEsQ0FBQyxrQkFBa0IsWUFBWSxhQUFhLFNBQVNsTyxRQUFRLFNBQVNrTyxHQUFHWSxHQUFFWixHQUFHLElBQUlPLEdBQUVQLEVBQUUsR0FBRSxFQUFHQSxFQUFFK0osY0FBYyxRQUNuZCxDQUFDLGNBQWMsNEJBQTRCLFlBQVksaUJBQWlCalksUUFBUSxTQUFTa08sR0FBR1ksR0FBRVosR0FBRyxJQUFJTyxHQUFFUCxFQUFFLEdBQUUsRUFBR0EsRUFBRSxRQUFRLGdNQUFnTXZLLE1BQU0sS0FBSzNELFFBQVEsU0FBU2tPLEdBQUdZLEdBQUVaLEdBQUcsSUFBSU8sR0FBRVAsRUFBRSxHQUFFLEVBQUdBLEVBQUUrSixjQUFjLFFBQVEsQ0FBQyxVQUFVLFdBQVcsUUFBUSxZQUFZalksUUFBUSxTQUFTa08sR0FBR1ksR0FBRVosR0FBRyxJQUFJTyxHQUFFUCxFQUFFLEdBQUUsRUFBR0EsRUFBRSxRQUNuZCxDQUFDLFVBQVUsWUFBWWxPLFFBQVEsU0FBU2tPLEdBQUdZLEdBQUVaLEdBQUcsSUFBSU8sR0FBRVAsRUFBRSxHQUFFLEVBQUdBLEVBQUUsUUFBUSxDQUFDLE9BQU8sT0FBTyxPQUFPLFFBQVFsTyxRQUFRLFNBQVNrTyxHQUFHWSxHQUFFWixHQUFHLElBQUlPLEdBQUVQLEVBQUUsR0FBRSxFQUFHQSxFQUFFLFFBQVEsQ0FBQyxVQUFVLFNBQVNsTyxRQUFRLFNBQVNrTyxHQUFHWSxHQUFFWixHQUFHLElBQUlPLEdBQUVQLEVBQUUsR0FBRSxFQUFHQSxFQUFFK0osY0FBYyxRQUFRLElBQUkySixHQUFHLGdCQUFnQixTQUFTQyxHQUFHM1QsR0FBRyxPQUFPQSxFQUFFLEdBQUc0VCxjQUd6UixTQUFTQyxHQUFHN1QsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsSUFBSXVFLEVBQUU2UixHQUFFN1UsZUFBZWtVLEdBQUdXLEdBQUVYLEdBQUcsTUFBVyxPQUFPbFIsRUFBRSxJQUFJQSxFQUFFd0MsTUFBSy9HLElBQU8sRUFBRXlWLEVBQUV2UyxTQUFTLE1BQU11UyxFQUFFLElBQUksTUFBTUEsRUFBRSxNQUFJLE1BQU1BLEVBQUUsSUFBSSxNQUFNQSxFQUFFLFFBTm5KLFNBQVlELEVBQUVDLEVBQUUxVixFQUFFQyxHQUFHLEdBQUcsTUFBT3lWLEdBRG9GLFNBQVlELEVBQUVDLEVBQUUxVixFQUFFQyxHQUFHLEdBQUcsT0FBT0QsR0FBRyxJQUFJQSxFQUFFZ0gsS0FBSyxPQUFNLEVBQUcsY0FBYzBPLEdBQUcsSUFBSyxXQUFXLElBQUssU0FBUyxPQUFNLEVBQUcsSUFBSyxVQUFVLE9BQUd6VixJQUFjLE9BQU9ELEdBQVNBLEVBQUU4b0IsZ0JBQW1ELFdBQW5DclQsRUFBRUEsRUFBRStKLGNBQWNyRCxNQUFNLEVBQUUsS0FBc0IsVUFBVTFHLEdBQUUsUUFBUSxPQUFNLEdBQ25UOFQsQ0FBRzlULEVBQUVDLEVBQUUxVixFQUFFQyxHQUFHLE9BQU0sRUFBRyxHQUFHQSxFQUFFLE9BQU0sRUFBRyxHQUFHLE9BQU9ELEVBQUUsT0FBT0EsRUFBRWdILE1BQU0sS0FBSyxFQUFFLE9BQU8wTyxFQUFFLEtBQUssRUFBRSxPQUFNLElBQUtBLEVBQUUsS0FBSyxFQUFFLE9BQU84VCxNQUFNOVQsR0FBRyxLQUFLLEVBQUUsT0FBTzhULE1BQU05VCxJQUFJLEVBQUVBLEVBQUUsT0FBTSxFQU1yRCtULENBQUcvVCxFQUFFMVYsRUFBRXdFLEVBQUV2RSxLQUFLRCxFQUFFLE1BQU1DLEdBQUcsT0FBT3VFLEVBUGhNLFNBQVlpUixHQUFHLFFBQUdtVCxHQUFHOW9CLEtBQUtvSCxHQUFHdU8sS0FBZW1ULEdBQUc5b0IsS0FBSytvQixHQUFHcFQsS0FBZWtULEdBQUdlLEtBQUtqVSxHQUFVdk8sR0FBR3VPLElBQUcsR0FBR29ULEdBQUdwVCxJQUFHLEdBQVMsSUFPa0ZrVSxDQUFHalUsS0FBSyxPQUFPMVYsRUFBRXlWLEVBQUVtVSxnQkFBZ0JsVSxHQUFHRCxFQUFFak8sYUFBYWtPLEVBQUUsR0FBRzFWLElBQUl3RSxFQUFFeWtCLGdCQUFnQnhULEVBQUVqUixFQUFFMGtCLGNBQWMsT0FBT2xwQixFQUFFLElBQUl3RSxFQUFFd0MsTUFBUSxHQUFHaEgsR0FBRzBWLEVBQUVsUixFQUFFdWtCLGNBQWM5b0IsRUFBRXVFLEVBQUV3a0IsbUJBQW1CLE9BQU9ocEIsRUFBRXlWLEVBQUVtVSxnQkFBZ0JsVSxJQUFhMVYsRUFBRSxLQUFYd0UsRUFBRUEsRUFBRXdDLE9BQWMsSUFBSXhDLElBQUcsSUFBS3hFLEVBQUUsR0FBRyxHQUFHQSxFQUFFQyxFQUFFd1YsRUFBRW9VLGVBQWU1cEIsRUFBRXlWLEVBQUUxVixHQUFHeVYsRUFBRWpPLGFBQWFrTyxFQUFFMVYsTUFDNWQsU0FBUzhwQixHQUFHclUsR0FBRyxjQUFjQSxHQUFHLElBQUssVUFBVSxJQUFLLFNBQVMsSUFBSyxTQUFTLElBQUssU0FBUyxJQUFLLFlBQVksT0FBT0EsRUFBRSxRQUFRLE1BQU0sSUFBSSxTQUFTc1UsR0FBR3RVLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUUwVixFQUFFeVIsUUFBUSxPQUFPL2xCLEVBQUUsR0FBR3NVLEVBQUUsQ0FBQ3NVLG9CQUFlLEVBQU9DLGtCQUFhLEVBQU9ycEIsV0FBTSxFQUFPdW1CLFFBQVEsTUFBTW5uQixFQUFFQSxFQUFFeVYsRUFBRXlVLGNBQWNDLGlCQUM5USxTQUFTQyxHQUFHM1UsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRSxNQUFNMFYsRUFBRXVVLGFBQWEsR0FBR3ZVLEVBQUV1VSxhQUFhaHFCLEVBQUUsTUFBTXlWLEVBQUV5UixRQUFRelIsRUFBRXlSLFFBQVF6UixFQUFFc1UsZUFBZWhxQixFQUFFOHBCLEdBQUcsTUFBTXBVLEVBQUU5VSxNQUFNOFUsRUFBRTlVLE1BQU1aLEdBQUd5VixFQUFFeVUsY0FBYyxDQUFDQyxlQUFlbHFCLEVBQUVvcUIsYUFBYXJxQixFQUFFc3FCLFdBQVcsYUFBYTVVLEVBQUUxTyxNQUFNLFVBQVUwTyxFQUFFMU8sS0FBSyxNQUFNME8sRUFBRXlSLFFBQVEsTUFBTXpSLEVBQUU5VSxPQUFPLFNBQVMycEIsR0FBRzlVLEVBQUVDLEdBQWUsT0FBWkEsRUFBRUEsRUFBRXlSLFVBQWlCbUMsR0FBRzdULEVBQUUsVUFBVUMsR0FBRSxHQUNqVSxTQUFTOFUsR0FBRy9VLEVBQUVDLEdBQUc2VSxHQUFHOVUsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRThwQixHQUFHcFUsRUFBRTlVLE9BQU9YLEVBQUV5VixFQUFFMU8sS0FBSyxHQUFHLE1BQU1oSCxFQUFLLFdBQVdDLEdBQU0sSUFBSUQsR0FBRyxLQUFLeVYsRUFBRTdVLE9BQU82VSxFQUFFN1UsT0FBT1osS0FBRXlWLEVBQUU3VSxNQUFNLEdBQUdaLEdBQU95VixFQUFFN1UsUUFBUSxHQUFHWixJQUFJeVYsRUFBRTdVLE1BQU0sR0FBR1osUUFBUSxHQUFHLFdBQVdDLEdBQUcsVUFBVUEsRUFBOEIsWUFBM0J3VixFQUFFbVUsZ0JBQWdCLFNBQWdCbFUsRUFBRWxVLGVBQWUsU0FBU2lwQixHQUFHaFYsRUFBRUMsRUFBRTFPLEtBQUtoSCxHQUFHMFYsRUFBRWxVLGVBQWUsaUJBQWlCaXBCLEdBQUdoVixFQUFFQyxFQUFFMU8sS0FBSzhpQixHQUFHcFUsRUFBRXVVLGVBQWUsTUFBTXZVLEVBQUV5UixTQUFTLE1BQU16UixFQUFFc1UsaUJBQWlCdlUsRUFBRXVVLGlCQUFpQnRVLEVBQUVzVSxnQkFDblosU0FBU1UsR0FBR2pWLEVBQUVDLEVBQUUxVixHQUFHLEdBQUcwVixFQUFFbFUsZUFBZSxVQUFVa1UsRUFBRWxVLGVBQWUsZ0JBQWdCLENBQUMsSUFBSXZCLEVBQUV5VixFQUFFMU8sS0FBSyxLQUFLLFdBQVcvRyxHQUFHLFVBQVVBLFFBQUcsSUFBU3lWLEVBQUU5VSxPQUFPLE9BQU84VSxFQUFFOVUsT0FBTyxPQUFPOFUsRUFBRSxHQUFHRCxFQUFFeVUsY0FBY0csYUFBYXJxQixHQUFHMFYsSUFBSUQsRUFBRTdVLFFBQVE2VSxFQUFFN1UsTUFBTThVLEdBQUdELEVBQUV3VSxhQUFhdlUsRUFBVyxNQUFUMVYsRUFBRXlWLEVBQUV2VixRQUFjdVYsRUFBRXZWLEtBQUssSUFBSXVWLEVBQUV1VSxnQkFBZ0J2VSxFQUFFdVUsZUFBZXZVLEVBQUV1VSxpQkFBaUJ2VSxFQUFFeVUsY0FBY0MsZUFBZSxLQUFLbnFCLElBQUl5VixFQUFFdlYsS0FBS0YsR0FDMVgsU0FBU3lxQixHQUFHaFYsRUFBRUMsRUFBRTFWLEdBQU0sV0FBVzBWLEdBQUdELEVBQUVrVixjQUFjQyxnQkFBZ0JuVixJQUFFLE1BQU16VixFQUFFeVYsRUFBRXdVLGFBQWEsR0FBR3hVLEVBQUV5VSxjQUFjRyxhQUFhNVUsRUFBRXdVLGVBQWUsR0FBR2pxQixJQUFJeVYsRUFBRXdVLGFBQWEsR0FBR2pxQixJQVB2SywwakNBQTBqQ2tMLE1BQU0sS0FBSzNELFFBQVEsU0FBU2tPLEdBQUcsSUFBSUMsRUFBRUQsRUFBRXRLLFFBQVFnZSxHQUN6bUNDLElBQUkvUyxHQUFFWCxHQUFHLElBQUlNLEdBQUVOLEVBQUUsR0FBRSxFQUFHRCxFQUFFLFFBQVEsc0ZBQXNGdkssTUFBTSxLQUFLM0QsUUFBUSxTQUFTa08sR0FBRyxJQUFJQyxFQUFFRCxFQUFFdEssUUFBUWdlLEdBQUdDLElBQUkvUyxHQUFFWCxHQUFHLElBQUlNLEdBQUVOLEVBQUUsR0FBRSxFQUFHRCxFQUFFLGtDQUFrQyxDQUFDLFdBQVcsV0FBVyxhQUFhbE8sUUFBUSxTQUFTa08sR0FBRyxJQUFJQyxFQUFFRCxFQUFFdEssUUFBUWdlLEdBQUdDLElBQUkvUyxHQUFFWCxHQUFHLElBQUlNLEdBQUVOLEVBQUUsR0FBRSxFQUFHRCxFQUFFLDBDQUEwQyxDQUFDLFdBQVcsZUFBZWxPLFFBQVEsU0FBU2tPLEdBQUdZLEdBQUVaLEdBQUcsSUFBSU8sR0FBRVAsRUFBRSxHQUFFLEVBQUdBLEVBQUUrSixjQUFjLFFBTXRSLElBQUlxTCxHQUFHLENBQUNDLE9BQU8sQ0FBQ25PLHdCQUF3QixDQUFDdUcsUUFBUSxXQUFXQyxTQUFTLG1CQUFtQm5HLGFBQWEsOERBQThEOVIsTUFBTSxPQUFPLFNBQVM2ZixHQUFHdFYsRUFBRUMsRUFBRTFWLEdBQThELE9BQTNEeVYsRUFBRVAsR0FBRXVNLFVBQVVvSixHQUFHQyxPQUFPclYsRUFBRUMsRUFBRTFWLElBQUtnSCxLQUFLLFNBQVMwZCxHQUFHMWtCLEdBQUdxZixFQUFHNUosR0FBVUEsRUFBRSxJQUFJdVYsR0FBRyxLQUFLQyxHQUFHLEtBQUssU0FBU0MsR0FBR3pWLEdBQUc0SSxFQUFHNUksR0FDdmQsU0FBUzBWLEdBQUcxVixHQUFlLEdBQUd5UixHQUFUdkksRUFBR2xKLElBQVksT0FBT0EsRUFBRSxTQUFTMlYsR0FBRzNWLEVBQUVDLEdBQUcsR0FBRyxXQUFXRCxFQUFFLE9BQU9DLEVBQUUsSUFBSTJWLElBQUcsRUFBMkUsU0FBU0MsS0FBS04sS0FBS0EsR0FBR08sWUFBWSxtQkFBbUJDLElBQUlQLEdBQUdELEdBQUcsTUFBTSxTQUFTUSxHQUFHL1YsR0FBRyxVQUFVQSxFQUFFeVQsY0FBY2lDLEdBQUdGLEtBQXVCakcsR0FBR2tHLEdBQXBCelYsRUFBRXNWLEdBQUdFLEdBQUd4VixFQUFFMFEsR0FBRzFRLEtBQWMsU0FBU2dXLEdBQUdoVyxFQUFFQyxFQUFFMVYsR0FBRyxVQUFVeVYsR0FBRzZWLEtBQVVMLEdBQUdqckIsR0FBUmdyQixHQUFHdFYsR0FBVWdXLFlBQVksbUJBQW1CRixLQUFLLFNBQVMvVixHQUFHNlYsS0FBSyxTQUFTSyxHQUFHbFcsR0FBRyxHQUFHLG9CQUFvQkEsR0FBRyxVQUFVQSxHQUFHLFlBQVlBLEVBQUUsT0FBTzBWLEdBQUdGLElBQ2hmLFNBQVNXLEdBQUduVyxFQUFFQyxHQUFHLEdBQUcsVUFBVUQsRUFBRSxPQUFPMFYsR0FBR3pWLEdBQUcsU0FBU21XLEdBQUdwVyxFQUFFQyxHQUFHLEdBQUcsVUFBVUQsR0FBRyxXQUFXQSxFQUFFLE9BQU8wVixHQUFHelYsR0FESjRKLElBQUsrTCxHQUFHOUUsR0FBRyxZQUFZNWlCLFNBQVNpZixjQUFjLEVBQUVqZixTQUFTaWYsZUFFMUosSUFBSWtKLEdBQUcsQ0FBQ3JQLFdBQVdvTyxHQUFHa0IsdUJBQXVCVixHQUFHN08sY0FBYyxTQUFTL0csRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsSUFBSXVFLEVBQUVrUixFQUFFaUosRUFBR2pKLEdBQUdoUyxPQUFPbVMsT0FBRSxFQUFPRixPQUFFLEVBQU9DLEVBQUVwUixFQUFFMGhCLFVBQVUxaEIsRUFBRTBoQixTQUFTMUcsY0FBbUwsR0FBckssV0FBVzVKLEdBQUcsVUFBVUEsR0FBRyxTQUFTcFIsRUFBRXdDLEtBQUs2TyxFQUFFdVYsR0FBR25GLEdBQUd6aEIsR0FBRzZtQixHQUFHeFYsRUFBRWdXLElBQUloVyxFQUFFOFYsR0FBR2hXLEVBQUU4VixLQUFLN1YsRUFBRXBSLEVBQUUwaEIsV0FBVyxVQUFVdFEsRUFBRTRKLGdCQUFnQixhQUFhaGIsRUFBRXdDLE1BQU0sVUFBVXhDLEVBQUV3QyxRQUFRNk8sRUFBRStWLElBQU8vVixJQUFJQSxFQUFFQSxFQUFFSixFQUFFQyxJQUFJLE9BQU9xVixHQUFHbFYsRUFBRTdWLEVBQUVDLEdBQUcwVixHQUFHQSxFQUFFRixFQUFFalIsRUFBRWtSLEdBQUcsU0FBU0QsSUFBSUEsRUFBRWpSLEVBQUUwbEIsZ0JBQWdCelUsRUFBRTZVLFlBQVksV0FBVzlsQixFQUFFd0MsTUFBTXlqQixHQUFHam1CLEVBQUUsU0FBU0EsRUFBRTVELFNBQVNvckIsR0FBRzlXLEdBQUVtTixPQUFPLENBQUM0SixLQUFLLEtBQUt0SSxPQUFPLE9BQU91SSxHQUFHLENBQUNDLElBQUksU0FDemZDLFFBQVEsVUFBVUMsS0FBSyxVQUFVQyxNQUFNLFlBQVksU0FBU0MsR0FBRzlXLEdBQUcsSUFBSUMsRUFBRTVULEtBQUtpZixZQUFZLE9BQU9yTCxFQUFFOFcsaUJBQWlCOVcsRUFBRThXLGlCQUFpQi9XLE1BQUlBLEVBQUV5VyxHQUFHelcsT0FBTUMsRUFBRUQsR0FBTSxTQUFTZ1gsS0FBSyxPQUFPRixHQUNsTCxJQUFJRyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBRyxFQUFHQyxJQUFHLEVBQUdDLEdBQUdkLEdBQUczSixPQUFPLENBQUMwSyxRQUFRLEtBQUtDLFFBQVEsS0FBS0MsUUFBUSxLQUFLQyxRQUFRLEtBQUtDLE1BQU0sS0FBS0MsTUFBTSxLQUFLbkosUUFBUSxLQUFLb0osU0FBUyxLQUFLbkosT0FBTyxLQUFLQyxRQUFRLEtBQUtxSSxpQkFBaUJDLEdBQUdhLE9BQU8sS0FBS0MsUUFBUSxLQUFLQyxjQUFjLFNBQVMvWCxHQUFHLE9BQU9BLEVBQUUrWCxnQkFBZ0IvWCxFQUFFZ1ksY0FBY2hZLEVBQUUyUSxXQUFXM1EsRUFBRWlZLFVBQVVqWSxFQUFFZ1ksY0FBY0UsVUFBVSxTQUFTbFksR0FBRyxHQUFHLGNBQWNBLEVBQUUsT0FBT0EsRUFBRWtZLFVBQVUsSUFBSWpZLEVBQUVnWCxHQUFnQixPQUFiQSxHQUFHalgsRUFBRXNYLFFBQWVILEdBQUcsY0FBY25YLEVBQUV6TyxLQUFLeU8sRUFBRXNYLFFBQVFyWCxFQUFFLEdBQUdrWCxJQUFHLEVBQUcsSUFBSWdCLFVBQVUsU0FBU25ZLEdBQUcsR0FBRyxjQUFjQSxFQUFFLE9BQU9BLEVBQUVtWSxVQUMzZixJQUFJbFksRUFBRWlYLEdBQWdCLE9BQWJBLEdBQUdsWCxFQUFFdVgsUUFBZUgsR0FBRyxjQUFjcFgsRUFBRXpPLEtBQUt5TyxFQUFFdVgsUUFBUXRYLEVBQUUsR0FBR21YLElBQUcsRUFBRyxNQUFNZ0IsR0FBR2YsR0FBR3pLLE9BQU8sQ0FBQ3lMLFVBQVUsS0FBS0MsTUFBTSxLQUFLQyxPQUFPLEtBQUtDLFNBQVMsS0FBS0MsbUJBQW1CLEtBQUtDLE1BQU0sS0FBS0MsTUFBTSxLQUFLQyxNQUFNLEtBQUtDLFlBQVksS0FBS0MsVUFBVSxPQUFPQyxHQUFHLENBQUNDLFdBQVcsQ0FBQzVSLGlCQUFpQixlQUFlRyxhQUFhLENBQUMsV0FBVyxjQUFjMFIsV0FBVyxDQUFDN1IsaUJBQWlCLGVBQWVHLGFBQWEsQ0FBQyxXQUFXLGNBQWMyUixhQUFhLENBQUM5UixpQkFBaUIsaUJBQWlCRyxhQUFhLENBQUMsYUFBYSxnQkFBZ0I0UixhQUFhLENBQUMvUixpQkFBaUIsaUJBQ2poQkcsYUFBYSxDQUFDLGFBQWEsaUJBQWlCNlIsR0FBRyxDQUFDcFMsV0FBVytSLEdBQUdoUyxjQUFjLFNBQVMvRyxFQUFFQyxFQUFFMVYsRUFBRUMsR0FBRyxJQUFJdUUsRUFBRSxjQUFjaVIsR0FBRyxnQkFBZ0JBLEVBQUVJLEVBQUUsYUFBYUosR0FBRyxlQUFlQSxFQUFFLEdBQUdqUixJQUFJeEUsRUFBRXd0QixlQUFleHRCLEVBQUV5dEIsZUFBZTVYLElBQUlyUixFQUFFLE9BQU8sS0FBNEksR0FBdklBLEVBQUV2RSxFQUFFeUQsU0FBU3pELEVBQUVBLEdBQUd1RSxFQUFFdkUsRUFBRTBxQixlQUFlbm1CLEVBQUVzcUIsYUFBYXRxQixFQUFFdXFCLGFBQWFyckIsT0FBT21TLEdBQUdBLEVBQUVILEVBQUVBLEdBQUdBLEVBQUUxVixFQUFFd3RCLGVBQWV4dEIsRUFBRTB0QixXQUFXalAsRUFBRy9JLEdBQUcsTUFBTUcsRUFBRSxLQUFRQSxJQUFJSCxFQUFFLE9BQU8sS0FBSyxJQUFJQyxPQUFFLEVBQU9DLE9BQUUsRUFBT2hXLE9BQUUsRUFBTytVLE9BQUUsRUFBVSxhQUFhYyxHQUFHLGNBQWNBLEdBQUVFLEVBQUVtWCxHQUFHbFgsRUFBRTRZLEdBQUdFLFdBQVc5dUIsRUFBRTR1QixHQUFHQyxXQUFXOVosRUFBRSxTQUMzZSxlQUFlYyxHQUFHLGdCQUFnQkEsSUFBRUUsRUFBRWtZLEdBQUdqWSxFQUFFNFksR0FBR0ksYUFBYWh2QixFQUFFNHVCLEdBQUdHLGFBQWFoYSxFQUFFLFdBQVUsSUFBSTVVLEVBQUUsTUFBTThWLEVBQUVyUixFQUFFbWEsRUFBRzlJLEdBQW1LLEdBQWhLclIsRUFBRSxNQUFNa1IsRUFBRWxSLEVBQUVtYSxFQUFHakosSUFBR0QsRUFBRUUsRUFBRThMLFVBQVU3TCxFQUFFQyxFQUFFN1YsRUFBRUMsSUFBSytHLEtBQUsyTixFQUFFLFFBQVFjLEVBQUV4UixPQUFPbEUsRUFBRTBWLEVBQUUrWCxjQUFjaHBCLEdBQUV4RSxFQUFFMlYsRUFBRThMLFVBQVU3aEIsRUFBRThWLEVBQUUxVixFQUFFQyxJQUFLK0csS0FBSzJOLEVBQUUsUUFBUTNVLEVBQUVpRSxPQUFPTyxFQUFFeEUsRUFBRXd0QixjQUFjenRCLEVBQUVFLEVBQUV5VixFQUFLRyxHQUFHNVYsRUFBRXdWLEVBQUUsQ0FBYSxJQUFSalIsRUFBRXZFLEVBQUUwVSxFQUFFLEVBQU1nQixFQUFoQkQsRUFBRUcsRUFBa0JGLEVBQUVBLEVBQUVrSixFQUFHbEosR0FBR2hCLElBQVEsSUFBSmdCLEVBQUUsRUFBTS9WLEVBQUU0RSxFQUFFNUUsRUFBRUEsRUFBRWlmLEVBQUdqZixHQUFHK1YsSUFBSSxLQUFLLEVBQUVoQixFQUFFZ0IsR0FBR0QsRUFBRW1KLEVBQUduSixHQUFHZixJQUFJLEtBQUssRUFBRWdCLEVBQUVoQixHQUFHblEsRUFBRXFhLEVBQUdyYSxHQUFHbVIsSUFBSSxLQUFLaEIsS0FBSyxDQUFDLEdBQUdlLElBQUlsUixHQUFHa1IsSUFBSWxSLEVBQUV3cUIsVUFBVSxNQUFNdlosRUFBRUMsRUFBRW1KLEVBQUduSixHQUFHbFIsRUFBRXFhLEVBQUdyYSxHQUFHa1IsRUFBRSxVQUFVQSxFQUFFLEtBQVMsSUFBSmxSLEVBQUVrUixFQUFNQSxFQUFFLEdBQUdHLEdBQUdBLElBQUlyUixJQUNuZSxRQUR1ZW1RLEVBQ3Rma0IsRUFBRW1aLFlBQXVCcmEsSUFBSW5RLElBQVFrUixFQUFFclMsS0FBS3dTLEdBQUdBLEVBQUVnSixFQUFHaEosR0FBRyxJQUFJQSxFQUFFLEdBQUc1VixHQUFHQSxJQUFJdUUsSUFBcUIsUUFBakJtUSxFQUFFMVUsRUFBRSt1QixZQUF1QnJhLElBQUluUSxJQUFRcVIsRUFBRXhTLEtBQUtwRCxHQUFHQSxFQUFFNGUsRUFBRzVlLEdBQUcsSUFBSUEsRUFBRSxFQUFFQSxFQUFFeVYsRUFBRXZTLE9BQU9sRCxJQUFJa2YsRUFBR3pKLEVBQUV6VixHQUFHLFVBQVV3VixHQUFHLElBQUl4VixFQUFFNFYsRUFBRTFTLE9BQU8sRUFBRWxELEtBQUtrZixFQUFHdEosRUFBRTVWLEdBQUcsV0FBV0QsR0FBRyxNQUFNLENBQUN5VixFQUFFelYsS0FBSyxTQUFTaXZCLEdBQUd4WixFQUFFQyxHQUFHLE9BQU9ELElBQUlDLElBQUksSUFBSUQsR0FBRyxFQUFFQSxHQUFJLEVBQUVDLElBQUlELEdBQUlBLEdBQUdDLEdBQUlBLEVBQUUsSUFBSXdaLEdBQUc3dUIsT0FBT2tCLFVBQVVDLGVBQ2xVLFNBQVMydEIsR0FBRzFaLEVBQUVDLEdBQUcsR0FBR3VaLEdBQUd4WixFQUFFQyxHQUFHLE9BQU0sRUFBRyxHQUFHLGlCQUFrQkQsR0FBRyxPQUFPQSxHQUFHLGlCQUFrQkMsR0FBRyxPQUFPQSxFQUFFLE9BQU0sRUFBRyxJQUFJMVYsRUFBRUssT0FBT2lILEtBQUttTyxHQUFHeFYsRUFBRUksT0FBT2lILEtBQUtvTyxHQUFHLEdBQUcxVixFQUFFbUQsU0FBU2xELEVBQUVrRCxPQUFPLE9BQU0sRUFBRyxJQUFJbEQsRUFBRSxFQUFFQSxFQUFFRCxFQUFFbUQsT0FBT2xELElBQUksSUFBSWl2QixHQUFHcHZCLEtBQUs0VixFQUFFMVYsRUFBRUMsTUFBTWd2QixHQUFHeFosRUFBRXpWLEVBQUVDLElBQUl5VixFQUFFMVYsRUFBRUMsS0FBSyxPQUFNLEVBQUcsT0FBTSxFQUFHLFNBQVNtdkIsR0FBRzNaLEdBQUcsSUFBSUMsRUFBRUQsRUFBRSxHQUFHQSxFQUFFdVosVUFBVSxLQUFLdFosRUFBRW9KLFFBQVFwSixFQUFFQSxFQUFFb0osV0FBVyxDQUFDLEdBQUcsSUFBaUIsRUFBWnBKLEVBQUUyWixXQUFhLE9BQU8sRUFBRSxLQUFLM1osRUFBRW9KLFFBQVEsR0FBYyxJQUFpQixHQUE1QnBKLEVBQUVBLEVBQUVvSixRQUFjdVEsV0FBYSxPQUFPLEVBQUUsT0FBTyxJQUFJM1osRUFBRWhLLElBQUksRUFBRSxFQUFFLFNBQVM0akIsR0FBRzdaLEdBQUcsSUFBSTJaLEdBQUczWixJQUFHUixFQUFFLE9BRXhXLFNBQVNzYSxHQUFHOVosR0FBVyxLQUFSQSxFQUQ3SCxTQUFZQSxHQUFHLElBQUlDLEVBQUVELEVBQUV1WixVQUFVLElBQUl0WixFQUFFLE9BQWUsS0FBUkEsRUFBRTBaLEdBQUczWixLQUFTUixFQUFFLE9BQWMsSUFBSVMsRUFBRSxLQUFLRCxFQUFFLElBQUksSUFBSXpWLEVBQUV5VixFQUFFeFYsRUFBRXlWLElBQUksQ0FBQyxJQUFJbFIsRUFBRXhFLEVBQUU4ZSxPQUFPakosRUFBRXJSLEVBQUVBLEVBQUV3cUIsVUFBVSxLQUFLLElBQUl4cUIsSUFBSXFSLEVBQUUsTUFBTSxHQUFHclIsRUFBRTJMLFFBQVEwRixFQUFFMUYsTUFBTSxDQUFDLElBQUksSUFBSXdGLEVBQUVuUixFQUFFMkwsTUFBTXdGLEdBQUcsQ0FBQyxHQUFHQSxJQUFJM1YsRUFBRSxPQUFPc3ZCLEdBQUc5cUIsR0FBR2lSLEVBQUUsR0FBR0UsSUFBSTFWLEVBQUUsT0FBT3F2QixHQUFHOXFCLEdBQUdrUixFQUFFQyxFQUFFQSxFQUFFNlosUUFBUXZhLEVBQUUsT0FBTyxHQUFHalYsRUFBRThlLFNBQVM3ZSxFQUFFNmUsT0FBTzllLEVBQUV3RSxFQUFFdkUsRUFBRTRWLE1BQU0sQ0FBQ0YsR0FBRSxFQUFHLElBQUksSUFBSUMsRUFBRXBSLEVBQUUyTCxNQUFNeUYsR0FBRyxDQUFDLEdBQUdBLElBQUk1VixFQUFFLENBQUMyVixHQUFFLEVBQUczVixFQUFFd0UsRUFBRXZFLEVBQUU0VixFQUFFLE1BQU0sR0FBR0QsSUFBSTNWLEVBQUUsQ0FBQzBWLEdBQUUsRUFBRzFWLEVBQUV1RSxFQUFFeEUsRUFBRTZWLEVBQUUsTUFBTUQsRUFBRUEsRUFBRTRaLFFBQVEsSUFBSTdaLEVBQUUsQ0FBQyxJQUFJQyxFQUFFQyxFQUFFMUYsTUFBTXlGLEdBQUcsQ0FBQyxHQUFHQSxJQUFJNVYsRUFBRSxDQUFDMlYsR0FBRSxFQUFHM1YsRUFBRTZWLEVBQUU1VixFQUFFdUUsRUFBRSxNQUFNLEdBQUdvUixJQUFJM1YsRUFBRSxDQUFDMFYsR0FBRSxFQUFHMVYsRUFBRTRWLEVBQUU3VixFQUFFd0UsRUFBRSxNQUFNb1IsRUFBRUEsRUFBRTRaLFFBQVE3WixHQUM5ZVYsRUFBRSxRQUFRalYsRUFBRWd2QixZQUFZL3VCLEdBQUVnVixFQUFFLE9BQXdDLE9BQTFCLElBQUlqVixFQUFFMEwsS0FBSXVKLEVBQUUsT0FBcUJqVixFQUFFbWUsVUFBVWxILFVBQVVqWCxFQUFFeVYsRUFBRUMsRUFBbUIrWixDQUFHaGEsSUFBUyxPQUFPLEtBQUssSUFBSSxJQUFJQyxFQUFFRCxJQUFJLENBQUMsR0FBRyxJQUFJQyxFQUFFaEssS0FBSyxJQUFJZ0ssRUFBRWhLLElBQUksT0FBT2dLLEVBQUUsR0FBR0EsRUFBRXZGLE1BQU11RixFQUFFdkYsTUFBTTJPLE9BQU9wSixFQUFFQSxFQUFFQSxFQUFFdkYsVUFBVSxDQUFDLEdBQUd1RixJQUFJRCxFQUFFLE1BQU0sTUFBTUMsRUFBRThaLFNBQVMsQ0FBQyxJQUFJOVosRUFBRW9KLFFBQVFwSixFQUFFb0osU0FBU3JKLEVBQUUsT0FBTyxLQUFLQyxFQUFFQSxFQUFFb0osT0FBT3BKLEVBQUU4WixRQUFRMVEsT0FBT3BKLEVBQUVvSixPQUFPcEosRUFBRUEsRUFBRThaLFNBQVMsT0FBTyxLQUNuWCxJQUFJcHNCLEdBQUc4UixHQUFFbU4sT0FBTyxDQUFDcU4sY0FBYyxLQUFLQyxZQUFZLEtBQUtDLGNBQWMsT0FBT0MsR0FBRzNhLEdBQUVtTixPQUFPLENBQUN5TixjQUFjLFNBQVNyYSxHQUFHLE1BQU0sa0JBQWtCQSxFQUFFQSxFQUFFcWEsY0FBY3BzQixPQUFPb3NCLGlCQUFpQkMsR0FBRy9ELEdBQUczSixPQUFPLENBQUNtTCxjQUFjLE9BQU8sU0FBU3dDLEdBQUd2YSxHQUFHLElBQUlDLEVBQUVELEVBQUVnTyxRQUErRSxNQUF2RSxhQUFhaE8sRUFBZ0IsS0FBYkEsRUFBRUEsRUFBRXdhLFdBQWdCLEtBQUt2YSxJQUFJRCxFQUFFLElBQUtBLEVBQUVDLEVBQUUsS0FBS0QsSUFBSUEsRUFBRSxJQUFXLElBQUlBLEdBQUcsS0FBS0EsRUFBRUEsRUFBRSxFQUNuVixJQUFJeWEsR0FBRyxDQUFDQyxJQUFJLFNBQVNDLFNBQVMsSUFBSUMsS0FBSyxZQUFZQyxHQUFHLFVBQVVDLE1BQU0sYUFBYUMsS0FBSyxZQUFZQyxJQUFJLFNBQVNDLElBQUksS0FBS0MsS0FBSyxjQUFjQyxLQUFLLGNBQWNDLE9BQU8sYUFBYUMsZ0JBQWdCLGdCQUFnQkMsR0FBRyxDQUFDQyxFQUFFLFlBQVlDLEVBQUUsTUFBTUMsR0FBRyxRQUFRQyxHQUFHLFFBQVFDLEdBQUcsUUFBUUMsR0FBRyxVQUFVQyxHQUFHLE1BQU1DLEdBQUcsUUFBUUMsR0FBRyxXQUFXQyxHQUFHLFNBQVNDLEdBQUcsSUFBSUMsR0FBRyxTQUFTQyxHQUFHLFdBQVdDLEdBQUcsTUFBTUMsR0FBRyxPQUFPQyxHQUFHLFlBQVlDLEdBQUcsVUFBVUMsR0FBRyxhQUFhQyxHQUFHLFlBQVlDLEdBQUcsU0FBU0MsR0FBRyxTQUFTQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQ2hmQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxNQUFNQyxJQUFJLE1BQU1DLElBQUksTUFBTUMsSUFBSSxVQUFVQyxJQUFJLGFBQWFDLElBQUksUUFBUUMsR0FBR3BILEdBQUczSixPQUFPLENBQUNuaEIsSUFBSSxTQUFTdVUsR0FBRyxHQUFHQSxFQUFFdlUsSUFBSSxDQUFDLElBQUl3VSxFQUFFd2EsR0FBR3phLEVBQUV2VSxNQUFNdVUsRUFBRXZVLElBQUksR0FBRyxpQkFBaUJ3VSxFQUFFLE9BQU9BLEVBQUUsTUFBTSxhQUFhRCxFQUFFek8sS0FBYyxNQUFSeU8sRUFBRXVhLEdBQUd2YSxJQUFVLFFBQVE3SCxPQUFPRyxhQUFhMEgsR0FBSSxZQUFZQSxFQUFFek8sTUFBTSxVQUFVeU8sRUFBRXpPLEtBQUsrcEIsR0FBR3RiLEVBQUVnTyxVQUFVLGVBQWUsSUFBSTRQLFNBQVMsS0FBS3BQLFFBQVEsS0FBS29KLFNBQVMsS0FBS25KLE9BQU8sS0FBS0MsUUFBUSxLQUFLbVAsT0FBTyxLQUFLeFAsT0FBTyxLQUFLMEksaUJBQWlCQyxHQUFHd0QsU0FBUyxTQUFTeGEsR0FBRyxNQUFNLGFBQzllQSxFQUFFek8sS0FBS2dwQixHQUFHdmEsR0FBRyxHQUFHZ08sUUFBUSxTQUFTaE8sR0FBRyxNQUFNLFlBQVlBLEVBQUV6TyxNQUFNLFVBQVV5TyxFQUFFek8sS0FBS3lPLEVBQUVnTyxRQUFRLEdBQUdNLE1BQU0sU0FBU3RPLEdBQUcsTUFBTSxhQUFhQSxFQUFFek8sS0FBS2dwQixHQUFHdmEsR0FBRyxZQUFZQSxFQUFFek8sTUFBTSxVQUFVeU8sRUFBRXpPLEtBQUt5TyxFQUFFZ08sUUFBUSxLQUFLOFAsR0FBR3pHLEdBQUd6SyxPQUFPLENBQUNtUixhQUFhLE9BQU9DLEdBQUd6SCxHQUFHM0osT0FBTyxDQUFDcVIsUUFBUSxLQUFLQyxjQUFjLEtBQUtDLGVBQWUsS0FBSzFQLE9BQU8sS0FBS0MsUUFBUSxLQUFLRixRQUFRLEtBQUtvSixTQUFTLEtBQUtiLGlCQUFpQkMsS0FBS29ILEdBQUczZSxHQUFFbU4sT0FBTyxDQUFDNkcsYUFBYSxLQUFLeUcsWUFBWSxLQUFLQyxjQUFjLE9BQU9rRSxHQUFHaEgsR0FBR3pLLE9BQU8sQ0FBQzBSLE9BQU8sU0FBU3RlLEdBQUcsTUFBTSxXQUFXQSxFQUFFQSxFQUFFc2UsT0FBTyxnQkFDbGZ0ZSxHQUFHQSxFQUFFdWUsWUFBWSxHQUFHQyxPQUFPLFNBQVN4ZSxHQUFHLE1BQU0sV0FBV0EsRUFBRUEsRUFBRXdlLE9BQU8sZ0JBQWdCeGUsR0FBR0EsRUFBRXllLFlBQVksZUFBZXplLEdBQUdBLEVBQUUwZSxXQUFXLEdBQUdDLE9BQU8sS0FBS0MsVUFBVSxPQUFPQyxHQUFHLENBQUMsQ0FBQyxRQUFRLFNBQVMsQ0FBQ25VLEVBQUcsZ0JBQWdCLENBQUNDLEVBQUcsc0JBQXNCLENBQUNDLEVBQUcsa0JBQWtCLENBQUMsVUFBVSxXQUFXLENBQUMsaUJBQWlCLGtCQUFrQixDQUFDLE9BQU8sUUFBUSxDQUFDLFlBQVksYUFBYSxDQUFDLFdBQVcsWUFBWSxDQUFDLFlBQVksYUFBYSxDQUFDLFdBQVcsWUFBWSxDQUFDLGlCQUFpQixrQkFBa0IsQ0FBQyxVQUFVLFdBQVcsQ0FBQyxZQUFZLGFBQ2xmLENBQUMsUUFBUSxTQUFTLENBQUMsUUFBUSxTQUFTLENBQUMsb0JBQW9CLHFCQUFxQixDQUFDLE9BQU8sUUFBUSxDQUFDLGFBQWEsY0FBYyxDQUFDLGlCQUFpQixrQkFBa0IsQ0FBQyxZQUFZLGFBQWEsQ0FBQyxxQkFBcUIsc0JBQXNCLENBQUMsWUFBWSxhQUFhLENBQUMsV0FBVyxZQUFZLENBQUMsWUFBWSxhQUFhLENBQUMsVUFBVSxXQUFXLENBQUMsY0FBYyxlQUFlLENBQUMsYUFBYSxjQUFjLENBQUMsY0FBYyxlQUFlLENBQUMsV0FBVyxZQUFZLENBQUMsU0FBUyxVQUFVLENBQUMsVUFBVSxXQUFXLENBQUMsVUFBVSxXQUMzZSxDQUFDLFVBQVUsV0FBVyxDQUFDLGFBQWEsY0FBYyxDQUFDLFNBQVMsVUFBVSxDQUFDLFlBQVksYUFBYSxDQUFDQyxHQUFHLGlCQUFpQixDQUFDLFVBQVUsV0FBVyxDQUFDLFFBQVEsVUFBVWlVLEdBQUcsR0FBR0MsR0FBRyxHQUFHLFNBQVNDLEdBQUdoZixFQUFFQyxHQUFHLElBQUkxVixFQUFFeVYsRUFBRSxHQUFjeFYsRUFBRSxPQUFid1YsRUFBRUEsRUFBRSxJQUFpQixHQUFHNFQsY0FBYzVULEVBQUUwRyxNQUFNLElBQUl6RyxFQUFFLENBQUNpSCx3QkFBd0IsQ0FBQ3VHLFFBQVFqakIsRUFBRWtqQixTQUFTbGpCLEVBQUUsV0FBVytjLGFBQWEsQ0FBQ2hkLEdBQUcwMEIsY0FBY2hmLEdBQUc2ZSxHQUFHOWUsR0FBR0MsRUFBRThlLEdBQUd4MEIsR0FBRzBWLEVBQ3BXLENBQUMsQ0FBQyxPQUFPLFFBQVEsQ0FBQyxTQUFTLFVBQVUsQ0FBQyxRQUFRLFNBQVMsQ0FBQyxRQUFRLFNBQVMsQ0FBQyxjQUFjLGVBQWUsQ0FBQyxPQUFPLFFBQVEsQ0FBQyxNQUFNLE9BQU8sQ0FBQyxXQUFXLFlBQVksQ0FBQyxXQUFXLGVBQWUsQ0FBQyxVQUFVLFdBQVcsQ0FBQyxZQUFZLGFBQWEsQ0FBQyxPQUFPLFFBQVEsQ0FBQyxRQUFRLFNBQVMsQ0FBQyxRQUFRLFNBQVMsQ0FBQyxVQUFVLFdBQVcsQ0FBQyxVQUFVLFdBQVcsQ0FBQyxXQUFXLFlBQVksQ0FBQyxRQUFRLFNBQVMsQ0FBQyxZQUFZLGFBQWEsQ0FBQyxVQUFVLFdBQVcsQ0FBQyxRQUFRLFNBQVMsQ0FBQyxRQUFRLFNBQVMsQ0FBQyxPQUFPLFFBQVEsQ0FBQyxnQkFBZ0IsaUJBQ3ZlLENBQUMsY0FBYyxlQUFlLENBQUMsWUFBWSxhQUFhLENBQUMsYUFBYSxjQUFjLENBQUMsUUFBUSxTQUFTLENBQUMsU0FBUyxVQUFVLENBQUMsU0FBUyxVQUFVLENBQUMsY0FBYyxlQUFlLENBQUMsV0FBVyxZQUFZLENBQUMsYUFBYSxjQUFjLENBQUMsZUFBZSxpQkFBaUJuTyxRQUFRLFNBQVNrTyxHQUFHZ2YsR0FBR2hmLEdBQUUsS0FBTTZlLEdBQUcvc0IsUUFBUSxTQUFTa08sR0FBR2dmLEdBQUdoZixHQUFFLEtBQzVULElBQUlrZixHQUFHLENBQUNsWSxXQUFXOFgsR0FBR0ssK0JBQStCLFNBQVNuZixHQUFXLFlBQU8sS0FBZkEsRUFBRStlLEdBQUcvZSxNQUFzQixJQUFLQSxFQUFFaWYsZUFBZWxZLGNBQWMsU0FBUy9HLEVBQUVDLEVBQUUxVixFQUFFQyxHQUFHLElBQUl1RSxFQUFFZ3dCLEdBQUcvZSxHQUFHLElBQUlqUixFQUFFLE9BQU8sS0FBSyxPQUFPaVIsR0FBRyxJQUFLLFdBQVcsR0FBRyxJQUFJdWEsR0FBR2h3QixHQUFHLE9BQU8sS0FBSyxJQUFLLFVBQVUsSUFBSyxRQUFReVYsRUFBRTJkLEdBQUcsTUFBTSxJQUFLLE9BQU8sSUFBSyxRQUFRM2QsRUFBRXNhLEdBQUcsTUFBTSxJQUFLLFFBQVEsR0FBRyxJQUFJL3ZCLEVBQUVzdEIsT0FBTyxPQUFPLEtBQUssSUFBSyxXQUFXLElBQUssV0FBVyxJQUFLLFlBQVksSUFBSyxZQUFZLElBQUssVUFBVSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssY0FBYzdYLEVBQUVxWCxHQUFHLE1BQU0sSUFBSyxPQUFPLElBQUssVUFBVSxJQUFLLFlBQVksSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssT0FBT3JYLEVBQ2ptQjhkLEdBQUcsTUFBTSxJQUFLLGNBQWMsSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLGFBQWE5ZCxFQUFFZ2UsR0FBRyxNQUFNLEtBQUt0VCxFQUFHLEtBQUtDLEVBQUcsS0FBS0MsRUFBRzVLLEVBQUVyUyxHQUFHLE1BQU0sS0FBS2tkLEdBQUc3SyxFQUFFb2UsR0FBRyxNQUFNLElBQUssU0FBU3BlLEVBQUV1VyxHQUFHLE1BQU0sSUFBSyxRQUFRdlcsRUFBRXFlLEdBQUcsTUFBTSxJQUFLLE9BQU8sSUFBSyxNQUFNLElBQUssUUFBUXJlLEVBQUVvYSxHQUFHLE1BQU0sSUFBSyxvQkFBb0IsSUFBSyxxQkFBcUIsSUFBSyxnQkFBZ0IsSUFBSyxjQUFjLElBQUssY0FBYyxJQUFLLGFBQWEsSUFBSyxjQUFjLElBQUssWUFBWXBhLEVBQUVvWSxHQUFHLE1BQU0sUUFBUXBZLEVBQUVQLEdBQStCLE9BQU5tSyxFQUF2QjNKLEVBQUVELEVBQUVnTSxVQUFVamQsRUFBRWtSLEVBQUUxVixFQUFFQyxJQUFnQnlWLElBQUltZixHQUFHRixHQUFHQywrQkFDemRFLEdBQUcsR0FBRyxTQUFTQyxHQUFHdGYsR0FBRyxJQUFJQyxFQUFFRCxFQUFFdWYsV0FBV2gxQixFQUFFMFYsRUFBRSxFQUFFLENBQUMsSUFBSTFWLEVBQUUsQ0FBQ3lWLEVBQUV3ZixVQUFVNXhCLEtBQUtyRCxHQUFHLE1BQU0sSUFBSUMsRUFBRSxJQUFJQSxFQUFFRCxFQUFFQyxFQUFFNmUsUUFBUTdlLEVBQUVBLEVBQUU2ZSxPQUFrRCxLQUEzQzdlLEVBQUUsSUFBSUEsRUFBRXlMLElBQUksS0FBS3pMLEVBQUVrZSxVQUFVK1csZUFBb0IsTUFBTXpmLEVBQUV3ZixVQUFVNXhCLEtBQUtyRCxHQUFHQSxFQUFFeWUsRUFBR3hlLFNBQVNELEdBQUcsSUFBSUEsRUFBRSxFQUFFQSxFQUFFeVYsRUFBRXdmLFVBQVU5eEIsT0FBT25ELElBQUksQ0FBQzBWLEVBQUVELEVBQUV3ZixVQUFVajFCLEdBQUcsSUFBSXdFLEVBQUUyaEIsR0FBRzFRLEVBQUVzTCxhQUFhOWdCLEVBQUV3VixFQUFFMGYsYUFBYSxJQUFJLElBQUl0ZixFQUFFSixFQUFFc0wsWUFBWXBMLEVBQUUsS0FBS0MsRUFBRSxFQUFFQSxFQUFFMkcsRUFBR3BaLE9BQU95UyxJQUFJLENBQUMsSUFBSWhXLEVBQUUyYyxFQUFHM0csR0FBR2hXLElBQUlBLEVBQUVBLEVBQUU0YyxjQUFjdmMsRUFBRXlWLEVBQUVHLEVBQUVyUixNQUFNbVIsRUFBRTJILEVBQUczSCxFQUFFL1YsSUFBSXllLEVBQUcxSSxJQUFJLElBQUl5ZixJQUFHLEVBQ3RhLFNBQVM5ZSxHQUFFYixFQUFFQyxHQUFHLElBQUlBLEVBQUUsT0FBTyxLQUFLLElBQUkxVixHQUFHNjBCLEdBQUdwZixHQUFHNGYsR0FBR0MsSUFBSW4wQixLQUFLLEtBQUtzVSxHQUFHQyxFQUFFNmYsaUJBQWlCOWYsRUFBRXpWLEdBQUUsR0FBSSxTQUFTdzFCLEdBQUcvZixFQUFFQyxHQUFHLElBQUlBLEVBQUUsT0FBTyxLQUFLLElBQUkxVixHQUFHNjBCLEdBQUdwZixHQUFHNGYsR0FBR0MsSUFBSW4wQixLQUFLLEtBQUtzVSxHQUFHQyxFQUFFNmYsaUJBQWlCOWYsRUFBRXpWLEdBQUUsR0FBSSxTQUFTcTFCLEdBQUc1ZixFQUFFQyxHQUFHbVAsR0FBR3lRLEdBQUc3ZixFQUFFQyxHQUN0TixTQUFTNGYsR0FBRzdmLEVBQUVDLEdBQUcsR0FBRzBmLEdBQUcsQ0FBQyxJQUFJcDFCLEVBQUVtbUIsR0FBR3pRLEdBQWtFLEdBQXZELFFBQVIxVixFQUFFeWUsRUFBR3plLEtBQWEsaUJBQWtCQSxFQUFFMEwsS0FBSyxJQUFJMGpCLEdBQUdwdkIsS0FBS0EsRUFBRSxNQUFTODBCLEdBQUczeEIsT0FBTyxDQUFDLElBQUlsRCxFQUFFNjBCLEdBQUc5cUIsTUFBTS9KLEVBQUVrMUIsYUFBYTFmLEVBQUV4VixFQUFFOGdCLFlBQVlyTCxFQUFFelYsRUFBRSswQixXQUFXaDFCLEVBQUV5VixFQUFFeFYsT0FBT3dWLEVBQUUsQ0FBQzBmLGFBQWExZixFQUFFc0wsWUFBWXJMLEVBQUVzZixXQUFXaDFCLEVBQUVpMUIsVUFBVSxJQUFJLElBQUlqUSxHQUFHK1AsR0FBR3RmLEdBQUcsUUFBUUEsRUFBRTBmLGFBQWEsS0FBSzFmLEVBQUVzTCxZQUFZLEtBQUt0TCxFQUFFdWYsV0FBVyxLQUFLdmYsRUFBRXdmLFVBQVU5eEIsT0FBTyxFQUFFLEdBQUcyeEIsR0FBRzN4QixRQUFRMnhCLEdBQUd6eEIsS0FBS29TLEtBQUssSUFBSWdnQixHQUFHLEdBQUdDLEdBQUcsRUFBRUMsR0FBRyxxQkFBcUIsR0FBR25tQixLQUFLRSxVQUFVeU0sTUFBTSxHQUNqYixTQUFTeVosR0FBR25nQixHQUF5RSxPQUF0RXBWLE9BQU9rQixVQUFVQyxlQUFlMUIsS0FBSzJWLEVBQUVrZ0IsTUFBTWxnQixFQUFFa2dCLElBQUlELEtBQUtELEdBQUdoZ0IsRUFBRWtnQixLQUFLLElBQVdGLEdBQUdoZ0IsRUFBRWtnQixLQUFLLFNBQVNFLEdBQUdwZ0IsR0FBd0QsUUFBRyxLQUF4REEsRUFBRUEsSUFBSSxvQkFBcUI5UixTQUFTQSxjQUFTLElBQWtDLE9BQU8sS0FBSyxJQUFJLE9BQU84UixFQUFFbVYsZUFBZW5WLEVBQUVsRCxLQUFLLE1BQU1tRCxHQUFHLE9BQU9ELEVBQUVsRCxNQUFNLFNBQVN1akIsR0FBR3JnQixHQUFHLEtBQUtBLEdBQUdBLEVBQUVyUCxZQUFZcVAsRUFBRUEsRUFBRXJQLFdBQVcsT0FBT3FQLEVBQ3RVLFNBQVNzZ0IsR0FBR3RnQixFQUFFQyxHQUFHLElBQXdCelYsRUFBcEJELEVBQUU4MUIsR0FBR3JnQixHQUFPLElBQUpBLEVBQUUsRUFBWXpWLEdBQUcsQ0FBQyxHQUFHLElBQUlBLEVBQUVzbUIsU0FBUyxDQUEwQixHQUF6QnJtQixFQUFFd1YsRUFBRXpWLEVBQUU0Z0IsWUFBWXpkLE9BQVVzUyxHQUFHQyxHQUFHelYsR0FBR3lWLEVBQUUsTUFBTSxDQUFDc2dCLEtBQUtoMkIsRUFBRWkyQixPQUFPdmdCLEVBQUVELEdBQUdBLEVBQUV4VixFQUFFd1YsRUFBRSxDQUFDLEtBQUt6VixHQUFHLENBQUMsR0FBR0EsRUFBRWlHLFlBQVksQ0FBQ2pHLEVBQUVBLEVBQUVpRyxZQUFZLE1BQU13UCxFQUFFelYsRUFBRUEsRUFBRXVHLFdBQVd2RyxPQUFFLEVBQU9BLEVBQUU4MUIsR0FBRzkxQixJQUMxTixTQUFTazJCLEtBQUssSUFBSSxJQUFJemdCLEVBQUUvUixPQUFPZ1MsRUFBRW1nQixLQUFLbmdCLGFBQWFELEVBQUVwUixtQkFBbUIsQ0FBQyxJQUFJLElBQUlyRSxFQUFFLGlCQUFrQjBWLEVBQUV5Z0IsY0FBYzlDLFNBQVN6cUIsS0FBSyxNQUFNM0ksR0FBR0QsR0FBRSxFQUFHLElBQUdBLEVBQXlCLE1BQU0wVixFQUFFbWdCLElBQS9CcGdCLEVBQUVDLEVBQUV5Z0IsZUFBZ0N4eUIsVUFBVSxPQUFPK1IsRUFBRSxTQUFTMGdCLEdBQUczZ0IsR0FBRyxJQUFJQyxFQUFFRCxHQUFHQSxFQUFFeVEsVUFBVXpRLEVBQUV5USxTQUFTMUcsY0FBYyxPQUFPOUosSUFBSSxVQUFVQSxJQUFJLFNBQVNELEVBQUV6TyxNQUFNLFdBQVd5TyxFQUFFek8sTUFBTSxRQUFReU8sRUFBRXpPLE1BQU0sUUFBUXlPLEVBQUV6TyxNQUFNLGFBQWF5TyxFQUFFek8sT0FBTyxhQUFhME8sR0FBRyxTQUFTRCxFQUFFNGdCLGlCQUd4WixTQUFTQyxHQUFHN2dCLEdBQUcsSUFBSUMsRUFBRXdnQixLQUFLbDJCLEVBQUV5VixFQUFFOGdCLFlBQVl0MkIsRUFBRXdWLEVBQUUrZ0IsZUFBZSxHQUFHOWdCLElBQUkxVixHQUFHQSxHQUFHQSxFQUFFMnFCLGVBSmtKLFNBQVM4TCxFQUFHaGhCLEVBQUVDLEdBQUcsU0FBT0QsSUFBR0MsS0FBRUQsSUFBSUMsS0FBS0QsR0FBRyxJQUFJQSxFQUFFNlEsWUFBWTVRLEdBQUcsSUFBSUEsRUFBRTRRLFNBQVNtUSxFQUFHaGhCLEVBQUVDLEVBQUVuUCxZQUFZLGFBQWFrUCxFQUFFQSxFQUFFaWhCLFNBQVNoaEIsS0FBR0QsRUFBRWtoQiw0QkFBd0QsR0FBN0JsaEIsRUFBRWtoQix3QkFBd0JqaEIsTUFJdlQrZ0IsQ0FBR3oyQixFQUFFMnFCLGNBQWNpTSxnQkFBZ0I1MkIsR0FBRyxDQUFDLEdBQUcsT0FBT0MsR0FBR20yQixHQUFHcDJCLEdBQUcsR0FBRzBWLEVBQUV6VixFQUFFNDJCLFdBQWMsS0FBUnBoQixFQUFFeFYsRUFBRTYyQixPQUFpQnJoQixFQUFFQyxHQUFHLG1CQUFtQjFWLEVBQUVBLEVBQUUrMkIsZUFBZXJoQixFQUFFMVYsRUFBRWczQixhQUFheG5CLEtBQUt5bkIsSUFBSXhoQixFQUFFelYsRUFBRVksTUFBTXVDLGFBQWEsSUFBR3NTLEdBQUdDLEVBQUUxVixFQUFFMnFCLGVBQWVobkIsV0FBVytSLEVBQUVvWixhQUFhcHJCLFFBQVN3ekIsYUFBYSxDQUFDemhCLEVBQUVBLEVBQUV5aEIsZUFBZSxJQUFJMXlCLEVBQUV4RSxFQUFFNGdCLFlBQVl6ZCxPQUFPMFMsRUFBRXJHLEtBQUt5bkIsSUFBSWgzQixFQUFFNDJCLE1BQU1yeUIsR0FBR3ZFLE9BQUUsSUFBU0EsRUFBRTYyQixJQUFJamhCLEVBQUVyRyxLQUFLeW5CLElBQUloM0IsRUFBRTYyQixJQUFJdHlCLElBQUlpUixFQUFFNE0sUUFBUXhNLEVBQUU1VixJQUFJdUUsRUFBRXZFLEVBQUVBLEVBQUU0VixFQUFFQSxFQUFFclIsR0FBR0EsRUFBRXV4QixHQUFHLzFCLEVBQUU2VixHQUFHLElBQUlGLEVBQUVvZ0IsR0FBRy8xQixFQUN2ZkMsR0FBR3VFLEdBQUdtUixJQUFJLElBQUlGLEVBQUUwaEIsWUFBWTFoQixFQUFFMmhCLGFBQWE1eUIsRUFBRXd4QixNQUFNdmdCLEVBQUU0aEIsZUFBZTd5QixFQUFFeXhCLFFBQVF4Z0IsRUFBRTZoQixZQUFZM2hCLEVBQUVxZ0IsTUFBTXZnQixFQUFFOGhCLGNBQWM1aEIsRUFBRXNnQixXQUFVdmdCLEVBQUVBLEVBQUU4aEIsZUFBZ0JDLFNBQVNqekIsRUFBRXd4QixLQUFLeHhCLEVBQUV5eEIsUUFBUXhnQixFQUFFaWlCLGtCQUFrQjdoQixFQUFFNVYsR0FBR3dWLEVBQUVraUIsU0FBU2ppQixHQUFHRCxFQUFFNE0sT0FBTzFNLEVBQUVxZ0IsS0FBS3JnQixFQUFFc2dCLFVBQVV2Z0IsRUFBRWtpQixPQUFPamlCLEVBQUVxZ0IsS0FBS3JnQixFQUFFc2dCLFFBQVF4Z0IsRUFBRWtpQixTQUFTamlCLEtBQVUsSUFBTEEsRUFBRSxHQUFPRCxFQUFFelYsRUFBRXlWLEVBQUVBLEVBQUVsUCxZQUFZLElBQUlrUCxFQUFFNlEsVUFBVTVRLEVBQUVyUyxLQUFLLENBQUM4TCxRQUFRc0csRUFBRW9pQixLQUFLcGlCLEVBQUVxaUIsV0FBV0MsSUFBSXRpQixFQUFFdWlCLFlBQW1ELElBQXZDLG1CQUFvQmg0QixFQUFFaTRCLE9BQU9qNEIsRUFBRWk0QixRQUFZajRCLEVBQUUsRUFBRUEsRUFBRTBWLEVBQUV2UyxPQUFPbkQsS0FBSXlWLEVBQUVDLEVBQUUxVixJQUFLbVAsUUFBUTJvQixXQUFXcmlCLEVBQUVvaUIsS0FBS3BpQixFQUFFdEcsUUFBUTZvQixVQUFVdmlCLEVBQUVzaUIsS0FDcmYsSUFBSUcsR0FBRzVZLEdBQUksaUJBQWlCM2IsVUFBVSxJQUFJQSxTQUFTaWYsYUFBYXVWLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDemIsd0JBQXdCLENBQUN1RyxRQUFRLFdBQVdDLFNBQVMsbUJBQW1CbkcsYUFBYSxpRkFBaUY5UixNQUFNLE9BQU9tdEIsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsSUFBRyxFQUMxUixTQUFTQyxHQUFHaGpCLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUUwVixFQUFFaFMsU0FBU2dTLEVBQUVBLEVBQUUvUixTQUFTLElBQUkrUixFQUFFNFEsU0FBUzVRLEVBQUVBLEVBQUVpVixjQUFjLE9BQUc2TixJQUFJLE1BQU1ILElBQUlBLEtBQUt4QyxHQUFHNzFCLEdBQVUsTUFBVSxtQkFBTEEsRUFBRXE0QixLQUF5QmpDLEdBQUdwMkIsR0FBR0EsRUFBRSxDQUFDNjJCLE1BQU03MkIsRUFBRSsyQixlQUFlRCxJQUFJOTJCLEVBQUVnM0IsY0FBdUZoM0IsRUFBRSxDQUFDbzNCLFlBQTNFcDNCLEdBQUdBLEVBQUUycUIsZUFBZTNxQixFQUFFMnFCLGNBQWNtRSxhQUFhcHJCLFFBQVF3ekIsZ0JBQStCRSxXQUFXQyxhQUFhcjNCLEVBQUVxM0IsYUFBYUMsVUFBVXQzQixFQUFFczNCLFVBQVVDLFlBQVl2M0IsRUFBRXUzQixhQUFxQmdCLElBQUlwSixHQUFHb0osR0FBR3Y0QixHQUFHLE1BQU11NEIsR0FBR3Y0QixHQUFFeVYsRUFBRVAsR0FBRXVNLFVBQVUwVyxHQUFHQyxPQUFPRSxHQUFHN2lCLEVBQUVDLElBQUsxTyxLQUFLLFNBQVN5TyxFQUFFeFIsT0FBT28wQixHQUFHaFosRUFBRzVKLEdBQUdBLElBQzFkLElBQUlpakIsR0FBRyxDQUFDamMsV0FBVzBiLEdBQUczYixjQUFjLFNBQVMvRyxFQUFFQyxFQUFFMVYsRUFBRUMsR0FBRyxJQUErRDRWLEVBQTNEclIsRUFBRXZFLEVBQUV5RCxTQUFTekQsRUFBRUEsRUFBRTBELFNBQVMsSUFBSTFELEVBQUVxbUIsU0FBU3JtQixFQUFFQSxFQUFFMHFCLGNBQWdCLEtBQUs5VSxHQUFHclIsR0FBRyxDQUFDaVIsRUFBRSxDQUFDalIsRUFBRW94QixHQUFHcHhCLEdBQUdxUixFQUFFa0gsRUFBRzRiLFNBQVMsSUFBSSxJQUFJaGpCLEVBQUUsRUFBRUEsRUFBRUUsRUFBRTFTLE9BQU93UyxJQUFJLENBQUMsSUFBSUMsRUFBRUMsRUFBRUYsR0FBRyxJQUFJblIsRUFBRWhELGVBQWVvVSxLQUFLcFIsRUFBRW9SLEdBQUcsQ0FBQ3BSLEdBQUUsRUFBRyxNQUFNaVIsR0FBR2pSLEdBQUUsRUFBR3FSLEdBQUdyUixFQUFFLEdBQUdxUixFQUFFLE9BQU8sS0FBc0IsT0FBakJyUixFQUFFa1IsRUFBRWlKLEVBQUdqSixHQUFHaFMsT0FBYytSLEdBQUcsSUFBSyxTQUFXd1EsR0FBR3poQixJQUFJLFNBQVNBLEVBQUU2eEIsbUJBQWdCZ0MsR0FBRzd6QixFQUFFOHpCLEdBQUc1aUIsRUFBRTZpQixHQUFHLE1BQUssTUFBTSxJQUFLLE9BQU9BLEdBQUdELEdBQUdELEdBQUcsS0FBSyxNQUFNLElBQUssWUFBWUcsSUFBRyxFQUFHLE1BQU0sSUFBSyxjQUFjLElBQUssVUFBVSxJQUFLLFVBQVUsT0FBT0EsSUFBRyxFQUFHQyxHQUFHejRCLEVBQUVDLEdBQUcsSUFBSyxrQkFBa0IsR0FBR2k0QixHQUFHLE1BQ2poQixJQUFLLFVBQVUsSUFBSyxRQUFRLE9BQU9PLEdBQUd6NEIsRUFBRUMsR0FBRyxPQUFPLE9BQ2xELFNBQVMyNEIsR0FBR25qQixFQUFFQyxHQUE2RCxPQUExREQsRUFBRXJVLEVBQUUsQ0FBQ3NMLGNBQVMsR0FBUWdKLElBQU1BLEVBRCtVLFNBQVlELEdBQUcsSUFBSUMsRUFBRSxHQUF1RCxPQUFwRE4sRUFBRzhELFNBQVMzUixRQUFRa08sRUFBRSxTQUFTQSxHQUFHLE1BQU1BLElBQUlDLEdBQUdELEtBQVlDLEVBQ2hhbWpCLENBQUduakIsRUFBRWhKLGFBQVUrSSxFQUFFL0ksU0FBU2dKLEdBQVNELEVBQUUsU0FBU3FqQixHQUFHcmpCLEVBQUVDLEVBQUUxVixFQUFFQyxHQUFlLEdBQVp3VixFQUFFQSxFQUFFMVEsUUFBVzJRLEVBQUUsQ0FBQ0EsRUFBRSxHQUFHLElBQUksSUFBSWxSLEVBQUUsRUFBRUEsRUFBRXhFLEVBQUVtRCxPQUFPcUIsSUFBSWtSLEVBQUUsSUFBSTFWLEVBQUV3RSxLQUFJLEVBQUcsSUFBSXhFLEVBQUUsRUFBRUEsRUFBRXlWLEVBQUV0UyxPQUFPbkQsSUFBSXdFLEVBQUVrUixFQUFFbFUsZUFBZSxJQUFJaVUsRUFBRXpWLEdBQUdZLE9BQU82VSxFQUFFelYsR0FBRys0QixXQUFXdjBCLElBQUlpUixFQUFFelYsR0FBRys0QixTQUFTdjBCLEdBQUdBLEdBQUd2RSxJQUFJd1YsRUFBRXpWLEdBQUdnNUIsaUJBQWdCLE9BQVEsQ0FBbUIsSUFBbEJoNUIsRUFBRSxHQUFHOHBCLEdBQUc5cEIsR0FBRzBWLEVBQUUsS0FBU2xSLEVBQUUsRUFBRUEsRUFBRWlSLEVBQUV0UyxPQUFPcUIsSUFBSSxDQUFDLEdBQUdpUixFQUFFalIsR0FBRzVELFFBQVFaLEVBQWlELE9BQTlDeVYsRUFBRWpSLEdBQUd1MEIsVUFBUyxPQUFHOTRCLElBQUl3VixFQUFFalIsR0FBR3cwQixpQkFBZ0IsSUFBVyxPQUFPdGpCLEdBQUdELEVBQUVqUixHQUFHNFosV0FBVzFJLEVBQUVELEVBQUVqUixJQUFJLE9BQU9rUixJQUFJQSxFQUFFcWpCLFVBQVMsSUFDeGQsU0FBU0UsR0FBR3hqQixFQUFFQyxHQUFrRCxPQUEvQyxNQUFNQSxFQUFFd2pCLHlCQUF3QmprQixFQUFFLE1BQW9CN1QsRUFBRSxHQUFHc1UsRUFBRSxDQUFDOVUsV0FBTSxFQUFPcXBCLGtCQUFhLEVBQU92ZCxTQUFTLEdBQUcrSSxFQUFFeVUsY0FBY0csZUFBZSxTQUFTOE8sR0FBRzFqQixFQUFFQyxHQUFHLElBQUkxVixFQUFFMFYsRUFBRTlVLE1BQU0sTUFBTVosSUFBSUEsRUFBRTBWLEVBQUV1VSxhQUEwQixPQUFidlUsRUFBRUEsRUFBRWhKLFlBQW1CLE1BQU0xTSxHQUFFaVYsRUFBRSxNQUFheEssTUFBTUMsUUFBUWdMLEtBQUssR0FBR0EsRUFBRXZTLFFBQWM4UixFQUFFLE1BQU1TLEVBQUVBLEVBQUUsSUFBSTFWLEVBQUUwVixHQUFHLE1BQU0xVixJQUFJQSxFQUFFLEtBQUt5VixFQUFFeVUsY0FBYyxDQUFDRyxhQUFhUCxHQUFHOXBCLElBQ2hYLFNBQVNvNUIsR0FBRzNqQixFQUFFQyxHQUFHLElBQUkxVixFQUFFOHBCLEdBQUdwVSxFQUFFOVUsT0FBT1gsRUFBRTZwQixHQUFHcFUsRUFBRXVVLGNBQWMsTUFBTWpxQixLQUFJQSxFQUFFLEdBQUdBLEtBQU15VixFQUFFN1UsUUFBUTZVLEVBQUU3VSxNQUFNWixHQUFHLE1BQU0wVixFQUFFdVUsY0FBY3hVLEVBQUV3VSxlQUFlanFCLElBQUl5VixFQUFFd1UsYUFBYWpxQixJQUFJLE1BQU1DLElBQUl3VixFQUFFd1UsYUFBYSxHQUFHaHFCLEdBQUcsU0FBU281QixHQUFHNWpCLEdBQUcsSUFBSUMsRUFBRUQsRUFBRW1MLFlBQVlsTCxJQUFJRCxFQUFFeVUsY0FBY0csZUFBZTVVLEVBQUU3VSxNQUFNOFUsR0FIcE5xSSxFQUFHQyx1QkFBdUIsMEhBQTBIOVMsTUFBTSxNQUFNK1IsRUFBRzJCLEVBQUcxQixFQUFHd0IsRUFBR3ZCLEVBQUd3QixFQUFHWixFQUFHRSx5QkFBeUIsQ0FBQ3FiLGtCQUFrQjNFLEdBQUc0RSxzQkFBc0IxSyxHQUFHMkssa0JBQWtCMU4sR0FBRzJOLGtCQUFrQmYsR0FBR2dCLHVCQUF1QjdWLEtBR3ZHLElBQUk4VixHQUFHLENBQUNDLEtBQUssK0JBQStCQyxPQUFPLHFDQUFxQ0MsSUFBSSw4QkFDNVcsU0FBU0MsR0FBR3RrQixHQUFHLE9BQU9BLEdBQUcsSUFBSyxNQUFNLE1BQU0sNkJBQTZCLElBQUssT0FBTyxNQUFNLHFDQUFxQyxRQUFRLE1BQU0sZ0NBQWdDLFNBQVN1a0IsR0FBR3ZrQixFQUFFQyxHQUFHLE9BQU8sTUFBTUQsR0FBRyxpQ0FBaUNBLEVBQUVza0IsR0FBR3JrQixHQUFHLCtCQUErQkQsR0FBRyxrQkFBa0JDLEVBQUUsK0JBQStCRCxFQUMzVSxJQUFJd2tCLFFBQUcsRUFBT0MsR0FBRyxTQUFTemtCLEdBQUcsTUFBTSxvQkFBcUIwa0IsT0FBT0EsTUFBTUMsd0JBQXdCLFNBQVMxa0IsRUFBRTFWLEVBQUVDLEVBQUV1RSxHQUFHMjFCLE1BQU1DLHdCQUF3QixXQUFXLE9BQU8za0IsRUFBRUMsRUFBRTFWLE1BQVV5VixFQUE1SixDQUErSixTQUFTQSxFQUFFQyxHQUFHLEdBQUdELEVBQUU0a0IsZUFBZVYsR0FBR0csS0FBSyxjQUFjcmtCLEVBQUVBLEVBQUVuRCxVQUFVb0QsTUFBTSxDQUFzRSxLQUFyRXVrQixHQUFHQSxJQUFJdDJCLFNBQVNrRCxjQUFjLFFBQVV5TCxVQUFVLFFBQVFvRCxFQUFFLFNBQWFBLEVBQUV1a0IsR0FBRzd6QixXQUFXcVAsRUFBRXJQLFlBQVlxUCxFQUFFalAsWUFBWWlQLEVBQUVyUCxZQUFZLEtBQUtzUCxFQUFFdFAsWUFBWXFQLEVBQUV0UCxZQUFZdVAsRUFBRXRQLGVBQ25hLFNBQVNrMEIsR0FBRzdrQixFQUFFQyxHQUFHLEdBQUdBLEVBQUUsQ0FBQyxJQUFJMVYsRUFBRXlWLEVBQUVyUCxXQUFXLEdBQUdwRyxHQUFHQSxJQUFJeVYsRUFBRThrQixXQUFXLElBQUl2NkIsRUFBRXNtQixTQUF3QixZQUFkdG1CLEVBQUV3NkIsVUFBVTlrQixHQUFVRCxFQUFFbUwsWUFBWWxMLEVBQ3JILElBQUkra0IsR0FBRyxDQUFDQyx5QkFBd0IsRUFBR0MsbUJBQWtCLEVBQUdDLGtCQUFpQixFQUFHQyxrQkFBaUIsRUFBR0MsU0FBUSxFQUFHQyxjQUFhLEVBQUdDLGlCQUFnQixFQUFHQyxhQUFZLEVBQUdDLFNBQVEsRUFBR0MsTUFBSyxFQUFHQyxVQUFTLEVBQUdDLGNBQWEsRUFBR0MsWUFBVyxFQUFHQyxjQUFhLEVBQUdDLFdBQVUsRUFBR0MsVUFBUyxFQUFHQyxTQUFRLEVBQUdDLFlBQVcsRUFBR0MsYUFBWSxFQUFHQyxjQUFhLEVBQUdDLFlBQVcsRUFBR0MsZUFBYyxFQUFHQyxnQkFBZSxFQUFHQyxpQkFBZ0IsRUFBR0MsWUFBVyxFQUFHQyxXQUFVLEVBQUdDLFlBQVcsRUFBR0MsU0FBUSxFQUFHQyxPQUFNLEVBQUdDLFNBQVEsRUFBR0MsU0FBUSxFQUFHQyxRQUFPLEVBQUdDLFFBQU8sRUFBR0MsTUFBSyxFQUFHQyxhQUFZLEVBQzFmQyxjQUFhLEVBQUdDLGFBQVksRUFBR0MsaUJBQWdCLEVBQUdDLGtCQUFpQixFQUFHQyxrQkFBaUIsRUFBR0MsZUFBYyxFQUFHQyxhQUFZLEdBQUlDLEdBQUcsQ0FBQyxTQUFTLEtBQUssTUFBTSxLQUE2SCxTQUFTQyxHQUFHNW5CLEVBQUVDLEVBQUUxVixHQUFHLE9BQU8sTUFBTTBWLEdBQUcsa0JBQW1CQSxHQUFHLEtBQUtBLEVBQUUsR0FBRzFWLEdBQUcsaUJBQWtCMFYsR0FBRyxJQUFJQSxHQUFHK2tCLEdBQUdqNUIsZUFBZWlVLElBQUlnbEIsR0FBR2hsQixJQUFJLEdBQUdDLEdBQUc0bkIsT0FBTzVuQixFQUFFLEtBQzlaLFNBQVM2bkIsR0FBRzluQixFQUFFQyxHQUFhLElBQUksSUFBSTFWLEtBQWxCeVYsRUFBRUEsRUFBRTdQLE1BQW1COFAsRUFBRSxHQUFHQSxFQUFFbFUsZUFBZXhCLEdBQUcsQ0FBQyxJQUFJQyxFQUFFLElBQUlELEVBQUUwRyxRQUFRLE1BQU1sQyxFQUFFNjRCLEdBQUdyOUIsRUFBRTBWLEVBQUUxVixHQUFHQyxHQUFHLFVBQVVELElBQUlBLEVBQUUsWUFBWUMsRUFBRXdWLEVBQUUrbkIsWUFBWXg5QixFQUFFd0UsR0FBR2lSLEVBQUV6VixHQUFHd0UsR0FEVG5FLE9BQU9pSCxLQUFLbXpCLElBQUlsekIsUUFBUSxTQUFTa08sR0FBRzJuQixHQUFHNzFCLFFBQVEsU0FBU21PLEdBQUdBLEVBQUVBLEVBQUVELEVBQUVnb0IsT0FBTyxHQUFHcFUsY0FBYzVULEVBQUVpb0IsVUFBVSxHQUFHakQsR0FBRy9rQixHQUFHK2tCLEdBQUdobEIsT0FDckcsSUFBSWtvQixHQUFHdjhCLEVBQUUsQ0FBQ3c4QixVQUFTLEdBQUksQ0FBQ0MsTUFBSyxFQUFHdDRCLE1BQUssRUFBR3U0QixJQUFHLEVBQUdDLEtBQUksRUFBR0MsT0FBTSxFQUFHQyxJQUFHLEVBQUdDLEtBQUksRUFBR0MsT0FBTSxFQUFHQyxRQUFPLEVBQUcvMUIsTUFBSyxFQUFHZzJCLE1BQUssRUFBR0MsT0FBTSxFQUFHMTdCLFFBQU8sRUFBRzI3QixPQUFNLEVBQUdDLEtBQUksSUFDbFQsU0FBU0MsR0FBR2hwQixFQUFFQyxHQUFHQSxJQUFJaW9CLEdBQUdsb0IsS0FBSyxNQUFNQyxFQUFFaEosVUFBVSxNQUFNZ0osRUFBRXdqQiwwQkFBd0Jqa0IsRUFBRSxNQUFNUSxFQUFFLElBQVksTUFBTUMsRUFBRXdqQiwwQkFBMEIsTUFBTXhqQixFQUFFaEosVUFBU3VJLEVBQUUsTUFBYSxpQkFBa0JTLEVBQUV3akIseUJBQXlCLFdBQVd4akIsRUFBRXdqQix5QkFBK0Jqa0IsRUFBRSxPQUFPLE1BQU1TLEVBQUU5UCxPQUFPLGlCQUFrQjhQLEVBQUU5UCxPQUFNcVAsRUFBRSxLQUFLLEtBQ3pULFNBQVN5cEIsR0FBR2pwQixFQUFFQyxHQUFHLElBQUksSUFBSUQsRUFBRS9PLFFBQVEsS0FBSyxNQUFNLGlCQUFrQmdQLEVBQUVpcEIsR0FBRyxPQUFPbHBCLEdBQUcsSUFBSyxpQkFBaUIsSUFBSyxnQkFBZ0IsSUFBSyxZQUFZLElBQUssZ0JBQWdCLElBQUssZ0JBQWdCLElBQUssbUJBQW1CLElBQUssaUJBQWlCLElBQUssZ0JBQWdCLE9BQU0sRUFBRyxRQUFRLE9BQU0sR0FDL1EsU0FBU21wQixHQUFHbnBCLEVBQUVDLEdBQXVELElBQUkxVixFQUFFNDFCLEdBQTFEbmdCLEVBQUUsSUFBSUEsRUFBRTZRLFVBQVUsS0FBSzdRLEVBQUU2USxTQUFTN1EsRUFBRUEsRUFBRWtWLGVBQTBCalYsRUFBRXFILEVBQUdySCxHQUFHLElBQUksSUFBSXpWLEVBQUUsRUFBRUEsRUFBRXlWLEVBQUV2UyxPQUFPbEQsSUFBSSxDQUFDLElBQUl1RSxFQUFFa1IsRUFBRXpWLEdBQUcsSUFBSUQsRUFBRXdCLGVBQWVnRCxLQUFLeEUsRUFBRXdFLEdBQUcsQ0FBQyxPQUFPQSxHQUFHLElBQUssU0FBU2d4QixHQUFHLFNBQVMvZixHQUFHLE1BQU0sSUFBSyxRQUFRLElBQUssT0FBTytmLEdBQUcsUUFBUS9mLEdBQUcrZixHQUFHLE9BQU8vZixHQUFHelYsRUFBRTYrQixNQUFLLEVBQUc3K0IsRUFBRWk0QixPQUFNLEVBQUcsTUFBTSxJQUFLLFNBQVMsSUFBSyxRQUFRMVIsR0FBRy9oQixJQUFJZ3hCLEdBQUdoeEIsRUFBRWlSLEdBQUcsTUFBTSxJQUFLLFVBQVUsSUFBSyxTQUFTLElBQUssUUFBUSxNQUFNLFNBQVMsSUFBSThLLEdBQUc3WixRQUFRbEMsSUFBSThSLEdBQUU5UixFQUFFaVIsR0FBR3pWLEVBQUV3RSxJQUFHLElBQUssU0FBU3M2QixNQUFNLElBQUlDLEdBQUcsS0FBS0MsR0FBRyxLQUN2YyxTQUFTQyxHQUFHeHBCLEVBQUVDLEdBQUcsT0FBT0QsR0FBRyxJQUFLLFNBQVMsSUFBSyxRQUFRLElBQUssU0FBUyxJQUFLLFdBQVcsUUFBUUMsRUFBRXdwQixVQUFVLE9BQU0sRUFBRyxTQUFTQyxHQUFHMXBCLEVBQUVDLEdBQUcsTUFBTSxhQUFhRCxHQUFHLFdBQVdBLEdBQUcsYUFBYUEsR0FBRyxpQkFBa0JDLEVBQUVoSixVQUFVLGlCQUFrQmdKLEVBQUVoSixVQUFVLGlCQUFrQmdKLEVBQUV3akIseUJBQXlCLE9BQU94akIsRUFBRXdqQix5QkFBeUIsTUFBTXhqQixFQUFFd2pCLHdCQUF3QmtHLE9BQ2pXLElBQUlDLEdBQUcsbUJBQW9CQyxXQUFXQSxnQkFBVyxFQUFPQyxHQUFHLG1CQUFvQkMsYUFBYUEsa0JBQWEsRUFBT0MsR0FBR2gvQixFQUFFaS9CLDBCQUEwQkMsR0FBR2wvQixFQUFFbS9CLHdCQUV2RyxTQUFTQyxHQUFHcHFCLEdBQUcsSUFBSUEsRUFBRUEsRUFBRXhQLFlBQVl3UCxHQUFHLElBQUlBLEVBQUU2USxVQUFVLElBQUk3USxFQUFFNlEsVUFBVTdRLEVBQUVBLEVBQUV4UCxZQUFZLE9BQU93UCxFQUFFLFNBQVNxcUIsR0FBR3JxQixHQUFHLElBQUlBLEVBQUVBLEVBQUVyUCxXQUFXcVAsR0FBRyxJQUFJQSxFQUFFNlEsVUFBVSxJQUFJN1EsRUFBRTZRLFVBQVU3USxFQUFFQSxFQUFFeFAsWUFBWSxPQUFPd1AsRUFBRSxJQUFJOUIsSUFBSSxJQUFJb3NCLEdBQUcsR0FBR0MsSUFBSSxFQUFFLFNBQVN2cEIsR0FBRWhCLEdBQUcsRUFBRXVxQixLQUFLdnFCLEVBQUV3QixRQUFROG9CLEdBQUdDLElBQUlELEdBQUdDLElBQUksS0FBS0EsTUFBTSxTQUFTdHBCLEdBQUVqQixFQUFFQyxHQUFRcXFCLEtBQUxDLElBQVl2cUIsRUFBRXdCLFFBQVF4QixFQUFFd0IsUUFBUXZCLEVBQUUsSUFBSXVxQixHQUFHLEdBQUdwcEIsR0FBRSxDQUFDSSxRQUFRZ3BCLElBQUlqcEIsR0FBRSxDQUFDQyxTQUFRLEdBQUlpcEIsR0FBR0QsR0FDdlosU0FBU0UsR0FBRzFxQixFQUFFQyxHQUFHLElBQUkxVixFQUFFeVYsRUFBRXpPLEtBQUtvNUIsYUFBYSxJQUFJcGdDLEVBQUUsT0FBT2lnQyxHQUFHLElBQUloZ0MsRUFBRXdWLEVBQUUwSSxVQUFVLEdBQUdsZSxHQUFHQSxFQUFFb2dDLDhDQUE4QzNxQixFQUFFLE9BQU96VixFQUFFcWdDLDBDQUEwQyxJQUFTenFCLEVBQUxyUixFQUFFLEdBQUssSUFBSXFSLEtBQUs3VixFQUFFd0UsRUFBRXFSLEdBQUdILEVBQUVHLEdBQW9ILE9BQWpINVYsS0FBSXdWLEVBQUVBLEVBQUUwSSxXQUFZa2lCLDRDQUE0QzNxQixFQUFFRCxFQUFFNnFCLDBDQUEwQzk3QixHQUFVQSxFQUFFLFNBQVMwUyxHQUFFekIsR0FBeUIsT0FBTyxPQUE3QkEsRUFBRUEsRUFBRThxQixtQkFBOEMsU0FBU0MsR0FBRy9xQixHQUFHZ0IsR0FBRU8sSUFBS1AsR0FBRUksSUFBSyxTQUFTNHBCLEdBQUdockIsR0FBR2dCLEdBQUVPLElBQUtQLEdBQUVJLElBQ3ZjLFNBQVM2cEIsR0FBR2pyQixFQUFFQyxFQUFFMVYsR0FBRzZXLEdBQUVJLFVBQVVncEIsSUFBR2hyQixFQUFFLE9BQWN5QixHQUFFRyxHQUFFbkIsR0FBS2dCLEdBQUVNLEdBQUVoWCxHQUFLLFNBQVMyZ0MsR0FBR2xyQixFQUFFQyxFQUFFMVYsR0FBRyxJQUFJQyxFQUFFd1YsRUFBRTBJLFVBQWdDLEdBQXRCMUksRUFBRUMsRUFBRTZxQixrQkFBcUIsbUJBQW9CdGdDLEVBQUUyZ0MsZ0JBQWdCLE9BQU81Z0MsRUFBd0IsSUFBSSxJQUFJd0UsS0FBOUJ2RSxFQUFFQSxFQUFFMmdDLGtCQUFpQ3A4QixLQUFLaVIsR0FBU1IsRUFBRSxNQUFNbVQsR0FBRzFTLElBQUksVUFBVWxSLEdBQUcsT0FBT3BELEVBQUUsR0FBR3BCLEVBQUVDLEdBQUcsU0FBUzRnQyxHQUFHcHJCLEdBQUcsSUFBSUMsRUFBRUQsRUFBRTBJLFVBQXNHLE9BQTVGekksRUFBRUEsR0FBR0EsRUFBRW9yQiwyQ0FBMkNiLEdBQUdDLEdBQUdycEIsR0FBRUksUUFBUVAsR0FBRUcsR0FBRW5CLEdBQUtnQixHQUFFTSxHQUFFQSxHQUFFQyxVQUFpQixFQUNwWixTQUFTOHBCLEdBQUd0ckIsRUFBRUMsRUFBRTFWLEdBQUcsSUFBSUMsRUFBRXdWLEVBQUUwSSxVQUFVbGUsR0FBU2dWLEVBQUUsT0FBT2pWLEdBQUcwVixFQUFFaXJCLEdBQUdsckIsRUFBRUMsRUFBRXdxQixJQUFJamdDLEVBQUU2Z0MsMENBQTBDcHJCLEVBQUVlLEdBQUVPLElBQUtQLEdBQUVJLElBQUtILEdBQUVHLEdBQUVuQixJQUFNZSxHQUFFTyxJQUFLTixHQUFFTSxHQUFFaFgsR0FBSyxJQUFJZ2hDLEdBQUcsS0FBS0MsR0FBRyxLQUFLLFNBQVNDLEdBQUd6ckIsR0FBRyxPQUFPLFNBQVNDLEdBQUcsSUFBSSxPQUFPRCxFQUFFQyxHQUFHLE1BQU0xVixNQUV6TyxTQUFTbWhDLEdBQUcxckIsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUc2QixLQUFLNEosSUFBSStKLEVBQUUzVCxLQUFLWixJQUFJbEIsRUFBRThCLEtBQUswdEIsUUFBUTF0QixLQUFLcU8sTUFBTXJPLEtBQUtnZCxPQUFPaGQsS0FBS3FjLFVBQVVyYyxLQUFLa0YsS0FBS2xGLEtBQUtzL0IsWUFBWSxLQUFLdC9CLEtBQUt3SCxNQUFNLEVBQUV4SCxLQUFLdVYsSUFBSSxLQUFLdlYsS0FBS3UvQixhQUFhM3JCLEVBQUU1VCxLQUFLdy9CLG9CQUFvQngvQixLQUFLeS9CLGNBQWN6L0IsS0FBSzAvQixZQUFZMS9CLEtBQUsyL0IsY0FBYyxLQUFLMy9CLEtBQUtoQixLQUFLYixFQUFFNkIsS0FBS3V0QixVQUFVLEVBQUV2dEIsS0FBSzQvQixXQUFXNS9CLEtBQUs2L0IsWUFBWTcvQixLQUFLOC9CLFdBQVcsS0FBSzkvQixLQUFLKy9CLG9CQUFvQi8vQixLQUFLZ2dDLGVBQWUsRUFBRWhnQyxLQUFLa3RCLFVBQVUsS0FBSyxTQUFTN1gsR0FBRTFCLEVBQUVDLEVBQUUxVixFQUFFQyxHQUFHLE9BQU8sSUFBSWtoQyxHQUFHMXJCLEVBQUVDLEVBQUUxVixFQUFFQyxHQUNoYyxTQUFTOGhDLEdBQUd0c0IsR0FBaUIsVUFBZEEsRUFBRUEsRUFBRWxVLGFBQXVCa1UsRUFBRWtCLGtCQUM1QyxTQUFTcXJCLEdBQUd2c0IsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRXlWLEVBQUV1WixVQUNHLE9BRE8sT0FBT2h2QixJQUFHQSxFQUFFbVgsR0FBRTFCLEVBQUUvSixJQUFJZ0ssRUFBRUQsRUFBRXZVLElBQUl1VSxFQUFFM1UsT0FBUXNnQyxZQUFZM3JCLEVBQUUyckIsWUFBWXBoQyxFQUFFZ0gsS0FBS3lPLEVBQUV6TyxLQUFLaEgsRUFBRW1lLFVBQVUxSSxFQUFFMEksVUFBVW5lLEVBQUVndkIsVUFBVXZaLEVBQUVBLEVBQUV1WixVQUFVaHZCLElBQUlBLEVBQUVxaEMsYUFBYTNyQixFQUFFMVYsRUFBRXF2QixVQUFVLEVBQUVydkIsRUFBRTRoQyxXQUFXLEtBQUs1aEMsRUFBRTJoQyxZQUFZLEtBQUszaEMsRUFBRTBoQyxXQUFXLE1BQU0xaEMsRUFBRTZoQyxvQkFBb0Jwc0IsRUFBRW9zQixvQkFBb0I3aEMsRUFBRThoQyxlQUFlcnNCLEVBQUVxc0IsZUFBZTloQyxFQUFFbVEsTUFBTXNGLEVBQUV0RixNQUFNblEsRUFBRXloQyxjQUFjaHNCLEVBQUVnc0IsY0FBY3poQyxFQUFFdWhDLGNBQWM5ckIsRUFBRThyQixjQUFjdmhDLEVBQUV3aEMsWUFBWS9yQixFQUFFK3JCLFlBQVl4aEMsRUFBRXNoQyxvQkFBb0I3ckIsRUFBRTZyQixvQkFBb0J0aEMsRUFBRXd2QixRQUFRL1osRUFBRStaLFFBQ2hmeHZCLEVBQUVzSixNQUFNbU0sRUFBRW5NLE1BQU10SixFQUFFcVgsSUFBSTVCLEVBQUU0QixJQUFXclgsRUFDbkMsU0FBU2lpQyxHQUFHeHNCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFdUUsRUFBRXFSLEdBQUcsSUFBSUYsRUFBRSxFQUFNLEdBQUoxVixFQUFFd1YsRUFBSyxtQkFBb0JBLEVBQUVzc0IsR0FBR3RzQixLQUFLRSxFQUFFLFFBQVEsR0FBRyxpQkFBa0JGLEVBQUVFLEVBQUUsT0FBT0YsRUFBRSxPQUFPQSxHQUFHLEtBQUsrUixHQUFHLE9BQU8wYSxHQUFHbGlDLEVBQUUwTSxTQUFTbEksRUFBRXFSLEVBQUVILEdBQUcsS0FBS21TLEdBQUcsT0FBT3NhLEdBQUduaUMsRUFBSSxFQUFGd0UsRUFBSXFSLEVBQUVILEdBQUcsS0FBSytSLEdBQUcsT0FBTzBhLEdBQUduaUMsRUFBSSxFQUFGd0UsRUFBSXFSLEVBQUVILEdBQUcsS0FBS2dTLEdBQUcsT0FBT2pTLEVBQUUwQixHQUFFLEdBQUduWCxFQUFFMFYsRUFBSSxFQUFGbFIsSUFBTzQ4QixZQUFZMVosR0FBR2pTLEVBQUV6TyxLQUFLMGdCLEdBQUdqUyxFQUFFcXNCLGVBQWVqc0IsRUFBRUosRUFBRSxLQUFLc1MsR0FBRyxPQUFPdFMsRUFBRTBCLEdBQUUsR0FBR25YLEVBQUUwVixFQUFFbFIsSUFBSzQ4QixZQUFZclosR0FBR3RTLEVBQUV6TyxLQUFLK2dCLEdBQUd0UyxFQUFFcXNCLGVBQWVqc0IsRUFBRUosRUFBRSxRQUFRLEdBQUcsaUJBQWtCQSxHQUFHLE9BQU9BLEVBQUUsT0FBT0EsRUFBRWlDLFVBQVUsS0FBS2lRLEdBQUdoUyxFQUFFLEdBQUcsTUFBTUYsRUFBRSxLQUFLbVMsR0FBR2pTLEVBQUUsRUFBRSxNQUFNRixFQUFFLEtBQUtxUyxHQUFHblMsRUFBRSxHQUFHLE1BQU1GLEVBQUUsS0FBS3VTLEdBQUdyUyxFQUN4ZixHQUFHLE1BQU1GLEVBQUUsS0FBS3dTLEdBQUd0UyxFQUFFLEdBQUcxVixFQUFFLEtBQUssTUFBTXdWLEVBQUVSLEVBQUUsTUFBTSxNQUFNUSxFQUFFQSxTQUFTQSxFQUFFLElBQTZELE9BQXpEQyxFQUFFeUIsR0FBRXhCLEVBQUUzVixFQUFFMFYsRUFBRWxSLElBQUs0OEIsWUFBWTNyQixFQUFFQyxFQUFFMU8sS0FBSy9HLEVBQUV5VixFQUFFb3NCLGVBQWVqc0IsRUFBU0gsRUFBRSxTQUFTd3NCLEdBQUd6c0IsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQW1DLE9BQWhDd1YsRUFBRTBCLEdBQUUsRUFBRTFCLEVBQUV4VixFQUFFeVYsSUFBS29zQixlQUFlOWhDLEVBQVN5VixFQUFFLFNBQVMwc0IsR0FBRzFzQixFQUFFQyxFQUFFMVYsRUFBRUMsR0FBOEUsT0FBM0V3VixFQUFFMEIsR0FBRSxFQUFFMUIsRUFBRXhWLEVBQUV5VixHQUFHQSxFQUFFLElBQU8sRUFBRkEsR0FBSytSLEdBQUdJLEdBQUdwUyxFQUFFMnJCLFlBQVkxckIsRUFBRUQsRUFBRXpPLEtBQUswTyxFQUFFRCxFQUFFcXNCLGVBQWU5aEMsRUFBU3lWLEVBQUUsU0FBUzJzQixHQUFHM3NCLEVBQUVDLEVBQUUxVixHQUFzQyxPQUFuQ3lWLEVBQUUwQixHQUFFLEVBQUUxQixFQUFFLEtBQUtDLElBQUtvc0IsZUFBZTloQyxFQUFTeVYsRUFDNVcsU0FBUzRzQixHQUFHNXNCLEVBQUVDLEVBQUUxVixHQUFzSyxPQUFuSzBWLEVBQUV5QixHQUFFLEVBQUUsT0FBTzFCLEVBQUUvSSxTQUFTK0ksRUFBRS9JLFNBQVMsR0FBRytJLEVBQUV2VSxJQUFJd1UsSUFBS29zQixlQUFlOWhDLEVBQUUwVixFQUFFeUksVUFBVSxDQUFDK1csY0FBY3pmLEVBQUV5ZixjQUFjb04sZ0JBQWdCLEtBQUtDLGVBQWU5c0IsRUFBRThzQixnQkFBdUI3c0IsRUFBRSxTQUFTOHNCLEdBQUcvc0IsRUFBRUMsR0FBR0QsRUFBRWd0QixVQUFTLEVBQUcsSUFBSXppQyxFQUFFeVYsRUFBRWl0QixvQkFBb0IsSUFBSTFpQyxFQUFFeVYsRUFBRWl0QixvQkFBb0JqdEIsRUFBRWt0QixrQkFBa0JqdEIsRUFBRTFWLEVBQUUwVixFQUFFRCxFQUFFaXRCLG9CQUFvQmh0QixFQUFFRCxFQUFFa3RCLGtCQUFrQmp0QixJQUFJRCxFQUFFa3RCLGtCQUFrQmp0QixHQUFHa3RCLEdBQUdsdEIsRUFBRUQsR0FFdlcsU0FBU290QixHQUFHcHRCLEVBQUVDLEdBQUdELEVBQUVndEIsVUFBUyxFQUFHaHRCLEVBQUVxdEIsa0JBQWtCcHRCLElBQUlELEVBQUVxdEIsaUJBQWlCLEdBQUcsSUFBSTlpQyxFQUFFeVYsRUFBRWl0QixvQkFBb0J6aUMsRUFBRXdWLEVBQUVrdEIsa0JBQWtCM2lDLElBQUkwVixFQUFFRCxFQUFFaXRCLG9CQUFvQnppQyxJQUFJeVYsRUFBRUQsRUFBRWt0QixrQkFBa0IsRUFBRTFpQyxFQUFFQSxJQUFJeVYsSUFBSUQsRUFBRWt0QixrQkFBa0IzaUMsR0FBR0EsRUFBRXlWLEVBQUVzdEIsc0JBQXNCOWlDLEVBQUV3VixFQUFFdXRCLG9CQUFvQixJQUFJaGpDLEVBQUV5VixFQUFFc3RCLHNCQUFzQnR0QixFQUFFdXRCLG9CQUFvQnR0QixFQUFFMVYsRUFBRTBWLEVBQUVELEVBQUVzdEIsc0JBQXNCcnRCLEVBQUV6VixFQUFFeVYsSUFBSUQsRUFBRXV0QixvQkFBb0J0dEIsR0FBR2t0QixHQUFHbHRCLEVBQUVELEdBQ3ZaLFNBQVN3dEIsR0FBR3h0QixFQUFFQyxHQUFHLElBQUkxVixFQUFFeVYsRUFBRWl0QixvQkFBb0UsT0FBdEIxaUMsRUFBRTBWLElBQUlBLEVBQUUxVixJQUFsQ3lWLEVBQUVBLEVBQUVzdEIsdUJBQW1DcnRCLElBQUlBLEVBQUVELEdBQVVDLEVBQUUsU0FBU2t0QixHQUFHbnRCLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUUwVixFQUFFcXRCLHNCQUFzQjlpQyxFQUFFeVYsRUFBRXN0QixvQkFBb0J4K0IsRUFBRWtSLEVBQUVndEIsb0JBQW9CN3NCLEVBQUVILEVBQUVvdEIsaUJBQTZCLEtBQVp0K0IsRUFBRSxJQUFJQSxFQUFFQSxFQUFFcVIsS0FBVSxJQUFJSixHQUFHeFYsRUFBRXdWLEtBQUtqUixFQUFFdkUsR0FBTyxLQUFKd1YsRUFBRWpSLElBQVN4RSxFQUFFeVYsSUFBSUEsRUFBRXpWLEdBQUcwVixFQUFFd3RCLDJCQUEyQjErQixFQUFFa1IsRUFBRW9zQixlQUFlcnNCLEVBQUUsU0FBUzJCLEdBQUUzQixFQUFFQyxHQUFHLEdBQUdELEdBQUdBLEVBQUVnQyxhQUF5QyxJQUFJLElBQUl6WCxLQUFuQzBWLEVBQUV0VSxFQUFFLEdBQUdzVSxHQUFHRCxFQUFFQSxFQUFFZ0Msa0JBQTRCLElBQVMvQixFQUFFMVYsS0FBSzBWLEVBQUUxVixHQUFHeVYsRUFBRXpWLElBQUksT0FBTzBWLEVBQ2hHLElBQUl5dEIsSUFBRyxJQUFLL3RCLEVBQUd0QyxXQUFXN04sS0FDclgsU0FBU20rQixHQUFHM3RCLEVBQUVDLEVBQUUxVixFQUFFQyxHQUE4QkQsRUFBRSxPQUFYQSxFQUFFQSxFQUFFQyxFQUF0QnlWLEVBQUVELEVBQUU4ckIsZ0JBQThDN3JCLEVBQUV0VSxFQUFFLEdBQUdzVSxFQUFFMVYsR0FBR3lWLEVBQUU4ckIsY0FBY3ZoQyxFQUFrQixRQUFoQkMsRUFBRXdWLEVBQUUrckIsY0FBc0IsSUFBSS9yQixFQUFFcXNCLGlCQUFpQjdoQyxFQUFFb2pDLFVBQVVyakMsR0FDbEssSUFBSXNqQyxHQUFHLENBQUNydEIsVUFBVSxTQUFTUixHQUFHLFNBQU9BLEVBQUVBLEVBQUU4dEIsc0JBQXFCLElBQUluVSxHQUFHM1osSUFBT1csZ0JBQWdCLFNBQVNYLEVBQUVDLEVBQUUxVixHQUFHeVYsRUFBRUEsRUFBRTh0QixvQkFBb0IsSUFBSXRqQyxFQUFFdWpDLEtBQW1CaC9CLEVBQUVpL0IsR0FBaEJ4akMsRUFBRXlqQyxHQUFHempDLEVBQUV3VixJQUFlalIsRUFBRW0vQixRQUFRanVCLEVBQUUsTUFBUzFWLElBQWN3RSxFQUFFby9CLFNBQVM1akMsR0FBRzZqQyxLQUFLQyxHQUFHcnVCLEVBQUVqUixHQUFHdS9CLEdBQUd0dUIsRUFBRXhWLElBQUlrVyxvQkFBb0IsU0FBU1YsRUFBRUMsRUFBRTFWLEdBQUd5VixFQUFFQSxFQUFFOHRCLG9CQUFvQixJQUFJdGpDLEVBQUV1akMsS0FBbUJoL0IsRUFBRWkvQixHQUFoQnhqQyxFQUFFeWpDLEdBQUd6akMsRUFBRXdWLElBQWVqUixFQUFFa0gsSUFBSXM0QixHQUFHeC9CLEVBQUVtL0IsUUFBUWp1QixFQUFFLE1BQVMxVixJQUFjd0UsRUFBRW8vQixTQUFTNWpDLEdBQUc2akMsS0FBS0MsR0FBR3J1QixFQUFFalIsR0FBR3UvQixHQUFHdHVCLEVBQUV4VixJQUFJaVcsbUJBQW1CLFNBQVNULEVBQUVDLEdBQUdELEVBQUVBLEVBQUU4dEIsb0JBQW9CLElBQUl2akMsRUFBRXdqQyxLQUFtQnZqQyxFQUFFd2pDLEdBQWhCempDLEVBQUUwakMsR0FBRzFqQyxFQUFFeVYsSUFBZXhWLEVBQUV5TCxJQUNyZnU0QixHQUFHLE1BQVN2dUIsSUFBY3pWLEVBQUUyakMsU0FBU2x1QixHQUFHbXVCLEtBQUtDLEdBQUdydUIsRUFBRXhWLEdBQUc4akMsR0FBR3R1QixFQUFFelYsS0FBSyxTQUFTa2tDLEdBQUd6dUIsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxFQUFFcVIsRUFBRUYsR0FBaUIsTUFBTSxtQkFBcEJGLEVBQUVBLEVBQUUwSSxXQUFzQ2dtQixzQkFBc0IxdUIsRUFBRTB1QixzQkFBc0Jsa0MsRUFBRTRWLEVBQUVGLElBQUdELEVBQUVuVSxZQUFXbVUsRUFBRW5VLFVBQVV3Vix3QkFBc0JvWSxHQUFHbnZCLEVBQUVDLEtBQUtrdkIsR0FBRzNxQixFQUFFcVIsSUFDdlAsU0FBU3V1QixHQUFHM3VCLEVBQUVDLEVBQUUxVixHQUFHLElBQUlDLEdBQUUsRUFBR3VFLEVBQUV5N0IsR0FBT3BxQixFQUFFSCxFQUFFMnVCLFlBQTZXLE1BQWpXLGlCQUFrQnh1QixHQUFHLE9BQU9BLEVBQUVBLEVBQUUyQixHQUFFM0IsSUFBSXJSLEVBQUUwUyxHQUFFeEIsR0FBR3dxQixHQUFHcnBCLEdBQUVJLFFBQXlCcEIsR0FBRzVWLEVBQUUsT0FBdEJBLEVBQUV5VixFQUFFMHFCLGVBQXdDRCxHQUFHMXFCLEVBQUVqUixHQUFHeTdCLElBQUl2cUIsRUFBRSxJQUFJQSxFQUFFMVYsRUFBRTZWLEdBQUdKLEVBQUU4ckIsY0FBYyxPQUFPN3JCLEVBQUU3RyxZQUFPLElBQVM2RyxFQUFFN0csTUFBTTZHLEVBQUU3RyxNQUFNLEtBQUs2RyxFQUFFYyxRQUFROHNCLEdBQUc3dEIsRUFBRTBJLFVBQVV6SSxFQUFFQSxFQUFFNnRCLG9CQUFvQjl0QixFQUFFeFYsS0FBSXdWLEVBQUVBLEVBQUUwSSxXQUFZa2lCLDRDQUE0Qzc3QixFQUFFaVIsRUFBRTZxQiwwQ0FBMEN6cUIsR0FBVUgsRUFDN1osU0FBUzR1QixHQUFHN3VCLEVBQUVDLEVBQUUxVixFQUFFQyxHQUFHd1YsRUFBRUMsRUFBRTdHLE1BQU0sbUJBQW9CNkcsRUFBRTZ1QiwyQkFBMkI3dUIsRUFBRTZ1QiwwQkFBMEJ2a0MsRUFBRUMsR0FBRyxtQkFBb0J5VixFQUFFOHVCLGtDQUFrQzl1QixFQUFFOHVCLGlDQUFpQ3hrQyxFQUFFQyxHQUFHeVYsRUFBRTdHLFFBQVE0RyxHQUFHNnRCLEdBQUdudEIsb0JBQW9CVCxFQUFFQSxFQUFFN0csTUFBTSxNQUMvUCxTQUFTNDFCLEdBQUdodkIsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsSUFBSXVFLEVBQUVpUixFQUFFMEksVUFBVTNaLEVBQUVxTixNQUFNN1IsRUFBRXdFLEVBQUVxSyxNQUFNNEcsRUFBRThyQixjQUFjLzhCLEVBQUVTLEtBQUtrK0IsR0FBRyxJQUFJdHRCLEVBQUVILEVBQUUydUIsWUFBWSxpQkFBa0J4dUIsR0FBRyxPQUFPQSxFQUFFclIsRUFBRStSLFFBQVFpQixHQUFFM0IsSUFBSUEsRUFBRXFCLEdBQUV4QixHQUFHd3FCLEdBQUdycEIsR0FBRUksUUFBUXpTLEVBQUUrUixRQUFRNHBCLEdBQUcxcUIsRUFBRUksSUFBb0IsUUFBaEJBLEVBQUVKLEVBQUUrckIsZUFBdUJrRCxHQUFHanZCLEVBQUVJLEVBQUU3VixFQUFFd0UsRUFBRXZFLEdBQUd1RSxFQUFFcUssTUFBTTRHLEVBQUU4ckIsZUFBNEMsbUJBQTdCMXJCLEVBQUVILEVBQUVpdkIsNEJBQWlEdkIsR0FBRzN0QixFQUFFQyxFQUFFRyxFQUFFN1YsR0FBR3dFLEVBQUVxSyxNQUFNNEcsRUFBRThyQixlQUFlLG1CQUFvQjdyQixFQUFFaXZCLDBCQUEwQixtQkFBb0JuZ0MsRUFBRW9nQyx5QkFBeUIsbUJBQW9CcGdDLEVBQUVxZ0MsMkJBQTJCLG1CQUNqZXJnQyxFQUFFc2dDLHFCQUFxQnB2QixFQUFFbFIsRUFBRXFLLE1BQU0sbUJBQW9CckssRUFBRXNnQyxvQkFBb0J0Z0MsRUFBRXNnQyxxQkFBcUIsbUJBQW9CdGdDLEVBQUVxZ0MsMkJBQTJCcmdDLEVBQUVxZ0MsNEJBQTRCbnZCLElBQUlsUixFQUFFcUssT0FBT3kwQixHQUFHbnRCLG9CQUFvQjNSLEVBQUVBLEVBQUVxSyxNQUFNLE1BQXNCLFFBQWhCZ0gsRUFBRUosRUFBRStyQixlQUF1QmtELEdBQUdqdkIsRUFBRUksRUFBRTdWLEVBQUV3RSxFQUFFdkUsR0FBR3VFLEVBQUVxSyxNQUFNNEcsRUFBRThyQixnQkFBZ0IsbUJBQW9CLzhCLEVBQUV1Z0Msb0JBQW9CdHZCLEVBQUU0WixXQUFXLEdBQUcsSUFBSTJWLEdBQUd2NkIsTUFBTUMsUUFDdFgsU0FBU3U2QixHQUFHeHZCLEVBQUVDLEVBQUUxVixHQUFXLEdBQUcsUUFBWHlWLEVBQUV6VixFQUFFcVgsTUFBaUIsbUJBQW9CNUIsR0FBRyxpQkFBa0JBLEVBQUUsQ0FBQyxHQUFHelYsRUFBRTJYLE9BQU8sQ0FBQzNYLEVBQUVBLEVBQUUyWCxPQUFPLElBQUkxWCxPQUFFLEVBQU9ELElBQUksSUFBSUEsRUFBRTBMLEtBQUl1SixFQUFFLE9BQWNoVixFQUFFRCxFQUFFbWUsV0FBV2xlLEdBQVNnVixFQUFFLE1BQU1RLEdBQUcsSUFBSWpSLEVBQUUsR0FBR2lSLEVBQUUsT0FBRyxPQUFPQyxHQUFHLE9BQU9BLEVBQUUyQixLQUFLLG1CQUFvQjNCLEVBQUUyQixLQUFLM0IsRUFBRTJCLElBQUk2dEIsYUFBYTFnQyxFQUFTa1IsRUFBRTJCLE1BQUkzQixFQUFFLFNBQVNELEdBQUcsSUFBSUMsRUFBRXpWLEVBQUVnRixLQUFLeVEsSUFBSXl0QixLQUFLenRCLEVBQUV6VixFQUFFZ0YsS0FBSyxJQUFJLE9BQU93USxTQUFTQyxFQUFFbFIsR0FBR2tSLEVBQUVsUixHQUFHaVIsSUFBS3l2QixXQUFXMWdDLEVBQVNrUixHQUFFLGlCQUFrQkQsR0FBRVIsRUFBRSxPQUFjalYsRUFBRTJYLFFBQWMxQyxFQUFFLE1BQU1RLEdBQUcsT0FBT0EsRUFDemMsU0FBUzB2QixHQUFHMXZCLEVBQUVDLEdBQUcsYUFBYUQsRUFBRXpPLE1BQU1pTyxFQUFFLEtBQUssb0JBQW9CNVUsT0FBT2tCLFVBQVVNLFNBQVMvQixLQUFLNFYsR0FBRyxxQkFBcUJyVixPQUFPaUgsS0FBS29PLEdBQUczUyxLQUFLLE1BQU0sSUFBSTJTLEVBQUUsSUFDeEosU0FBUzB2QixHQUFHM3ZCLEdBQUcsU0FBU0MsRUFBRUEsRUFBRTFWLEdBQUcsR0FBR3lWLEVBQUUsQ0FBQyxJQUFJeFYsRUFBRXlWLEVBQUVnc0IsV0FBVyxPQUFPemhDLEdBQUdBLEVBQUUyaEMsV0FBVzVoQyxFQUFFMFYsRUFBRWdzQixXQUFXMWhDLEdBQUcwVixFQUFFaXNCLFlBQVlqc0IsRUFBRWdzQixXQUFXMWhDLEVBQUVBLEVBQUU0aEMsV0FBVyxLQUFLNWhDLEVBQUVxdkIsVUFBVSxHQUFHLFNBQVNydkIsRUFBRUEsRUFBRUMsR0FBRyxJQUFJd1YsRUFBRSxPQUFPLEtBQUssS0FBSyxPQUFPeFYsR0FBR3lWLEVBQUUxVixFQUFFQyxHQUFHQSxFQUFFQSxFQUFFdXZCLFFBQVEsT0FBTyxLQUFLLFNBQVN2dkIsRUFBRXdWLEVBQUVDLEdBQUcsSUFBSUQsRUFBRSxJQUFJNHZCLElBQUksT0FBTzN2QixHQUFHLE9BQU9BLEVBQUV4VSxJQUFJdVUsRUFBRW1SLElBQUlsUixFQUFFeFUsSUFBSXdVLEdBQUdELEVBQUVtUixJQUFJbFIsRUFBRXBNLE1BQU1vTSxHQUFHQSxFQUFFQSxFQUFFOFosUUFBUSxPQUFPL1osRUFBRSxTQUFTalIsRUFBRWlSLEVBQUVDLEVBQUUxVixHQUF3QyxPQUFyQ3lWLEVBQUV1c0IsR0FBR3ZzQixFQUFFQyxJQUFPcE0sTUFBTSxFQUFFbU0sRUFBRStaLFFBQVEsS0FBWS9aLEVBQUUsU0FBU0ksRUFBRUgsRUFBRTFWLEVBQUVDLEdBQWEsT0FBVnlWLEVBQUVwTSxNQUFNckosRUFBTXdWLEVBQTRCLFFBQWpCeFYsRUFBRXlWLEVBQUVzWixZQUE2Qi91QixFQUFFQSxFQUFFcUosT0FBUXRKLEdBQUcwVixFQUFFMlosVUFDdGYsRUFBRXJ2QixHQUFHQyxHQUFFeVYsRUFBRTJaLFVBQVUsRUFBU3J2QixHQURzYUEsRUFDcGEsU0FBUzJWLEVBQUVELEdBQTBDLE9BQXZDRCxHQUFHLE9BQU9DLEVBQUVzWixZQUFZdFosRUFBRTJaLFVBQVUsR0FBVTNaLEVBQUUsU0FBU0UsRUFBRUgsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsT0FBRyxPQUFPeVYsR0FBRyxJQUFJQSxFQUFFaEssTUFBV2dLLEVBQUUwc0IsR0FBR3BpQyxFQUFFeVYsRUFBRTNVLEtBQUtiLElBQUs2ZSxPQUFPckosRUFBRUMsS0FBRUEsRUFBRWxSLEVBQUVrUixFQUFFMVYsSUFBTzhlLE9BQU9ySixFQUFTQyxHQUFFLFNBQVM5VixFQUFFNlYsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsT0FBRyxPQUFPeVYsR0FBR0EsRUFBRTByQixjQUFjcGhDLEVBQUVnSCxPQUFZL0csRUFBRXVFLEVBQUVrUixFQUFFMVYsRUFBRTZSLFFBQVd3RixJQUFJNHRCLEdBQUd4dkIsRUFBRUMsRUFBRTFWLEdBQUdDLEVBQUU2ZSxPQUFPckosRUFBRXhWLEtBQUVBLEVBQUVnaUMsR0FBR2ppQyxFQUFFZ0gsS0FBS2hILEVBQUVrQixJQUFJbEIsRUFBRTZSLE1BQU0sS0FBSzRELEVBQUUzVSxLQUFLYixJQUFLb1gsSUFBSTR0QixHQUFHeHZCLEVBQUVDLEVBQUUxVixHQUFHQyxFQUFFNmUsT0FBT3JKLEVBQVN4VixHQUFFLFNBQVMwVSxFQUFFYyxFQUFFQyxFQUFFMVYsRUFBRUMsR0FBRyxPQUFHLE9BQU95VixHQUFHLElBQUlBLEVBQUVoSyxLQUFLZ0ssRUFBRXlJLFVBQVUrVyxnQkFBZ0JsMUIsRUFBRWsxQixlQUFleGYsRUFBRXlJLFVBQVVva0IsaUJBQzFldmlDLEVBQUV1aUMsaUJBQXNCN3NCLEVBQUUyc0IsR0FBR3JpQyxFQUFFeVYsRUFBRTNVLEtBQUtiLElBQUs2ZSxPQUFPckosRUFBRUMsS0FBRUEsRUFBRWxSLEVBQUVrUixFQUFFMVYsRUFBRTBNLFVBQVUsS0FBUW9TLE9BQU9ySixFQUFTQyxHQUFFLFNBQVMzVixFQUFFMFYsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUU0VixHQUFHLE9BQUcsT0FBT0gsR0FBRyxJQUFJQSxFQUFFaEssTUFBV2dLLEVBQUV3c0IsR0FBR2xpQyxFQUFFeVYsRUFBRTNVLEtBQUtiLEVBQUU0VixJQUFLaUosT0FBT3JKLEVBQUVDLEtBQUVBLEVBQUVsUixFQUFFa1IsRUFBRTFWLElBQU84ZSxPQUFPckosRUFBU0MsR0FBRSxTQUFTalUsRUFBRWdVLEVBQUVDLEVBQUUxVixHQUFHLEdBQUcsaUJBQWtCMFYsR0FBRyxpQkFBa0JBLEVBQUUsT0FBT0EsRUFBRTBzQixHQUFHLEdBQUcxc0IsRUFBRUQsRUFBRTNVLEtBQUtkLElBQUs4ZSxPQUFPckosRUFBRUMsRUFBRSxHQUFHLGlCQUFrQkEsR0FBRyxPQUFPQSxFQUFFLENBQUMsT0FBT0EsRUFBRWdDLFVBQVUsS0FBSzRQLEdBQUcsT0FBT3RuQixFQUFFaWlDLEdBQUd2c0IsRUFBRTFPLEtBQUswTyxFQUFFeFUsSUFBSXdVLEVBQUU3RCxNQUFNLEtBQUs0RCxFQUFFM1UsS0FBS2QsSUFBS3FYLElBQUk0dEIsR0FBR3h2QixFQUFFLEtBQUtDLEdBQUcxVixFQUFFOGUsT0FBT3JKLEVBQUV6VixFQUFFLEtBQUt1bkIsR0FBRyxPQUFPN1IsRUFBRTJzQixHQUFHM3NCLEVBQUVELEVBQUUzVSxLQUFLZCxJQUFLOGUsT0FBT3JKLEVBQUVDLEVBQUUsR0FBR3N2QixHQUFHdHZCLElBQzNmeVMsR0FBR3pTLEdBQUcsT0FBT0EsRUFBRXdzQixHQUFHeHNCLEVBQUVELEVBQUUzVSxLQUFLZCxFQUFFLE9BQVE4ZSxPQUFPckosRUFBRUMsRUFBRXl2QixHQUFHMXZCLEVBQUVDLEdBQUcsT0FBTyxLQUFLLFNBQVM3VSxFQUFFNFUsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsSUFBSXVFLEVBQUUsT0FBT2tSLEVBQUVBLEVBQUV4VSxJQUFJLEtBQUssR0FBRyxpQkFBa0JsQixHQUFHLGlCQUFrQkEsRUFBRSxPQUFPLE9BQU93RSxFQUFFLEtBQUtvUixFQUFFSCxFQUFFQyxFQUFFLEdBQUcxVixFQUFFQyxHQUFHLEdBQUcsaUJBQWtCRCxHQUFHLE9BQU9BLEVBQUUsQ0FBQyxPQUFPQSxFQUFFMFgsVUFBVSxLQUFLNFAsR0FBRyxPQUFPdG5CLEVBQUVrQixNQUFNc0QsRUFBRXhFLEVBQUVnSCxPQUFPd2dCLEdBQUd6bkIsRUFBRTBWLEVBQUVDLEVBQUUxVixFQUFFNlIsTUFBTW5GLFNBQVN6TSxFQUFFdUUsR0FBRzVFLEVBQUU2VixFQUFFQyxFQUFFMVYsRUFBRUMsR0FBRyxLQUFLLEtBQUtzbkIsR0FBRyxPQUFPdm5CLEVBQUVrQixNQUFNc0QsRUFBRW1RLEVBQUVjLEVBQUVDLEVBQUUxVixFQUFFQyxHQUFHLEtBQUssR0FBRytrQyxHQUFHaGxDLElBQUltb0IsR0FBR25vQixHQUFHLE9BQU8sT0FBT3dFLEVBQUUsS0FBS3pFLEVBQUUwVixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRSxNQUFNa2xDLEdBQUcxdkIsRUFBRXpWLEdBQUcsT0FBTyxLQUFLLFNBQVNzVixFQUFFRyxFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRXVFLEdBQUcsR0FBRyxpQkFBa0J2RSxHQUFHLGlCQUFrQkEsRUFBRSxPQUM1ZTJWLEVBQUVGLEVBRGlmRCxFQUNsZ0JBLEVBQUVqVixJQUFJUixJQUFJLEtBQVcsR0FBR0MsRUFBRXVFLEdBQUcsR0FBRyxpQkFBa0J2RSxHQUFHLE9BQU9BLEVBQUUsQ0FBQyxPQUFPQSxFQUFFeVgsVUFBVSxLQUFLNFAsR0FBRyxPQUFPN1IsRUFBRUEsRUFBRWpWLElBQUksT0FBT1AsRUFBRWlCLElBQUlsQixFQUFFQyxFQUFFaUIsTUFBTSxLQUFLakIsRUFBRStHLE9BQU93Z0IsR0FBR3puQixFQUFFMlYsRUFBRUQsRUFBRXhWLEVBQUU0UixNQUFNbkYsU0FBU2xJLEVBQUV2RSxFQUFFaUIsS0FBS3RCLEVBQUU4VixFQUFFRCxFQUFFeFYsRUFBRXVFLEdBQUcsS0FBSytpQixHQUFHLE9BQTJDNVMsRUFBRWUsRUFBdENELEVBQUVBLEVBQUVqVixJQUFJLE9BQU9QLEVBQUVpQixJQUFJbEIsRUFBRUMsRUFBRWlCLE1BQU0sS0FBV2pCLEVBQUV1RSxHQUFHLEdBQUd3Z0MsR0FBRy9rQyxJQUFJa29CLEdBQUdsb0IsR0FBRyxPQUF3QkYsRUFBRTJWLEVBQW5CRCxFQUFFQSxFQUFFalYsSUFBSVIsSUFBSSxLQUFXQyxFQUFFdUUsRUFBRSxNQUFNMmdDLEdBQUd6dkIsRUFBRXpWLEdBQUcsT0FBTyxLQUFLLFNBQVM4VSxFQUFFdlEsRUFBRW1SLEVBQUVDLEVBQUVqQixHQUFHLElBQUksSUFBSS9VLEVBQUUsS0FBS0csRUFBRSxLQUFLOFUsRUFBRWMsRUFBRWIsRUFBRWEsRUFBRSxFQUFFSCxFQUFFLEtBQUssT0FBT1gsR0FBR0MsRUFBRWMsRUFBRXpTLE9BQU8yUixJQUFJLENBQUNELEVBQUV2TCxNQUFNd0wsR0FBR1UsRUFBRVgsRUFBRUEsRUFBRSxNQUFNVyxFQUFFWCxFQUFFMmEsUUFBUSxJQUFJeGEsRUFBRW5VLEVBQUUyRCxFQUFFcVEsRUFBRWUsRUFBRWQsR0FBR0gsR0FBRyxHQUFHLE9BQU9LLEVBQUUsQ0FBQyxPQUFPSCxJQUFJQSxFQUFFVyxHQUFHLE1BQU1DLEdBQ3JmWixHQUFHLE9BQU9HLEVBQUVnYSxXQUFXdFosRUFBRWxSLEVBQUVxUSxHQUFHYyxFQUFFRSxFQUFFYixFQUFFVyxFQUFFYixHQUFHLE9BQU8vVSxFQUFFSCxFQUFFb1YsRUFBRWpWLEVBQUV5dkIsUUFBUXhhLEVBQUVqVixFQUFFaVYsRUFBRUgsRUFBRVcsRUFBRSxHQUFHVixJQUFJYyxFQUFFelMsT0FBTyxPQUFPbkQsRUFBRXdFLEVBQUVxUSxHQUFHalYsRUFBRSxHQUFHLE9BQU9pVixFQUFFLENBQUMsS0FBS0MsRUFBRWMsRUFBRXpTLE9BQU8yUixLQUFPRCxFQUFFcFQsRUFBRStDLEVBQUVvUixFQUFFZCxHQUFHSCxNQUFHZ0IsRUFBRUUsRUFBRWhCLEVBQUVjLEVBQUViLEdBQUcsT0FBTy9VLEVBQUVILEVBQUVpVixFQUFFOVUsRUFBRXl2QixRQUFRM2EsRUFBRTlVLEVBQUU4VSxHQUFFLE9BQU9qVixFQUFFLElBQUlpVixFQUFFNVUsRUFBRXVFLEVBQUVxUSxHQUFHQyxFQUFFYyxFQUFFelMsT0FBTzJSLEtBQU9VLEVBQUVGLEVBQUVULEVBQUVyUSxFQUFFc1EsRUFBRWMsRUFBRWQsR0FBR0gsTUFBR2MsR0FBRyxPQUFPRCxFQUFFd1osV0FBV25hLEVBQUV5d0IsT0FBTyxPQUFPOXZCLEVBQUV0VSxJQUFJNFQsRUFBRVUsRUFBRXRVLEtBQUt5VSxFQUFFRSxFQUFFTCxFQUFFRyxFQUFFYixHQUFHLE9BQU8vVSxFQUFFSCxFQUFFNFYsRUFBRXpWLEVBQUV5dkIsUUFBUWhhLEVBQUV6VixFQUFFeVYsR0FBMkMsT0FBekNDLEdBQUdaLEVBQUV0TixRQUFRLFNBQVNrTyxHQUFHLE9BQU9DLEVBQUVsUixFQUFFaVIsS0FBWTdWLEVBQUUsU0FBU3VZLEVBQUUzVCxFQUFFbVIsRUFBRUMsRUFBRWpCLEdBQUcsSUFBSS9VLEVBQUV1b0IsR0FBR3ZTLEdBQUcsbUJBQW9CaFcsR0FBRXFWLEVBQUUsT0FBMEIsT0FBWlcsRUFBRWhXLEVBQUVFLEtBQUs4VixLQUFXWCxFQUFFLE9BQzFlLElBQUksSUFBSWxWLEVBQUVILEVBQUUsS0FBS2lWLEVBQUVjLEVBQUViLEVBQUVhLEVBQUUsRUFBRUgsRUFBRSxLQUFLUixFQUFFWSxFQUFFMkMsT0FBTyxPQUFPMUQsSUFBSUcsRUFBRXdELEtBQUsxRCxJQUFJRSxFQUFFWSxFQUFFMkMsT0FBTyxDQUFDMUQsRUFBRXZMLE1BQU13TCxHQUFHVSxFQUFFWCxFQUFFQSxFQUFFLE1BQU1XLEVBQUVYLEVBQUUyYSxRQUFRLElBQUl6YSxFQUFFbFUsRUFBRTJELEVBQUVxUSxFQUFFRyxFQUFFcFUsTUFBTStULEdBQUcsR0FBRyxPQUFPSSxFQUFFLENBQUNGLElBQUlBLEVBQUVXLEdBQUcsTUFBTUMsR0FBR1osR0FBRyxPQUFPRSxFQUFFaWEsV0FBV3RaLEVBQUVsUixFQUFFcVEsR0FBR2MsRUFBRUUsRUFBRWQsRUFBRVksRUFBRWIsR0FBRyxPQUFPL1UsRUFBRUgsRUFBRW1WLEVBQUVoVixFQUFFeXZCLFFBQVF6YSxFQUFFaFYsRUFBRWdWLEVBQUVGLEVBQUVXLEVBQUUsR0FBR1IsRUFBRXdELEtBQUssT0FBT3hZLEVBQUV3RSxFQUFFcVEsR0FBR2pWLEVBQUUsR0FBRyxPQUFPaVYsRUFBRSxDQUFDLE1BQU1HLEVBQUV3RCxLQUFLMUQsSUFBSUUsRUFBRVksRUFBRTJDLE9BQXdCLFFBQWpCdkQsRUFBRXZULEVBQUUrQyxFQUFFd1EsRUFBRXBVLE1BQU0rVCxNQUFjZ0IsRUFBRUUsRUFBRWIsRUFBRVcsRUFBRWIsR0FBRyxPQUFPL1UsRUFBRUgsRUFBRW9WLEVBQUVqVixFQUFFeXZCLFFBQVF4YSxFQUFFalYsRUFBRWlWLEdBQUcsT0FBT3BWLEVBQUUsSUFBSWlWLEVBQUU1VSxFQUFFdUUsRUFBRXFRLElBQUlHLEVBQUV3RCxLQUFLMUQsSUFBSUUsRUFBRVksRUFBRTJDLE9BQTRCLFFBQXJCdkQsRUFBRU0sRUFBRVQsRUFBRXJRLEVBQUVzUSxFQUFFRSxFQUFFcFUsTUFBTStULE1BQWNjLEdBQUcsT0FBT1QsRUFBRWdhLFdBQVduYSxFQUFFeXdCLE9BQU8sT0FBT3R3QixFQUFFOVQsSUFBSTRULEVBQ3BmRSxFQUFFOVQsS0FBS3lVLEVBQUVFLEVBQUViLEVBQUVXLEVBQUViLEdBQUcsT0FBTy9VLEVBQUVILEVBQUVvVixFQUFFalYsRUFBRXl2QixRQUFReGEsRUFBRWpWLEVBQUVpVixHQUE0QyxPQUF6Q1MsR0FBR1osRUFBRXROLFFBQVEsU0FBU2tPLEdBQUcsT0FBT0MsRUFBRWxSLEVBQUVpUixLQUFZN1YsRUFBRSxPQUFPLFNBQVM2VixFQUFFeFYsRUFBRTRWLEVBQUVELEdBQUcsSUFBSWpCLEVBQUUsaUJBQWtCa0IsR0FBRyxPQUFPQSxHQUFHQSxFQUFFN08sT0FBT3dnQixJQUFJLE9BQU8zUixFQUFFM1UsSUFBSXlULElBQUlrQixFQUFFQSxFQUFFaEUsTUFBTW5GLFVBQVUsSUFBSTlNLEVBQUUsaUJBQWtCaVcsR0FBRyxPQUFPQSxFQUFFLEdBQUdqVyxFQUFFLE9BQU9pVyxFQUFFNkIsVUFBVSxLQUFLNFAsR0FBRzdSLEVBQUUsQ0FBUyxJQUFSN1YsRUFBRWlXLEVBQUUzVSxJQUFReVQsRUFBRTFVLEVBQUUsT0FBTzBVLEdBQUcsQ0FBQyxHQUFHQSxFQUFFelQsTUFBTXRCLEVBQUUsSUFBRyxJQUFJK1UsRUFBRWpKLElBQUltSyxFQUFFN08sT0FBT3dnQixHQUFHN1MsRUFBRXlzQixjQUFjdnJCLEVBQUU3TyxLQUFLLENBQUNoSCxFQUFFeVYsRUFBRWQsRUFBRTZhLFVBQVN2dkIsRUFBRXVFLEVBQUVtUSxFQUFFa0IsRUFBRTdPLE9BQU93Z0IsR0FBRzNSLEVBQUVoRSxNQUFNbkYsU0FBU21KLEVBQUVoRSxRQUFXd0YsSUFBSTR0QixHQUFHeHZCLEVBQUVkLEVBQUVrQixHQUFHNVYsRUFBRTZlLE9BQU9ySixFQUFFQSxFQUFFeFYsRUFBRSxNQUFNd1YsRUFBT3pWLEVBQUV5VixFQUFFZCxHQUFHLE1BQVdlLEVBQUVELEVBQUVkLEdBQUdBLEVBQ3BmQSxFQUFFNmEsUUFBUTNaLEVBQUU3TyxPQUFPd2dCLEtBQUl2bkIsRUFBRWlpQyxHQUFHcnNCLEVBQUVoRSxNQUFNbkYsU0FBUytJLEVBQUUzVSxLQUFLOFUsRUFBRUMsRUFBRTNVLE1BQU80ZCxPQUFPckosRUFBRUEsRUFBRXhWLEtBQUkyVixFQUFFcXNCLEdBQUdwc0IsRUFBRTdPLEtBQUs2TyxFQUFFM1UsSUFBSTJVLEVBQUVoRSxNQUFNLEtBQUs0RCxFQUFFM1UsS0FBSzhVLElBQUt5QixJQUFJNHRCLEdBQUd4dkIsRUFBRXhWLEVBQUU0VixHQUFHRCxFQUFFa0osT0FBT3JKLEVBQUVBLEVBQUVHLEdBQUcsT0FBT0QsRUFBRUYsR0FBRyxLQUFLOFIsR0FBRzlSLEVBQUUsQ0FBQyxJQUFJZCxFQUFFa0IsRUFBRTNVLElBQUksT0FBT2pCLEdBQUcsQ0FBQyxHQUFHQSxFQUFFaUIsTUFBTXlULEVBQUUsSUFBRyxJQUFJMVUsRUFBRXlMLEtBQUt6TCxFQUFFa2UsVUFBVStXLGdCQUFnQnJmLEVBQUVxZixlQUFlajFCLEVBQUVrZSxVQUFVb2tCLGlCQUFpQjFzQixFQUFFMHNCLGVBQWUsQ0FBQ3ZpQyxFQUFFeVYsRUFBRXhWLEVBQUV1dkIsVUFBU3Z2QixFQUFFdUUsRUFBRXZFLEVBQUU0VixFQUFFbkosVUFBVSxLQUFRb1MsT0FBT3JKLEVBQUVBLEVBQUV4VixFQUFFLE1BQU13VixFQUFPelYsRUFBRXlWLEVBQUV4VixHQUFHLE1BQVd5VixFQUFFRCxFQUFFeFYsR0FBR0EsRUFBRUEsRUFBRXV2QixTQUFRdnZCLEVBQUVvaUMsR0FBR3hzQixFQUFFSixFQUFFM1UsS0FBSzhVLElBQUtrSixPQUFPckosRUFBRUEsRUFBRXhWLEVBQUUsT0FBTzBWLEVBQUVGLEdBQUcsR0FBRyxpQkFBa0JJLEdBQUcsaUJBQWtCQSxFQUFFLE9BQU9BLEVBQ25nQixHQUFHQSxFQUFFLE9BQU81VixHQUFHLElBQUlBLEVBQUV5TCxLQUFLMUwsRUFBRXlWLEVBQUV4VixFQUFFdXZCLFVBQVN2dkIsRUFBRXVFLEVBQUV2RSxFQUFFNFYsSUFBT2lKLE9BQU9ySixFQUFFQSxFQUFFeFYsSUFBSUQsRUFBRXlWLEVBQUV4VixJQUFHQSxFQUFFbWlDLEdBQUd2c0IsRUFBRUosRUFBRTNVLEtBQUs4VSxJQUFLa0osT0FBT3JKLEVBQUVBLEVBQUV4VixHQUFHMFYsRUFBRUYsR0FBRyxHQUFHdXZCLEdBQUdudkIsR0FBRyxPQUFPZCxFQUFFVSxFQUFFeFYsRUFBRTRWLEVBQUVELEdBQUcsR0FBR3VTLEdBQUd0UyxHQUFHLE9BQU9zQyxFQUFFMUMsRUFBRXhWLEVBQUU0VixFQUFFRCxHQUFjLEdBQVhoVyxHQUFHdWxDLEdBQUcxdkIsRUFBRUksUUFBTSxJQUFxQkEsSUFBSWxCLEVBQUUsT0FBT2MsRUFBRS9KLEtBQUssS0FBSyxFQUFFLEtBQUssRUFBV3VKLEVBQUUsT0FBWFcsRUFBRUgsRUFBRXpPLE1BQWVxaEIsYUFBYXpTLEVBQUUxVixNQUFNLGFBQWEsT0FBT0YsRUFBRXlWLEVBQUV4VixJQUFJLElBQUlzbEMsR0FBR0gsSUFBRyxHQUFJSSxHQUFHSixJQUFHLEdBQUlLLEdBQUcsR0FBRzd0QixHQUFFLENBQUNYLFFBQVF3dUIsSUFBSUMsR0FBRyxDQUFDenVCLFFBQVF3dUIsSUFBSUUsR0FBRyxDQUFDMXVCLFFBQVF3dUIsSUFBSSxTQUFTRyxHQUFHbndCLEdBQTBCLE9BQXZCQSxJQUFJZ3dCLElBQUd4d0IsRUFBRSxPQUFxQlEsRUFDM2EsU0FBU293QixHQUFHcHdCLEVBQUVDLEdBQUdnQixHQUFFaXZCLEdBQUdqd0IsR0FBS2dCLEdBQUVndkIsR0FBR2p3QixHQUFLaUIsR0FBRWtCLEdBQUU2dEIsSUFBTSxJQUFJemxDLEVBQUUwVixFQUFFNFEsU0FBUyxPQUFPdG1CLEdBQUcsS0FBSyxFQUFFLEtBQUssR0FBRzBWLEdBQUdBLEVBQUVBLEVBQUVraEIsaUJBQWlCbGhCLEVBQUUya0IsYUFBYUwsR0FBRyxLQUFLLElBQUksTUFBTSxRQUFrRXRrQixFQUFFc2tCLEdBQXJDdGtCLEdBQXZCMVYsRUFBRSxJQUFJQSxFQUFFMFYsRUFBRW5QLFdBQVdtUCxHQUFNMmtCLGNBQWMsS0FBS3I2QixFQUFFQSxFQUFFOGxDLFNBQWtCcnZCLEdBQUVtQixJQUFLbEIsR0FBRWtCLEdBQUVsQyxHQUFLLFNBQVNxd0IsR0FBR3R3QixHQUFHZ0IsR0FBRW1CLElBQUtuQixHQUFFaXZCLElBQU1qdkIsR0FBRWt2QixJQUFNLFNBQVNLLEdBQUd2d0IsR0FBR213QixHQUFHRCxHQUFHMXVCLFNBQVMsSUFBSXZCLEVBQUVrd0IsR0FBR2h1QixHQUFFWCxTQUFhalgsRUFBRWc2QixHQUFHdGtCLEVBQUVELEVBQUV6TyxNQUFNME8sSUFBSTFWLElBQUkwVyxHQUFFZ3ZCLEdBQUdqd0IsR0FBS2lCLEdBQUVrQixHQUFFNVgsSUFBTSxTQUFTaW1DLEdBQUd4d0IsR0FBR2l3QixHQUFHenVCLFVBQVV4QixJQUFJZ0IsR0FBRW1CLElBQUtuQixHQUFFaXZCLEtBQzlaLElBQUlRLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxHQUFHQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxJQUFJQyxHQUFHdGYsR0FBRzNMLHVCQUF1QmtyQixHQUFHLEVBQUVDLEdBQUcsS0FBSy91QixHQUFFLEtBQUtDLEdBQUUsS0FBSyt1QixHQUFHLEtBQUs5dUIsR0FBRSxLQUFLK3VCLEdBQUcsS0FBS0MsR0FBRyxFQUFFQyxHQUFHLEtBQUtDLEdBQUcsRUFBRUMsSUFBRyxFQUFHQyxHQUFHLEtBQUtDLEdBQUcsRUFBRSxTQUFTQyxLQUFLcHlCLEVBQUUsT0FBTyxTQUFTcXlCLEdBQUc3eEIsRUFBRUMsR0FBRyxHQUFHLE9BQU9BLEVBQUUsT0FBTSxFQUFHLElBQUksSUFBSTFWLEVBQUUsRUFBRUEsRUFBRTBWLEVBQUV2UyxRQUFRbkQsRUFBRXlWLEVBQUV0UyxPQUFPbkQsSUFBSSxJQUFJaXZCLEdBQUd4WixFQUFFelYsR0FBRzBWLEVBQUUxVixJQUFJLE9BQU0sRUFBRyxPQUFNLEVBQzFTLFNBQVN1bkMsR0FBRzl4QixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRXVFLEVBQUVxUixHQUFnRixHQUE3RTh3QixHQUFHOXdCLEVBQUUrd0IsR0FBR2x4QixFQUFFb0MsR0FBRSxPQUFPckMsRUFBRUEsRUFBRThyQixjQUFjLEtBQUttRixHQUFHenZCLFFBQVEsT0FBT2EsR0FBRTB2QixHQUFHQyxHQUFHL3hCLEVBQUUxVixFQUFFQyxFQUFFdUUsR0FBTTBpQyxHQUFHLENBQUMsR0FBR0EsSUFBRyxFQUFHRSxJQUFJLEVBQUV0dkIsR0FBRSxPQUFPckMsRUFBRUEsRUFBRThyQixjQUFjLEtBQUt1RixHQUFHRCxHQUFHRyxHQUFHanZCLEdBQUVGLEdBQUUsS0FBSzZ1QixHQUFHenZCLFFBQVF3d0IsR0FBRy94QixFQUFFMVYsRUFBRUMsRUFBRXVFLFNBQVMwaUMsSUFBSUMsR0FBRyxLQUFLQyxHQUFHLEVBQW9MLE9BQWxMVixHQUFHenZCLFFBQVF5d0IsSUFBR2p5QixFQUFFbXhCLElBQUtyRixjQUFjc0YsR0FBR3B4QixFQUFFcXNCLGVBQWVpRixHQUFHdHhCLEVBQUUrckIsWUFBWXdGLEdBQUd2eEIsRUFBRTRaLFdBQVc0WCxHQUFHeHhCLEVBQUUsT0FBT29DLElBQUcsT0FBT0EsR0FBRVUsS0FBS291QixHQUFHLEVBQUVHLEdBQUcvdUIsR0FBRTh1QixHQUFHL3VCLEdBQUVELEdBQUUrdUIsR0FBRyxLQUFLRyxHQUFHLEVBQUVDLEdBQUcsS0FBS0MsR0FBRyxFQUFFeHhCLEdBQUVSLEVBQUUsT0FBcUJTLEVBQUUsU0FBU2l5QixLQUFLakIsR0FBR3p2QixRQUFReXdCLEdBQUdmLEdBQUcsRUFBRUcsR0FBRy91QixHQUFFOHVCLEdBQUcvdUIsR0FBRUQsR0FBRSt1QixHQUFHLEtBQUtHLEdBQUcsRUFBRUMsR0FBRyxLQUFLQyxHQUFHLEVBQUVDLElBQUcsRUFBR0MsR0FBRyxLQUFLQyxHQUFHLEVBQy9lLFNBQVNRLEtBQUssSUFBSW55QixFQUFFLENBQUM4ckIsY0FBYyxLQUFLOEIsVUFBVSxLQUFLd0UsTUFBTSxLQUFLQyxXQUFXLEtBQUt2dkIsS0FBSyxNQUFpQyxPQUEzQixPQUFPUixHQUFFOHVCLEdBQUc5dUIsR0FBRXRDLEVBQUVzQyxHQUFFQSxHQUFFUSxLQUFLOUMsRUFBU3NDLEdBQUUsU0FBU2d3QixLQUFLLEdBQUcsT0FBT2pCLEdBQVFBLElBQUwvdUIsR0FBRSt1QixJQUFRdnVCLEtBQVNULEdBQUUsUUFBTkQsR0FBRUMsSUFBYUQsR0FBRVUsS0FBSyxTQUFTLENBQUMsT0FBT1QsSUFBRTdDLEVBQUUsT0FBa0IsSUFBSVEsRUFBRSxDQUFDOHJCLGVBQVgxcEIsR0FBRUMsSUFBeUJ5cEIsY0FBYzhCLFVBQVV4ckIsR0FBRXdyQixVQUFVd0UsTUFBTWh3QixHQUFFZ3dCLE1BQU1DLFdBQVdqd0IsR0FBRWl3QixXQUFXdnZCLEtBQUssTUFBTVIsR0FBRSxPQUFPQSxHQUFFOHVCLEdBQUdweEIsRUFBRXNDLEdBQUVRLEtBQUs5QyxFQUFFcUMsR0FBRUQsR0FBRVUsS0FBSyxPQUFPUixHQUFFLFNBQVNpd0IsR0FBR3Z5QixFQUFFQyxHQUFHLE1BQU0sbUJBQW9CQSxFQUFFQSxFQUFFRCxHQUFHQyxFQUNqYixTQUFTdXlCLEdBQUd4eUIsR0FBRyxJQUFJQyxFQUFFcXlCLEtBQUsvbkMsRUFBRTBWLEVBQUVteUIsTUFBdUQsR0FBakQsT0FBTzduQyxHQUFFaVYsRUFBRSxPQUFjalYsRUFBRWtvQyxvQkFBb0J6eUIsRUFBSyxFQUFFMnhCLEdBQUcsQ0FBQyxJQUFJbm5DLEVBQUVELEVBQUVtb0MsU0FBUyxHQUFHLE9BQU9oQixHQUFHLENBQUMsSUFBSTNpQyxFQUFFMmlDLEdBQUczbUMsSUFBSVIsR0FBRyxRQUFHLElBQVN3RSxFQUFFLENBQUMyaUMsR0FBRzdCLE9BQU90bEMsR0FBRyxJQUFJNlYsRUFBRUgsRUFBRTZyQixjQUFjLEdBQUcxckIsRUFBRUosRUFBRUksRUFBRXJSLEVBQUU0akMsUUFBUTVqQyxFQUFFQSxFQUFFK1QsV0FBVyxPQUFPL1QsR0FBaUgsT0FBOUd5cUIsR0FBR3BaLEVBQUVILEVBQUU2ckIsaUJBQWlCOEcsSUFBRyxHQUFJM3lCLEVBQUU2ckIsY0FBYzFyQixFQUFFSCxFQUFFb3lCLGFBQWE5bkMsRUFBRXNvQyxPQUFPNXlCLEVBQUUydEIsVUFBVXh0QixHQUFHN1YsRUFBRXVvQyxrQkFBa0IxeUIsRUFBUSxDQUFDQSxFQUFFNVYsSUFBSSxNQUFNLENBQUN5VixFQUFFNnJCLGNBQWN0aEMsR0FBR0EsRUFBRUQsRUFBRXNvQyxLQUFLLElBQUkzeUIsRUFBRUQsRUFBRW95QixXQUE0RixHQUFqRmp5QixFQUFFSCxFQUFFMnRCLFVBQVUsT0FBTzF0QixHQUFHLE9BQU8xVixJQUFJQSxFQUFFc1ksS0FBSyxNQUFNdFksRUFBRTBWLEVBQUU0QyxNQUFNdFksRUFBRSxPQUFPQSxFQUFFQSxFQUFFc1ksS0FBSyxLQUFRLE9BQ2hmdFksRUFBRSxDQUFDLElBQUkyVixFQUFFcFIsRUFBRSxLQUFLNUUsRUFBRUssRUFBRTBVLEdBQUUsRUFBRyxFQUFFLENBQUMsSUFBSTVVLEVBQUVILEVBQUVraUMsZUFBZS9oQyxFQUFFNG1DLElBQUloeUIsSUFBSUEsR0FBRSxFQUFHaUIsRUFBRUQsRUFBRW5SLEVBQUVxUixHQUFHOVYsRUFBRWduQyxLQUFLQSxHQUFHaG5DLElBQUk4VixFQUFFalcsRUFBRTRvQyxlQUFlL3lCLEVBQUU3VixFQUFFNm9DLFdBQVdoekIsRUFBRUksRUFBRWpXLEVBQUV3b0MsUUFBUXp5QixFQUFFL1YsRUFBRUEsRUFBRUEsRUFBRTJZLFdBQVcsT0FBTzNZLEdBQUdBLElBQUlLLEdBQUcwVSxJQUFJaUIsRUFBRUQsRUFBRW5SLEVBQUVxUixHQUFHb1osR0FBR3BaLEVBQUVILEVBQUU2ckIsaUJBQWlCOEcsSUFBRyxHQUFJM3lCLEVBQUU2ckIsY0FBYzFyQixFQUFFSCxFQUFFb3lCLFdBQVdseUIsRUFBRUYsRUFBRTJ0QixVQUFVNytCLEVBQUV4RSxFQUFFdW9DLGtCQUFrQjF5QixFQUFFLE1BQU0sQ0FBQ0gsRUFBRTZyQixjQUFjdmhDLEVBQUVtb0MsVUFDdlQsU0FBU08sR0FBR2p6QixFQUFFQyxFQUFFMVYsRUFBRUMsR0FBd00sT0FBck13VixFQUFFLENBQUMvSixJQUFJK0osRUFBRXhVLE9BQU95VSxFQUFFaXpCLFFBQVEzb0MsRUFBRTRvQyxLQUFLM29DLEVBQUVzWSxLQUFLLE1BQU0sT0FBT3l1QixJQUFJQSxHQUFHLENBQUN0RixXQUFXLE9BQVNBLFdBQVdqc0IsRUFBRThDLEtBQUs5QyxFQUFvQixRQUFoQkMsRUFBRXN4QixHQUFHdEYsWUFBb0JzRixHQUFHdEYsV0FBV2pzQixFQUFFOEMsS0FBSzlDLEdBQUd6VixFQUFFMFYsRUFBRTZDLEtBQUs3QyxFQUFFNkMsS0FBSzlDLEVBQUVBLEVBQUU4QyxLQUFLdlksRUFBRWduQyxHQUFHdEYsV0FBV2pzQixHQUFXQSxFQUFFLFNBQVNvekIsR0FBR3B6QixFQUFFQyxFQUFFMVYsRUFBRUMsR0FBRyxJQUFJdUUsRUFBRW9qQyxLQUFLWCxJQUFJeHhCLEVBQUVqUixFQUFFKzhCLGNBQWNtSCxHQUFHaHpCLEVBQUUxVixPQUFFLE9BQU8sSUFBU0MsRUFBRSxLQUFLQSxHQUN2VCxTQUFTNm9DLEdBQUdyekIsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUcsSUFBSXVFLEVBQUV1akMsS0FBSzluQyxPQUFFLElBQVNBLEVBQUUsS0FBS0EsRUFBRSxJQUFJNFYsT0FBRSxFQUFPLEdBQUcsT0FBT2dDLEdBQUUsQ0FBQyxJQUFJbEMsRUFBRWtDLEdBQUUwcEIsY0FBMEIsR0FBWjFyQixFQUFFRixFQUFFZ3pCLFFBQVcsT0FBTzFvQyxHQUFHcW5DLEdBQUdybkMsRUFBRTBWLEVBQUVpekIsTUFBb0IsWUFBYkYsR0FBR3hDLEdBQUdsbUMsRUFBRTZWLEVBQUU1VixHQUFXZ25DLElBQUl4eEIsRUFBRWpSLEVBQUUrOEIsY0FBY21ILEdBQUdoekIsRUFBRTFWLEVBQUU2VixFQUFFNVYsR0FBRyxTQUFTOG9DLEdBQUd0ekIsRUFBRUMsR0FBRyxNQUFHLG1CQUFvQkEsR0FBU0QsRUFBRUEsSUFBSUMsRUFBRUQsR0FBRyxXQUFXQyxFQUFFLFFBQVUsTUFBT0EsR0FBcUJELEVBQUVBLElBQUlDLEVBQUV1QixRQUFReEIsRUFBRSxXQUFXQyxFQUFFdUIsUUFBUSxZQUF0RSxFQUE0RSxTQUFTK3hCLE1BQ3ZXLFNBQVNDLEdBQUd4ekIsRUFBRUMsRUFBRTFWLEdBQUcsR0FBR29uQyxJQUFVbnlCLEVBQUUsT0FBTyxJQUFJaFYsRUFBRXdWLEVBQUV1WixVQUFVLEdBQUd2WixJQUFJbXhCLElBQUksT0FBTzNtQyxHQUFHQSxJQUFJMm1DLEdBQUcsR0FBR00sSUFBRyxFQUFHenhCLEVBQUUsQ0FBQ3FzQixlQUFlNkUsR0FBR3lCLE9BQU9wb0MsRUFBRXdvQyxhQUFhLEtBQUtDLFdBQVcsS0FBS2x3QixLQUFLLE1BQU0sT0FBTzR1QixLQUFLQSxHQUFHLElBQUk5QixVQUFpQixLQUFacmxDLEVBQUVtbkMsR0FBRzNtQyxJQUFJa1YsSUFBY3l4QixHQUFHdmdCLElBQUlsUixFQUFFRCxPQUFPLENBQUMsSUFBSUMsRUFBRTFWLEVBQUUsT0FBTzBWLEVBQUU2QyxNQUFNN0MsRUFBRUEsRUFBRTZDLEtBQUs3QyxFQUFFNkMsS0FBSzlDLE1BQU0sQ0FBQ291QixLQUFLLElBQUlyL0IsRUFBRWcvQixLQUFtQjN0QixFQUFFLENBQUNpc0IsZUFBakJ0OUIsRUFBRWsvQixHQUFHbC9CLEVBQUVpUixHQUEyQjJ5QixPQUFPcG9DLEVBQUV3b0MsYUFBYSxLQUFLQyxXQUFXLEtBQUtsd0IsS0FBSyxNQUFNNUMsRUFBRUQsRUFBRTR5QixLQUFLLEdBQUcsT0FBTzN5QixFQUFFRSxFQUFFMEMsS0FBSzFDLE1BQU0sQ0FBQyxJQUFJRCxFQUFFRCxFQUFFNEMsS0FBSyxPQUFPM0MsSUFBSUMsRUFBRTBDLEtBQUszQyxHQUFHRCxFQUFFNEMsS0FBSzFDLEVBQVcsR0FBVEgsRUFBRTR5QixLQUFLenlCLEVBQUssSUFBSUosRUFBRXFzQixpQkFBaUIsT0FDbGY3aEMsR0FBRyxJQUFJQSxFQUFFNmhDLGlCQUEwQyxRQUF4QjdoQyxFQUFFeVYsRUFBRXd5QixxQkFBOEIsSUFBSSxJQUFJdG9DLEVBQUU4VixFQUFFNnlCLGtCQUFrQjV6QixFQUFFMVUsRUFBRUwsRUFBRUksR0FBbUMsR0FBaEM2VixFQUFFMnlCLGFBQWF2b0MsRUFBRTRWLEVBQUU0eUIsV0FBVzl6QixFQUFLc2EsR0FBR3RhLEVBQUUvVSxHQUFHLE9BQU8sTUFBTUcsSUFBYWdrQyxHQUFHdHVCLEVBQUVqUixJQUM5SyxJQUFJa2pDLEdBQUcsQ0FBQ3dCLFlBQVkxeEIsR0FBRTZDLFlBQVlndEIsR0FBRy9zQixXQUFXK3NCLEdBQUc5c0IsVUFBVThzQixHQUFHN3NCLG9CQUFvQjZzQixHQUFHM3NCLGdCQUFnQjJzQixHQUFHMXNCLFFBQVEwc0IsR0FBR3pzQixXQUFXeXNCLEdBQUd4c0IsT0FBT3dzQixHQUFHdnNCLFNBQVN1c0IsR0FBRzVzQixjQUFjNHNCLElBQUlHLEdBQUcsQ0FBQzBCLFlBQVkxeEIsR0FBRTZDLFlBQVksU0FBUzVFLEVBQUVDLEdBQTRDLE9BQXpDa3lCLEtBQUtyRyxjQUFjLENBQUM5ckIsT0FBRSxJQUFTQyxFQUFFLEtBQUtBLEdBQVVELEdBQUc2RSxXQUFXOUMsR0FBRStDLFVBQVUsU0FBUzlFLEVBQUVDLEdBQUcsT0FBT216QixHQUFHLElBQUlwQyxHQUFHRCxHQUFHL3dCLEVBQUVDLElBQUk4RSxvQkFBb0IsU0FBUy9FLEVBQUVDLEVBQUUxVixHQUE2QyxPQUExQ0EsRUFBRSxNQUFPQSxFQUFjQSxFQUFFOEMsT0FBTyxDQUFDMlMsSUFBSSxLQUFZb3pCLEdBQUcsRUFBRXpDLEdBQUdHLEdBQUd3QyxHQUFHNW5DLEtBQUssS0FBS3VVLEVBQUVELEdBQUd6VixJQUFJMGEsZ0JBQWdCLFNBQVNqRixFQUFFQyxHQUFHLE9BQU9tekIsR0FBRyxFQUFFekMsR0FBR0csR0FBRzl3QixFQUFFQyxJQUNqZmlGLFFBQVEsU0FBU2xGLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUU0bkMsS0FBcUQsT0FBaERseUIsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEVBQUVELEVBQUVBLElBQUl6VixFQUFFdWhDLGNBQWMsQ0FBQzlyQixFQUFFQyxHQUFVRCxHQUFHbUYsV0FBVyxTQUFTbkYsRUFBRUMsRUFBRTFWLEdBQUcsSUFBSUMsRUFBRTJuQyxLQUFxSyxPQUFoS2x5QixPQUFFLElBQVMxVixFQUFFQSxFQUFFMFYsR0FBR0EsRUFBRXpWLEVBQUVzaEMsY0FBY3RoQyxFQUFFb2pDLFVBQVUzdEIsRUFBZ0ZELEdBQTlFQSxFQUFFeFYsRUFBRTRuQyxNQUFNLENBQUNTLEtBQUssS0FBS0gsU0FBUyxLQUFLRCxvQkFBb0J6eUIsRUFBRTh5QixrQkFBa0I3eUIsSUFBT3l5QixTQUFTYyxHQUFHOW5DLEtBQUssS0FBS3lsQyxHQUFHbnhCLEdBQVMsQ0FBQ3hWLEVBQUVzaEMsY0FBYzlyQixJQUFJb0YsT0FBTyxTQUFTcEYsR0FBNEIsT0FBZEEsRUFBRSxDQUFDd0IsUUFBUXhCLEdBQWhCbXlCLEtBQTRCckcsY0FBYzlyQixHQUFHcUYsU0FBUyxTQUFTckYsR0FBRyxJQUFJQyxFQUFFa3lCLEtBQ2pWLE1BRHNWLG1CQUFvQm55QixJQUFJQSxFQUFFQSxLQUFLQyxFQUFFNnJCLGNBQWM3ckIsRUFBRTJ0QixVQUFVNXRCLEVBQ2piQSxHQURtYkEsRUFBRUMsRUFBRW15QixNQUFNLENBQUNTLEtBQUssS0FBS0gsU0FBUyxLQUM3ZkQsb0JBQW9CRixHQUFHTyxrQkFBa0I5eUIsSUFBTzB5QixTQUFTYyxHQUFHOW5DLEtBQUssS0FBS3lsQyxHQUFHbnhCLEdBQVMsQ0FBQ0MsRUFBRTZyQixjQUFjOXJCLElBQUlnRixjQUFjdXVCLElBQUl2QixHQUFHLENBQUN5QixZQUFZMXhCLEdBQUU2QyxZQUFZLFNBQVM1RSxFQUFFQyxHQUFHLElBQUkxVixFQUFFK25DLEtBQUtyeUIsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEVBQUUsSUFBSXpWLEVBQUVELEVBQUV1aEMsY0FBYyxPQUFHLE9BQU90aEMsR0FBRyxPQUFPeVYsR0FBRzR4QixHQUFHNXhCLEVBQUV6VixFQUFFLElBQVdBLEVBQUUsSUFBR0QsRUFBRXVoQyxjQUFjLENBQUM5ckIsRUFBRUMsR0FBVUQsSUFBRzZFLFdBQVc5QyxHQUFFK0MsVUFBVSxTQUFTOUUsRUFBRUMsR0FBRyxPQUFPb3pCLEdBQUcsSUFBSXJDLEdBQUdELEdBQUcvd0IsRUFBRUMsSUFBSThFLG9CQUFvQixTQUFTL0UsRUFBRUMsRUFBRTFWLEdBQTZDLE9BQTFDQSxFQUFFLE1BQU9BLEVBQWNBLEVBQUU4QyxPQUFPLENBQUMyUyxJQUFJLEtBQVlxekIsR0FBRyxFQUFFMUMsR0FBR0csR0FBR3dDLEdBQUc1bkMsS0FBSyxLQUFLdVUsRUFBRUQsR0FBR3pWLElBQUkwYSxnQkFBZ0IsU0FBU2pGLEVBQ3RmQyxHQUFHLE9BQU9vekIsR0FBRyxFQUFFMUMsR0FBR0csR0FBRzl3QixFQUFFQyxJQUFJaUYsUUFBUSxTQUFTbEYsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRStuQyxLQUFLcnlCLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxFQUFFLElBQUl6VixFQUFFRCxFQUFFdWhDLGNBQWMsT0FBRyxPQUFPdGhDLEdBQUcsT0FBT3lWLEdBQUc0eEIsR0FBRzV4QixFQUFFelYsRUFBRSxJQUFXQSxFQUFFLElBQUd3VixFQUFFQSxJQUFJelYsRUFBRXVoQyxjQUFjLENBQUM5ckIsRUFBRUMsR0FBVUQsSUFBR21GLFdBQVdxdEIsR0FBR3B0QixPQUFPLFdBQVcsT0FBT2t0QixLQUFLeEcsZUFBZXptQixTQUFTLFNBQVNyRixHQUFHLE9BQU93eUIsR0FBR0QsS0FBT3Z0QixjQUFjdXVCLElBQUlHLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxJQUFHLEVBQ2hVLFNBQVNDLEdBQUc3ekIsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRW1YLEdBQUUsRUFBRSxLQUFLLEtBQUssR0FBR25YLEVBQUVvaEMsWUFBWSxVQUFVcGhDLEVBQUVnSCxLQUFLLFVBQVVoSCxFQUFFbWUsVUFBVXpJLEVBQUUxVixFQUFFOGUsT0FBT3JKLEVBQUV6VixFQUFFcXZCLFVBQVUsRUFBRSxPQUFPNVosRUFBRWlzQixZQUFZanNCLEVBQUVpc0IsV0FBV0UsV0FBVzVoQyxFQUFFeVYsRUFBRWlzQixXQUFXMWhDLEdBQUd5VixFQUFFa3NCLFlBQVlsc0IsRUFBRWlzQixXQUFXMWhDLEVBQUUsU0FBU3VwQyxHQUFHOXpCLEVBQUVDLEdBQUcsT0FBT0QsRUFBRS9KLEtBQUssS0FBSyxFQUFFLElBQUkxTCxFQUFFeVYsRUFBRXpPLEtBQXlFLE9BQU8sUUFBM0UwTyxFQUFFLElBQUlBLEVBQUU0USxVQUFVdG1CLEVBQUV3ZixnQkFBZ0I5SixFQUFFd1EsU0FBUzFHLGNBQWMsS0FBSzlKLEtBQW1CRCxFQUFFMEksVUFBVXpJLEdBQUUsR0FBTyxLQUFLLEVBQUUsT0FBb0QsUUFBN0NBLEVBQUUsS0FBS0QsRUFBRTRyQixjQUFjLElBQUkzckIsRUFBRTRRLFNBQVMsS0FBSzVRLEtBQVlELEVBQUUwSSxVQUFVekksR0FBRSxHQUFPLEtBQUssR0FBWSxRQUFRLE9BQU0sR0FDMWUsU0FBUzh6QixHQUFHL3pCLEdBQUcsR0FBRzR6QixHQUFHLENBQUMsSUFBSTN6QixFQUFFMHpCLEdBQUcsR0FBRzF6QixFQUFFLENBQUMsSUFBSTFWLEVBQUUwVixFQUFFLElBQUk2ekIsR0FBRzl6QixFQUFFQyxHQUFHLENBQVMsS0FBUkEsRUFBRW1xQixHQUFHNy9CLE1BQVd1cEMsR0FBRzl6QixFQUFFQyxHQUE4QixPQUExQkQsRUFBRTRaLFdBQVcsRUFBRWdhLElBQUcsT0FBR0YsR0FBRzF6QixHQUFTNnpCLEdBQUdILEdBQUducEMsR0FBR21wQyxHQUFHMXpCLEVBQUUyekIsR0FBR3RKLEdBQUdwcUIsUUFBUUQsRUFBRTRaLFdBQVcsRUFBRWdhLElBQUcsRUFBR0YsR0FBRzF6QixHQUFHLFNBQVNnMEIsR0FBR2gwQixHQUFHLElBQUlBLEVBQUVBLEVBQUVxSixPQUFPLE9BQU9ySixHQUFHLElBQUlBLEVBQUUvSixLQUFLLElBQUkrSixFQUFFL0osS0FBSyxLQUFLK0osRUFBRS9KLEtBQUsrSixFQUFFQSxFQUFFcUosT0FBT3FxQixHQUFHMXpCLEVBQUUsU0FBU2kwQixHQUFHajBCLEdBQUcsR0FBR0EsSUFBSTB6QixHQUFHLE9BQU0sRUFBRyxJQUFJRSxHQUFHLE9BQU9JLEdBQUdoMEIsR0FBRzR6QixJQUFHLEdBQUcsRUFBRyxJQUFJM3pCLEVBQUVELEVBQUV6TyxLQUFLLEdBQUcsSUFBSXlPLEVBQUUvSixLQUFLLFNBQVNnSyxHQUFHLFNBQVNBLElBQUl5cEIsR0FBR3pwQixFQUFFRCxFQUFFZ3NCLGVBQWUsSUFBSS9yQixFQUFFMHpCLEdBQUcxekIsR0FBRzR6QixHQUFHN3pCLEVBQUVDLEdBQUdBLEVBQUVtcUIsR0FBR25xQixHQUFvQyxPQUFqQyt6QixHQUFHaDBCLEdBQUcyekIsR0FBR0QsR0FBR3RKLEdBQUdwcUIsRUFBRTBJLFdBQVcsTUFBVyxFQUFHLFNBQVN3ckIsS0FBS1AsR0FBR0QsR0FBRyxLQUFLRSxJQUFHLEVBQ2hmLElBQUlPLEdBQUd4aUIsR0FBRzFMLGtCQUFrQjJzQixJQUFHLEVBQUcsU0FBU2h3QixHQUFFNUMsRUFBRUMsRUFBRTFWLEVBQUVDLEdBQUd5VixFQUFFdkYsTUFBTSxPQUFPc0YsRUFBRSt2QixHQUFHOXZCLEVBQUUsS0FBSzFWLEVBQUVDLEdBQUdzbEMsR0FBRzd2QixFQUFFRCxFQUFFdEYsTUFBTW5RLEVBQUVDLEdBQUcsU0FBUzRwQyxHQUFHcDBCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFdUUsR0FBR3hFLEVBQUVBLEVBQUV5VSxPQUFPLElBQUlvQixFQUFFSCxFQUFFMkIsSUFBOEIsT0FBMUJ5eUIsR0FBR3AwQixFQUFFbFIsR0FBR3ZFLEVBQUVzbkMsR0FBRzl4QixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRTRWLEVBQUVyUixHQUFNLE9BQU9pUixHQUFJNHlCLElBQTRHM3lCLEVBQUUyWixXQUFXLEVBQUVoWCxHQUFFNUMsRUFBRUMsRUFBRXpWLEVBQUV1RSxHQUFVa1IsRUFBRXZGLFFBQXJJdUYsRUFBRThyQixZQUFZL3JCLEVBQUUrckIsWUFBWTlyQixFQUFFMlosWUFBWSxJQUFJNVosRUFBRXFzQixnQkFBZ0J0OUIsSUFBSWlSLEVBQUVxc0IsZUFBZSxHQUFHaUksR0FBR3QwQixFQUFFQyxFQUFFbFIsSUFDdlMsU0FBU3dsQyxHQUFHdjBCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFdUUsRUFBRXFSLEdBQUcsR0FBRyxPQUFPSixFQUFFLENBQUMsSUFBSUUsRUFBRTNWLEVBQUVnSCxLQUFLLE1BQUcsbUJBQW9CMk8sR0FBSW9zQixHQUFHcHNCLFNBQUksSUFBU0EsRUFBRThCLGNBQWMsT0FBT3pYLEVBQUVvYSxjQUFTLElBQVNwYSxFQUFFeVgsZUFBc0RoQyxFQUFFd3NCLEdBQUdqaUMsRUFBRWdILEtBQUssS0FBSy9HLEVBQUUsS0FBS3lWLEVBQUU1VSxLQUFLK1UsSUFBS3dCLElBQUkzQixFQUFFMkIsSUFBSTVCLEVBQUVxSixPQUFPcEosRUFBU0EsRUFBRXZGLE1BQU1zRixJQUExR0MsRUFBRWhLLElBQUksR0FBR2dLLEVBQUUxTyxLQUFLMk8sRUFBRXMwQixHQUFHeDBCLEVBQUVDLEVBQUVDLEVBQUUxVixFQUFFdUUsRUFBRXFSLElBQXVGLE9BQVZGLEVBQUVGLEVBQUV0RixNQUFTM0wsRUFBRXFSLElBQUlyUixFQUFFbVIsRUFBRThyQixlQUEwQnpoQyxFQUFFLFFBQWRBLEVBQUVBLEVBQUVvYSxTQUFtQnBhLEVBQUVtdkIsSUFBSzNxQixFQUFFdkUsSUFBSXdWLEVBQUU0QixNQUFNM0IsRUFBRTJCLEtBQVkweUIsR0FBR3QwQixFQUFFQyxFQUFFRyxJQUFHSCxFQUFFMlosV0FBVyxHQUFFNVosRUFBRXVzQixHQUFHcnNCLEVBQUUxVixJQUFPb1gsSUFBSTNCLEVBQUUyQixJQUFJNUIsRUFBRXFKLE9BQU9wSixFQUFTQSxFQUFFdkYsTUFBTXNGLEdBQ3JiLFNBQVN3MEIsR0FBR3gwQixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRXVFLEVBQUVxUixHQUFHLE9BQU8sT0FBT0osR0FBRzBaLEdBQUcxWixFQUFFZ3NCLGNBQWN4aEMsSUFBSXdWLEVBQUU0QixNQUFNM0IsRUFBRTJCLE1BQU1neEIsSUFBRyxFQUFHN2pDLEVBQUVxUixHQUFHazBCLEdBQUd0MEIsRUFBRUMsRUFBRUcsR0FBR3EwQixHQUFHejBCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFNFYsR0FBRyxTQUFTczBCLEdBQUcxMEIsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRTBWLEVBQUUyQixLQUFPLE9BQU81QixHQUFHLE9BQU96VixHQUFHLE9BQU95VixHQUFHQSxFQUFFNEIsTUFBTXJYLEtBQUUwVixFQUFFMlosV0FBVyxLQUFJLFNBQVM2YSxHQUFHejBCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFdUUsR0FBRyxJQUFJcVIsRUFBRXFCLEdBQUVsWCxHQUFHa2dDLEdBQUdycEIsR0FBRUksUUFBNEMsT0FBcENwQixFQUFFc3FCLEdBQUd6cUIsRUFBRUcsR0FBR2kwQixHQUFHcDBCLEVBQUVsUixHQUFHeEUsRUFBRXVuQyxHQUFHOXhCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFNFYsRUFBRXJSLEdBQU0sT0FBT2lSLEdBQUk0eUIsSUFBNEczeUIsRUFBRTJaLFdBQVcsRUFBRWhYLEdBQUU1QyxFQUFFQyxFQUFFMVYsRUFBRXdFLEdBQVVrUixFQUFFdkYsUUFBckl1RixFQUFFOHJCLFlBQVkvckIsRUFBRStyQixZQUFZOXJCLEVBQUUyWixZQUFZLElBQUk1WixFQUFFcXNCLGdCQUFnQnQ5QixJQUFJaVIsRUFBRXFzQixlQUFlLEdBQUdpSSxHQUFHdDBCLEVBQUVDLEVBQUVsUixJQUN2WixTQUFTNGxDLEdBQUczMEIsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxHQUFHLEdBQUcwUyxHQUFFbFgsR0FBRyxDQUFDLElBQUk2VixHQUFFLEVBQUdnckIsR0FBR25yQixRQUFRRyxHQUFFLEVBQVcsR0FBUmkwQixHQUFHcDBCLEVBQUVsUixHQUFNLE9BQU9rUixFQUFFeUksVUFBVSxPQUFPMUksSUFBSUEsRUFBRXVaLFVBQVUsS0FBS3RaLEVBQUVzWixVQUFVLEtBQUt0WixFQUFFMlosV0FBVyxHQUFHK1UsR0FBRzF1QixFQUFFMVYsRUFBRUMsR0FBS3drQyxHQUFHL3VCLEVBQUUxVixFQUFFQyxFQUFFdUUsR0FBR3ZFLEdBQUUsT0FBUSxHQUFHLE9BQU93VixFQUFFLENBQUMsSUFBSUUsRUFBRUQsRUFBRXlJLFVBQVV2SSxFQUFFRixFQUFFK3JCLGNBQWM5ckIsRUFBRTlELE1BQU0rRCxFQUFFLElBQUloVyxFQUFFK1YsRUFBRVksUUFBUTVCLEVBQUUzVSxFQUFFcWtDLFlBQVksaUJBQWtCMXZCLEdBQUcsT0FBT0EsRUFBRUEsRUFBRTZDLEdBQUU3QyxHQUF3QkEsRUFBRXdyQixHQUFHenFCLEVBQXpCZixFQUFFdUMsR0FBRWxYLEdBQUdrZ0MsR0FBR3JwQixHQUFFSSxTQUFtQixJQUFJbFgsRUFBRUMsRUFBRTJrQyx5QkFBeUJsakMsRUFBRSxtQkFBb0IxQixHQUFHLG1CQUFvQjRWLEVBQUVpdkIsd0JBQXdCbmpDLEdBQUcsbUJBQW9Ca1UsRUFBRTZ1QixrQ0FDdmQsbUJBQW9CN3VCLEVBQUU0dUIsNEJBQTRCM3VCLElBQUkzVixHQUFHTCxJQUFJK1UsSUFBSTJ2QixHQUFHNXVCLEVBQUVDLEVBQUUxVixFQUFFMFUsR0FBRzAxQixJQUFHLEVBQUcsSUFBSXhwQyxFQUFFNlUsRUFBRTZyQixjQUFjM2hDLEVBQUUrVixFQUFFOUcsTUFBTWhPLEVBQUUsSUFBSXlVLEVBQUVJLEVBQUU4ckIsWUFBWSxPQUFPbHNCLElBQUlvdkIsR0FBR2h2QixFQUFFSixFQUFFclYsRUFBRTBWLEVBQUVuUixHQUFHNUUsRUFBRThWLEVBQUU2ckIsZUFBZTNyQixJQUFJM1YsR0FBR1ksSUFBSWpCLEdBQUdvWCxHQUFFQyxTQUFTb3pCLElBQUksbUJBQW9CdHFDLElBQUlxakMsR0FBRzF0QixFQUFFMVYsRUFBRUQsRUFBRUUsR0FBR0wsRUFBRThWLEVBQUU2ckIsZ0JBQWdCM3JCLEVBQUV5MEIsSUFBSW5HLEdBQUd4dUIsRUFBRTFWLEVBQUU0VixFQUFFM1YsRUFBRVksRUFBRWpCLEVBQUUrVSxLQUFLbFQsR0FBRyxtQkFBb0JrVSxFQUFFa3ZCLDJCQUEyQixtQkFBb0JsdkIsRUFBRW12QixxQkFBcUIsbUJBQW9CbnZCLEVBQUVtdkIsb0JBQW9CbnZCLEVBQUVtdkIscUJBQXFCLG1CQUFvQm52QixFQUFFa3ZCLDJCQUMxZGx2QixFQUFFa3ZCLDZCQUE2QixtQkFBb0JsdkIsRUFBRW92QixvQkFBb0JydkIsRUFBRTJaLFdBQVcsS0FBSyxtQkFBb0IxWixFQUFFb3ZCLG9CQUFvQnJ2QixFQUFFMlosV0FBVyxHQUFHM1osRUFBRStyQixjQUFjeGhDLEVBQUV5VixFQUFFNnJCLGNBQWMzaEMsR0FBRytWLEVBQUU5RCxNQUFNNVIsRUFBRTBWLEVBQUU5RyxNQUFNalAsRUFBRStWLEVBQUVZLFFBQVE1QixFQUFFMVUsRUFBRTJWLElBQUksbUJBQW9CRCxFQUFFb3ZCLG9CQUFvQnJ2QixFQUFFMlosV0FBVyxHQUFHcHZCLEdBQUUsUUFBUzBWLEVBQUVELEVBQUV5SSxVQUFVdkksRUFBRUYsRUFBRStyQixjQUFjOXJCLEVBQUU5RCxNQUFNNkQsRUFBRTFPLE9BQU8wTyxFQUFFMHJCLFlBQVl4ckIsRUFBRXdCLEdBQUUxQixFQUFFMU8sS0FBSzRPLEdBQUdoVyxFQUFFK1YsRUFBRVksUUFBd0IsaUJBQWhCNUIsRUFBRTNVLEVBQUVxa0MsY0FBaUMsT0FBTzF2QixFQUFFQSxFQUFFNkMsR0FBRTdDLEdBQXdCQSxFQUFFd3JCLEdBQUd6cUIsRUFBekJmLEVBQUV1QyxHQUFFbFgsR0FBR2tnQyxHQUFHcnBCLEdBQUVJLFVBQWlEeFYsRUFBRSxtQkFBaEMxQixFQUFFQyxFQUFFMmtDLDJCQUM3YyxtQkFBb0JodkIsRUFBRWl2QiwwQkFBMEIsbUJBQW9CanZCLEVBQUU2dUIsa0NBQWtDLG1CQUFvQjd1QixFQUFFNHVCLDRCQUE0QjN1QixJQUFJM1YsR0FBR0wsSUFBSStVLElBQUkydkIsR0FBRzV1QixFQUFFQyxFQUFFMVYsRUFBRTBVLEdBQUcwMUIsSUFBRyxFQUFHenFDLEVBQUU4VixFQUFFNnJCLGNBQWMxZ0MsRUFBRThVLEVBQUU5RyxNQUFNalAsRUFBa0IsUUFBaEIwVixFQUFFSSxFQUFFOHJCLGVBQXVCa0QsR0FBR2h2QixFQUFFSixFQUFFclYsRUFBRTBWLEVBQUVuUixHQUFHM0QsRUFBRTZVLEVBQUU2ckIsZUFBZTNyQixJQUFJM1YsR0FBR0wsSUFBSWlCLEdBQUdtVyxHQUFFQyxTQUFTb3pCLElBQUksbUJBQW9CdHFDLElBQUlxakMsR0FBRzF0QixFQUFFMVYsRUFBRUQsRUFBRUUsR0FBR1ksRUFBRTZVLEVBQUU2ckIsZ0JBQWdCeGhDLEVBQUVzcUMsSUFBSW5HLEdBQUd4dUIsRUFBRTFWLEVBQUU0VixFQUFFM1YsRUFBRUwsRUFBRWlCLEVBQUU4VCxLQUFLbFQsR0FBRyxtQkFBb0JrVSxFQUFFMjBCLDRCQUE0QixtQkFBb0IzMEIsRUFBRTQwQixzQkFBc0IsbUJBQ3hlNTBCLEVBQUU0MEIscUJBQXFCNTBCLEVBQUU0MEIsb0JBQW9CdHFDLEVBQUVZLEVBQUU4VCxHQUFHLG1CQUFvQmdCLEVBQUUyMEIsNEJBQTRCMzBCLEVBQUUyMEIsMkJBQTJCcnFDLEVBQUVZLEVBQUU4VCxJQUFJLG1CQUFvQmdCLEVBQUU2MEIscUJBQXFCOTBCLEVBQUUyWixXQUFXLEdBQUcsbUJBQW9CMVosRUFBRWl2QiwwQkFBMEJsdkIsRUFBRTJaLFdBQVcsT0FBTyxtQkFBb0IxWixFQUFFNjBCLG9CQUFvQjUwQixJQUFJSCxFQUFFZ3NCLGVBQWU3aEMsSUFBSTZWLEVBQUU4ckIsZ0JBQWdCN3JCLEVBQUUyWixXQUFXLEdBQUcsbUJBQW9CMVosRUFBRWl2Qix5QkFBeUJodkIsSUFBSUgsRUFBRWdzQixlQUFlN2hDLElBQUk2VixFQUFFOHJCLGdCQUFnQjdyQixFQUFFMlosV0FBVyxLQUFLM1osRUFBRStyQixjQUFjeGhDLEVBQUV5VixFQUFFNnJCLGNBQ3RmMWdDLEdBQUc4VSxFQUFFOUQsTUFBTTVSLEVBQUUwVixFQUFFOUcsTUFBTWhPLEVBQUU4VSxFQUFFWSxRQUFRNUIsRUFBRTFVLEVBQUVGLElBQUksbUJBQW9CNFYsRUFBRTYwQixvQkFBb0I1MEIsSUFBSUgsRUFBRWdzQixlQUFlN2hDLElBQUk2VixFQUFFOHJCLGdCQUFnQjdyQixFQUFFMlosV0FBVyxHQUFHLG1CQUFvQjFaLEVBQUVpdkIseUJBQXlCaHZCLElBQUlILEVBQUVnc0IsZUFBZTdoQyxJQUFJNlYsRUFBRThyQixnQkFBZ0I3ckIsRUFBRTJaLFdBQVcsS0FBS3B2QixHQUFFLEdBQUksT0FBT3dxQyxHQUFHaDFCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFNFYsRUFBRXJSLEdBQ3BSLFNBQVNpbUMsR0FBR2gxQixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRXVFLEVBQUVxUixHQUFHczBCLEdBQUcxMEIsRUFBRUMsR0FBRyxJQUFJQyxFQUFFLElBQWlCLEdBQVpELEVBQUUyWixXQUFjLElBQUlwdkIsSUFBSTBWLEVBQUUsT0FBT25SLEdBQUd1OEIsR0FBR3JyQixFQUFFMVYsR0FBRSxHQUFJK3BDLEdBQUd0MEIsRUFBRUMsRUFBRUcsR0FBRzVWLEVBQUV5VixFQUFFeUksVUFBVXlyQixHQUFHM3lCLFFBQVF2QixFQUFFLElBQUlFLEVBQUVELEdBQUcsbUJBQW9CM1YsRUFBRTBxQyx5QkFBeUIsS0FBS3pxQyxFQUFFd1UsU0FBMkksT0FBbElpQixFQUFFMlosV0FBVyxFQUFFLE9BQU81WixHQUFHRSxHQUFHRCxFQUFFdkYsTUFBTW8xQixHQUFHN3ZCLEVBQUVELEVBQUV0RixNQUFNLEtBQUswRixHQUFHSCxFQUFFdkYsTUFBTW8xQixHQUFHN3ZCLEVBQUUsS0FBS0UsRUFBRUMsSUFBSXdDLEdBQUU1QyxFQUFFQyxFQUFFRSxFQUFFQyxHQUFHSCxFQUFFNnJCLGNBQWN0aEMsRUFBRTRPLE1BQU1ySyxHQUFHdThCLEdBQUdyckIsRUFBRTFWLEdBQUUsR0FBVzBWLEVBQUV2RixNQUFNLFNBQVN3NkIsR0FBR2wxQixHQUFHLElBQUlDLEVBQUVELEVBQUUwSSxVQUFVekksRUFBRWsxQixlQUFlbEssR0FBR2pyQixFQUFFQyxFQUFFazFCLGVBQWVsMUIsRUFBRWsxQixpQkFBaUJsMUIsRUFBRWEsU0FBU2IsRUFBRWEsU0FBU21xQixHQUFHanJCLEVBQUVDLEVBQUVhLFNBQVEsR0FBSXN2QixHQUFHcHdCLEVBQUVDLEVBQUV3ZixlQUNwZSxTQUFTMlYsR0FBR3AxQixFQUFFQyxFQUFFMVYsR0FBRyxJQUFJQyxFQUFFeVYsRUFBRTVVLEtBQUswRCxFQUFFa1IsRUFBRTJyQixhQUFheHJCLEVBQUVILEVBQUU2ckIsY0FBYyxHQUFHLElBQWlCLEdBQVo3ckIsRUFBRTJaLFdBQWMsQ0FBQ3haLEVBQUUsS0FBSyxJQUFJRixHQUFFLE9BQVFFLEVBQUUsQ0FBQ2kxQixXQUFXLE9BQU9qMUIsRUFBRUEsRUFBRWkxQixXQUFXLEdBQUduMUIsR0FBRSxFQUFHRCxFQUFFMlosWUFBWSxHQUFHLEdBQUcsT0FBTzVaLEVBQUUsR0FBR0UsRUFBRSxDQUFDLElBQUlDLEVBQUVwUixFQUFFdW1DLFNBQVN0MUIsRUFBRXlzQixHQUFHLEtBQUtqaUMsRUFBRSxFQUFFLE1BQU0sSUFBWSxFQUFQeVYsRUFBRTVVLFFBQVUyVSxFQUFFdEYsTUFBTSxPQUFPdUYsRUFBRTZyQixjQUFjN3JCLEVBQUV2RixNQUFNQSxNQUFNdUYsRUFBRXZGLE9BQU9sUSxFQUFFaWlDLEdBQUd0c0IsRUFBRTNWLEVBQUVELEVBQUUsTUFBTXlWLEVBQUUrWixRQUFRdnZCLEdBQUVELEVBQUV5VixHQUFJcUosT0FBTzdlLEVBQUU2ZSxPQUFPcEosT0FBTzFWLEVBQUVDLEVBQUV1bEMsR0FBRzl2QixFQUFFLEtBQUtsUixFQUFFa0ksU0FBUzFNLFFBQVEsT0FBT3lWLEVBQUU4ckIsZUFBeUIzckIsR0FBVjNWLEVBQUV3VixFQUFFdEYsT0FBVXFmLFFBQVE3WixHQUFHM1YsRUFBRXdFLEVBQUV1bUMsU0FBU3ZtQyxFQUFFdzlCLEdBQUcvaEMsRUFBRUEsRUFBRW9oQyxjQUFnQixJQUFZLEVBQVAzckIsRUFBRTVVLFNBQVU2VSxFQUFFLE9BQ2pmRCxFQUFFNnJCLGNBQWM3ckIsRUFBRXZGLE1BQU1BLE1BQU11RixFQUFFdkYsU0FBVWxRLEVBQUVrUSxRQUFRM0wsRUFBRTJMLE1BQU13RixJQUFJMVYsRUFBRXVFLEVBQUVnckIsUUFBUXdTLEdBQUdwc0IsRUFBRTVWLEVBQUU0VixFQUFFa3NCLGdCQUFnQjloQyxFQUFFd0UsRUFBRUEsRUFBRXE5QixvQkFBb0IsRUFBRTdoQyxFQUFFOGUsT0FBTzdlLEVBQUU2ZSxPQUFPcEosR0FBRzFWLEVBQUVDLEVBQUVzbEMsR0FBRzd2QixFQUFFelYsRUFBRWtRLE1BQU0zTCxFQUFFa0ksU0FBUzFNLEtBQUs0VixFQUFFSCxFQUFFdEYsTUFBTXdGLEdBQUdBLEVBQUVuUixFQUFFdW1DLFVBQVN2bUMsRUFBRTA5QixHQUFHLEtBQUtqaUMsRUFBRSxFQUFFLE9BQVFrUSxNQUFNeUYsRUFBRSxJQUFZLEVBQVBGLEVBQUU1VSxRQUFVMEQsRUFBRTJMLE1BQU0sT0FBT3VGLEVBQUU2ckIsY0FBYzdyQixFQUFFdkYsTUFBTUEsTUFBTXVGLEVBQUV2RixRQUFPbFEsRUFBRXVFLEVBQUVnckIsUUFBUTBTLEdBQUd2c0IsRUFBRTFWLEVBQUVELEVBQUUsT0FBUXF2QixXQUFXLEVBQUVydkIsRUFBRXdFLEVBQUVBLEVBQUVxOUIsb0JBQW9CLEVBQUU3aEMsRUFBRThlLE9BQU83ZSxFQUFFNmUsT0FBT3BKLEdBQUd6VixFQUFFRCxFQUFFdWxDLEdBQUc3dkIsRUFBRUUsRUFBRXBSLEVBQUVrSSxTQUFTMU0sSUFBSTBWLEVBQUV5SSxVQUFVMUksRUFBRTBJLFVBQXNDLE9BQTVCekksRUFBRTZyQixjQUFjMXJCLEVBQUVILEVBQUV2RixNQUFNblEsRUFBU0MsRUFDdGUsU0FBUzhwQyxHQUFHdDBCLEVBQUVDLEVBQUUxVixHQUEyRCxHQUF4RCxPQUFPeVYsSUFBSUMsRUFBRTRyQixvQkFBb0I3ckIsRUFBRTZyQixxQkFBd0I1ckIsRUFBRW1zQixvQkFBb0I3aEMsRUFBRSxPQUFPLEtBQWlELEdBQTVDLE9BQU95VixHQUFHQyxFQUFFdkYsUUFBUXNGLEVBQUV0RixPQUFNOEUsRUFBRSxPQUFpQixPQUFPUyxFQUFFdkYsTUFBTSxDQUE2RCxJQUFsRG5RLEVBQUVnaUMsR0FBWnZzQixFQUFFQyxFQUFFdkYsTUFBYXNGLEVBQUU0ckIsYUFBYTVyQixFQUFFcXNCLGdCQUFnQnBzQixFQUFFdkYsTUFBTW5RLEVBQU1BLEVBQUU4ZSxPQUFPcEosRUFBRSxPQUFPRCxFQUFFK1osU0FBUy9aLEVBQUVBLEVBQUUrWixTQUFReHZCLEVBQUVBLEVBQUV3dkIsUUFBUXdTLEdBQUd2c0IsRUFBRUEsRUFBRTRyQixhQUFhNXJCLEVBQUVxc0IsaUJBQWtCaGpCLE9BQU9wSixFQUFFMVYsRUFBRXd2QixRQUFRLEtBQUssT0FBTzlaLEVBQUV2RixNQUMvVyxTQUFTNjZCLEdBQUd2MUIsRUFBRUMsRUFBRTFWLEdBQUcsSUFBSUMsRUFBRXlWLEVBQUVvc0IsZUFBZSxHQUFHLE9BQU9yc0IsR0FBRSxHQUFHQSxFQUFFZ3NCLGdCQUFnQi9yQixFQUFFMnJCLGNBQWNycUIsR0FBRUMsUUFBUW94QixJQUFHLE9BQVEsR0FBR3BvQyxFQUFFRCxFQUFFLENBQU8sT0FBTnFvQyxJQUFHLEVBQVUzeUIsRUFBRWhLLEtBQUssS0FBSyxFQUFFaS9CLEdBQUdqMUIsR0FBR2kwQixLQUFLLE1BQU0sS0FBSyxFQUFFM0QsR0FBR3R3QixHQUFHLE1BQU0sS0FBSyxFQUFFd0IsR0FBRXhCLEVBQUUxTyxPQUFPNjVCLEdBQUduckIsR0FBRyxNQUFNLEtBQUssRUFBRW13QixHQUFHbndCLEVBQUVBLEVBQUV5SSxVQUFVK1csZUFBZSxNQUFNLEtBQUssR0FBRytWLEdBQUd2MUIsRUFBRUEsRUFBRStyQixjQUFjN2dDLE9BQU8sTUFBTSxLQUFLLEdBQUcsR0FBRyxPQUFPOFUsRUFBRTZyQixjQUE2QyxPQUFHLEtBQWpDdGhDLEVBQUV5VixFQUFFdkYsTUFBTTB4QixzQkFBOEI1aEMsR0FBR0QsRUFBUzZxQyxHQUFHcDFCLEVBQUVDLEVBQUUxVixHQUFzQixRQUFuQjBWLEVBQUVxMEIsR0FBR3QwQixFQUFFQyxFQUFFMVYsSUFBbUIwVixFQUFFOFosUUFBUSxLQUFNLE9BQU91YSxHQUFHdDBCLEVBQUVDLEVBQUUxVixTQUFTcW9DLElBQUcsRUFBc0IsT0FBbkIzeUIsRUFBRW9zQixlQUFlLEVBQVNwc0IsRUFBRWhLLEtBQUssS0FBSyxFQUFFekwsRUFDOWZ5VixFQUFFMHJCLFlBQVksT0FBTzNyQixJQUFJQSxFQUFFdVosVUFBVSxLQUFLdFosRUFBRXNaLFVBQVUsS0FBS3RaLEVBQUUyWixXQUFXLEdBQUc1WixFQUFFQyxFQUFFMnJCLGFBQWEsSUFBSTc4QixFQUFFMjdCLEdBQUd6cUIsRUFBRW1CLEdBQUVJLFNBQXFELEdBQTVDNnlCLEdBQUdwMEIsRUFBRTFWLEdBQUd3RSxFQUFFK2lDLEdBQUcsS0FBSzd4QixFQUFFelYsRUFBRXdWLEVBQUVqUixFQUFFeEUsR0FBRzBWLEVBQUUyWixXQUFXLEVBQUssaUJBQWtCN3FCLEdBQUcsT0FBT0EsR0FBRyxtQkFBb0JBLEVBQUVpUSxhQUFRLElBQVNqUSxFQUFFa1QsU0FBUyxDQUFjLEdBQWJoQyxFQUFFaEssSUFBSSxFQUFFaThCLEtBQVF6d0IsR0FBRWpYLEdBQUcsQ0FBQyxJQUFJNFYsR0FBRSxFQUFHZ3JCLEdBQUduckIsUUFBUUcsR0FBRSxFQUFHSCxFQUFFNnJCLGNBQWMsT0FBTy84QixFQUFFcUssWUFBTyxJQUFTckssRUFBRXFLLE1BQU1ySyxFQUFFcUssTUFBTSxLQUFLLElBQUk4RyxFQUFFMVYsRUFBRTBrQyx5QkFBeUIsbUJBQW9CaHZCLEdBQUd5dEIsR0FBRzF0QixFQUFFelYsRUFBRTBWLEVBQUVGLEdBQUdqUixFQUFFZ1MsUUFBUThzQixHQUFHNXRCLEVBQUV5SSxVQUFVM1osRUFBRUEsRUFBRSsrQixvQkFBb0I3dEIsRUFBRSt1QixHQUFHL3VCLEVBQUV6VixFQUFFd1YsRUFBRXpWLEdBQUcwVixFQUFFKzBCLEdBQUcsS0FBSy8wQixFQUFFelYsR0FBRSxFQUFHNFYsRUFDcGY3VixRQUFRMFYsRUFBRWhLLElBQUksRUFBRTJNLEdBQUUsS0FBSzNDLEVBQUVsUixFQUFFeEUsR0FBRzBWLEVBQUVBLEVBQUV2RixNQUFNLE9BQU91RixFQUFFLEtBQUssR0FBa0osT0FBL0lsUixFQUFFa1IsRUFBRTByQixZQUFZLE9BQU8zckIsSUFBSUEsRUFBRXVaLFVBQVUsS0FBS3RaLEVBQUVzWixVQUFVLEtBQUt0WixFQUFFMlosV0FBVyxHQUFHeFosRUFBRUgsRUFBRTJyQixhQUFhNXJCLEVBbkR2SixTQUFZQSxHQUFHLElBQUlDLEVBQUVELEVBQUUwRSxRQUFRLE9BQU8xRSxFQUFFeUUsU0FBUyxLQUFLLEVBQUUsT0FBT3hFLEVBQUUsS0FBSyxFQUFVLEtBQUssRUFBRSxNQUFNQSxFQUFFLFFBQW9LLE9BQTVKRCxFQUFFeUUsUUFBUSxHQUFZeEUsR0FBVkEsRUFBRUQsRUFBRXdFLFVBQWNpeEIsS0FBSyxTQUFTeDFCLEdBQUcsSUFBSUQsRUFBRXlFLFVBQVV4RSxFQUFFQSxFQUFFNU4sUUFBUTJOLEVBQUV5RSxRQUFRLEVBQUV6RSxFQUFFMEUsUUFBUXpFLElBQUksU0FBU0EsR0FBRyxJQUFJRCxFQUFFeUUsVUFBVXpFLEVBQUV5RSxRQUFRLEVBQUV6RSxFQUFFMEUsUUFBUXpFLEtBQVlELEVBQUV5RSxTQUFTLEtBQUssRUFBRSxPQUFPekUsRUFBRTBFLFFBQVEsS0FBSyxFQUFFLE1BQU0xRSxFQUFFMEUsUUFBcUIsTUFBWjFFLEVBQUUwRSxRQUFRekUsRUFBUUEsR0FtRDlMeTFCLENBQUczbUMsR0FBR2tSLEVBQUUxTyxLQUFLeU8sRUFBRWpSLEVBQUVrUixFQUFFaEssSUE1RDlHLFNBQVkrSixHQUFHLEdBQUcsbUJBQW9CQSxFQUFFLE9BQU9zc0IsR0FBR3RzQixHQUFHLEVBQUUsRUFBRSxHQUFHLE1BQVNBLEVBQVksQ0FBYyxJQUFiQSxFQUFFQSxFQUFFaUMsWUFBZ0JvUSxHQUFHLE9BQU8sR0FBRyxHQUFHclMsSUFBSXVTLEdBQUcsT0FBTyxHQUFHLE9BQU8sRUE0RDVCb2pCLENBQUczMUIsR0FBR0ksRUFBRXVCLEdBQUUzQixFQUFFSSxHQUFHRixPQUFFLEVBQWNuUixHQUFHLEtBQUssRUFBRW1SLEVBQUV1MEIsR0FBRyxLQUFLeDBCLEVBQUVELEVBQUVJLEVBQUU3VixHQUFHLE1BQU0sS0FBSyxFQUFFMlYsRUFBRXkwQixHQUFHLEtBQUsxMEIsRUFBRUQsRUFBRUksRUFBRTdWLEdBQUcsTUFBTSxLQUFLLEdBQUcyVixFQUFFazBCLEdBQUcsS0FBS24wQixFQUFFRCxFQUFFSSxFQUFFN1YsR0FBRyxNQUFNLEtBQUssR0FBRzJWLEVBQUVxMEIsR0FBRyxLQUFLdDBCLEVBQUVELEVBQUUyQixHQUFFM0IsRUFBRXpPLEtBQUs2TyxHQUFHNVYsRUFBRUQsR0FBRyxNQUFNLFFBQVFpVixFQUFFLE1BQU1RLEVBQUUsSUFBSSxPQUFPRSxFQUFFLEtBQUssRUFBRSxPQUFPMVYsRUFBRXlWLEVBQUUxTyxLQUFLeEMsRUFBRWtSLEVBQUUyckIsYUFBMEM2SSxHQUFHejBCLEVBQUVDLEVBQUV6VixFQUFwQ3VFLEVBQUVrUixFQUFFMHJCLGNBQWNuaEMsRUFBRXVFLEVBQUU0UyxHQUFFblgsRUFBRXVFLEdBQWN4RSxHQUFHLEtBQUssRUFBRSxPQUFPQyxFQUFFeVYsRUFBRTFPLEtBQUt4QyxFQUFFa1IsRUFBRTJyQixhQUNoZCtJLEdBQUczMEIsRUFBRUMsRUFBRXpWLEVBQXBDdUUsRUFBRWtSLEVBQUUwckIsY0FBY25oQyxFQUFFdUUsRUFBRTRTLEdBQUVuWCxFQUFFdUUsR0FBY3hFLEdBQUcsS0FBSyxFQUFpVyxPQUEvVjJxQyxHQUFHajFCLEdBQW1CLFFBQWhCelYsRUFBRXlWLEVBQUU4ckIsY0FBcUJ2c0IsRUFBRSxPQUFnQ3pRLEVBQUUsUUFBcEJBLEVBQUVrUixFQUFFNnJCLGVBQXlCLzhCLEVBQUUySyxRQUFRLEtBQUt1MUIsR0FBR2h2QixFQUFFelYsRUFBRXlWLEVBQUUyckIsYUFBYSxLQUFLcmhDLElBQUdDLEVBQUV5VixFQUFFNnJCLGNBQWNweUIsV0FBZTNLLEdBQUVtbEMsS0FBS2owQixFQUFFcTBCLEdBQUd0MEIsRUFBRUMsRUFBRTFWLEtBQVF3RSxFQUFFa1IsRUFBRXlJLFdBQWEzWixHQUFHLE9BQU9pUixHQUFHLE9BQU9BLEVBQUV0RixRQUFRM0wsRUFBRTZtQyxXQUFRakMsR0FBR3RKLEdBQUdwcUIsRUFBRXlJLFVBQVUrVyxlQUFlaVUsR0FBR3p6QixFQUFFbFIsRUFBRTZrQyxJQUFHLEdBQUc3a0MsR0FBR2tSLEVBQUUyWixXQUFXLEVBQUUzWixFQUFFdkYsTUFBTXExQixHQUFHOXZCLEVBQUUsS0FBS3pWLEVBQUVELEtBQUtxWSxHQUFFNUMsRUFBRUMsRUFBRXpWLEVBQUVELEdBQUcycEMsTUFBTWowQixFQUFFQSxFQUFFdkYsT0FBYXVGLEVBQUUsS0FBSyxFQUFFLE9BQU9zd0IsR0FBR3R3QixHQUFHLE9BQU9ELEdBQUcrekIsR0FBRzl6QixHQUFHelYsRUFBRXlWLEVBQUUxTyxLQUFLeEMsRUFBRWtSLEVBQUUyckIsYUFBYXhyQixFQUFFLE9BQU9KLEVBQUVBLEVBQUVnc0IsY0FBYyxLQUNuZjlyQixFQUFFblIsRUFBRWtJLFNBQVN5eUIsR0FBR2wvQixFQUFFdUUsR0FBR21SLEVBQUUsS0FBSyxPQUFPRSxHQUFHc3BCLEdBQUdsL0IsRUFBRTRWLEtBQUtILEVBQUUyWixXQUFXLElBQUk4YSxHQUFHMTBCLEVBQUVDLEdBQUcsSUFBSTFWLEdBQVUsRUFBUDBWLEVBQUU1VSxNQUFRMEQsRUFBRThtQyxRQUFRNTFCLEVBQUVvc0IsZUFBZXBzQixFQUFFbXNCLG9CQUFvQixFQUFFbnNCLEVBQUUsT0FBTzJDLEdBQUU1QyxFQUFFQyxFQUFFQyxFQUFFM1YsR0FBRzBWLEVBQUVBLEVBQUV2RixPQUFPdUYsRUFBRSxLQUFLLEVBQUUsT0FBTyxPQUFPRCxHQUFHK3pCLEdBQUc5ekIsR0FBRyxLQUFLLEtBQUssR0FBRyxPQUFPbTFCLEdBQUdwMUIsRUFBRUMsRUFBRTFWLEdBQUcsS0FBSyxFQUFFLE9BQU82bEMsR0FBR253QixFQUFFQSxFQUFFeUksVUFBVStXLGVBQWVqMUIsRUFBRXlWLEVBQUUyckIsYUFBYSxPQUFPNXJCLEVBQUVDLEVBQUV2RixNQUFNbzFCLEdBQUc3dkIsRUFBRSxLQUFLelYsRUFBRUQsR0FBR3FZLEdBQUU1QyxFQUFFQyxFQUFFelYsRUFBRUQsR0FBRzBWLEVBQUV2RixNQUFNLEtBQUssR0FBRyxPQUFPbFEsRUFBRXlWLEVBQUUxTyxLQUFLeEMsRUFBRWtSLEVBQUUyckIsYUFBMEN3SSxHQUFHcDBCLEVBQUVDLEVBQUV6VixFQUFwQ3VFLEVBQUVrUixFQUFFMHJCLGNBQWNuaEMsRUFBRXVFLEVBQUU0UyxHQUFFblgsRUFBRXVFLEdBQWN4RSxHQUFHLEtBQUssRUFBRSxPQUFPcVksR0FBRTVDLEVBQUVDLEVBQUVBLEVBQUUyckIsYUFBYXJoQyxHQUFHMFYsRUFBRXZGLE1BQU0sS0FBSyxFQUN4ZCxLQUFLLEdBQUcsT0FBT2tJLEdBQUU1QyxFQUFFQyxFQUFFQSxFQUFFMnJCLGFBQWEzMEIsU0FBUzFNLEdBQUcwVixFQUFFdkYsTUFBTSxLQUFLLEdBQUdzRixFQUFFLENBQXdFLEdBQXZFeFYsRUFBRXlWLEVBQUUxTyxLQUFLOFMsU0FBU3RWLEVBQUVrUixFQUFFMnJCLGFBQWExckIsRUFBRUQsRUFBRStyQixjQUF3QndKLEdBQUd2MUIsRUFBYkcsRUFBRXJSLEVBQUU1RCxPQUFpQixPQUFPK1UsRUFBRSxDQUFDLElBQUlDLEVBQUVELEVBQUUvVSxNQUEwRyxHQUFHLEtBQXZHaVYsRUFBRW9aLEdBQUdyWixFQUFFQyxHQUFHLEVBQXdGLEdBQXJGLG1CQUFvQjVWLEVBQUV1WixzQkFBc0J2WixFQUFFdVosc0JBQXNCNUQsRUFBRUMsR0FBRyxjQUF3QixHQUFHRixFQUFFakosV0FBV2xJLEVBQUVrSSxXQUFXc0ssR0FBRUMsUUFBUSxDQUFDdkIsRUFBRXEwQixHQUFHdDBCLEVBQUVDLEVBQUUxVixHQUFHLE1BQU15VixRQUFRLElBQWMsUUFBVkcsRUFBRUYsRUFBRXZGLFNBQWlCeUYsRUFBRWtKLE9BQU9wSixHQUFHLE9BQU9FLEdBQUcsQ0FBQyxJQUFJaFcsRUFBRWdXLEVBQUUwckIsb0JBQW9CLEdBQUcsT0FBTzFoQyxFQUFFLENBQUMrVixFQUFFQyxFQUFFekYsTUFBTSxJQUFJLElBQUl3RSxFQUFFL1UsRUFBRTJyQyxNQUFNLE9BQU81MkIsR0FBRyxDQUFDLEdBQUdBLEVBQUU0QixVQUFVdFcsR0FBRyxJQUNqZjBVLEVBQUU2MkIsYUFBYTMxQixHQUFHLENBQUMsSUFBSUQsRUFBRWxLLE9BQU1pSixFQUFFOHVCLEdBQUd6akMsSUFBSzBMLElBQUl1NEIsR0FBR0gsR0FBR2x1QixFQUFFakIsSUFBSWlCLEVBQUVrc0IsZUFBZTloQyxJQUFJNFYsRUFBRWtzQixlQUFlOWhDLEdBQWlCLFFBQWQyVSxFQUFFaUIsRUFBRW9aLFlBQW9CcmEsRUFBRW10QixlQUFlOWhDLElBQUkyVSxFQUFFbXRCLGVBQWU5aEMsR0FBRzJVLEVBQUUzVSxFQUFFLElBQUksSUFBSUQsRUFBRTZWLEVBQUVrSixPQUFPLE9BQU8vZSxHQUFHLENBQUMsSUFBSTBCLEVBQUUxQixFQUFFaXZCLFVBQVUsR0FBR2p2QixFQUFFOGhDLG9CQUFvQmx0QixFQUFFNVUsRUFBRThoQyxvQkFBb0JsdEIsRUFBRSxPQUFPbFQsR0FBR0EsRUFBRW9nQyxvQkFBb0JsdEIsSUFBSWxULEVBQUVvZ0Msb0JBQW9CbHRCLE9BQVEsTUFBRyxPQUFPbFQsR0FBR0EsRUFBRW9nQyxvQkFBb0JsdEIsR0FBK0IsTUFBN0JsVCxFQUFFb2dDLG9CQUFvQmx0QixFQUFhNVUsRUFBRUEsRUFBRStlLE9BQU9sZixFQUFFa2lDLGVBQWU5aEMsSUFBSUosRUFBRWtpQyxlQUFlOWhDLEdBQUcsTUFBTTJVLEVBQUVBLEVBQUU0RCxXQUFXNUMsRUFBRSxLQUFLQyxFQUFFbEssS0FBSWtLLEVBQUU1TyxPQUFPME8sRUFBRTFPLEtBQ3RmLEtBQWE0TyxFQUFFekYsTUFBTSxHQUFHLE9BQU93RixFQUFFQSxFQUFFbUosT0FBT2xKLE9BQU8sSUFBSUQsRUFBRUMsRUFBRSxPQUFPRCxHQUFHLENBQUMsR0FBR0EsSUFBSUQsRUFBRSxDQUFDQyxFQUFFLEtBQUssTUFBa0IsR0FBRyxRQUFmQyxFQUFFRCxFQUFFNlosU0FBb0IsQ0FBQzVaLEVBQUVrSixPQUFPbkosRUFBRW1KLE9BQU9uSixFQUFFQyxFQUFFLE1BQU1ELEVBQUVBLEVBQUVtSixPQUFPbEosRUFBRUQsR0FBRzBDLEdBQUU1QyxFQUFFQyxFQUFFbFIsRUFBRWtJLFNBQVMxTSxHQUFHMFYsRUFBRUEsRUFBRXZGLE1BQU0sT0FBT3VGLEVBQUUsS0FBSyxFQUFFLE9BQU9sUixFQUFFa1IsRUFBRTFPLEtBQXNCL0csR0FBakI0VixFQUFFSCxFQUFFMnJCLGNBQWlCMzBCLFNBQVNvOUIsR0FBR3AwQixFQUFFMVYsR0FBa0NDLEVBQUVBLEVBQWpDdUUsRUFBRWdULEdBQUVoVCxFQUFFcVIsRUFBRTQxQix3QkFBOEIvMUIsRUFBRTJaLFdBQVcsRUFBRWhYLEdBQUU1QyxFQUFFQyxFQUFFelYsRUFBRUQsR0FBRzBWLEVBQUV2RixNQUFNLEtBQUssR0FBRyxPQUFnQjBGLEVBQUV1QixHQUFYNVMsRUFBRWtSLEVBQUUxTyxLQUFXME8sRUFBRTJyQixjQUE0QjJJLEdBQUd2MEIsRUFBRUMsRUFBRWxSLEVBQXJCcVIsRUFBRXVCLEdBQUU1UyxFQUFFd0MsS0FBSzZPLEdBQWM1VixFQUFFRCxHQUFHLEtBQUssR0FBRyxPQUFPaXFDLEdBQUd4MEIsRUFBRUMsRUFBRUEsRUFBRTFPLEtBQUswTyxFQUFFMnJCLGFBQWFwaEMsRUFBRUQsR0FBRyxLQUFLLEdBQUcsT0FBT0MsRUFBRXlWLEVBQUUxTyxLQUFLeEMsRUFBRWtSLEVBQUUyckIsYUFBYTc4QixFQUFFa1IsRUFBRTByQixjQUN0Zm5oQyxFQUFFdUUsRUFBRTRTLEdBQUVuWCxFQUFFdUUsR0FBRyxPQUFPaVIsSUFBSUEsRUFBRXVaLFVBQVUsS0FBS3RaLEVBQUVzWixVQUFVLEtBQUt0WixFQUFFMlosV0FBVyxHQUFHM1osRUFBRWhLLElBQUksRUFBRXdMLEdBQUVqWCxJQUFJd1YsR0FBRSxFQUFHb3JCLEdBQUduckIsSUFBSUQsR0FBRSxFQUFHcTBCLEdBQUdwMEIsRUFBRTFWLEdBQUdva0MsR0FBRzF1QixFQUFFelYsRUFBRXVFLEdBQUtpZ0MsR0FBRy91QixFQUFFelYsRUFBRXVFLEVBQUV4RSxHQUFHeXFDLEdBQUcsS0FBSy8wQixFQUFFelYsR0FBRSxFQUFHd1YsRUFBRXpWLEdBQUdpVixFQUFFLE9BQU8sSUFBSXkyQixHQUFHLENBQUN6MEIsUUFBUSxNQUFNMDBCLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUssU0FBU1osR0FBR3gxQixFQUFFQyxHQUFHLElBQUkxVixFQUFFeVYsRUFBRXpPLEtBQUs4UyxTQUFTcEQsR0FBRWcxQixHQUFHMXJDLEVBQUV5WixlQUFpQnpaLEVBQUV5WixjQUFjL0QsRUFBRSxTQUFTbzJCLEdBQUdyMkIsR0FBRyxJQUFJQyxFQUFFZzJCLEdBQUd6MEIsUUFBUVIsR0FBRWkxQixJQUFNajJCLEVBQUV6TyxLQUFLOFMsU0FBU0wsY0FBYy9ELEVBQUUsU0FBU28wQixHQUFHcjBCLEVBQUVDLEdBQUdpMkIsR0FBR2wyQixFQUFFbzJCLEdBQUdELEdBQUcsS0FBSyxJQUFJNXJDLEVBQUV5VixFQUFFNnJCLG9CQUFvQixPQUFPdGhDLEdBQUdBLEVBQUU4aEMsZ0JBQWdCcHNCLElBQUkyeUIsSUFBRyxHQUFJNXlCLEVBQUU2ckIsb0JBQW9CLEtBQ3JlLFNBQVM5cEIsR0FBRS9CLEVBQUVDLEdBQXVPLE9BQWpPbTJCLEtBQUtwMkIsSUFBRyxJQUFLQyxHQUFHLElBQUlBLElBQU0saUJBQWtCQSxHQUFHLGFBQWFBLElBQUVtMkIsR0FBR3AyQixFQUFFQyxFQUFFLFlBQVdBLEVBQUUsQ0FBQ2EsUUFBUWQsRUFBRSsxQixhQUFhOTFCLEVBQUU2QyxLQUFLLE1BQU0sT0FBT3F6QixJQUFJLE9BQU9ELElBQUcxMkIsRUFBRSxPQUFjMjJCLEdBQUdsMkIsRUFBRWkyQixHQUFHckssb0JBQW9CLENBQUNpSyxNQUFNNzFCLEVBQUVvc0IsZUFBZSxJQUFJOEosR0FBR0EsR0FBR3J6QixLQUFLN0MsR0FBU0QsRUFBRWdFLGNBQWMsSUFBSXN5QixHQUFHLEVBQUUvSCxHQUFHLEVBQUVDLEdBQUcsRUFBRStILEdBQUcsRUFBRTNCLElBQUcsRUFBRyxTQUFTNEIsR0FBR3gyQixHQUFHLE1BQU0sQ0FBQzR0QixVQUFVNXRCLEVBQUV5MkIsWUFBWSxLQUFLQyxXQUFXLEtBQUtDLG9CQUFvQixLQUFLQyxtQkFBbUIsS0FBSzFLLFlBQVksS0FBS0QsV0FBVyxLQUFLNEssb0JBQW9CLEtBQUtDLG1CQUFtQixNQUMxZSxTQUFTQyxHQUFHLzJCLEdBQUcsTUFBTSxDQUFDNHRCLFVBQVU1dEIsRUFBRTR0QixVQUFVNkksWUFBWXoyQixFQUFFeTJCLFlBQVlDLFdBQVcxMkIsRUFBRTAyQixXQUFXQyxvQkFBb0IsS0FBS0MsbUJBQW1CLEtBQUsxSyxZQUFZLEtBQUtELFdBQVcsS0FBSzRLLG9CQUFvQixLQUFLQyxtQkFBbUIsTUFBTSxTQUFTOUksR0FBR2h1QixHQUFHLE1BQU0sQ0FBQ3FzQixlQUFlcnNCLEVBQUUvSixJQUFJcWdDLEdBQUdwSSxRQUFRLEtBQUtDLFNBQVMsS0FBS3JyQixLQUFLLEtBQUtxcEIsV0FBVyxNQUFNLFNBQVM2SyxHQUFHaDNCLEVBQUVDLEdBQUcsT0FBT0QsRUFBRTAyQixXQUFXMTJCLEVBQUV5MkIsWUFBWXoyQixFQUFFMDJCLFdBQVd6MkIsR0FBR0QsRUFBRTAyQixXQUFXNXpCLEtBQUs3QyxFQUFFRCxFQUFFMDJCLFdBQVd6MkIsR0FDMWEsU0FBU291QixHQUFHcnVCLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUV5VixFQUFFdVosVUFBVSxHQUFHLE9BQU9odkIsRUFBRSxDQUFDLElBQUlDLEVBQUV3VixFQUFFK3JCLFlBQWdCaDlCLEVBQUUsS0FBSyxPQUFPdkUsSUFBSUEsRUFBRXdWLEVBQUUrckIsWUFBWXlLLEdBQUd4MkIsRUFBRThyQixxQkFBcUJ0aEMsRUFBRXdWLEVBQUUrckIsWUFBWWg5QixFQUFFeEUsRUFBRXdoQyxZQUFZLE9BQU92aEMsRUFBRSxPQUFPdUUsR0FBR3ZFLEVBQUV3VixFQUFFK3JCLFlBQVl5SyxHQUFHeDJCLEVBQUU4ckIsZUFBZS84QixFQUFFeEUsRUFBRXdoQyxZQUFZeUssR0FBR2pzQyxFQUFFdWhDLGdCQUFnQnRoQyxFQUFFd1YsRUFBRStyQixZQUFZZ0wsR0FBR2hvQyxHQUFHLE9BQU9BLElBQUlBLEVBQUV4RSxFQUFFd2hDLFlBQVlnTCxHQUFHdnNDLElBQUksT0FBT3VFLEdBQUd2RSxJQUFJdUUsRUFBRWlvQyxHQUFHeHNDLEVBQUV5VixHQUFHLE9BQU96VixFQUFFa3NDLFlBQVksT0FBTzNuQyxFQUFFMm5DLFlBQVlNLEdBQUd4c0MsRUFBRXlWLEdBQUcrMkIsR0FBR2pvQyxFQUFFa1IsS0FBSysyQixHQUFHeHNDLEVBQUV5VixHQUFHbFIsRUFBRTJuQyxXQUFXejJCLEdBQ2phLFNBQVNnM0IsR0FBR2ozQixFQUFFQyxHQUFHLElBQUkxVixFQUFFeVYsRUFBRStyQixZQUFpRSxRQUFyRHhoQyxFQUFFLE9BQU9BLEVBQUV5VixFQUFFK3JCLFlBQVl5SyxHQUFHeDJCLEVBQUU4ckIsZUFBZW9MLEdBQUdsM0IsRUFBRXpWLElBQVlxc0MsbUJBQW1CcnNDLEVBQUVvc0Msb0JBQW9CcHNDLEVBQUVxc0MsbUJBQW1CMzJCLEdBQUcxVixFQUFFcXNDLG1CQUFtQjl6QixLQUFLN0MsRUFBRTFWLEVBQUVxc0MsbUJBQW1CMzJCLEdBQUcsU0FBU2kzQixHQUFHbDNCLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUV5VixFQUFFdVosVUFBK0QsT0FBckQsT0FBT2h2QixHQUFHMFYsSUFBSTFWLEVBQUV3aEMsY0FBYzlyQixFQUFFRCxFQUFFK3JCLFlBQVlnTCxHQUFHOTJCLElBQVdBLEVBQ3ZULFNBQVNrM0IsR0FBR24zQixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRXVFLEVBQUVxUixHQUFHLE9BQU83VixFQUFFMEwsS0FBSyxLQUFLczRCLEdBQUcsTUFBbUIsbUJBQVp2dUIsRUFBRXpWLEVBQUUyakMsU0FBOEJsdUIsRUFBRTNWLEtBQUsrVixFQUFFNVYsRUFBRXVFLEdBQUdpUixFQUFFLEtBQUt1MkIsR0FBR3YyQixFQUFFNFosV0FBdUIsS0FBYjVaLEVBQUU0WixVQUFnQixHQUFHLEtBQUswYyxHQUF1RCxHQUFHLE9BQTNDdm5DLEVBQUUsbUJBQWRpUixFQUFFelYsRUFBRTJqQyxTQUFnQ2x1QixFQUFFM1YsS0FBSytWLEVBQUU1VixFQUFFdUUsR0FBR2lSLEdBQTBCLE1BQU0sT0FBT3JVLEVBQUUsR0FBR25CLEVBQUV1RSxHQUFHLEtBQUt5L0IsR0FBR29HLElBQUcsRUFBRyxPQUFPcHFDLEVBQ2pSLFNBQVN5a0MsR0FBR2p2QixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRXVFLEdBQUc2bEMsSUFBRyxFQUFhLElBQUksSUFBSXgwQixHQUFsQkgsRUFBRWkzQixHQUFHbDNCLEVBQUVDLElBQWUydEIsVUFBVTF0QixFQUFFLEtBQUtDLEVBQUUsRUFBRWhXLEVBQUU4VixFQUFFdzJCLFlBQVl2M0IsRUFBRWtCLEVBQUUsT0FBT2pXLEdBQUcsQ0FBQyxJQUFJRyxFQUFFSCxFQUFFa2lDLGVBQWUvaEMsRUFBRXlFLEdBQUcsT0FBT21SLElBQUlBLEVBQUUvVixFQUFFaVcsRUFBRWxCLEdBQUdpQixFQUFFN1YsSUFBSTZWLEVBQUU3VixLQUFLNFUsRUFBRWk0QixHQUFHbjNCLEVBQUVDLEVBQUU5VixFQUFFK1UsRUFBRTNVLEVBQUVDLEdBQUcsT0FBT0wsRUFBRWdrQyxXQUFXbnVCLEVBQUU0WixXQUFXLEdBQUd6dkIsRUFBRWdpQyxXQUFXLEtBQUssT0FBT2xzQixFQUFFZ3NCLFdBQVdoc0IsRUFBRWlzQixZQUFZanNCLEVBQUVnc0IsV0FBVzloQyxHQUFHOFYsRUFBRWdzQixXQUFXRSxXQUFXaGlDLEVBQUU4VixFQUFFZ3NCLFdBQVc5aEMsS0FBS0EsRUFBRUEsRUFBRTJZLEtBQVksSUFBUHhZLEVBQUUsS0FBU0gsRUFBRThWLEVBQUUwMkIsb0JBQW9CLE9BQU94c0MsR0FBRyxDQUFDLElBQUk2QixFQUFFN0IsRUFBRWtpQyxlQUFlcmdDLEVBQUUrQyxHQUFHLE9BQU96RSxJQUFJQSxFQUFFSCxFQUFFLE9BQU8rVixJQUFJRSxFQUFFbEIsSUFBSWlCLEVBQUVuVSxJQUFJbVUsRUFBRW5VLEtBQUtrVCxFQUFFaTRCLEdBQUduM0IsRUFBRUMsRUFBRTlWLEVBQUUrVSxFQUFFM1UsRUFBRUMsR0FBRyxPQUFPTCxFQUFFZ2tDLFdBQVdudUIsRUFBRTRaLFdBQ2xmLEdBQUd6dkIsRUFBRWdpQyxXQUFXLEtBQUssT0FBT2xzQixFQUFFNjJCLG1CQUFtQjcyQixFQUFFNDJCLG9CQUFvQjUyQixFQUFFNjJCLG1CQUFtQjNzQyxHQUFHOFYsRUFBRTYyQixtQkFBbUIzSyxXQUFXaGlDLEVBQUU4VixFQUFFNjJCLG1CQUFtQjNzQyxLQUFLQSxFQUFFQSxFQUFFMlksS0FBSyxPQUFPNUMsSUFBSUQsRUFBRXkyQixXQUFXLE1BQU0sT0FBT3BzQyxFQUFFMlYsRUFBRTIyQixtQkFBbUIsS0FBSzUyQixFQUFFNFosV0FBVyxHQUFHLE9BQU8xWixHQUFHLE9BQU81VixJQUFJOFYsRUFBRWxCLEdBQUdlLEVBQUUydEIsVUFBVXh0QixFQUFFSCxFQUFFdzJCLFlBQVl2MkIsRUFBRUQsRUFBRTAyQixvQkFBb0Jyc0MsRUFBRTBWLEVBQUVxc0IsZUFBZWxzQixFQUFFSCxFQUFFOHJCLGNBQWM1c0IsRUFDeFcsU0FBU2s0QixHQUFHcDNCLEVBQUVDLEVBQUUxVixHQUFHLE9BQU8wVixFQUFFMDJCLHNCQUFzQixPQUFPMTJCLEVBQUV5MkIsYUFBYXoyQixFQUFFeTJCLFdBQVc1ekIsS0FBSzdDLEVBQUUwMkIsb0JBQW9CMTJCLEVBQUV5MkIsV0FBV3oyQixFQUFFMjJCLG9CQUFvQjMyQixFQUFFMDJCLG9CQUFvQjEyQixFQUFFMjJCLG1CQUFtQixNQUFNUyxHQUFHcDNCLEVBQUVpc0IsWUFBWTNoQyxHQUFHMFYsRUFBRWlzQixZQUFZanNCLEVBQUVnc0IsV0FBVyxLQUFLb0wsR0FBR3AzQixFQUFFNDJCLG9CQUFvQnRzQyxHQUFHMFYsRUFBRTQyQixvQkFBb0I1MkIsRUFBRTYyQixtQkFBbUIsS0FBSyxTQUFTTyxHQUFHcjNCLEVBQUVDLEdBQUcsS0FBSyxPQUFPRCxHQUFHLENBQUMsSUFBSXpWLEVBQUV5VixFQUFFbXVCLFNBQVMsR0FBRyxPQUFPNWpDLEVBQUUsQ0FBQ3lWLEVBQUVtdUIsU0FBUyxLQUFLLElBQUkzakMsRUFBRXlWLEVBQUUsbUJBQW9CMVYsR0FBRWlWLEVBQUUsTUFBTWpWLEdBQVVBLEVBQUVGLEtBQUtHLEdBQUd3VixFQUFFQSxFQUFFbXNCLFlBQ2pkLFNBQVNtTCxHQUFHdDNCLEVBQUVDLEdBQUcsTUFBTSxDQUFDOVUsTUFBTTZVLEVBQUU3UyxPQUFPOFMsRUFBRXMzQixNQUFNMWtCLEdBQUc1UyxJQUFJLFNBQVN1M0IsR0FBR3gzQixHQUFHQSxFQUFFNFosV0FBVyxFQUFFLElBQUk2ZCxRQUFHLEVBQU9DLFFBQUcsRUFBT0MsUUFBRyxFQUFPQyxRQUFHLEVBQU9ILEdBQUcsU0FBU3ozQixFQUFFQyxHQUFHLElBQUksSUFBSTFWLEVBQUUwVixFQUFFdkYsTUFBTSxPQUFPblEsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRTBMLEtBQUssSUFBSTFMLEVBQUUwTCxJQUFJK0osRUFBRXRQLFlBQVluRyxFQUFFbWUsZ0JBQWdCLEdBQUcsSUFBSW5lLEVBQUUwTCxLQUFLLE9BQU8xTCxFQUFFbVEsTUFBTSxDQUFDblEsRUFBRW1RLE1BQU0yTyxPQUFPOWUsRUFBRUEsRUFBRUEsRUFBRW1RLE1BQU0sU0FBUyxHQUFHblEsSUFBSTBWLEVBQUUsTUFBTSxLQUFLLE9BQU8xVixFQUFFd3ZCLFNBQVMsQ0FBQyxHQUFHLE9BQU94dkIsRUFBRThlLFFBQVE5ZSxFQUFFOGUsU0FBU3BKLEVBQUUsT0FBTzFWLEVBQUVBLEVBQUU4ZSxPQUFPOWUsRUFBRXd2QixRQUFRMVEsT0FBTzllLEVBQUU4ZSxPQUFPOWUsRUFBRUEsRUFBRXd2QixVQUFVMmQsR0FBRyxhQUM3YUMsR0FBRyxTQUFTMzNCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFdUUsR0FBRyxJQUFJcVIsRUFBRUosRUFBRWdzQixjQUFjLEdBQUc1ckIsSUFBSTVWLEVBQUUsQ0FBQyxJQUFJMFYsRUFBRUQsRUFBRXlJLFVBQStCLE9BQXJCeW5CLEdBQUdodUIsR0FBRVgsU0FBU3hCLEVBQUUsS0FBWXpWLEdBQUcsSUFBSyxRQUFRNlYsRUFBRWtVLEdBQUdwVSxFQUFFRSxHQUFHNVYsRUFBRThwQixHQUFHcFUsRUFBRTFWLEdBQUd3VixFQUFFLEdBQUcsTUFBTSxJQUFLLFNBQVNJLEVBQUUraUIsR0FBR2pqQixFQUFFRSxHQUFHNVYsRUFBRTI0QixHQUFHampCLEVBQUUxVixHQUFHd1YsRUFBRSxHQUFHLE1BQU0sSUFBSyxTQUFTSSxFQUFFelUsRUFBRSxHQUFHeVUsRUFBRSxDQUFDalYsV0FBTSxJQUFTWCxFQUFFbUIsRUFBRSxHQUFHbkIsRUFBRSxDQUFDVyxXQUFNLElBQVM2VSxFQUFFLEdBQUcsTUFBTSxJQUFLLFdBQVdJLEVBQUVvakIsR0FBR3RqQixFQUFFRSxHQUFHNVYsRUFBRWc1QixHQUFHdGpCLEVBQUUxVixHQUFHd1YsRUFBRSxHQUFHLE1BQU0sUUFBUSxtQkFBb0JJLEVBQUV5M0IsU0FBUyxtQkFBb0JydEMsRUFBRXF0QyxVQUFVMzNCLEVBQUU0M0IsUUFBUXpPLElBQUlMLEdBQUd6K0IsRUFBRUMsR0FBRzBWLEVBQUUzVixPQUFFLEVBQU8sSUFBSTRWLEVBQUUsS0FBSyxJQUFJNVYsS0FBSzZWLEVBQUUsSUFBSTVWLEVBQUV1QixlQUFleEIsSUFBSTZWLEVBQUVyVSxlQUFleEIsSUFBSSxNQUFNNlYsRUFBRTdWLEdBQUcsR0FBRyxVQUNyZkEsRUFBRSxDQUFDLElBQUlKLEVBQUVpVyxFQUFFN1YsR0FBRyxJQUFJMlYsS0FBSy9WLEVBQUVBLEVBQUU0QixlQUFlbVUsS0FBS0MsSUFBSUEsRUFBRSxJQUFJQSxFQUFFRCxHQUFHLFFBQVEsNEJBQTRCM1YsR0FBRyxhQUFhQSxHQUFHLG1DQUFtQ0EsR0FBRyw2QkFBNkJBLEdBQUcsY0FBY0EsSUFBSThjLEVBQUd0YixlQUFleEIsR0FBR3lWLElBQUlBLEVBQUUsS0FBS0EsRUFBRUEsR0FBRyxJQUFJcFMsS0FBS3JELEVBQUUsT0FBTyxJQUFJQSxLQUFLQyxFQUFFLENBQUMsSUFBSTBVLEVBQUUxVSxFQUFFRCxHQUF5QixHQUF0QkosRUFBRSxNQUFNaVcsRUFBRUEsRUFBRTdWLFFBQUcsRUFBVUMsRUFBRXVCLGVBQWV4QixJQUFJMlUsSUFBSS9VLElBQUksTUFBTStVLEdBQUcsTUFBTS9VLEdBQUcsR0FBRyxVQUFVSSxFQUFFLEdBQUdKLEVBQUUsQ0FBQyxJQUFJK1YsS0FBSy9WLEdBQUdBLEVBQUU0QixlQUFlbVUsSUFBSWhCLEdBQUdBLEVBQUVuVCxlQUFlbVUsS0FBS0MsSUFBSUEsRUFBRSxJQUFJQSxFQUFFRCxHQUFHLElBQUksSUFBSUEsS0FBS2hCLEVBQUVBLEVBQUVuVCxlQUFlbVUsSUFBSS9WLEVBQUUrVixLQUFLaEIsRUFBRWdCLEtBQUtDLElBQ2xmQSxFQUFFLElBQUlBLEVBQUVELEdBQUdoQixFQUFFZ0IsU0FBU0MsSUFBSUgsSUFBSUEsRUFBRSxJQUFJQSxFQUFFcFMsS0FBS3JELEVBQUU0VixJQUFJQSxFQUFFakIsTUFBTSw0QkFBNEIzVSxHQUFHMlUsRUFBRUEsRUFBRUEsRUFBRXlxQixZQUFPLEVBQU94L0IsRUFBRUEsRUFBRUEsRUFBRXcvQixZQUFPLEVBQU8sTUFBTXpxQixHQUFHL1UsSUFBSStVLElBQUljLEVBQUVBLEdBQUcsSUFBSXBTLEtBQUtyRCxFQUFFLEdBQUcyVSxJQUFJLGFBQWEzVSxFQUFFSixJQUFJK1UsR0FBRyxpQkFBa0JBLEdBQUcsaUJBQWtCQSxJQUFJYyxFQUFFQSxHQUFHLElBQUlwUyxLQUFLckQsRUFBRSxHQUFHMlUsR0FBRyxtQ0FBbUMzVSxHQUFHLDZCQUE2QkEsSUFBSThjLEVBQUd0YixlQUFleEIsSUFBSSxNQUFNMlUsR0FBR2lxQixHQUFHcDZCLEVBQUV4RSxHQUFHeVYsR0FBRzdWLElBQUkrVSxJQUFJYyxFQUFFLE1BQU1BLEVBQUVBLEdBQUcsSUFBSXBTLEtBQUtyRCxFQUFFMlUsSUFBSWlCLElBQUlILEVBQUVBLEdBQUcsSUFBSXBTLEtBQUssUUFBUXVTLEdBQUdwUixFQUFFaVIsR0FBR0MsRUFBRThyQixZQUFZaDlCLElBQUl5b0MsR0FBR3YzQixLQUFLMjNCLEdBQUcsU0FBUzUzQixFQUFFQyxFQUFFMVYsRUFBRUMsR0FBR0QsSUFBSUMsR0FBR2d0QyxHQUFHdjNCLElBQ2hmLElBQUk4M0IsR0FBRyxtQkFBb0JDLFFBQVFBLFFBQVE5NUIsSUFBSSxTQUFTKzVCLEdBQUdqNEIsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRTBWLEVBQUU5UyxPQUFPM0MsRUFBRXlWLEVBQUVzM0IsTUFBTSxPQUFPL3NDLEdBQUcsT0FBT0QsSUFBSUMsRUFBRXFvQixHQUFHdG9CLElBQUksT0FBT0EsR0FBR29vQixHQUFHcG9CLEVBQUVnSCxNQUFNME8sRUFBRUEsRUFBRTlVLE1BQU0sT0FBTzZVLEdBQUcsSUFBSUEsRUFBRS9KLEtBQUswYyxHQUFHM1MsRUFBRXpPLE1BQU0sSUFBSTRFLFFBQVEwSCxNQUFNb0MsR0FBRyxNQUFNbFIsR0FBRzg2QixXQUFXLFdBQVcsTUFBTTk2QixLQUFNLFNBQVNtcEMsR0FBR2w0QixHQUFHLElBQUlDLEVBQUVELEVBQUU0QixJQUFJLEdBQUcsT0FBTzNCLEVBQUUsR0FBRyxtQkFBb0JBLEVBQUUsSUFBSUEsRUFBRSxNQUFNLE1BQU0xVixHQUFHNHRDLEdBQUduNEIsRUFBRXpWLFFBQVEwVixFQUFFdUIsUUFBUSxLQUNsVyxTQUFTNDJCLEdBQUdwNEIsRUFBRUMsRUFBRTFWLEdBQWdELEdBQUcsUUFBaENBLEVBQUUsUUFBbEJBLEVBQUVBLEVBQUV3aEMsYUFBdUJ4aEMsRUFBRTBoQyxXQUFXLE1BQWlCLENBQUMsSUFBSXpoQyxFQUFFRCxFQUFFQSxFQUFFdVksS0FBSyxFQUFFLENBQUMsSUFBSXRZLEVBQUV5TCxJQUFJK0osS0FBS3l3QixHQUFHLENBQUMsSUFBSTFoQyxFQUFFdkUsRUFBRTBvQyxRQUFRMW9DLEVBQUUwb0MsYUFBUSxPQUFPLElBQVNua0MsR0FBR0EsS0FBS3ZFLEVBQUV5TCxJQUFJZ0ssS0FBS3d3QixLQUFLMWhDLEVBQUV2RSxFQUFFZ0IsT0FBT2hCLEVBQUUwb0MsUUFBUW5rQyxLQUFLdkUsRUFBRUEsRUFBRXNZLFdBQVd0WSxJQUFJRCxJQUdqTyxTQUFTOHRDLEdBQUdyNEIsR0FBaUMsT0FBOUIsbUJBQW9Cd3JCLElBQUlBLEdBQUd4ckIsR0FBVUEsRUFBRS9KLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLElBQUlnSyxFQUFFRCxFQUFFK3JCLFlBQVksR0FBRyxPQUFPOXJCLEdBQW1CLFFBQWZBLEVBQUVBLEVBQUVnc0IsWUFBcUIsQ0FBQyxJQUFJMWhDLEVBQUUwVixFQUFFQSxFQUFFNkMsS0FBSyxFQUFFLENBQUMsSUFBSXRZLEVBQUVELEVBQUUyb0MsUUFBUSxRQUFHLElBQVMxb0MsRUFBRSxDQUFDLElBQUl1RSxFQUFFaVIsRUFBRSxJQUFJeFYsSUFBSSxNQUFNNFYsR0FBRyszQixHQUFHcHBDLEVBQUVxUixJQUFJN1YsRUFBRUEsRUFBRXVZLFdBQVd2WSxJQUFJMFYsR0FBRyxNQUFNLEtBQUssRUFBc0IsR0FBcEJpNEIsR0FBR2w0QixHQUFvQixtQkFBakJDLEVBQUVELEVBQUUwSSxXQUFtQzR2QixxQkFBcUIsSUFBSXI0QixFQUFFN0QsTUFBTTRELEVBQUVnc0IsY0FBYy9yQixFQUFFN0csTUFBTTRHLEVBQUU4ckIsY0FBYzdyQixFQUFFcTRCLHVCQUF1QixNQUFNbDRCLEdBQUcrM0IsR0FBR240QixFQUFFSSxHQUFHLE1BQU0sS0FBSyxFQUFFODNCLEdBQUdsNEIsR0FBRyxNQUFNLEtBQUssRUFBRXU0QixHQUFHdjRCLElBQy9jLFNBQVN3NEIsR0FBR3g0QixHQUFHLE9BQU8sSUFBSUEsRUFBRS9KLEtBQUssSUFBSStKLEVBQUUvSixLQUFLLElBQUkrSixFQUFFL0osSUFDbEQsU0FBU3dpQyxHQUFHejRCLEdBQUdBLEVBQUUsQ0FBQyxJQUFJLElBQUlDLEVBQUVELEVBQUVxSixPQUFPLE9BQU9wSixHQUFHLENBQUMsR0FBR3U0QixHQUFHdjRCLEdBQUcsQ0FBQyxJQUFJMVYsRUFBRTBWLEVBQUUsTUFBTUQsRUFBRUMsRUFBRUEsRUFBRW9KLE9BQU83SixFQUFFLE9BQU9qVixPQUFFLEVBQU8sSUFBSUMsRUFBRXlWLE9BQUUsRUFBTyxPQUFPMVYsRUFBRTBMLEtBQUssS0FBSyxFQUFFZ0ssRUFBRTFWLEVBQUVtZSxVQUFVbGUsR0FBRSxFQUFHLE1BQU0sS0FBSyxFQUF5QyxLQUFLLEVBQUV5VixFQUFFMVYsRUFBRW1lLFVBQVUrVyxjQUFjajFCLEdBQUUsRUFBRyxNQUFNLFFBQVFnVixFQUFFLE9BQW1CLEdBQVpqVixFQUFFcXZCLFlBQWVpTCxHQUFHNWtCLEVBQUUsSUFBSTFWLEVBQUVxdkIsWUFBWSxJQUFJNVosRUFBRUMsRUFBRSxJQUFJMVYsRUFBRXlWLElBQUksQ0FBQyxLQUFLLE9BQU96VixFQUFFd3ZCLFNBQVMsQ0FBQyxHQUFHLE9BQU94dkIsRUFBRThlLFFBQVFtdkIsR0FBR2p1QyxFQUFFOGUsUUFBUSxDQUFDOWUsRUFBRSxLQUFLLE1BQU15VixFQUFFelYsRUFBRUEsRUFBRThlLE9BQWlDLElBQTFCOWUsRUFBRXd2QixRQUFRMVEsT0FBTzllLEVBQUU4ZSxPQUFXOWUsRUFBRUEsRUFBRXd2QixRQUFRLElBQUl4dkIsRUFBRTBMLEtBQUssSUFBSTFMLEVBQUUwTCxLQUFLLEtBQUsxTCxFQUFFMEwsS0FBSyxDQUFDLEdBQzdlLEVBRGdmMUwsRUFBRXF2QixVQUNoZixTQUFTM1osRUFBRSxHQUFHLE9BQU8xVixFQUFFbVEsT0FBTyxJQUFJblEsRUFBRTBMLElBQUksU0FBU2dLLEVBQU8xVixFQUFFbVEsTUFBTTJPLE9BQU85ZSxFQUFFQSxFQUFFQSxFQUFFbVEsTUFBTSxLQUFpQixFQUFablEsRUFBRXF2QixXQUFhLENBQUNydkIsRUFBRUEsRUFBRW1lLFVBQVUsTUFBTTFJLEdBQUcsSUFBSSxJQUFJalIsRUFBRWlSLElBQUksQ0FBQyxHQUFHLElBQUlqUixFQUFFa0gsS0FBSyxJQUFJbEgsRUFBRWtILElBQUksR0FBRzFMLEVBQUUsR0FBR0MsRUFBRSxDQUFDLElBQUk0VixFQUFFSCxFQUFFQyxFQUFFblIsRUFBRTJaLFVBQVV2SSxFQUFFNVYsRUFBRSxJQUFJNlYsRUFBRXlRLFNBQVN6USxFQUFFdFAsV0FBV0wsYUFBYXlQLEVBQUVDLEdBQUdDLEVBQUUzUCxhQUFheVAsRUFBRUMsUUFBUUYsRUFBRXhQLGFBQWExQixFQUFFMlosVUFBVW5lLFFBQVFDLEdBQUcwVixFQUFFRCxFQUFFRSxFQUFFcFIsRUFBRTJaLFVBQVUsSUFBSXhJLEVBQUUyUSxVQUFVelEsRUFBRUYsRUFBRXBQLFlBQWFMLGFBQWEwUCxFQUFFRCxJQUFLRSxFQUFFRixHQUFJeFAsWUFBWXlQLEdBQTRCLE9BQXhCRCxFQUFFQSxFQUFFdzRCLHNCQUEwQyxPQUFPdDRCLEVBQUUwM0IsVUFBVTEzQixFQUFFMDNCLFFBQVF6TyxLQUFLcHBCLEVBQUV2UCxZQUFZM0IsRUFBRTJaLGdCQUNsZixHQUFHLElBQUkzWixFQUFFa0gsS0FBSyxPQUFPbEgsRUFBRTJMLE1BQU0sQ0FBQzNMLEVBQUUyTCxNQUFNMk8sT0FBT3RhLEVBQUVBLEVBQUVBLEVBQUUyTCxNQUFNLFNBQVMsR0FBRzNMLElBQUlpUixFQUFFLE1BQU0sS0FBSyxPQUFPalIsRUFBRWdyQixTQUFTLENBQUMsR0FBRyxPQUFPaHJCLEVBQUVzYSxRQUFRdGEsRUFBRXNhLFNBQVNySixFQUFFLE9BQU9qUixFQUFFQSxFQUFFc2EsT0FBT3RhLEVBQUVnckIsUUFBUTFRLE9BQU90YSxFQUFFc2EsT0FBT3RhLEVBQUVBLEVBQUVnckIsU0FDL0wsU0FBU3dlLEdBQUd2NEIsR0FBRyxJQUFJLElBQUlDLEVBQUVELEVBQUV6VixHQUFFLEVBQUdDLE9BQUUsRUFBT3VFLE9BQUUsSUFBUyxDQUFDLElBQUl4RSxFQUFFLENBQUNBLEVBQUUwVixFQUFFb0osT0FBT3JKLEVBQUUsT0FBTyxDQUEwQixPQUF6QixPQUFPelYsR0FBRWlWLEVBQUUsT0FBcUJqVixFQUFFMEwsS0FBSyxLQUFLLEVBQUV6TCxFQUFFRCxFQUFFbWUsVUFBVTNaLEdBQUUsRUFBRyxNQUFNaVIsRUFBRSxLQUFLLEVBQTJDLEtBQUssRUFBRXhWLEVBQUVELEVBQUVtZSxVQUFVK1csY0FBYzF3QixHQUFFLEVBQUcsTUFBTWlSLEVBQUV6VixFQUFFQSxFQUFFOGUsT0FBTzllLEdBQUUsRUFBRyxHQUFHLElBQUkwVixFQUFFaEssS0FBSyxJQUFJZ0ssRUFBRWhLLElBQUksQ0FBQytKLEVBQUUsSUFBSSxJQUFJSSxFQUFFSCxFQUFFQyxFQUFFRSxJQUFJLEdBQUdpNEIsR0FBR240QixHQUFHLE9BQU9BLEVBQUV4RixPQUFPLElBQUl3RixFQUFFakssSUFBSWlLLEVBQUV4RixNQUFNMk8sT0FBT25KLEVBQUVBLEVBQUVBLEVBQUV4RixVQUFVLENBQUMsR0FBR3dGLElBQUlFLEVBQUUsTUFBTSxLQUFLLE9BQU9GLEVBQUU2WixTQUFTLENBQUMsR0FBRyxPQUFPN1osRUFBRW1KLFFBQVFuSixFQUFFbUosU0FBU2pKLEVBQUUsTUFBTUosRUFBRUUsRUFBRUEsRUFBRW1KLE9BQU9uSixFQUFFNlosUUFBUTFRLE9BQU9uSixFQUFFbUosT0FBT25KLEVBQUVBLEVBQUU2WixRQUFRaHJCLEdBQzFmcVIsRUFBRTVWLEVBQUUwVixFQUFFRCxFQUFFeUksVUFBVSxJQUFJdEksRUFBRXlRLFNBQVN6USxFQUFFdFAsV0FBV0MsWUFBWW1QLEdBQUdFLEVBQUVyUCxZQUFZbVAsSUFBSTFWLEVBQUV1RyxZQUFZa1AsRUFBRXlJLGdCQUFnQixHQUFHLElBQUl6SSxFQUFFaEssS0FBSyxHQUFHLE9BQU9nSyxFQUFFdkYsTUFBTSxDQUFDbFEsRUFBRXlWLEVBQUV5SSxVQUFVK1csY0FBYzF3QixHQUFFLEVBQUdrUixFQUFFdkYsTUFBTTJPLE9BQU9wSixFQUFFQSxFQUFFQSxFQUFFdkYsTUFBTSxlQUFlLEdBQUcyOUIsR0FBR3A0QixHQUFHLE9BQU9BLEVBQUV2RixNQUFNLENBQUN1RixFQUFFdkYsTUFBTTJPLE9BQU9wSixFQUFFQSxFQUFFQSxFQUFFdkYsTUFBTSxTQUFTLEdBQUd1RixJQUFJRCxFQUFFLE1BQU0sS0FBSyxPQUFPQyxFQUFFOFosU0FBUyxDQUFDLEdBQUcsT0FBTzlaLEVBQUVvSixRQUFRcEosRUFBRW9KLFNBQVNySixFQUFFLE9BQWtCLEtBQVhDLEVBQUVBLEVBQUVvSixRQUFhcFQsTUFBTTFMLEdBQUUsR0FBSTBWLEVBQUU4WixRQUFRMVEsT0FBT3BKLEVBQUVvSixPQUFPcEosRUFBRUEsRUFBRThaLFNBQ25hLFNBQVM0ZSxHQUFHMzRCLEVBQUVDLEdBQUcsT0FBT0EsRUFBRWhLLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHbWlDLEdBQUd6SCxHQUFHQyxHQUFHM3dCLEdBQUcsTUFBTSxLQUFLLEVBQUUsTUFBTSxLQUFLLEVBQUUsSUFBSTFWLEVBQUUwVixFQUFFeUksVUFBVSxHQUFHLE1BQU1uZSxFQUFFLENBQUMsSUFBSUMsRUFBRXlWLEVBQUUrckIsY0FBY2hzQixFQUFFLE9BQU9BLEVBQUVBLEVBQUVnc0IsY0FBY3hoQyxFQUFFLElBQUl1RSxFQUFFa1IsRUFBRTFPLEtBQUs2TyxFQUFFSCxFQUFFOHJCLFlBQVk5ckIsRUFBRThyQixZQUFZLEtBQUssT0FBTzNyQixHQWpHNU8sU0FBWUosRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxHQUFHaVIsRUFBRStJLEdBQUloYSxFQUFFLFVBQVV4RSxHQUFHLFVBQVV3RSxFQUFFd0MsTUFBTSxNQUFNeEMsRUFBRXRFLE1BQU1xcUIsR0FBRzlVLEVBQUVqUixHQUFHazZCLEdBQUcxK0IsRUFBRUMsR0FBR0EsRUFBRXkrQixHQUFHMStCLEVBQUV3RSxHQUFHLElBQUksSUFBSXFSLEVBQUUsRUFBRUEsRUFBRUgsRUFBRXZTLE9BQU8wUyxHQUFHLEVBQUUsQ0FBQyxJQUFJRixFQUFFRCxFQUFFRyxHQUFHRCxFQUFFRixFQUFFRyxFQUFFLEdBQUcsVUFBVUYsRUFBRTRuQixHQUFHOW5CLEVBQUVHLEdBQUcsNEJBQTRCRCxFQUFFdWtCLEdBQUd6a0IsRUFBRUcsR0FBRyxhQUFhRCxFQUFFMmtCLEdBQUc3a0IsRUFBRUcsR0FBRzBULEdBQUc3VCxFQUFFRSxFQUFFQyxFQUFFM1YsR0FBRyxPQUFPRCxHQUFHLElBQUssUUFBUXdxQixHQUFHL1UsRUFBRWpSLEdBQUcsTUFBTSxJQUFLLFdBQVc0MEIsR0FBRzNqQixFQUFFalIsR0FBRyxNQUFNLElBQUssU0FBU2tSLEVBQUVELEVBQUV5VSxjQUFjbWtCLFlBQVk1NEIsRUFBRXlVLGNBQWNta0IsY0FBYzdwQyxFQUFFOHBDLFNBQW1CLE9BQVZ0dUMsRUFBRXdFLEVBQUU1RCxPQUFjazRCLEdBQUdyakIsSUFBSWpSLEVBQUU4cEMsU0FBU3R1QyxHQUFFLEdBQUkwVixNQUFNbFIsRUFBRThwQyxXQUFXLE1BQU05cEMsRUFBRXlsQixhQUFhNk8sR0FBR3JqQixJQUFJalIsRUFBRThwQyxTQUFTOXBDLEVBQUV5bEIsY0FDbGYsR0FBSTZPLEdBQUdyakIsSUFBSWpSLEVBQUU4cEMsU0FBUzlwQyxFQUFFOHBDLFNBQVMsR0FBRyxJQUFHLEtBZ0d3TUMsQ0FBR3Z1QyxFQUFFNlYsRUFBRXJSLEVBQUVpUixFQUFFeFYsR0FBSyxNQUFNLEtBQUssRUFBRSxPQUFPeVYsRUFBRXlJLFdBQVVsSixFQUFFLE9BQWNTLEVBQUV5SSxVQUFVcWMsVUFBVTlrQixFQUFFK3JCLGNBQWMsTUFBTSxLQUFLLEVBQVEsS0FBSyxHQUFHLE1BQU0sS0FBSyxHQUM3VyxHQURnWHpoQyxFQUFFMFYsRUFBRTZyQixjQUFjdGhDLE9BQUUsRUFBT3dWLEVBQUVDLEVBQUUsT0FBTzFWLEVBQUVDLEdBQUUsR0FBSUEsR0FBRSxFQUFHd1YsRUFBRUMsRUFBRXZGLE1BQU0sSUFBSW5RLEVBQUU4cUMsYUFBYTlxQyxFQUFFOHFDLFdBQVd0SCxPQUFPLE9BQU8vdEIsR0FUemUsU0FBWUEsRUFBRUMsR0FBRyxJQUFJLElBQUkxVixFQUFFeVYsSUFBSSxDQUFDLEdBQUcsSUFBSXpWLEVBQUUwTCxJQUFJLENBQUMsSUFBSXpMLEVBQUVELEVBQUVtZSxVQUFVLEdBQUd6SSxFQUFFelYsRUFBRTJGLE1BQU00b0MsUUFBUSxXQUFXLENBQUN2dUMsRUFBRUQsRUFBRW1lLFVBQVUsSUFBSTNaLEVBQUV4RSxFQUFFeWhDLGNBQWM3N0IsTUFBTXBCLEVBQUUsTUFBU0EsR0FBYUEsRUFBRWhELGVBQWUsV0FBV2dELEVBQUVncUMsUUFBUSxLQUFLdnVDLEVBQUUyRixNQUFNNG9DLFFBQVFuUixHQUFHLFVBQVU3NEIsU0FBUyxHQUFHLElBQUl4RSxFQUFFMEwsSUFBSTFMLEVBQUVtZSxVQUFVcWMsVUFBVTlrQixFQUFFLEdBQUcxVixFQUFFeWhDLGtCQUFtQixJQUFHLEtBQUt6aEMsRUFBRTBMLEtBQUssT0FBTzFMLEVBQUV1aEMsY0FBYyxFQUFDdGhDLEVBQUVELEVBQUVtUSxNQUFNcWYsU0FBVTFRLE9BQU85ZSxFQUFFQSxFQUFFQyxFQUFFLFNBQWMsR0FBRyxPQUFPRCxFQUFFbVEsTUFBTSxDQUFDblEsRUFBRW1RLE1BQU0yTyxPQUFPOWUsRUFBRUEsRUFBRUEsRUFBRW1RLE1BQU0sVUFBUyxHQUFHblEsSUFBSXlWLEVBQUUsTUFBTSxLQUFLLE9BQU96VixFQUFFd3ZCLFNBQVMsQ0FBQyxHQUFHLE9BQU94dkIsRUFBRThlLFFBQ2pmOWUsRUFBRThlLFNBQVNySixFQUFFLE9BQU96VixFQUFFQSxFQUFFOGUsT0FBTzllLEVBQUV3dkIsUUFBUTFRLE9BQU85ZSxFQUFFOGUsT0FBTzllLEVBQUVBLEVBQUV3dkIsU0FRK2FpZixDQUFHaDVCLEVBQUV4VixHQUNoZSxRQURtZUQsRUFDcGYwVixFQUFFOHJCLGFBQXdCLENBQUM5ckIsRUFBRThyQixZQUFZLEtBQUssSUFBSTdyQixFQUFFRCxFQUFFeUksVUFBVSxPQUFPeEksSUFBSUEsRUFBRUQsRUFBRXlJLFVBQVUsSUFBSXF2QixJQUFJeHRDLEVBQUV1SCxRQUFRLFNBQVNrTyxHQUFHLElBQUl6VixFQStCMEwsU0FBWXlWLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUV5VixFQUFFMEksVUFBVSxPQUFPbmUsR0FBR0EsRUFBRXNsQyxPQUFPNXZCLEdBQVVBLEVBQUVndUIsR0FBVGh1QixFQUFFOHRCLEtBQVkvdEIsR0FBYSxRQUFWQSxFQUFFaTVCLEdBQUdqNUIsRUFBRUMsTUFBYzhzQixHQUFHL3NCLEVBQUVDLEdBQXNCLEtBQW5CQSxFQUFFRCxFQUFFcXNCLGlCQUFzQjZNLEdBQUdsNUIsRUFBRUMsS0EvQjNUdlUsS0FBSyxLQUFLdVUsRUFBRUQsR0FBR0UsRUFBRWk1QixJQUFJbjVCLEtBQUtFLEVBQUVrNUIsSUFBSXA1QixHQUFHQSxFQUFFeTFCLEtBQUtsckMsRUFBRUEsTUFBTSxNQUFNLEtBQUssR0FBRyxNQUFNLFFBQVFpVixFQUFFLFFBQVEsSUFBSTY1QixHQUFHLG1CQUFvQkMsUUFBUUEsUUFBUTFKLElBQUksU0FBUzJKLEdBQUd2NUIsRUFBRUMsRUFBRTFWLElBQUdBLEVBQUV5akMsR0FBR3pqQyxJQUFLMEwsSUFBSXNnQyxHQUFHaHNDLEVBQUUyakMsUUFBUSxDQUFDeDBCLFFBQVEsTUFBTSxJQUFJbFAsRUFBRXlWLEVBQUU5VSxNQUEyQyxPQUFyQ1osRUFBRTRqQyxTQUFTLFdBQVdxTCxHQUFHaHZDLEdBQUd5dEMsR0FBR2o0QixFQUFFQyxJQUFXMVYsRUFDOVgsU0FBU2t2QyxHQUFHejVCLEVBQUVDLEVBQUUxVixJQUFHQSxFQUFFeWpDLEdBQUd6akMsSUFBSzBMLElBQUlzZ0MsR0FBRyxJQUFJL3JDLEVBQUV3VixFQUFFek8sS0FBSzBqQyx5QkFBeUIsR0FBRyxtQkFBb0J6cUMsRUFBRSxDQUFDLElBQUl1RSxFQUFFa1IsRUFBRTlVLE1BQU1aLEVBQUUyakMsUUFBUSxXQUFXLE9BQU8xakMsRUFBRXVFLElBQUksSUFBSXFSLEVBQUVKLEVBQUUwSSxVQUFrUCxPQUF4TyxPQUFPdEksR0FBRyxtQkFBb0JBLEVBQUVzNUIsb0JBQW9CbnZDLEVBQUU0akMsU0FBUyxXQUFXLG1CQUFvQjNqQyxJQUFJLE9BQU9tdkMsR0FBR0EsR0FBRyxJQUFJejdCLElBQUksQ0FBQzdSLE9BQU9zdEMsR0FBR1AsSUFBSS9zQyxPQUFPLElBQUk5QixFQUFFMFYsRUFBRTlVLE1BQU00RCxFQUFFa1IsRUFBRXMzQixNQUFNVSxHQUFHajRCLEVBQUVDLEdBQUc1VCxLQUFLcXRDLGtCQUFrQm52QyxFQUFFLENBQUNxdkMsZUFBZSxPQUFPN3FDLEVBQUVBLEVBQUUsT0FBY3hFLEVBQ3JaLFNBQVNzdkMsR0FBRzc1QixHQUFHLE9BQU9BLEVBQUUvSixLQUFLLEtBQUssRUFBRXdMLEdBQUV6QixFQUFFek8sT0FBT3c1QixLQUFNLElBQUk5cUIsRUFBRUQsRUFBRTRaLFVBQVUsT0FBUyxLQUFGM1osR0FBUUQsRUFBRTRaLFdBQWEsS0FBSDNaLEVBQVEsR0FBR0QsR0FBRyxLQUFLLEtBQUssRUFBRSxPQUFPc3dCLEtBQU10RixLQUFvQixJQUFPLElBQXJCL3FCLEVBQUVELEVBQUU0WixhQUFxQnBhLEVBQUUsT0FBY1EsRUFBRTRaLFdBQWEsS0FBSDNaLEVBQVEsR0FBR0QsRUFBRSxLQUFLLEVBQUUsT0FBT3d3QixHQUFHeHdCLEdBQUcsS0FBSyxLQUFLLEdBQUcsT0FBdUIsTUFBaEJDLEVBQUVELEVBQUU0WixZQUFrQjVaLEVBQUU0WixXQUFhLEtBQUgzWixFQUFRLEdBQUdELEdBQUcsS0FBSyxLQUFLLEdBQUcsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPc3dCLEtBQU0sS0FBSyxLQUFLLEdBQUcsT0FBTytGLEdBQUdyMkIsR0FBRyxLQUFLLFFBQVEsT0FBTyxNQUNwWSxJQUFJODVCLEdBQUdub0IsR0FBRzNMLHVCQUF1Qit6QixHQUFHcG9CLEdBQUcxTCxrQkFBa0IrekIsR0FBRyxXQUFXQyxJQUFHLEVBQUdwM0IsR0FBRSxLQUFLcTNCLEdBQUcsS0FBS3YzQixHQUFFLEVBQUV3M0IsSUFBSSxFQUFFQyxJQUFHLEVBQUcvMkIsR0FBRSxLQUFLZzNCLElBQUcsRUFBR0MsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLEdBQUcsS0FBS2IsR0FBRyxLQUFLLFNBQVNjLEtBQUssR0FBRyxPQUFPNTNCLEdBQUUsSUFBSSxJQUFJN0MsRUFBRTZDLEdBQUV3RyxPQUFPLE9BQU9ySixHQUFHLENBQUMsSUFBSUMsRUFBRUQsRUFBRSxPQUFPQyxFQUFFaEssS0FBSyxLQUFLLEVBQUUsSUFBSTFMLEVBQUUwVixFQUFFMU8sS0FBS3U1QixrQkFBa0IsTUFBT3ZnQyxHQUFld2dDLEtBQU0sTUFBTSxLQUFLLEVBQUV1RixLQUFNdEYsS0FBTSxNQUFNLEtBQUssRUFBRXdGLEdBQUd2d0IsR0FBRyxNQUFNLEtBQUssRUFBRXF3QixLQUFNLE1BQU0sS0FBSyxHQUFHK0YsR0FBR3AyQixHQUFHRCxFQUFFQSxFQUFFcUosT0FBTzZ3QixHQUFHLEtBQUt2M0IsR0FBRSxFQUFFdzNCLElBQUksRUFBRUMsSUFBRyxFQUFHdjNCLEdBQUUsS0FDamEsU0FBUzYzQixLQUFLLEtBQUssT0FBT3IzQixJQUFHLENBQUMsSUFBSXJELEVBQUVxRCxHQUFFdVcsVUFBbUMsR0FBdkIsR0FBRjVaLEdBQU02a0IsR0FBR3hoQixHQUFFcUYsVUFBVSxJQUFTLElBQUYxSSxFQUFNLENBQUMsSUFBSUMsRUFBRW9ELEdBQUVrVyxVQUFVLE9BQU90WixJQUFZLFFBQVJBLEVBQUVBLEVBQUUyQixPQUFlLG1CQUFvQjNCLEVBQUVBLEVBQUUsTUFBTUEsRUFBRXVCLFFBQVEsT0FBTyxPQUFTLEdBQUZ4QixHQUFNLEtBQUssRUFBRXk0QixHQUFHcDFCLElBQUdBLEdBQUV1VyxZQUFZLEVBQUUsTUFBTSxLQUFLLEVBQUU2ZSxHQUFHcDFCLElBQUdBLEdBQUV1VyxZQUFZLEVBQUUrZSxHQUFHdDFCLEdBQUVrVyxVQUFVbFcsSUFBRyxNQUFNLEtBQUssRUFBRXMxQixHQUFHdDFCLEdBQUVrVyxVQUFVbFcsSUFBRyxNQUFNLEtBQUssRUFBTWsxQixHQUFKdjRCLEVBQUVxRCxJQUFRckQsRUFBRXFKLE9BQU8sS0FBS3JKLEVBQUV0RixNQUFNLEtBQUtzRixFQUFFOHJCLGNBQWMsS0FBSzlyQixFQUFFK3JCLFlBQVksS0FBbUIsUUFBZC9yQixFQUFFQSxFQUFFdVosYUFBcUJ2WixFQUFFcUosT0FBTyxLQUFLckosRUFBRXRGLE1BQU0sS0FBS3NGLEVBQUU4ckIsY0FBYyxLQUFLOXJCLEVBQUUrckIsWUFBWSxNQUFNMW9CLEdBQUVBLEdBQUU4b0IsWUFDM2UsU0FBU3dPLEtBQUssS0FBSyxPQUFPdDNCLElBQUcsQ0FBQyxHQUFlLElBQVpBLEdBQUV1VyxVQUFjNVosRUFBRSxDQUFDLElBQUlBLEVBQUVxRCxHQUFFa1csVUFBVXRaLEVBQUVvRCxHQUFFLE9BQU9wRCxFQUFFaEssS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBR21pQyxHQUFHMUgsR0FBR0QsR0FBR3h3QixHQUFHLE1BQU1ELEVBQUUsS0FBSyxFQUFFLEdBQWUsSUFBWkMsRUFBRTJaLFdBQWUsT0FBTzVaLEVBQUUsQ0FBQyxJQUFJelYsRUFBRXlWLEVBQUVnc0IsY0FBY3hoQyxFQUFFd1YsRUFBRThyQixjQUE0QjdyQixHQUFkRCxFQUFFQyxFQUFFeUksV0FBY3ltQix3QkFBd0JsdkIsRUFBRTByQixjQUFjMXJCLEVBQUUxTyxLQUFLaEgsRUFBRW9YLEdBQUUxQixFQUFFMU8sS0FBS2hILEdBQUdDLEdBQUd3VixFQUFFNDZCLG9DQUFvQzM2QixFQUFFLE1BQU1ELEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxNQUFNQSxFQUFFLFFBQVFSLEVBQUUsUUFBUTZELEdBQUVBLEdBQUU4b0IsWUFDcFosU0FBUzBPLEdBQUc3NkIsRUFBRUMsR0FBRyxLQUFLLE9BQU9vRCxJQUFHLENBQUMsSUFBSTlZLEVBQUU4WSxHQUFFdVcsVUFBVSxHQUFLLEdBQUZydkIsRUFBSyxDQUFDLElBQUlDLEVBQUU2WSxHQUFFa1csVUFBVXhxQixFQUFFc1UsR0FBRWpELEVBQUVILEVBQUUsT0FBT2xSLEVBQUVrSCxLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHbWlDLEdBQUd2SCxHQUFHQyxHQUFHL2hDLEdBQUcsTUFBTSxLQUFLLEVBQUUsSUFBSW1SLEVBQUVuUixFQUFFMlosVUFBVSxHQUFlLEVBQVozWixFQUFFNnFCLFVBQVksR0FBRyxPQUFPcHZCLEVBQUUwVixFQUFFb3ZCLHdCQUF3QixDQUFDLElBQUludkIsRUFBRXBSLEVBQUU0OEIsY0FBYzU4QixFQUFFd0MsS0FBSy9HLEVBQUV3aEMsY0FBY3JxQixHQUFFNVMsRUFBRXdDLEtBQUsvRyxFQUFFd2hDLGVBQWU5ckIsRUFBRTYwQixtQkFBbUI1MEIsRUFBRTNWLEVBQUVzaEMsY0FBYzVyQixFQUFFMDZCLHFDQUFxRCxRQUFoQnB3QyxFQUFFdUUsRUFBRWc5QixjQUFzQnFMLEdBQUdyb0MsRUFBRXZFLEVBQUUwVixHQUFLLE1BQU0sS0FBSyxFQUFrQixHQUFHLFFBQW5CMVYsRUFBRXVFLEVBQUVnOUIsYUFBd0IsQ0FBUSxHQUFQN3JCLEVBQUUsS0FBUSxPQUFPblIsRUFBRTJMLE1BQU0sT0FBTzNMLEVBQUUyTCxNQUFNekUsS0FBSyxLQUFLLEVBQUVpSyxFQUN2Zm5SLEVBQUUyTCxNQUFNZ08sVUFBVSxNQUFNLEtBQUssRUFBRXhJLEVBQUVuUixFQUFFMkwsTUFBTWdPLFVBQVUwdUIsR0FBR3JvQyxFQUFFdkUsRUFBRTBWLEdBQUssTUFBTSxLQUFLLEVBQUVFLEVBQUVyUixFQUFFMlosVUFBVSxPQUFPbGUsR0FBZSxFQUFadUUsRUFBRTZxQixXQUFhNFAsR0FBR3o2QixFQUFFd0MsS0FBS3hDLEVBQUVpOUIsZ0JBQWdCNXJCLEVBQUVvaUIsUUFBUSxNQUFNLEtBQUssRUFBUSxLQUFLLEVBQVEsS0FBSyxHQUFTLEtBQUssR0FBUyxLQUFLLEdBQUcsTUFBTSxRQUFRaGpCLEVBQUUsUUFBVSxJQUFGalYsSUFBZ0IsUUFBUndFLEVBQUVzVSxHQUFFekIsT0FBZXhCLEVBQUVpRCxHQUFFcUYsVUFBVSxtQkFBb0IzWixFQUFFQSxFQUFFcVIsR0FBR3JSLEVBQUV5UyxRQUFRcEIsSUFBTSxJQUFGN1YsSUFBUSt2QyxHQUFHdDZCLEdBQUdxRCxHQUFFQSxHQUFFOG9CLFlBQ3RHLFNBQVNpQyxLQUFLLE9BQU9tTSxJQUFJclEsR0FBR3FRLElBQUksT0FBT0MsSUFBSUEsS0FDOVIsU0FBU00sR0FBRzk2QixFQUFFQyxHQUFHbzZCLEdBQUdKLElBQUcsRUFBR2o2QixFQUFFd0IsVUFBVXZCLEdBQUVULEVBQUUsT0FBYyxJQUFJalYsRUFBRXlWLEVBQUUrNkIsNEJBQTRCLElBQUl4d0MsR0FBRWlWLEVBQUUsT0FBY1EsRUFBRSs2Qiw0QkFBNEIsRUFBRSxJQUFJdndDLEVBQUV5VixFQUFFb3NCLGVBQWV0OUIsRUFBRWtSLEVBQUVtc0Isb0JBQWlMLElBOUY5VixTQUFZcHNCLEVBQUVDLEdBQWlCLEdBQWRELEVBQUVndEIsVUFBUyxFQUFNLElBQUkvc0IsRUFBRUQsRUFBRWl0QixvQkFBb0IsRUFBRWp0QixFQUFFa3RCLGtCQUFrQixFQUFFbHRCLEVBQUVzdEIsc0JBQXNCLEVBQUV0dEIsRUFBRXV0QixvQkFBb0IsRUFBRXZ0QixFQUFFcXRCLGlCQUFpQixNQUFNLENBQUNwdEIsRUFBRUQsRUFBRXF0QixtQkFBbUJydEIsRUFBRXF0QixpQkFBaUIsR0FBRyxJQUFJOWlDLEVBQUV5VixFQUFFa3RCLGtCQUFrQixJQUFJM2lDLElBQUlBLEVBQUUwVixFQUFFRCxFQUFFaXRCLG9CQUFvQmp0QixFQUFFa3RCLGtCQUFrQixFQUFFbHRCLEVBQUVpdEIsb0JBQW9CaHRCLElBQUlELEVBQUVpdEIsb0JBQW9CanRCLEVBQUVrdEIsb0JBQThDLEtBQTFCM2lDLEVBQUV5VixFQUFFc3RCLHVCQUE0QlAsR0FBRy9zQixFQUFFQyxHQUFHQSxFQUFFRCxFQUFFdXRCLHFCQUFxQnZ0QixFQUFFc3RCLHNCQUFzQixFQUFFdHRCLEVBQUV1dEIsb0JBQW9CLEVBQUV2dEIsRUFBRXF0QixpQkFBaUIsRUFBRU4sR0FBRy9zQixFQUFFQyxJQUNwZkEsRUFBRTFWLEdBQUd3aUMsR0FBRy9zQixFQUFFQyxHQUFHa3RCLEdBQUcsRUFBRW50QixHQTZGK0tnN0IsQ0FBR2g3QixFQUFFalIsRUFBRXZFLEVBQUV1RSxFQUFFdkUsR0FBR3V2QyxHQUFHdjRCLFFBQVEsS0FBS2hYLE9BQUUsRUFBTyxFQUFFeVYsRUFBRTJaLFVBQVUsT0FBTzNaLEVBQUVnc0IsWUFBWWhzQixFQUFFZ3NCLFdBQVdFLFdBQVdsc0IsRUFBRXpWLEVBQUV5VixFQUFFaXNCLGFBQWExaEMsRUFBRXlWLEVBQUV6VixFQUFFeVYsRUFBRWlzQixZQUFZNUMsR0FBRzNKLEdBQUc0SixHQWpJaFYsV0FBYyxJQUFJdnBCLEVBQUV5Z0IsS0FBSyxHQUFHRSxHQUFHM2dCLEdBQUcsQ0FBQyxHQUFHLG1CQUFtQkEsRUFBRSxJQUFJQyxFQUFFLENBQUNtaEIsTUFBTXBoQixFQUFFc2hCLGVBQWVELElBQUlyaEIsRUFBRXVoQixtQkFBbUJ2aEIsRUFBRSxDQUE4QyxJQUFJelYsR0FBakQwVixHQUFHQSxFQUFFRCxFQUFFa1YsZ0JBQWdCalYsRUFBRW9aLGFBQWFwckIsUUFBZXd6QixjQUFjeGhCLEVBQUV3aEIsZUFBZSxHQUFHbDNCLEdBQUcsSUFBSUEsRUFBRW0zQixXQUFXLENBQUN6aEIsRUFBRTFWLEVBQUVvM0IsV0FBVyxJQUFJbjNCLEVBQUVELEVBQUVxM0IsYUFBYTd5QixFQUFFeEUsRUFBRXMzQixVQUFVdDNCLEVBQUVBLEVBQUV1M0IsWUFBWSxJQUFJN2hCLEVBQUU0USxTQUFTOWhCLEVBQUU4aEIsU0FBUyxNQUFNaFIsR0FBR0ksRUFBRSxLQUFLLE1BQU1ELEVBQUUsSUFBSUksRUFBRSxFQUFFRixHQUFHLEVBQUVDLEdBQUcsRUFBRWhXLEVBQUUsRUFBRStVLEVBQUUsRUFBRTVVLEVBQUUwVixFQUFFaFUsRUFBRSxLQUFLaVUsRUFBRSxPQUFPLENBQUMsSUFBSSxJQUFJN1UsRUFBS2QsSUFBSTJWLEdBQUcsSUFBSXpWLEdBQUcsSUFBSUYsRUFBRXVtQixXQUFXM1EsRUFBRUUsRUFBRTVWLEdBQUdGLElBQUl5RSxHQUFHLElBQUl4RSxHQUFHLElBQUlELEVBQUV1bUIsV0FBVzFRLEVBQUVDLEVBQUU3VixHQUFHLElBQUlELEVBQUV1bUIsV0FBV3pRLEdBQUc5VixFQUFFeTZCLFVBQVVyM0IsUUFDMWYsUUFBUXRDLEVBQUVkLEVBQUVxRyxhQUFrQjNFLEVBQUUxQixFQUFFQSxFQUFFYyxFQUFFLE9BQU8sQ0FBQyxHQUFHZCxJQUFJMFYsRUFBRSxNQUFNQyxFQUE4QyxHQUE1Q2pVLElBQUlpVSxLQUFLOVYsSUFBSUssSUFBSTBWLEVBQUVFLEdBQUdwVSxJQUFJK0MsS0FBS21RLElBQUkzVSxJQUFJNFYsRUFBRUMsR0FBTSxRQUFRaFYsRUFBRWQsRUFBRWtHLGFBQWEsTUFBVXhFLEdBQUoxQixFQUFFMEIsR0FBTThFLFdBQVd4RyxFQUFFYyxFQUFFNlUsR0FBRyxJQUFJQyxJQUFJLElBQUlDLEVBQUUsS0FBSyxDQUFDaWhCLE1BQU1saEIsRUFBRW1oQixJQUFJbGhCLFFBQVFGLEVBQUUsS0FBS0EsRUFBRUEsR0FBRyxDQUFDbWhCLE1BQU0sRUFBRUMsSUFBSSxRQUFRcGhCLEVBQUUsS0FBSyxNQUFNLENBQUM2Z0IsWUFBWTlnQixFQUFFK2dCLGVBQWU5Z0IsR0FnSXFEZzdCLEdBQUt0YixJQUFHLEVBQU90YyxHQUFFN1ksRUFBRSxPQUFPNlksSUFBRyxDQUFDdFUsR0FBRSxFQUFHLElBQUlxUixPQUFFLEVBQU8sSUFBSXU2QixLQUFLLE1BQU14NkIsR0FBR3BSLEdBQUUsRUFBR3FSLEVBQUVELEVBQUVwUixJQUFJLE9BQU9zVSxJQUFFN0QsRUFBRSxPQUFjMjRCLEdBQUc5MEIsR0FBRWpELEdBQUcsT0FBT2lELEtBQUlBLEdBQUVBLEdBQUU4b0IsYUFBYSxJQUFJOW9CLEdBQUU3WSxFQUFFLE9BQU82WSxJQUFHLENBQUN0VSxHQUFFLEVBQ3BmcVIsT0FBRSxFQUFPLElBQUlzNkIsS0FBSyxNQUFNdjZCLEdBQUdwUixHQUFFLEVBQUdxUixFQUFFRCxFQUFFcFIsSUFBSSxPQUFPc1UsSUFBRTdELEVBQUUsT0FBYzI0QixHQUFHOTBCLEdBQUVqRCxHQUFHLE9BQU9pRCxLQUFJQSxHQUFFQSxHQUFFOG9CLGFBQXdELElBQTNDdEwsR0FBRzBJLElBQUlBLEdBQUcsS0FBSzVKLEtBQUsySixHQUFHQSxHQUFHLEtBQUt0cEIsRUFBRXdCLFFBQVF2QixFQUFNb0QsR0FBRTdZLEVBQUUsT0FBTzZZLElBQUcsQ0FBQ3RVLEdBQUUsRUFBR3FSLE9BQUUsRUFBTyxJQUFJeTZCLEdBQUc3NkIsRUFBRXpWLEdBQUcsTUFBTTRWLEdBQUdwUixHQUFFLEVBQUdxUixFQUFFRCxFQUFFcFIsSUFBSSxPQUFPc1UsSUFBRTdELEVBQUUsT0FBYzI0QixHQUFHOTBCLEdBQUVqRCxHQUFHLE9BQU9pRCxLQUFJQSxHQUFFQSxHQUFFOG9CLGFBQWEsR0FBRyxPQUFPM2hDLEdBQUcsT0FBTzh2QyxHQUFHLENBQUMsSUFBSXA2QixFQUY1UyxTQUFZRixFQUFFQyxHQUFHdTZCLEdBQUdELEdBQUdELEdBQUcsS0FBSyxJQUFJL3ZDLEVBQUVnWixHQUFFQSxJQUFFLEVBQUcsRUFBRSxDQUFDLEdBQWUsSUFBWnRELEVBQUUyWixVQUFjLENBQUMsSUFBSXB2QixHQUFFLEVBQUd1RSxPQUFFLEVBQU8sSUFBSSxJQUFJcVIsRUFBRUgsRUFBRW00QixHQUFHcEgsR0FBR1AsR0FBR3J3QixHQUFHZzRCLEdBQUczSCxHQUFHTSxHQUFHM3dCLEdBQUcsTUFBTUYsR0FBRzFWLEdBQUUsRUFBR3VFLEVBQUVtUixFQUFFMVYsR0FBRzJ0QyxHQUFHbDRCLEVBQUVsUixHQUFHa1IsRUFBRUEsRUFBRWtzQixpQkFBaUIsT0FBT2xzQixHQUFHc0QsR0FBRWhaLEVBQXFCLEtBQW5CQSxFQUFFeVYsRUFBRXFzQixpQkFBc0I2TSxHQUFHbDVCLEVBQUV6VixHQUFHaVosSUFBR0QsSUFBRzIzQixHQUFHLFlBQVcsSUFFa0V4dkMsS0FBSyxLQUFLc1UsRUFBRXhWLEdBQUcrdkMsR0FBR3Z2QyxFQUFFbXdDLHlCQUF5Qm53QyxFQUFFb3dDLHdCQUF3QixXQUFXLE9BQU9wUixHQUFHOXBCLEtBQUtzNkIsR0FBR3Q2QixFQUFFKzVCLEdBQUdJLElBQUcsRUFBRyxtQkFBb0I5TyxJQUFJQSxHQUFHdHJCLEVBQUV5SSxXQUFXbmUsRUFBRTBWLEVBQUVvc0IsZUFDcGMsS0FEMmVwc0IsR0FBeEJBLEVBQUVBLEVBQUVtc0IscUJBQzdkN2hDLEVBQUUwVixFQUFFMVYsS0FBVW92QyxHQUFHLE1BdUI4WSxTQUFZMzVCLEVBQUVDLEdBQUdELEVBQUVxc0IsZUFBZXBzQixFQUFFRCxFQUFFcTdCLGFBQWEsS0F2QjNiQyxDQUFHdDdCLEVBQUVDLEdBQzlCLFNBQVNzN0IsR0FBR3Y3QixHQUFHLE9BQU8sQ0FBQyxJQUFJQyxFQUFFRCxFQUFFdVosVUFBVWh2QixFQUFFeVYsRUFBRXFKLE9BQU83ZSxFQUFFd1YsRUFBRStaLFFBQVEsR0FBRyxJQUFpQixLQUFaL1osRUFBRTRaLFdBQWdCLENBQUMvVyxHQUFFN0MsRUFBRUEsRUFBRSxDQUFDLElBQUlqUixFQUFFa1IsRUFBVUcsRUFBRXVDLEdBQU16QyxHQUFoQkQsRUFBRUQsR0FBa0I0ckIsYUFBYSxPQUFPM3JCLEVBQUVoSyxLQUFLLEtBQUssRUFBUSxLQUFLLEdBQUcsTUFBTSxLQUFLLEdBQUcsS0FBSyxFQUFFLE1BQU0sS0FBSyxFQUFFd0wsR0FBRXhCLEVBQUUxTyxPQUFPdzVCLEtBQU0sTUFBTSxLQUFLLEVBQUV1RixLQUFNdEYsTUFBTTlxQixFQUFFRCxFQUFFeUksV0FBWXlzQixpQkFBaUJqMUIsRUFBRVksUUFBUVosRUFBRWkxQixlQUFlajFCLEVBQUVpMUIsZUFBZSxNQUFTLE9BQU9wbUMsR0FBRyxPQUFPQSxFQUFFMkwsUUFBTXU1QixHQUFHaDBCLEdBQUdBLEVBQUUyWixZQUFZLEdBQUU4ZCxHQUFHejNCLEdBQUcsTUFBTSxLQUFLLEVBQUV1d0IsR0FBR3Z3QixHQUFHLElBQUlFLEVBQUVnd0IsR0FBR0QsR0FBRzF1QixTQUFrQixHQUFUcEIsRUFBRUgsRUFBRTFPLEtBQVEsT0FBT3hDLEdBQUcsTUFBTWtSLEVBQUV5SSxVQUFVaXZCLEdBQUc1b0MsRUFBRWtSLEVBQUVHLEVBQUVGLEVBQUVDLEdBQUdwUixFQUFFNlMsTUFBTTNCLEVBQUUyQixNQUFNM0IsRUFBRTJaLFdBQ3JmLFVBQVUsR0FBRzFaLEVBQUUsQ0FBQyxJQUFJL1YsRUFBRWdtQyxHQUFHaHVCLEdBQUVYLFNBQVMsR0FBR3l5QixHQUFHaDBCLEdBQUcsQ0FBS2xSLEdBQUptUixFQUFFRCxHQUFNeUksVUFBVSxJQUFJeEosRUFBRWdCLEVBQUUzTyxLQUFLakgsRUFBRTRWLEVBQUU4ckIsY0FBY2hnQyxFQUFFbVUsRUFBK0IsT0FBN0JwUixFQUFFK1osR0FBSTVJLEVBQUVuUixFQUFFZ2EsR0FBSXplLEVBQUU4VixPQUFFLEVBQU9ELEVBQUVqQixHQUFZLElBQUssU0FBUyxJQUFLLFNBQVMyQixHQUFFLE9BQU85UixHQUFHLE1BQU0sSUFBSyxRQUFRLElBQUssUUFBUSxJQUFJbVEsRUFBRSxFQUFFQSxFQUFFNEwsR0FBR3BkLE9BQU93UixJQUFJMkIsR0FBRWlLLEdBQUc1TCxHQUFHblEsR0FBRyxNQUFNLElBQUssU0FBUzhSLEdBQUUsUUFBUTlSLEdBQUcsTUFBTSxJQUFLLE1BQU0sSUFBSyxRQUFRLElBQUssT0FBTzhSLEdBQUUsUUFBUTlSLEdBQUc4UixHQUFFLE9BQU85UixHQUFHLE1BQU0sSUFBSyxPQUFPOFIsR0FBRSxRQUFROVIsR0FBRzhSLEdBQUUsU0FBUzlSLEdBQUcsTUFBTSxJQUFLLFVBQVU4UixHQUFFLFNBQVM5UixHQUFHLE1BQU0sSUFBSyxRQUFRNGxCLEdBQUc1bEIsRUFBRXpFLEdBQUd1VyxHQUFFLFVBQVU5UixHQUFHbzZCLEdBQUduOUIsRUFBRSxZQUFZLE1BQU0sSUFBSyxTQUFTK0MsRUFBRTBsQixjQUMxZixDQUFDbWtCLGNBQWN0dUMsRUFBRXV1QyxVQUFVaDRCLEdBQUUsVUFBVTlSLEdBQUdvNkIsR0FBR245QixFQUFFLFlBQVksTUFBTSxJQUFLLFdBQVcwM0IsR0FBRzMwQixFQUFFekUsR0FBR3VXLEdBQUUsVUFBVTlSLEdBQUdvNkIsR0FBR245QixFQUFFLFlBQTJCLElBQUlvVSxLQUFuQjRvQixHQUFHN29CLEVBQUU3VixHQUFHNFUsRUFBRSxLQUFjNVUsRUFBRUEsRUFBRXlCLGVBQWVxVSxLQUFLalcsRUFBRUcsRUFBRThWLEdBQUcsYUFBYUEsRUFBRSxpQkFBa0JqVyxFQUFFNEUsRUFBRW9jLGNBQWNoaEIsSUFBSStVLEVBQUUsQ0FBQyxXQUFXL1UsSUFBSSxpQkFBa0JBLEdBQUc0RSxFQUFFb2MsY0FBYyxHQUFHaGhCLElBQUkrVSxFQUFFLENBQUMsV0FBVyxHQUFHL1UsSUFBSWtkLEVBQUd0YixlQUFlcVUsSUFBSSxNQUFNalcsR0FBR2cvQixHQUFHbjlCLEVBQUVvVSxJQUFJLE9BQU9ELEdBQUcsSUFBSyxRQUFRNlEsR0FBR2ppQixHQUFHa21CLEdBQUdsbUIsRUFBRXpFLEdBQUUsR0FBSSxNQUFNLElBQUssV0FBVzBtQixHQUFHamlCLEdBQUc2MEIsR0FBRzcwQixHQUFLLE1BQU0sSUFBSyxTQUFTLElBQUssU0FBUyxNQUFNLFFBQVEsbUJBQW9CekUsRUFBRXV0QyxVQUNuZjlvQyxFQUFFK29DLFFBQVF6TyxJQUFJanBCLEVBQUVsQixFQUFFZ0IsRUFBRTZyQixZQUFZM3JCLEdBQUVGLEVBQUUsT0FBT0UsSUFBV28zQixHQUFHdjNCLE9BQU8sQ0FBQzNWLEVBQUUyVixFQUFFalUsRUFBRW9VLEVBQUVyUixFQUFFbVIsRUFBRWhCLEVBQUUsSUFBSWlCLEVBQUUwUSxTQUFTMVEsRUFBRUEsRUFBRStVLGNBQWMvcUIsSUFBSSs1QixHQUFHQyxPQUFPaDZCLEVBQUVtNkIsR0FBR3Q0QixJQUFJN0IsSUFBSSs1QixHQUFHQyxLQUFLLFdBQVduNEIsSUFBRytDLEVBQUVtUSxFQUFFOU4sY0FBYyxRQUFTeUwsVUFBVSxxQkFBdUJxQyxFQUFFblEsRUFBRWdDLFlBQVloQyxFQUFFNEIsYUFBYSxpQkFBa0I1QixFQUFFbTZCLEdBQUdocUIsRUFBRUEsRUFBRTlOLGNBQWNwRixFQUFFLENBQUNrOUIsR0FBR242QixFQUFFbTZCLE1BQU1ocUIsRUFBRUEsRUFBRTlOLGNBQWNwRixHQUFHLFdBQVdBLElBQUlBLEVBQUVrVCxFQUFFblEsRUFBRThwQyxTQUFTN3NDLEVBQUU2c0MsVUFBUyxFQUFHOXBDLEVBQUV5c0MsT0FBT3h2QyxFQUFFd3ZDLEtBQUt6c0MsRUFBRXlzQyxRQUFRdDhCLEVBQUVBLEVBQUV1OEIsZ0JBQWdCdHhDLEVBQUU2QixJQUFHK0MsRUFBRW1RLEdBQUk0SixHQUFJeGUsRUFBRXlFLEVBQUVnYSxHQUFJN0ksRUFBRXUzQixHQUFHMW9DLEVBQUVrUixHQUFFLEdBQUcsR0FBSWpVLEVBQUUrQyxFQUFVLElBQUkzRCxFQUFFK1UsRUFBRU4sRUFBRW9wQixHQUFsQi9wQixFQUFFa0IsRUFBRTlWLEVBQUU0VixHQUFvQixPQUFPaEIsR0FBRyxJQUFLLFNBQVMsSUFBSyxTQUFTMkIsR0FBRSxPQUNoaEI3VSxHQUFHbVUsRUFBRTdWLEVBQUUsTUFBTSxJQUFLLFFBQVEsSUFBSyxRQUFRLElBQUk2VixFQUFFLEVBQUVBLEVBQUUySyxHQUFHcGQsT0FBT3lTLElBQUlVLEdBQUVpSyxHQUFHM0ssR0FBR25VLEdBQUdtVSxFQUFFN1YsRUFBRSxNQUFNLElBQUssU0FBU3VXLEdBQUUsUUFBUTdVLEdBQUdtVSxFQUFFN1YsRUFBRSxNQUFNLElBQUssTUFBTSxJQUFLLFFBQVEsSUFBSyxPQUFPdVcsR0FBRSxRQUFRN1UsR0FBRzZVLEdBQUUsT0FBTzdVLEdBQUdtVSxFQUFFN1YsRUFBRSxNQUFNLElBQUssT0FBT3VXLEdBQUUsUUFBUTdVLEdBQUc2VSxHQUFFLFNBQVM3VSxHQUFHbVUsRUFBRTdWLEVBQUUsTUFBTSxJQUFLLFVBQVV1VyxHQUFFLFNBQVM3VSxHQUFHbVUsRUFBRTdWLEVBQUUsTUFBTSxJQUFLLFFBQVFxcUIsR0FBRzNvQixFQUFFMUIsR0FBRzZWLEVBQUVtVSxHQUFHdG9CLEVBQUUxQixHQUFHdVcsR0FBRSxVQUFVN1UsR0FBR205QixHQUFHLzlCLEVBQUUsWUFBWSxNQUFNLElBQUssU0FBUytVLEVBQUVnakIsR0FBR24zQixFQUFFMUIsR0FBRyxNQUFNLElBQUssU0FBUzBCLEVBQUV5b0IsY0FBYyxDQUFDbWtCLGNBQWN0dUMsRUFBRXV1QyxVQUFVMTRCLEVBQUV4VSxFQUFFLEdBQUdyQixFQUFFLENBQUNhLFdBQU0sSUFBUzBWLEdBQUUsVUFBVTdVLEdBQUdtOUIsR0FBRy85QixFQUFFLFlBQVksTUFBTSxJQUFLLFdBQVdzNEIsR0FBRzEzQixFQUN0Z0IxQixHQUFHNlYsRUFBRXFqQixHQUFHeDNCLEVBQUUxQixHQUFHdVcsR0FBRSxVQUFVN1UsR0FBR205QixHQUFHLzlCLEVBQUUsWUFBWSxNQUFNLFFBQVErVSxFQUFFN1YsRUFBRTArQixHQUFHOXBCLEVBQUVpQixHQUFHaFcsT0FBRSxFQUFPLElBQUltVixFQUFFSixFQUFFd0QsRUFBRTFXLEVBQUVxVCxFQUFFYyxFQUFFLElBQUloVyxLQUFLa1YsRUFBRSxHQUFHQSxFQUFFdFQsZUFBZTVCLEdBQUcsQ0FBQyxJQUFJaVYsRUFBRUMsRUFBRWxWLEdBQUcsVUFBVUEsRUFBRTI5QixHQUFHcGxCLEVBQUV0RCxHQUFHLDRCQUE0QmpWLEVBQXVCLE9BQXBCaVYsRUFBRUEsRUFBRUEsRUFBRXVxQixZQUFPLElBQWdCbEYsR0FBRy9oQixFQUFFdEQsR0FBSSxhQUFhalYsRUFBRSxpQkFBa0JpVixHQUFHLGFBQWFFLEdBQUcsS0FBS0YsSUFBSXlsQixHQUFHbmlCLEVBQUV0RCxHQUFHLGlCQUFrQkEsR0FBR3lsQixHQUFHbmlCLEVBQUUsR0FBR3RELEdBQUcsbUNBQW1DalYsR0FBRyw2QkFBNkJBLEdBQUcsY0FBY0EsSUFBSWtkLEVBQUd0YixlQUFlNUIsR0FBRyxNQUFNaVYsR0FBRytwQixHQUFHLzlCLEVBQUVqQixHQUFHLE1BQU1pVixHQUFHeVUsR0FBR25SLEVBQUV2WSxFQUFFaVYsRUFBRVMsSUFBSSxPQUFPWCxHQUFHLElBQUssUUFBUThSLEdBQUdobEIsR0FDMWZpcEIsR0FBR2pwQixFQUFFMUIsR0FBRSxHQUFJLE1BQU0sSUFBSyxXQUFXMG1CLEdBQUdobEIsR0FBRzQzQixHQUFHNTNCLEdBQUssTUFBTSxJQUFLLFNBQVMsTUFBTTFCLEVBQUVhLE9BQU9hLEVBQUUrRixhQUFhLFFBQVEsR0FBR3NpQixHQUFHL3BCLEVBQUVhLFFBQVEsTUFBTSxJQUFLLFVBQVNnVixFQUFFblUsR0FBSTZzQyxXQUFXdnVDLEVBQUV1dUMsU0FBbUIsT0FBVjdzQyxFQUFFMUIsRUFBRWEsT0FBY2s0QixHQUFHbGpCLElBQUk3VixFQUFFdXVDLFNBQVM3c0MsR0FBRSxHQUFJLE1BQU0xQixFQUFFa3FCLGNBQWM2TyxHQUFHbGpCLElBQUk3VixFQUFFdXVDLFNBQVN2dUMsRUFBRWtxQixjQUFhLEdBQUksTUFBTSxRQUFRLG1CQUFvQnJVLEVBQUUwM0IsVUFBVTdyQyxFQUFFOHJDLFFBQVF6TyxLQUFLbnBCLEVBQUVzcEIsR0FBR3BwQixFQUFFRixLQUFLczNCLEdBQUd2M0IsR0FBR0EsRUFBRXlJLFVBQVUzWixFQUFFLE9BQU9rUixFQUFFMkIsTUFBTTNCLEVBQUUyWixXQUFXLFVBQVUsT0FBTzNaLEVBQUV5SSxXQUFVbEosRUFBRSxPQUFjLE1BQU0sS0FBSyxFQUFFelEsR0FBRyxNQUFNa1IsRUFBRXlJLFVBQVVrdkIsR0FBRzdvQyxFQUFFa1IsRUFBRWxSLEVBQUVpOUIsY0FBYzlyQixJQUFJLGlCQUMxZUEsSUFBSSxPQUFPRCxFQUFFeUksV0FBVWxKLEVBQUUsUUFBZXpRLEVBQUVvaEMsR0FBR0QsR0FBRzF1QixTQUFTMnVCLEdBQUdodUIsR0FBRVgsU0FBU3l5QixHQUFHaDBCLElBQVFHLEdBQUpGLEVBQUVELEdBQU15SSxVQUFVM1osRUFBRW1SLEVBQUU4ckIsY0FBYzVyQixFQUFFMEksR0FBSTVJLEdBQUdBLEVBQUVFLEVBQUUya0IsWUFBWWgyQixJQUFJeW9DLEdBQUd2M0IsS0FBS0csRUFBRUgsR0FBRUMsR0FBRyxJQUFJblIsRUFBRThoQixTQUFTOWhCLEVBQUVBLEVBQUVtbUIsZUFBZTVoQixlQUFlNE0sSUFBSzRJLEdBQUk3SSxFQUFFRyxFQUFFc0ksVUFBVXhJLElBQUksTUFBTSxLQUFLLEdBQUcsTUFBTSxLQUFLLEdBQXFCLEdBQWxCQSxFQUFFRCxFQUFFNnJCLGNBQWlCLElBQWlCLEdBQVo3ckIsRUFBRTJaLFdBQWMsQ0FBQzNaLEVBQUVvc0IsZUFBZWpzQixFQUFFeUMsR0FBRTVDLEVBQUUsTUFBTUQsRUFBRUUsRUFBRSxPQUFPQSxFQUFFRSxFQUFFLE9BQU9yUixHQUFHLE9BQU9BLEVBQUUrOEIsY0FBYyxPQUFPLzhCLElBQUltUixHQUFHRSxJQUFzQixRQUFsQnJSLEVBQUVBLEVBQUUyTCxNQUFNcWYsV0FBbUMsUUFBaEI1WixFQUFFRixFQUFFaXNCLGNBQXNCanNCLEVBQUVpc0IsWUFBWW45QixFQUFFQSxFQUFFbzlCLFdBQVdoc0IsSUFBSUYsRUFBRWlzQixZQUNqZmpzQixFQUFFZ3NCLFdBQVdsOUIsRUFBRUEsRUFBRW85QixXQUFXLE1BQU1wOUIsRUFBRTZxQixVQUFVLEtBQU8xWixHQUFHRSxLQUFFSCxFQUFFMlosV0FBVyxHQUFFLE1BQU0sS0FBSyxFQUFRLEtBQUssRUFBUSxLQUFLLEdBQUcsTUFBTSxLQUFLLEVBQUUwVyxLQUFNb0gsR0FBR3ozQixHQUFHLE1BQU0sS0FBSyxHQUFHbzJCLEdBQUdwMkIsR0FBRyxNQUFNLEtBQUssRUFBUSxLQUFLLEdBQUcsTUFBTSxLQUFLLEdBQUd3QixHQUFFeEIsRUFBRTFPLE9BQU93NUIsS0FBTSxNQUFNLEtBQUssR0FBRyxNQUFNLFFBQVF2ckIsRUFBRSxPQUFPcUQsR0FBRSxLQUFTLEdBQUo1QyxFQUFFRCxFQUFLLElBQUkyQyxJQUFHLElBQUkxQyxFQUFFbXNCLG9CQUFvQixDQUFLLElBQUpsc0IsRUFBRSxFQUFNRSxFQUFFSCxFQUFFdkYsTUFBTSxPQUFPMEYsSUFBR3JSLEVBQUVxUixFQUFFaXNCLGdCQUF5Q25zQixJQUFJQSxFQUFFblIsSUFBaENvUixFQUFFQyxFQUFFZ3NCLHFCQUFpQ2xzQixJQUFJQSxFQUFFQyxHQUFHQyxFQUFFQSxFQUFFMlosUUFBUTlaLEVBQUVtc0Isb0JBQW9CbHNCLEVBQUUsR0FBRyxPQUFPMkMsR0FBRSxPQUFPQSxHQUFFLE9BQU90WSxHQUFHLElBQWlCLEtBQVpBLEVBQUVxdkIsYUFBa0IsT0FBT3J2QixFQUFFMmhDLGNBQzllM2hDLEVBQUUyaEMsWUFBWWxzQixFQUFFa3NCLGFBQWEsT0FBT2xzQixFQUFFaXNCLGFBQWEsT0FBTzFoQyxFQUFFMGhDLGFBQWExaEMsRUFBRTBoQyxXQUFXRSxXQUFXbnNCLEVBQUVrc0IsYUFBYTNoQyxFQUFFMGhDLFdBQVdqc0IsRUFBRWlzQixZQUFZLEVBQUVqc0IsRUFBRTRaLFlBQVksT0FBT3J2QixFQUFFMGhDLFdBQVcxaEMsRUFBRTBoQyxXQUFXRSxXQUFXbnNCLEVBQUV6VixFQUFFMmhDLFlBQVlsc0IsRUFBRXpWLEVBQUUwaEMsV0FBV2pzQixRQUFRLENBQVcsR0FBRyxRQUFiQSxFQUFFNjVCLEdBQUc3NUIsSUFBaUIsT0FBT0EsRUFBRTRaLFdBQVcsS0FBSzVaLEVBQUUsT0FBT3pWLElBQUlBLEVBQUUyaEMsWUFBWTNoQyxFQUFFMGhDLFdBQVcsS0FBSzFoQyxFQUFFcXZCLFdBQVcsTUFBTSxHQUFHLE9BQU9wdkIsRUFBRSxPQUFPQSxFQUFFLEdBQUcsT0FBT0QsRUFBVyxNQUFUeVYsRUFBRXpWLEVBQWEsT0FBTyxLQUN0WixTQUFTbXhDLEdBQUcxN0IsR0FBRyxJQUFJQyxFQUFFczFCLEdBQUd2MUIsRUFBRXVaLFVBQVV2WixFQUFFMkMsSUFBc0UsT0FBbkUzQyxFQUFFZ3NCLGNBQWNoc0IsRUFBRTRyQixhQUFhLE9BQU8zckIsSUFBSUEsRUFBRXM3QixHQUFHdjdCLElBQUkrNUIsR0FBR3Y0QixRQUFRLEtBQVl2QixFQUNuSCxTQUFTMDdCLEdBQUczN0IsRUFBRUMsR0FBR2c2QixJQUFHejZCLEVBQUUsT0FBYzR1QixLQUFLNkwsSUFBRyxFQUFHLElBQUkxdkMsRUFBRXV2QyxHQUFHdDRCLFFBQVFzNEIsR0FBR3Q0QixRQUFReXdCLEdBQUcsSUFBSXpuQyxFQUFFd1YsRUFBRXl0QiwyQkFBOEJqakMsSUFBSW1ZLElBQUczQyxJQUFJazZCLElBQUksT0FBT3IzQixLQUFFNDNCLEtBQVU5M0IsR0FBRW5ZLEVBQUVxWSxHQUFFMHBCLElBQVgyTixHQUFHbDZCLEdBQWN3QixRQUFRLE1BQVF4QixFQUFFKzZCLDRCQUE0QixHQUFXLElBQVQsSUFBSWhzQyxHQUFFLElBQUssQ0FBQyxJQUFJLEdBQUdrUixFQUFFLEtBQUssT0FBTzRDLEtBQUkrNEIsTUFBTS80QixHQUFFNjRCLEdBQUc3NEIsU0FBUSxLQUFLLE9BQU9BLElBQUdBLEdBQUU2NEIsR0FBRzc0QixJQUFHLE1BQU14RCxHQUFHLEdBQUcrMkIsR0FBR0QsR0FBR0QsR0FBRyxLQUFLaEUsS0FBSyxPQUFPcnZCLEdBQUU5VCxHQUFFLEVBQUd5cUMsR0FBR242QixPQUFPLENBQUMsT0FBT3dELElBQUVyRCxFQUFFLE9BQWMsSUFBSVksRUFBRXlDLEdBQUUzQyxFQUFFRSxFQUFFaUosT0FBTyxHQUFHLE9BQU9uSixFQUFpQixDQUFDRixFQUFFLENBQUMsSUFBSUcsRUFBRUgsRUFBRTdWLEVBQUUrVixFQUFFaEIsRUFBRWtCLEVBQUU5VixFQUFFK1UsRUFBd0QsR0FBdERhLEVBQUV5QyxHQUFFekQsRUFBRTBhLFdBQVcsS0FBSzFhLEVBQUVndEIsWUFBWWh0QixFQUFFK3NCLFdBQVcsS0FBUSxPQUNqZjNoQyxHQUFHLGlCQUFrQkEsR0FBRyxtQkFBb0JBLEVBQUVtckMsS0FBSyxDQUFDLElBQUl6cEMsRUFBRTFCLEVBQUVBLEVBQUVILEVBQUUsSUFBSWlCLEdBQUcsRUFBRXlVLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxLQUFLdlYsRUFBRTJMLElBQUksQ0FBQyxJQUFJcUosRUFBRWhWLEVBQUVpdkIsVUFBVSxHQUFHLE9BQU9qYSxHQUFzQixRQUFsQkEsRUFBRUEsRUFBRXdzQixlQUF3QixDQUFDanNCLEVBQUUsSUFBSSxXQUFXUCxFQUFFKzFCLFlBQVksTUFBc0MsaUJBQWhDLzFCLEVBQUVoVixFQUFFc2hDLGFBQWFpUSxlQUFzQyxHQUFHdjhCLEVBQUVsVSxFQUFFLElBQVcsSUFBSUEsR0FBR2tVLEVBQUVsVSxLQUFFQSxFQUFFa1UsSUFBRWhWLEVBQUVBLEVBQUUrZSxhQUFhLE9BQU8vZSxHQUFHQSxFQUFFSCxFQUFFLEVBQUUsQ0FBK0UsSUFBM0VtVixFQUFFLEtBQUtoVixFQUFFMkwsT0FBSXFKLE9BQUUsSUFBU2hWLEVBQUUwaEMsY0FBY3NKLFVBQVksT0FBT2hyQyxFQUFFd2hDLGVBQWlCeHNCLEVBQUUsQ0FBd0UsR0FBdkQsUUFBaEJuVixFQUFFRyxFQUFFeWhDLGVBQXNCNWhDLEVBQUUsSUFBSStULEtBQU1rN0IsSUFBSXB0QyxHQUFHMUIsRUFBRXloQyxZQUFZNWhDLEdBQUdBLEVBQUVpdkMsSUFBSXB0QyxHQUFNLElBQVksRUFBUDFCLEVBQUVlLE1BQVEsQ0FBQ2YsRUFBRXN2QixXQUM1ZSxHQUFHMWEsRUFBRTBhLFlBQVksS0FBSyxJQUFJMWEsRUFBRWpKLE1BQU0sT0FBT2lKLEVBQUVxYSxVQUFVcmEsRUFBRWpKLElBQUksS0FBSWlLLEVBQUU4dEIsR0FBRyxhQUFjLzNCLElBQUl1NEIsR0FBR0gsR0FBR252QixFQUFFZ0IsS0FBS2hCLEVBQUVtdEIsZUFBZSxXQUFXLE1BQU1yc0IsRUFBTTdWLEVBQUUrVixFQUFFLElBQUl3QyxHQUFaeEQsRUFBRWlCLEdBQWMyN0IsVUFBVSxPQUFPcDVCLEdBQUdBLEVBQUV4RCxFQUFFNDhCLFVBQVUsSUFBSXpDLEdBQUcvNUIsRUFBRSxJQUFJcEIsSUFBSXdFLEVBQUV5TyxJQUFJbmxCLEVBQUVzVCxTQUFnQixLQUFYQSxFQUFFb0QsRUFBRTNYLElBQUlpQixNQUFnQnNULEVBQUUsSUFBSXBCLElBQUl3RSxFQUFFeU8sSUFBSW5sQixFQUFFc1QsSUFBS0EsRUFBRTY1QixJQUFJaHZDLEtBQUttVixFQUFFODVCLElBQUlqdkMsR0FBRytVLEVBQUU2OEIsR0FBR3J3QyxLQUFLLEtBQUt3VCxFQUFFbFQsRUFBRTdCLEdBQUc2QixFQUFFeXBDLEtBQUt2MkIsRUFBRUEsS0FBSyxJQUFJOVQsRUFBRStVLEVBQUUsYUFBYSxJQUFJTixJQUFJQSxFQUFFLElBQUksV0FBVzJ0QixHQUFHcnRCLEVBQUVELElBQUksS0FBS0MsRUFBRU4sRUFBRXpVLEdBQUcsR0FBRytVLEdBQUdnNkIsR0FBR2g2QixJQUFJZzZCLEdBQUdoNkIsR0FBRzdWLEVBQUVzdkIsV0FBVyxLQUFLdHZCLEVBQUUraEMsZUFBZW5zQixFQUFFLE1BQU1GLEVBQUUxVixFQUFFQSxFQUFFK2UsYUFBYSxPQUFPL2UsR0FBR0EsRUFBRStGLE9BQU9zaUIsR0FBR3pULEVBQUUzTixPQUFPLHFCQUNqZix3TEFBd0xzaEIsR0FBRzNULElBQUlrN0IsSUFBRyxFQUFHOXZDLEVBQUVndEMsR0FBR2h0QyxFQUFFNFUsR0FBR2lCLEVBQUVoVyxFQUFFLEVBQUUsQ0FBQyxPQUFPZ1csRUFBRWxLLEtBQUssS0FBSyxFQUFFa0ssRUFBRXlaLFdBQVcsS0FBS3paLEVBQUVrc0IsZUFBZW5zQixFQUFjKzJCLEdBQUc5MkIsRUFBZkQsRUFBRXE1QixHQUFHcDVCLEVBQUU3VixFQUFFNFYsSUFBVyxNQUFNRixFQUFFLEtBQUssRUFBRSxHQUFHNVUsRUFBRWQsRUFBRXVWLEVBQUVNLEVBQUU1TyxLQUFLMk4sRUFBRWlCLEVBQUV1SSxVQUFVLElBQWlCLEdBQVp2SSxFQUFFeVosYUFBZ0IsbUJBQW9CL1osRUFBRW8xQiwwQkFBMEIsT0FBTy8xQixHQUFHLG1CQUFvQkEsRUFBRXc2QixvQkFBb0IsT0FBT0MsS0FBS0EsR0FBR1IsSUFBSWo2QixLQUFLLENBQUNpQixFQUFFeVosV0FBVyxLQUNsZnpaLEVBQUVrc0IsZUFBZW5zQixFQUFjKzJCLEdBQUc5MkIsRUFBZkQsRUFBRXU1QixHQUFHdDVCLEVBQUUvVSxFQUFFOFUsSUFBVyxNQUFNRixHQUFHRyxFQUFFQSxFQUFFa0osYUFBYSxPQUFPbEosR0FBRzBDLEdBQUUwNEIsR0FBR243QixHQUFHLFNBSjhUclIsR0FBRSxFQUFHeXFDLEdBQUduNkIsSUFJM1QsTUFBcUQsR0FBdEM0NkIsSUFBRyxFQUFHSCxHQUFHdDRCLFFBQVFqWCxFQUFFNnJDLEdBQUdELEdBQUdELEdBQUcsS0FBS2hFLEtBQVFuakMsRUFBRW1yQyxHQUFHLEtBQUtsNkIsRUFBRXE3QixhQUFhLFVBQVUsR0FBRyxPQUFPeDRCLEdBQUU3QyxFQUFFcTdCLGFBQWEsU0FBUyxDQUF3RCxHQUFqQyxRQUF0Qjl3QyxFQUFFeVYsRUFBRXdCLFFBQVErWCxZQUFtQi9aLEVBQUUsT0FBYzA2QixHQUFHLEtBQVFFLEdBQUcsQ0FBb0UsR0FBbkVyckMsRUFBRWlSLEVBQUVrdEIsa0JBQWtCOXNCLEVBQUVKLEVBQUV1dEIsb0JBQW9CcnRCLEVBQUVGLEVBQUVxdEIsaUJBQW9CLElBQUl0K0IsR0FBR0EsRUFBRXZFLEdBQUcsSUFBSTRWLEdBQUdBLEVBQUU1VixHQUFHLElBQUkwVixHQUFHQSxFQUFFMVYsRUFBeUMsT0FBdEM0aUMsR0FBR3B0QixFQUFFeFYsUUFBR3d4QyxHQUFHaDhCLEVBQUV6VixFQUFFQyxFQUFFd1YsRUFBRXFzQixnQkFBZ0IsR0FBVSxJQUFJcnNCLEVBQUVndEIsVUFBVS9zQixFQUN0WixPQUR5WkQsRUFBRWd0QixVQUFTLEVBQUd4aUMsRUFBRXdWLEVBQUV5dEIsMkJBQTJCampDLEVBQ25meVYsRUFBRUQsRUFBRXFzQixlQUFlLGdCQUFXMlAsR0FBR2g4QixFQUFFelYsRUFBRUMsRUFBRXlWLEdBQUcsR0FBV0EsSUFBSSxJQUFJazZCLElBQUkvTSxHQUFHcHRCLEVBQUV4VixJQUFHeVYsRUFBRSxJQUFJLFdBQVd1dEIsR0FBR3h0QixFQUFFeFYsS0FBTTJ2QyxLQUFLQSxHQUFHbDZCLEdBQUdBLEVBQUUsSUFBSSxXQUFXOHRCLE1BQU05dEIsRUFBRWs2QixHQUFHbDZCLEVBQUUrN0IsR0FBR2g4QixFQUFFelYsRUFBRUMsRUFBRXdWLEVBQUVxc0IsZUFBZSxFQUFFcHNCLEVBQUUsRUFBRUEsS0FBS0QsRUFBRSs2Qiw0QkFBNEJ2d0MsRUFBRXdWLEVBQUVxN0IsYUFBYTl3QyxJQUNsTyxTQUFTNHRDLEdBQUduNEIsRUFBRUMsR0FBRyxJQUFJLElBQUkxVixFQUFFeVYsRUFBRXFKLE9BQU8sT0FBTzllLEdBQUcsQ0FBQyxPQUFPQSxFQUFFMEwsS0FBSyxLQUFLLEVBQUUsSUFBSXpMLEVBQUVELEVBQUVtZSxVQUFVLEdBQUcsbUJBQW9CbmUsRUFBRWdILEtBQUswakMsMEJBQTBCLG1CQUFvQnpxQyxFQUFFa3ZDLG9CQUFvQixPQUFPQyxLQUFLQSxHQUFHUixJQUFJM3VDLElBQTZELE9BQXpCNmpDLEdBQUc5akMsRUFBeEJ5VixFQUFFeTVCLEdBQUdsdkMsRUFBZnlWLEVBQUVzM0IsR0FBR3IzQixFQUFFRCxHQUFZLGtCQUFvQnN1QixHQUFHL2pDLEVBQUUsWUFBbUIsTUFBTSxLQUFLLEVBQTBELE9BQXpCOGpDLEdBQUc5akMsRUFBeEJ5VixFQUFFdTVCLEdBQUdodkMsRUFBZnlWLEVBQUVzM0IsR0FBR3IzQixFQUFFRCxHQUFZLGtCQUFvQnN1QixHQUFHL2pDLEVBQUUsWUFBbUJBLEVBQUVBLEVBQUU4ZSxPQUFPLElBQUlySixFQUFFL0osTUFBcUNvNEIsR0FBR3J1QixFQUF4QnpWLEVBQUVndkMsR0FBR3Y1QixFQUFmelYsRUFBRStzQyxHQUFHcjNCLEVBQUVELEdBQVksYUFBb0JzdUIsR0FBR3R1QixFQUFFLGFBQzlaLFNBQVNpdUIsR0FBR2p1QixFQUFFQyxHQUFHLElBQUkxVixFQUFFUyxFQUFFaXhDLG1DQUFtQ3p4QyxPQUFFLEVBQU8sR0FBRyxJQUFZLEVBQVB5VixFQUFFNVUsTUFBUWIsRUFBRSxnQkFBZ0IsR0FBR3l2QyxLQUFLSSxHQUFHN3ZDLEVBQUVtWSxPQUFNLENBQUMsT0FBT3BZLEdBQUcsS0FBS1MsRUFBRWt4QywyQkFBMkIxeEMsRUFBRSxXQUFXLE1BQU0sS0FBS1EsRUFBRW14Qyw4QkFBOEIzeEMsRUFBRSxXQUFXLElBQTZCLElBQXZCLFdBQVd3VixFQUFFLElBQUksR0FBRyxJQUFNLE1BQU0sS0FBS2hWLEVBQUVvd0Msd0JBQXdCNXdDLEVBQUUsV0FBVyxJQUE4QixJQUF4QixXQUFXd1YsRUFBRSxLQUFLLEdBQUcsSUFBTSxNQUFNLEtBQUtoVixFQUFFb3hDLHFCQUFxQixLQUFLcHhDLEVBQUVxeEMsc0JBQXNCN3hDLEVBQUUsRUFBRSxNQUFNLFFBQVFnVixFQUFFLE9BQU8sT0FBTzA2QixJQUFJMXZDLElBQUltWSxNQUFLblksRUFDeGIsT0FEMGJELElBQUlTLEVBQUVteEMsZ0NBQ3RkLElBQUlHLElBQUk5eEMsRUFBRTh4QyxNQUFNQSxHQUFHOXhDLEdBQVVBLEVBQUUsU0FBU3V4QyxHQUFHLzdCLEVBQUVDLEVBQUUxVixHQUFHLElBQUlDLEVBQUV3VixFQUFFODdCLFVBQVUsT0FBT3R4QyxHQUFHQSxFQUFFcWxDLE9BQU81dkIsR0FBTSxPQUFPaTZCLElBQUl2M0IsS0FBSXBZLEVBQUUydkMsR0FBRyxNQUFhajZCLEVBQUVELEVBQUVzdEIsc0JBQXNCOWlDLEVBQUV3VixFQUFFdXRCLG9CQUFvQixJQUFJdHRCLEdBQUcxVixHQUFHMFYsR0FBRzFWLEdBQUdDLElBQUd3VixFQUFFZ3RCLFVBQVMsR0FBMkIsS0FBeEIvc0IsRUFBRUQsRUFBRXF0QixtQkFBMkJwdEIsRUFBRTFWLEtBQUV5VixFQUFFcXRCLGlCQUFpQjlpQyxHQUFFNGlDLEdBQUc1aUMsRUFBRXlWLEdBQXNCLEtBQW5CelYsRUFBRXlWLEVBQUVxc0IsaUJBQXNCNk0sR0FBR2w1QixFQUFFelYsS0FDalQsU0FBUzB1QyxHQUFHajVCLEVBQUVDLEdBQUdELEVBQUVxc0IsZUFBZXBzQixJQUFJRCxFQUFFcXNCLGVBQWVwc0IsR0FBRyxJQUFJMVYsRUFBRXlWLEVBQUV1WixVQUFVLE9BQU9odkIsR0FBR0EsRUFBRThoQyxlQUFlcHNCLElBQUkxVixFQUFFOGhDLGVBQWVwc0IsR0FBRyxJQUFJelYsRUFBRXdWLEVBQUVxSixPQUFPdGEsRUFBRSxLQUFLLEdBQUcsT0FBT3ZFLEdBQUcsSUFBSXdWLEVBQUUvSixJQUFJbEgsRUFBRWlSLEVBQUUwSSxlQUFlLEtBQUssT0FBT2xlLEdBQUcsQ0FBK0gsR0FBOUhELEVBQUVDLEVBQUUrdUIsVUFBVS91QixFQUFFNGhDLG9CQUFvQm5zQixJQUFJelYsRUFBRTRoQyxvQkFBb0Juc0IsR0FBRyxPQUFPMVYsR0FBR0EsRUFBRTZoQyxvQkFBb0Juc0IsSUFBSTFWLEVBQUU2aEMsb0JBQW9CbnNCLEdBQU0sT0FBT3pWLEVBQUU2ZSxRQUFRLElBQUk3ZSxFQUFFeUwsSUFBSSxDQUFDbEgsRUFBRXZFLEVBQUVrZSxVQUFVLE1BQU1sZSxFQUFFQSxFQUFFNmUsT0FBTyxPQUFPdGEsRUFDbFosU0FBU3UvQixHQUFHdHVCLEVBQUVDLEdBQWEsUUFBVkQsRUFBRWk1QixHQUFHajVCLEVBQUVDLE9BQWVnNkIsSUFBSSxJQUFJdDNCLElBQUcxQyxFQUFFMEMsSUFBRzgzQixLQUFLMU4sR0FBRy9zQixFQUFFQyxHQUFHZzZCLEtBQUtJLElBQUlILEtBQUtsNkIsR0FBR2s1QixHQUFHbDVCLEVBQUVBLEVBQUVxc0IsZ0JBQWdCa1EsR0FBR0MsS0FBS0QsR0FBRyxFQUFFLzhCLEVBQUUsU0FBUyxTQUFTaTlCLEdBQUd6OEIsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxHQUFHLE9BQU8vRCxFQUFFbXdDLHlCQUF5Qm53QyxFQUFFa3hDLDJCQUEyQixXQUFXLE9BQU9sOEIsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxLQUFLLElBQUkydEMsR0FBRyxLQUFLeDJCLEdBQUUsS0FBS3kyQixHQUFHLEVBQUVDLFFBQUcsRUFBT3I1QixJQUFFLEVBQUdzNUIsR0FBRyxLQUFLMTJCLEdBQUUsRUFBRW0yQixHQUFHLEVBQUVRLElBQUcsRUFBR0MsR0FBRyxLQUFLdjVCLElBQUUsRUFBR3c1QixJQUFHLEVBQUdDLEdBQUcsS0FBS0MsR0FBR2x5QyxFQUFFbXlDLGVBQWVDLEdBQUcsWUFBWUYsR0FBRyxHQUFHLEdBQUdHLEdBQUdELEdBQUdaLEdBQUcsR0FBR0QsR0FBRyxFQUFFZSxHQUFHLEtBQUssU0FBU0MsS0FBS0gsR0FBRyxhQUFhcHlDLEVBQUVteUMsZUFBZUQsSUFBSSxHQUFHLEdBQzdjLFNBQVNNLEdBQUd4OUIsRUFBRUMsR0FBRyxHQUFHLElBQUkwOEIsR0FBRyxDQUFDLEdBQUcxOEIsRUFBRTA4QixHQUFHLE9BQU8sT0FBT0MsSUFBSTV4QyxFQUFFbS9CLHdCQUF3QnlTLElBQUlELEdBQUcxOEIsRUFBRUQsRUFBRWhWLEVBQUVteUMsZUFBZUQsR0FBR04sR0FBRzV4QyxFQUFFaS9CLDBCQUEwQndULEdBQUcsQ0FBQ0MsUUFBUSxJQUFJLFdBQVd6OUIsR0FBR0QsSUFBSSxTQUFTZzhCLEdBQUdoOEIsRUFBRUMsRUFBRTFWLEVBQUVDLEVBQUV1RSxHQUFHaVIsRUFBRXFzQixlQUFlN2hDLEVBQUUsSUFBSXVFLEdBQUc2c0MsS0FBSyxFQUFFN3NDLElBQUlpUixFQUFFMjlCLGNBQWMvVCxHQUE4RSxTQUFZNXBCLEVBQUVDLEVBQUUxVixHQUFHeVYsRUFBRSs2Qiw0QkFBNEJ4d0MsRUFBRXlWLEVBQUVxN0IsYUFBYXA3QixFQUFFczlCLEtBQUtGLEdBQUdELEdBQUdRLEdBQUc1OUIsRUFBRXpWLElBQTVKbUIsS0FBSyxLQUFLc1UsRUFBRUMsRUFBRTFWLEdBQUd3RSxLQUFLaVIsRUFBRSs2Qiw0QkFBNEJ4d0MsRUFBRXlWLEVBQUVxN0IsYUFBYXA3QixHQUN2VSxTQUFTOHRCLEtBQUssT0FBR3hxQixHQUFTODVCLElBQUdRLEtBQVEsSUFBSTEzQixJQUFHLElBQUlBLEtBQUVvM0IsS0FBS0YsR0FBR0QsSUFBVUMsSUFBRyxTQUFTbkUsR0FBR2w1QixFQUFFQyxHQUFHLE9BQU9ELEVBQUU4OUIsbUJBQW1COTlCLEVBQUVxc0IsZUFBZXBzQixFQUFFLE9BQU9pRyxJQUFHdzJCLEdBQUd4MkIsR0FBRWxHLEVBQUVBLEVBQUU4OUIsa0JBQWtCOTlCLElBQUlrRyxHQUFFQSxHQUFFNDNCLGtCQUFrQjk5QixHQUFJODlCLGtCQUFrQnBCLElBQUt6OEIsRUFBRUQsRUFBRXFzQixpQkFBaUJyc0IsRUFBRXFzQixlQUFlcHNCLEdBQUdzRCxLQUFJQyxHQUFFdzVCLEtBQUtILEdBQUc3OEIsRUFBRW1HLEdBQUUsV0FBVzQzQixHQUFHLzlCLEVBQUUsWUFBVyxJQUFLLGFBQWFDLEVBQUVpN0IsR0FBRyxZQUFXLEdBQUlzQyxHQUFHeDlCLEVBQUVDLElBQ2xXLFNBQVM0OUIsS0FBSyxJQUFJNzlCLEVBQUUsRUFBRUMsRUFBRSxLQUFLLEdBQUcsT0FBT2lHLEdBQUUsSUFBSSxJQUFJM2IsRUFBRTJiLEdBQUUxYixFQUFFa3lDLEdBQUcsT0FBT2x5QyxHQUFHLENBQUMsSUFBSXVFLEVBQUV2RSxFQUFFNmhDLGVBQWUsR0FBRyxJQUFJdDlCLEVBQUUsQ0FBb0MsSUFBbkMsT0FBT3hFLEdBQUcsT0FBTzJiLEtBQUUxRyxFQUFFLE9BQWlCaFYsSUFBSUEsRUFBRXN6QyxrQkFBa0IsQ0FBQ3BCLEdBQUd4MkIsR0FBRTFiLEVBQUVzekMsa0JBQWtCLEtBQUssTUFBVyxHQUFHdHpDLElBQUlreUMsR0FBR0EsR0FBRzN0QyxFQUFFdkUsRUFBRXN6QyxrQkFBa0I1M0IsR0FBRTQzQixrQkFBa0IvdUMsRUFBRXZFLEVBQUVzekMsa0JBQWtCLFNBQVUsSUFBR3R6QyxJQUFJMGIsR0FBRSxFQUFDQSxHQUFFM2IsR0FBSXV6QyxrQkFBa0JwQixHQUFHbHlDLEVBQUVzekMsa0JBQWtCLEtBQUssTUFBV3Z6QyxFQUFFdXpDLGtCQUFrQnR6QyxFQUFFc3pDLGtCQUFrQnR6QyxFQUFFc3pDLGtCQUFrQixLQUFLdHpDLEVBQUVELEVBQUV1ekMsc0JBQXNCLENBQWdCLEdBQWYvdUMsRUFBRWlSLElBQUlBLEVBQUVqUixFQUFFa1IsRUFBRXpWLEdBQU1BLElBQUkwYixHQUFFLE1BQU0sR0FBRyxhQUMzZWxHLEVBQUUsTUFBTXpWLEVBQUVDLEVBQUVBLEVBQUVBLEVBQUVzekMsbUJBQW1CakIsR0FBRzU4QixFQUFFa0csR0FBRW5HLEVBQUUsSUFBSWcrQixJQUFHLEVBQUcsU0FBU3BDLEtBQUssUUFBT29DLE1BQU1oekMsRUFBRWl6Qyx5QkFBdUJELElBQUcsR0FBTSxTQUFTUCxLQUFLLElBQUksSUFBSTdCLE1BQU0sT0FBT2MsR0FBRyxDQUFDYSxLQUFLLElBQUl2OUIsRUFBRTA4QixHQUFHLEVBQUUsQ0FBQyxJQUFJejhCLEVBQUVELEVBQUVxc0IsZUFBZSxJQUFJcHNCLEdBQUdtOUIsSUFBSW45QixJQUFJRCxFQUFFeXRCLDJCQUEyQjJQLElBQUlwOUIsRUFBRUEsRUFBRTg5Qix3QkFBd0I5OUIsSUFBSTA4QixJQUFJeEIsR0FBRyxHQUFFLEdBQUksUUFBUThDLElBQUcsR0FDMVMsU0FBUzlDLEdBQUdsN0IsRUFBRUMsR0FBUSxHQUFMNDlCLEtBQVE1OUIsRUFBRSxJQUFJczlCLEtBQUtGLEdBQUdELEdBQUcsT0FBT1AsSUFBSSxJQUFJMTJCLElBQUduRyxHQUFHbUcsTUFBSzYzQixJQUFJWixHQUFHajNCLEtBQUk0M0IsR0FBR2xCLEdBQUcxMkIsR0FBRWkzQixHQUFHajNCLElBQUcwM0IsS0FBS04sS0FBS0YsR0FBR0QsUUFBUSxLQUFLLE9BQU9QLElBQUksSUFBSTEyQixJQUFHbkcsR0FBR21HLElBQUc0M0IsR0FBR2xCLEdBQUcxMkIsSUFBRSxHQUFJMDNCLEtBQW9ELEdBQS9DNTlCLElBQUkwOEIsR0FBRyxFQUFFQyxHQUFHLE1BQU0sSUFBSXoyQixJQUFHcTNCLEdBQUdYLEdBQUcxMkIsSUFBR28yQixHQUFHLEVBQUVlLEdBQUcsS0FBUSxPQUFPTCxHQUFHLElBQUlqOUIsRUFBRWk5QixHQUFHQSxHQUFHLEtBQUtoOUIsRUFBRSxFQUFFQSxFQUFFRCxFQUFFdFMsT0FBT3VTLElBQUksQ0FBQyxJQUFJMVYsRUFBRXlWLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUUyekMsY0FBYyxNQUFNMXpDLEdBQUdzeUMsS0FBS0EsSUFBRyxFQUFHQyxHQUFHdnlDLElBQUksR0FBR3N5QyxHQUFHLE1BQU05OEIsRUFBRSs4QixHQUFHQSxHQUFHLEtBQUtELElBQUcsRUFBRzk4QixFQUFHLFNBQVM0OUIsR0FBRzU5QixFQUFFQyxHQUFHc0QsSUFBRS9ELEVBQUUsT0FBY3E5QixHQUFHNzhCLEVBQUVtRyxHQUFFbEcsRUFBRTg5QixHQUFHLzlCLEVBQUVDLEdBQUUsR0FBSWk3QixHQUFHLFlBQVcsR0FDbGEsU0FBUzZDLEdBQUcvOUIsRUFBRUMsRUFBRTFWLEdBQTBCLEdBQXZCZ1osSUFBRS9ELEVBQUUsT0FBYytELElBQUUsRUFBTWhaLEVBQUUsQ0FBQyxJQUFJQyxFQUFFd1YsRUFBRXE3QixhQUFhLE9BQU83d0MsRUFBRTJ6QyxHQUFHbitCLEVBQUV4VixFQUFFeVYsSUFBSUQsRUFBRXE3QixhQUFhLE1BQXdCLEtBQW5CN3dDLEVBQUV3VixFQUFFMjlCLGlCQUF1QjM5QixFQUFFMjlCLGVBQWUsRUFBRTdULEdBQUd0L0IsSUFBSW14QyxHQUFHMzdCLEVBQUV6VixHQUFvQixRQUFqQkMsRUFBRXdWLEVBQUVxN0IsZ0JBQXdCTyxLQUFLNTdCLEVBQUVxN0IsYUFBYTd3QyxFQUFFMnpDLEdBQUduK0IsRUFBRXhWLEVBQUV5VixVQUEyQixRQUFqQnpWLEVBQUV3VixFQUFFcTdCLGNBQXNCOEMsR0FBR24rQixFQUFFeFYsRUFBRXlWLElBQUlELEVBQUVxN0IsYUFBYSxNQUF3QixLQUFuQjd3QyxFQUFFd1YsRUFBRTI5QixpQkFBdUIzOUIsRUFBRTI5QixlQUFlLEVBQUU3VCxHQUFHdC9CLElBQUlteEMsR0FBRzM3QixFQUFFelYsR0FBb0IsUUFBakJDLEVBQUV3VixFQUFFcTdCLGVBQXVCOEMsR0FBR24rQixFQUFFeFYsRUFBRXlWLElBQUlzRCxJQUFFLEVBQzNZLFNBQVM0NkIsR0FBR24rQixFQUFFQyxFQUFFMVYsR0FBRyxJQUFJQyxFQUFFd1YsRUFBRW8rQixXQUFXLEdBQUcsT0FBTzV6QyxHQUFHQSxFQUFFNnpDLGlCQUFpQjl6QyxJQUFJLE9BQU8weUMsR0FBR0EsR0FBRyxDQUFDenlDLEdBQUd5eUMsR0FBR3J2QyxLQUFLcEQsR0FBR0EsRUFBRTh6QyxRQUE2QyxPQUFwQ3QrQixFQUFFcTdCLGFBQWFwN0IsT0FBRUQsRUFBRXFzQixlQUFlLEdBQVNyc0IsRUFBRXE3QixhQUFhLEtBQUtyN0IsSUFBSXM5QixHQUFHZixNQUFNZSxHQUFHdDlCLEVBQUV1OEIsR0FBRyxHQUFHdnhDLEVBQUVtd0MseUJBQXlCbndDLEVBQUVreEMsMkJBQTJCLFdBQVdwQixHQUFHOTZCLEVBQUVDLEtBQUssU0FBU3U1QixHQUFHeDVCLEdBQUcsT0FBTzY4QixJQUFHcjlCLEVBQUUsT0FBY3E5QixHQUFHeFEsZUFBZSxFQUFFeVEsS0FBS0EsSUFBRyxFQUFHQyxHQUFHLzhCLEdBQUcsU0FBU3UrQixHQUFHditCLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUVpWixHQUFFQSxJQUFFLEVBQUcsSUFBSSxPQUFPeEQsRUFBRUMsR0FBRyxTQUFTdUQsR0FBRWpaLElBQUlnWixJQUFHMjNCLEdBQUcsWUFBVyxJQUNqYixTQUFTc0QsR0FBR3grQixFQUFFQyxHQUFHLEdBQUd1RCxLQUFJdzVCLEdBQUcsQ0FBQ0EsSUFBRyxFQUFHLElBQUksT0FBT2g5QixFQUFFQyxHQUFHLFFBQVErOEIsSUFBRyxHQUFJLE9BQU9oOUIsRUFBRUMsR0FBRyxTQUFTdytCLEdBQUd6K0IsRUFBRUMsRUFBRTFWLEdBQUdpWixJQUFHRCxJQUFHLElBQUkrNEIsS0FBS3BCLEdBQUdvQixJQUFHLEdBQUlBLEdBQUcsR0FBRyxJQUFJOXhDLEVBQUVnWixHQUFFQSxJQUFFLEVBQUcsSUFBSSxPQUFPeFksRUFBRW13Qyx5QkFBeUJud0MsRUFBRW14Qyw4QkFBOEIsV0FBVyxPQUFPbjhCLEVBQUVDLEVBQUUxVixLQUFLLFNBQVNpWixHQUFFaFosSUFBSStZLElBQUcyM0IsR0FBRyxZQUFXLElBQzdRLFNBQVN3RCxHQUFHMStCLEVBQUVDLEVBQUUxVixFQUFFQyxFQUFFdUUsR0FBRyxJQUFJcVIsRUFBRUgsRUFBRXVCLFFBQVF4QixFQUFFLEdBQUd6VixFQUFFLENBQXlCMFYsRUFBRSxDQUFDLElBQUkwWixHQUEvQnB2QixFQUFFQSxFQUFFdWpDLHNCQUFrQyxJQUFJdmpDLEVBQUUwTCxLQUFXdUosRUFBRSxPQUFPLElBQUlVLEVBQUUzVixFQUFFLEVBQUUsQ0FBQyxPQUFPMlYsRUFBRWpLLEtBQUssS0FBSyxFQUFFaUssRUFBRUEsRUFBRXdJLFVBQVU1SCxRQUFRLE1BQU1iLEVBQUUsS0FBSyxFQUFFLEdBQUd3QixHQUFFdkIsRUFBRTNPLE1BQU0sQ0FBQzJPLEVBQUVBLEVBQUV3SSxVQUFVMmlCLDBDQUEwQyxNQUFNcHJCLEdBQUdDLEVBQUVBLEVBQUVtSixhQUFhLE9BQU9uSixHQUFHVixFQUFFLE9BQU9VLE9BQUUsRUFBTyxHQUFHLElBQUkzVixFQUFFMEwsSUFBSSxDQUFDLElBQUlrSyxFQUFFNVYsRUFBRWdILEtBQUssR0FBR2tRLEdBQUV0QixHQUFHLENBQUM1VixFQUFFMmdDLEdBQUczZ0MsRUFBRTRWLEVBQUVELEdBQUcsTUFBTUYsR0FBR3pWLEVBQUUyVixPQUFPM1YsRUFBRWlnQyxHQUMvVixPQURrVyxPQUFPdnFCLEVBQUVhLFFBQVFiLEVBQUVhLFFBQVF2VyxFQUFFMFYsRUFBRWsxQixlQUFlNXFDLEVBQUUwVixFQUFFbFIsR0FBRUEsRUFBRWkvQixHQUFHeGpDLElBQUswakMsUUFBUSxDQUFDeDBCLFFBQVFzRyxHQUF1QixRQUFwQkMsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEtBQWFsUixFQUFFby9CLFNBQVNsdUIsR0FDbmZtdUIsS0FBS0MsR0FBR2p1QixFQUFFclIsR0FBR3UvQixHQUFHbHVCLEVBQUU1VixHQUFVQSxFQUFFLFNBQVNtMEMsR0FBRzMrQixFQUFFQyxFQUFFMVYsRUFBRUMsR0FBRyxJQUFJdUUsRUFBRWtSLEVBQUV1QixRQUF5QixPQUFPazlCLEdBQUcxK0IsRUFBRUMsRUFBRTFWLEVBQXhCd0UsRUFBRWsvQixHQUFQRixLQUFZaC9CLEdBQXFCdkUsR0FBRyxTQUFTbzBDLEdBQUc1K0IsR0FBZSxLQUFaQSxFQUFFQSxFQUFFd0IsU0FBYzlHLE1BQU0sT0FBTyxLQUFLLE9BQU9zRixFQUFFdEYsTUFBTXpFLEtBQUssS0FBSyxFQUEyQixRQUFRLE9BQU8rSixFQUFFdEYsTUFBTWdPLFdBRXZPLFNBQVNtMkIsR0FBRzcrQixHQUFHLElBQUlDLEVBQUUsV0FBVyxJQUFpQyxJQUEzQixXQUFXOHRCLEtBQUssS0FBSyxHQUFHLElBQU05dEIsR0FBRys1QixLQUFLLzVCLEVBQUUrNUIsR0FBRyxHQUFHM3RDLEtBQUtneUMsZ0JBQWdCckUsR0FBRy81QixFQUFFNVQsS0FBS3l5QyxNQUFNOStCLEVBQUUzVCxLQUFLMHlDLFdBQVcxeUMsS0FBSzJ5QyxNQUFNLEtBQUszeUMsS0FBSzR5QyxhQUFhNXlDLEtBQUs2eUMsY0FBYSxFQUFHN3lDLEtBQUs4eUMsVUFBVSxLQUFLOXlDLEtBQUtpeUMsUUFBTyxFQUduRCxTQUFTYyxLQUFLL3lDLEtBQUsweUMsV0FBVyxLQUFLMXlDLEtBQUtnekMsWUFBVyxFQUFHaHpDLEtBQUtpekMsVUFBVWp6QyxLQUFLaXpDLFVBQVU1ekMsS0FBS1csTUFFeFEsU0FBU2t6QyxHQUFHdi9CLEVBQUVDLEVBQUUxVixHQUEwQnlWLEVBQUUsQ0FBQ3dCLFFBQTFCdkIsRUFBRXlCLEdBQUUsRUFBRSxLQUFLLEtBQUt6QixFQUFFLEVBQUUsR0FBZ0J3ZixjQUFjemYsRUFBRTZzQixnQkFBZ0IsS0FBS2lQLFVBQVUsS0FBSzdPLG9CQUFvQixFQUFFQyxrQkFBa0IsRUFBRUksc0JBQXNCLEVBQUVDLG9CQUFvQixFQUFFRixpQkFBaUIsRUFBRUwsVUFBUyxFQUFHK04sNEJBQTRCLEVBQUVNLGFBQWEsS0FBS3NDLGVBQWUsRUFBRTc4QixRQUFRLEtBQUtxMEIsZUFBZSxLQUFLUyxRQUFRcnJDLEVBQUVrakMsMkJBQTJCLEVBQUVwQixlQUFlLEVBQUUrUixXQUFXLEtBQUtOLGtCQUFrQixNQUFNenhDLEtBQUttekMsY0FBY3YvQixFQUFFeUksVUFBVTFJLEVBRXBNLFNBQVN5L0IsR0FBR3ovQixHQUFHLFNBQVNBLEdBQUcsSUFBSUEsRUFBRTZRLFVBQVUsSUFBSTdRLEVBQUU2USxVQUFVLEtBQUs3USxFQUFFNlEsV0FBVyxJQUFJN1EsRUFBRTZRLFVBQVUsaUNBQWlDN1EsRUFBRStrQixZQUUvWCxTQUFTMmEsR0FBRzEvQixFQUFFQyxFQUFFMVYsRUFBRUMsRUFBRXVFLEdBQUcsSUFBSXFSLEVBQUU3VixFQUFFbXVDLG9CQUFvQixHQUFHdDRCLEVBQUUsQ0FBQyxHQUFHLG1CQUFvQnJSLEVBQUUsQ0FBQyxJQUFJbVIsRUFBRW5SLEVBQUVBLEVBQUUsV0FBVyxJQUFJaVIsRUFBRTQrQixHQUFHeCtCLEVBQUVvL0IsZUFBZXQvQixFQUFFN1YsS0FBSzJWLElBQUksTUFBTUEsRUFBRUksRUFBRXUvQixrQ0FBa0MzL0IsRUFBRUMsRUFBRWxSLEdBQUdxUixFQUFFcEIsT0FBT2lCLEVBQUVsUixPQUFPLENBQWlDLEdBQWhDcVIsRUFBRTdWLEVBQUVtdUMsb0JBRHZOLFNBQVkxNEIsRUFBRUMsR0FBMEgsR0FBdkhBLElBQTJEQSxNQUF2REEsRUFBRUQsRUFBRSxJQUFJQSxFQUFFNlEsU0FBUzdRLEVBQUVtaEIsZ0JBQWdCbmhCLEVBQUVyUCxXQUFXLE9BQWEsSUFBSXNQLEVBQUU0USxXQUFXNVEsRUFBRTIvQixhQUFhLHFCQUF3QjMvQixFQUFFLElBQUksSUFBSTFWLEVBQUVBLEVBQUV5VixFQUFFOGtCLFdBQVc5a0IsRUFBRWpQLFlBQVl4RyxHQUFHLE9BQU8sSUFBSWcxQyxHQUFHdi9CLEdBQUUsRUFBR0MsR0FDZ0M0L0IsQ0FBR3QxQyxFQUFFQyxHQUFNLG1CQUFvQnVFLEVBQUUsQ0FBQyxJQUFJb1IsRUFBRXBSLEVBQUVBLEVBQUUsV0FBVyxJQUFJaVIsRUFBRTQrQixHQUFHeCtCLEVBQUVvL0IsZUFBZXIvQixFQUFFOVYsS0FBSzJWLElBQUl3K0IsR0FBRyxXQUFXLE1BQU14K0IsRUFBRUksRUFBRXUvQixrQ0FBa0MzL0IsRUFBRUMsRUFBRWxSLEdBQUdxUixFQUFFcEIsT0FBT2lCLEVBQUVsUixLQUFLLE9BQU82dkMsR0FBR3grQixFQUFFby9CLGVBQ3BhLFNBQVNNLEdBQUc5L0IsRUFBRUMsR0FBRyxJQUFJMVYsRUFBRSxFQUFFK0QsVUFBVVosYUFBUSxJQUFTWSxVQUFVLEdBQUdBLFVBQVUsR0FBRyxLQUEyQixPQUF0Qm14QyxHQUFHeC9CLElBQVVULEVBQUUsT0FaZ0osU0FBWVEsRUFBRUMsRUFBRTFWLEdBQUcsSUFBSUMsRUFBRSxFQUFFOEQsVUFBVVosYUFBUSxJQUFTWSxVQUFVLEdBQUdBLFVBQVUsR0FBRyxLQUFLLE1BQU0sQ0FBQzJULFNBQVM2UCxHQUFHcm1CLElBQUksTUFBTWpCLEVBQUUsS0FBSyxHQUFHQSxFQUFFeU0sU0FBUytJLEVBQUV5ZixjQUFjeGYsRUFBRTZzQixlQUFldmlDLEdBWTFTdzFDLENBQUcvL0IsRUFBRUMsRUFBRSxLQUFLMVYsR0FYNUhza0IsR0FBRyxTQUFTN08sRUFBRUMsRUFBRTFWLEdBQUcsT0FBTzBWLEdBQUcsSUFBSyxRQUF5QixHQUFqQjhVLEdBQUcvVSxFQUFFelYsR0FBRzBWLEVBQUUxVixFQUFFRSxLQUFRLFVBQVVGLEVBQUVnSCxNQUFNLE1BQU0wTyxFQUFFLENBQUMsSUFBSTFWLEVBQUV5VixFQUFFelYsRUFBRXVHLFlBQVl2RyxFQUFFQSxFQUFFdUcsV0FBc0YsSUFBM0V2RyxFQUFFQSxFQUFFb1MsaUJBQWlCLGNBQWM1UCxLQUFLQyxVQUFVLEdBQUdpVCxHQUFHLG1CQUF1QkEsRUFBRSxFQUFFQSxFQUFFMVYsRUFBRW1ELE9BQU91UyxJQUFJLENBQUMsSUFBSXpWLEVBQUVELEVBQUUwVixHQUFHLEdBQUd6VixJQUFJd1YsR0FBR3hWLEVBQUV3MUMsT0FBT2hnQyxFQUFFZ2dDLEtBQUssQ0FBQyxJQUFJanhDLEVBQUVvYSxFQUFHM2UsR0FBR3VFLEdBQVN5USxFQUFFLE1BQU1pUyxHQUFHam5CLEdBQUd1cUIsR0FBR3ZxQixFQUFFdUUsS0FBSyxNQUFNLElBQUssV0FBVzQwQixHQUFHM2pCLEVBQUV6VixHQUFHLE1BQU0sSUFBSyxTQUFtQixPQUFWMFYsRUFBRTFWLEVBQUVZLFFBQWVrNEIsR0FBR3JqQixJQUFJelYsRUFBRXN1QyxTQUFTNTRCLEdBQUUsS0FDeEs0K0IsR0FBRy95QyxVQUFVa1QsT0FBTyxTQUFTZ0IsR0FBRzNULEtBQUtpeUMsUUFBYzkrQixFQUFFLE9BQU9uVCxLQUFLNHlDLGNBQWEsRUFBRzV5QyxLQUFLOHlDLFVBQVVuL0IsRUFBRSxJQUFJQyxFQUFFNVQsS0FBS3l5QyxNQUFNVSxjQUFjajFDLEVBQUU4QixLQUFLZ3lDLGdCQUFnQjd6QyxFQUFFLElBQUk0MEMsR0FBOEIsT0FBM0JWLEdBQUcxK0IsRUFBRUMsRUFBRSxLQUFLMVYsRUFBRUMsRUFBRTgwQyxXQUFrQjkwQyxHQUN4YXEwQyxHQUFHL3lDLFVBQVUycEMsS0FBSyxTQUFTejFCLEdBQUcsR0FBRzNULEtBQUs2eUMsYUFBYWwvQixRQUFRLENBQUMsSUFBSUMsRUFBRTVULEtBQUsweUMsV0FBVyxPQUFPOStCLElBQUlBLEVBQUU1VCxLQUFLMHlDLFdBQVcsSUFBSTkrQixFQUFFclMsS0FBS29TLEtBQzFINitCLEdBQUcveUMsVUFBVW0wQyxPQUFPLFdBQVcsSUFBSWpnQyxFQUFFM1QsS0FBS3l5QyxNQUFNVSxjQUFjdi9CLEVBQUVELEVBQUVvK0IsV0FBaUQsR0FBdEMveEMsS0FBS2l5QyxRQUFRLE9BQU9yK0IsR0FBU1QsRUFBRSxPQUFVblQsS0FBSzR5QyxhQUFhLENBQUMsSUFBSTEwQyxFQUFFOEIsS0FBS2d5QyxnQkFBZ0IsR0FBR3ArQixJQUFJNVQsS0FBSyxDQUFDQSxLQUFLNHlDLGVBQWUxMEMsRUFBRThCLEtBQUtneUMsZ0JBQWdCcCtCLEVBQUVvK0IsZ0JBQWdCaHlDLEtBQUsyUyxPQUFPM1MsS0FBSzh5QyxZQUFZLElBQUksSUFBSTMwQyxFQUFFLEtBQUt1RSxFQUFFa1IsRUFBRWxSLElBQUkxQyxNQUFNN0IsRUFBRXVFLEVBQUVBLEVBQUVBLEVBQUVpd0MsTUFBTSxPQUFPeDBDLEdBQUVnVixFQUFFLE9BQWNoVixFQUFFdzBDLE1BQU1qd0MsRUFBRWl3QyxNQUFNM3lDLEtBQUsyeUMsTUFBTS8rQixFQUFFRCxFQUFFbytCLFdBQVcveEMsS0FBS0EsS0FBS2l5QyxRQUFPLEVBQUdWLEdBQUc1OUIsRUFBRXpWLEdBQUcwVixFQUFFNVQsS0FBSzJ5QyxNQUFNM3lDLEtBQUsyeUMsTUFBTSxLQUFzQixRQUFqQi8rQixFQUFFRCxFQUFFbytCLFdBQVduK0IsSUFBWUEsRUFBRWcvQixjQUFjaC9CLEVBQUVqQixPQUFPaUIsRUFBRWsvQixnQkFBZ0I5eUMsS0FBSzJ5QyxNQUM3ZixLQUFLM3lDLEtBQUtpeUMsUUFBTyxHQUFJTyxHQUFHL3lDLFVBQVVveUMsWUFBWSxXQUFXLElBQUk3eEMsS0FBSzZ5QyxhQUFhLENBQUM3eUMsS0FBSzZ5QyxjQUFhLEVBQUcsSUFBSWwvQixFQUFFM1QsS0FBSzB5QyxXQUFXLEdBQUcsT0FBTy8rQixFQUFFLElBQUksSUFBSUMsRUFBRSxFQUFFQSxFQUFFRCxFQUFFdFMsT0FBT3VTLEtBQUksRUFBR0QsRUFBRUMsUUFBdUdtL0IsR0FBR3R6QyxVQUFVMnBDLEtBQUssU0FBU3oxQixHQUFHLEdBQUczVCxLQUFLZ3pDLFdBQVdyL0IsUUFBUSxDQUFDLElBQUlDLEVBQUU1VCxLQUFLMHlDLFdBQVcsT0FBTzkrQixJQUFJQSxFQUFFNVQsS0FBSzB5QyxXQUFXLElBQUk5K0IsRUFBRXJTLEtBQUtvUyxLQUN0WW8vQixHQUFHdHpDLFVBQVV3ekMsVUFBVSxXQUFXLElBQUlqekMsS0FBS2d6QyxXQUFXLENBQUNoekMsS0FBS2d6QyxZQUFXLEVBQUcsSUFBSXIvQixFQUFFM1QsS0FBSzB5QyxXQUFXLEdBQUcsT0FBTy8rQixFQUFFLElBQUksSUFBSUMsRUFBRSxFQUFFQSxFQUFFRCxFQUFFdFMsT0FBT3VTLElBQUksQ0FBQyxJQUFJMVYsRUFBRXlWLEVBQUVDLEdBQUcsbUJBQW9CMVYsR0FBRWlWLEVBQUUsTUFBTWpWLEdBQVVBLE9BRTNMZzFDLEdBQUd6ekMsVUFBVWtULE9BQU8sU0FBU2dCLEVBQUVDLEdBQUcsSUFBSTFWLEVBQUU4QixLQUFLbXpDLGNBQWNoMUMsRUFBRSxJQUFJNDBDLEdBQW9FLE9BQTdDLFFBQXBCbi9CLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxJQUFZelYsRUFBRWlyQyxLQUFLeDFCLEdBQUcwK0IsR0FBRzMrQixFQUFFelYsRUFBRSxLQUFLQyxFQUFFODBDLFdBQWtCOTBDLEdBQUcrMEMsR0FBR3p6QyxVQUFVbzBDLFFBQVEsU0FBU2xnQyxHQUFHLElBQUlDLEVBQUU1VCxLQUFLbXpDLGNBQWNqMUMsRUFBRSxJQUFJNjBDLEdBQXVFLE9BQWhELFFBQXBCcC9CLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxJQUFZelYsRUFBRWtyQyxLQUFLejFCLEdBQUcyK0IsR0FBRyxLQUFLMStCLEVBQUUsS0FBSzFWLEVBQUUrMEMsV0FBa0IvMEMsR0FBR2cxQyxHQUFHenpDLFVBQVU2ekMsa0NBQWtDLFNBQVMzL0IsRUFBRUMsRUFBRTFWLEdBQUcsSUFBSUMsRUFBRTZCLEtBQUttekMsY0FBY3p3QyxFQUFFLElBQUlxd0MsR0FBaUUsT0FBMUMsUUFBcEI3MEMsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLElBQVl3RSxFQUFFMG1DLEtBQUtsckMsR0FBR28wQyxHQUFHMStCLEVBQUV6VixFQUFFd1YsRUFBRWpSLEVBQUV1d0MsV0FBa0J2d0MsR0FDdGN3d0MsR0FBR3p6QyxVQUFVcTBDLFlBQVksV0FBVyxJQUFJbmdDLEVBQUUsSUFBSTYrQixHQUFHeHlDLE1BQU00VCxFQUFFRCxFQUFFcStCLGdCQUFnQjl6QyxFQUFFOEIsS0FBS216QyxjQUFjaDFDLEVBQUVELEVBQUU2ekMsV0FBVyxHQUFHLE9BQU81ekMsRUFBRUQsRUFBRTZ6QyxXQUFXcCtCLEVBQUVBLEVBQUVnL0IsTUFBTSxTQUFTLENBQUMsSUFBSXowQyxFQUFFLEtBQUssT0FBT0MsR0FBR0EsRUFBRTZ6QyxpQkFBaUJwK0IsR0FBRzFWLEVBQUVDLEVBQUVBLEVBQUVBLEVBQUV3MEMsTUFBTWgvQixFQUFFZy9CLE1BQU14MEMsRUFBRSxPQUFPRCxJQUFJQSxFQUFFeTBDLE1BQU1oL0IsR0FBRyxPQUFPQSxHQUErSW1QLEdBQUdvdkIsR0FBR252QixHQUFHcXZCLEdBQUdwdkIsR0FBRyxXQUFXOUwsSUFBRyxJQUFJKzRCLEtBQUtwQixHQUFHb0IsSUFBRyxHQUFJQSxHQUFHLElBSTliLElBR1V0OEIsR0FBT0MsR0FIYm1nQyxHQUFHLENBQUNDLGFBQWFQLEdBQUdRLFlBQVksU0FBU3RnQyxHQUFHLEdBQUcsTUFBTUEsRUFBRSxPQUFPLEtBQUssR0FBRyxJQUFJQSxFQUFFNlEsU0FBUyxPQUFPN1EsRUFBRSxJQUFJQyxFQUFFRCxFQUFFOHRCLG9CQUFvSSxZQUFoSCxJQUFTN3RCLElBQUksbUJBQW9CRCxFQUFFaEIsT0FBT1EsRUFBRSxPQUFPQSxFQUFFLE1BQU01VSxPQUFPaUgsS0FBS21PLEtBQWFBLEVBQUUsUUFBVkEsRUFBRThaLEdBQUc3WixJQUFjLEtBQUtELEVBQUUwSSxXQUFvQmt0QixRQUFRLFNBQVM1MUIsRUFBRUMsRUFBRTFWLEdBQXlCLE9BQXRCazFDLEdBQUd4L0IsSUFBVVQsRUFBRSxPQUFja2dDLEdBQUcsS0FBSzEvQixFQUFFQyxHQUFFLEVBQUcxVixJQUFJeVUsT0FBTyxTQUFTZ0IsRUFBRUMsRUFBRTFWLEdBQXlCLE9BQXRCazFDLEdBQUd4L0IsSUFBVVQsRUFBRSxPQUFja2dDLEdBQUcsS0FBSzEvQixFQUFFQyxHQUFFLEVBQUcxVixJQUFJZzJDLG9DQUFvQyxTQUFTdmdDLEVBQUVDLEVBQUUxVixFQUFFQyxHQUMzYSxPQUQ4YWkxQyxHQUFHbDFDLElBQVVpVixFQUFFLFFBQU8sTUFBTVEsUUFBRyxJQUFTQSxFQUFFOHRCLHNCQUN2ZXR1QixFQUFFLE1BQW9Ca2dDLEdBQUcxL0IsRUFBRUMsRUFBRTFWLEdBQUUsRUFBR0MsSUFBSWcyQyx1QkFBdUIsU0FBU3hnQyxHQUF3QixPQUFyQnkvQixHQUFHei9CLElBQVVSLEVBQUUsUUFBYVEsRUFBRTA0QixzQkFBcUI4RixHQUFHLFdBQVdrQixHQUFHLEtBQUssS0FBSzEvQixHQUFFLEVBQUcsV0FBV0EsRUFBRTA0QixvQkFBb0IsVUFBUyxJQUFRK0gsc0JBQXNCLFdBQVcsT0FBT1gsR0FBR3p4QyxXQUFNLEVBQU9DLFlBQVlveUMsd0JBQXdCbkMsR0FBR29DLDRCQUE0QmxDLEdBQUdtQyxVQUFVLFNBQVM1Z0MsRUFBRUMsR0FBR3NELElBQUUvRCxFQUFFLE9BQWMsSUFBSWpWLEVBQUVpWixHQUFFQSxJQUFFLEVBQUcsSUFBSSxPQUFPaTVCLEdBQUd6OEIsRUFBRUMsR0FBRyxRQUFRdUQsR0FBRWpaLEVBQUUyd0MsR0FBRyxZQUFXLEtBQU0yRixvQkFDblAsU0FBWTdnQyxFQUFFQyxHQUErQyxPQUE1Q3cvQixHQUFHei9CLElBQVVSLEVBQUUsTUFBTSx1QkFBOEIsSUFBSSsvQixHQUFHdi9CLEdBQUUsRUFBRyxNQUFNQyxJQUFHLElBQUtBLEVBQUUyMUIsVUFEMEtrTCx5QkFBeUIsU0FBUzlnQyxHQUFHLElBQUlDLEVBQ3RmdUQsR0FBRUEsSUFBRSxFQUFHLElBQUlpNUIsR0FBR3o4QixHQUFHLFNBQVN3RCxHQUFFdkQsSUFBSXNELElBQUcyM0IsR0FBRyxZQUFXLEtBQU1uMUIsbURBQW1ELENBQUNnN0IsT0FBTyxDQUFDOTNCLEVBQUdDLEVBQUdDLEVBQUdiLEVBQUdFLHlCQUF5QnZCLEVBQUcyQyxFQUFHLFNBQVM1SixHQUFHOEgsRUFBRzlILEVBQUUySixJQUFLc0YsR0FBR0MsR0FBRzJRLEdBQUdqWCxLQUM1SzNJLElBQVBELEdBQWtRLENBQUNnaEMsd0JBQXdCaDRCLEVBQUdpNEIsV0FBVyxFQUFFcjdCLFFBQVEsU0FBU3M3QixvQkFBb0IsY0FBclVGLHdCQXhKckIsU0FBWWhoQyxHQUFHLEdBQUcsb0JBQXFCcUcsK0JBQStCLE9BQU0sRUFBRyxJQUFJcEcsRUFBRW9HLCtCQUErQixHQUFHcEcsRUFBRWtoQyxhQUFhbGhDLEVBQUVtaEMsY0FBYyxPQUFNLEVBQUcsSUFBSSxJQUFJNzJDLEVBQUUwVixFQUFFb2hDLE9BQU9yaEMsR0FBR3VyQixHQUFHRSxHQUFHLFNBQVN6ckIsR0FBRyxPQUFPQyxFQUFFcWhDLGtCQUFrQi8yQyxFQUFFeVYsS0FBS3dyQixHQUFHQyxHQUFHLFNBQVN6ckIsR0FBRyxPQUFPQyxFQUFFc2hDLHFCQUFxQmgzQyxFQUFFeVYsS0FBSyxNQUFNeFYsS0F3SmxQZzNDLENBQUc3MUMsRUFBRSxHQUFHcVUsR0FBRSxDQUFDeWhDLGNBQWMsS0FBS0MscUJBQXFCL3ZCLEdBQUczTCx1QkFBdUIyN0Isd0JBQXdCLFNBQVMzaEMsR0FBVyxPQUFPLFFBQWZBLEVBQUU4WixHQUFHOVosSUFBbUIsS0FBS0EsRUFBRTBJLFdBQVdzNEIsd0JBQXdCLFNBQVNoaEMsR0FBRyxPQUFPQyxHQUFFQSxHQUFFRCxHQUFHLFNBQXVHLElBQUk0aEMsR0FBRyxDQUFDdnZDLFFBQVErdEMsSUFBSXlCLEdBQUdELElBQUl4QixJQUFJd0IsR0FBRzMzQyxFQUFPRCxRQUFRNjNDLEdBQUd4dkMsU0FBU3d2QyxJLDZCQ3pRbmE1M0MsRUFBT0QsUUFBVUYsRUFBUSxLLDhCQ0gzQixTQUFBZzRDOzs7Ozs7Ozs7QUFTYWwzQyxPQUFPQyxlQUFlYixFQUFRLGFBQWEsQ0FBQ21CLE9BQU0sSUFBSyxJQUFJWCxFQUFFLEtBQUt1RSxHQUFFLEVBQUdtUixFQUFFLEVBQUVoQixHQUFHLEVBQUUvVSxHQUFHLEVBQUVHLEdBQUUsRUFBR3FCLEdBQUUsRUFBRyxTQUFTSyxJQUFJLElBQUkxQixFQUFFLENBQUMsSUFBSTBWLEVBQUV4VixFQUFFNmhDLGVBQWUxZ0MsRUFBRXlULElBQUl6VCxHQUFFLEVBQUdYLEVBQUVJLEVBQUU0VSxJQUN0SyxTQUFTWCxJQUFJLElBQUlXLEVBQUV4VixFQUFFeVYsRUFBRXpWLEVBQUVzWSxLQUFLLEdBQUd0WSxJQUFJeVYsRUFBRXpWLEVBQUUsU0FBUyxDQUFDLElBQUlELEVBQUVDLEVBQUV1M0MsU0FBU3YzQyxFQUFFRCxFQUFFdVksS0FBSzdDLEVBQUVBLEVBQUU4aEMsU0FBU3gzQyxFQUFFeVYsRUFBRThDLEtBQUs5QyxFQUFFK2hDLFNBQVMsS0FBS3gzQyxFQUFFeVYsRUFBRW11QixTQUFTbHVCLEVBQUVELEVBQUVxc0IsZUFBZXJzQixFQUFFQSxFQUFFZ2lDLGNBQWMsSUFBSTVoQyxFQUFFRixFQUFFb0MsRUFBRW5ZLEVBQUUrVixFQUFFRixFQUFFN1YsRUFBRThWLEVBQUUsSUFBSSxJQUFJRSxFQUFFNVYsSUFBSSxRQUFRMlYsRUFBRUUsRUFBRWpXLEVBQUVtWSxFQUFFLEdBQUcsbUJBQW9CbkMsRUFBRSxHQUFHQSxFQUFFLENBQUNndUIsU0FBU2h1QixFQUFFNmhDLGNBQWNoaUMsRUFBRXFzQixlQUFlcHNCLEVBQUU2QyxLQUFLLEtBQUtpL0IsU0FBUyxNQUFNLE9BQU92M0MsRUFBRUEsRUFBRTJWLEVBQUUyQyxLQUFLM0MsRUFBRTRoQyxTQUFTNWhDLE1BQU0sQ0FBQzVWLEVBQUUsS0FBS3lWLEVBQUV4VixFQUFFLEVBQUUsQ0FBQyxHQUFHd1YsRUFBRXFzQixnQkFBZ0Jwc0IsRUFBRSxDQUFDMVYsRUFBRXlWLEVBQUUsTUFBTUEsRUFBRUEsRUFBRThDLFdBQVc5QyxJQUFJeFYsR0FBRyxPQUFPRCxFQUFFQSxFQUFFQyxFQUFFRCxJQUFJQyxJQUFJQSxFQUFFMlYsRUFBRW5VLE1BQUtpVSxFQUFFMVYsRUFBRXczQyxVQUFXai9CLEtBQUt2WSxFQUFFdzNDLFNBQVM1aEMsRUFBRUEsRUFBRTJDLEtBQUt2WSxFQUFFNFYsRUFBRTRoQyxTQUMvZTloQyxHQUFHLFNBQVNYLElBQUksSUFBSSxJQUFJSixHQUFHLE9BQU8xVSxHQUFHLElBQUlBLEVBQUV3M0MsY0FBYyxDQUFDMTNDLEdBQUUsRUFBRyxJQUFJLEdBQUcrVSxVQUFVLE9BQU83VSxHQUFHLElBQUlBLEVBQUV3M0MsZUFBZSxRQUFRMTNDLEdBQUUsRUFBRyxPQUFPRSxFQUFFd0IsSUFBSUwsR0FBRSxJQUFLLFNBQVNQLEVBQUU0VSxHQUFHMVYsR0FBRSxFQUFHLElBQUkyVixFQUFFbFIsRUFBRUEsRUFBRWlSLEVBQUUsSUFBSSxHQUFHQSxFQUFFLEtBQUssT0FBT3hWLEdBQUcsQ0FBQyxJQUFJRCxFQUFFUCxFQUFRbXpDLGVBQWUsS0FBRzN5QyxFQUFFNmhDLGdCQUFnQjloQyxHQUFvRCxNQUFqRCxHQUFHOFUsVUFBVSxPQUFPN1UsR0FBR0EsRUFBRTZoQyxnQkFBZ0I5aEMsUUFBbUIsR0FBRyxPQUFPQyxFQUFHLEdBQUc2VSxVQUFVLE9BQU83VSxJQUFJK1UsS0FBTSxRQUFRalYsR0FBRSxFQUFHeUUsRUFBRWtSLEVBQUUsT0FBT3pWLEVBQUV3QixJQUFJTCxHQUFFLEVBQUcyVCxLQUN2WSxJQUFxUWlCLEVBQUVLLEVBQW5RcEIsRUFBRWlOLEtBQUtoTixFQUFFLG1CQUFvQm9xQixXQUFXQSxnQkFBVyxFQUFPbnFCLEVBQUUsbUJBQW9CcXFCLGFBQWFBLGtCQUFhLEVBQU9scUIsRUFBRSxtQkFBb0JvaUMsc0JBQXNCQSwyQkFBc0IsRUFBT2xpQyxFQUFFLG1CQUFvQm1pQyxxQkFBcUJBLDBCQUFxQixFQUFXLFNBQVNyaEMsRUFBRWIsR0FBR08sRUFBRVYsRUFBRSxTQUFTSSxHQUFHUCxFQUFFa0IsR0FBR1osRUFBRUMsS0FBS1csRUFBRW5CLEVBQUUsV0FBV00sRUFBRVEsR0FBR1AsRUFBRWhXLEVBQVFtekMsaUJBQWlCLEtBQ2xXLEdBQUcsaUJBQWtCZ0YsYUFBYSxtQkFBb0JBLFlBQVl6MUIsSUFBSSxDQUFDLElBQUkxTCxFQUFFbWhDLFlBQVluNEMsRUFBUW16QyxhQUFhLFdBQVcsT0FBT244QixFQUFFMEwsWUFBWTFpQixFQUFRbXpDLGFBQWEsV0FBVyxPQUFPMzlCLEVBQUVrTixPQUFPLElBQUkxaEIsRUFBRW9VLEVBQUVHLEVBQUUwQixFQUFFLEtBQzFNLEdBRCtNLG9CQUFxQmhULE9BQU9nVCxFQUFFaFQsWUFBTyxJQUFxQjZ6QyxJQUFTN2dDLEVBQUU2Z0MsR0FDalI3Z0MsR0FBR0EsRUFBRW1oQyxXQUFXLENBQUMsSUFBSWhoQyxFQUFFSCxFQUFFbWhDLFdBQVdwM0MsRUFBRW9XLEVBQUUsR0FBR2hDLEVBQUVnQyxFQUFFLEdBQUc3QixFQUFFNkIsRUFBRSxHQUFHcFgsRUFBUW16QyxhQUFhLzdCLEVBQUUsUUFBUSxHQUFHLG9CQUFxQm5ULFFBQVEsbUJBQW9CbzBDLGVBQWUsQ0FBQyxJQUFJOWdDLEVBQUUsS0FBS0UsRUFBRSxTQUFTekIsR0FBRyxHQUFHLE9BQU91QixFQUFFLElBQUlBLEVBQUV2QixHQUFHLFFBQVF1QixFQUFFLE9BQU92VyxFQUFFLFNBQVNnVixHQUFHLE9BQU91QixFQUFFc29CLFdBQVc3K0IsRUFBRSxFQUFFZ1YsSUFBSXVCLEVBQUV2QixFQUFFNnBCLFdBQVdwb0IsRUFBRSxHQUFFLEtBQU1yQyxFQUFFLFdBQVdtQyxFQUFFLE1BQU1oQyxFQUFFLFdBQVcsT0FBTSxPQUFRLENBQUMsb0JBQXFCcEosVUFBVSxtQkFBb0IwSixHQUFHMUosUUFBUTBILE1BQU0sMklBQ3RaLG1CQUFvQmtDLEdBQUc1SixRQUFRMEgsTUFBTSwySUFBMkksSUFBSTZELEVBQUUsS0FBS0MsR0FBRSxFQUFHSSxHQUFHLEVBQUVJLEdBQUUsRUFBR0MsR0FBRSxFQUFHQyxFQUFFLEVBQUVLLEVBQUUsR0FBR0UsRUFBRSxHQUFHckQsRUFBRSxXQUFXLE9BQU84QyxHQUFHclksRUFBUW16QyxnQkFBZ0IsSUFBSXQ2QixFQUFFLElBQUl3L0IsZUFBZTEvQixFQUFFRSxFQUFFeS9CLE1BQU16L0IsRUFBRTAvQixNQUFNQyxVQUFVLFdBQVc3Z0MsR0FBRSxFQUFHLElBQUkzQixFQUFFMEIsRUFBRXpCLEVBQUU4QixFQUFFTCxFQUFFLEtBQUtLLEdBQUcsRUFBRSxJQUFJeFgsRUFBRVAsRUFBUW16QyxlQUFlLzhCLEdBQUUsRUFBRyxHQUFHLEdBQUdpQyxFQUFFOVgsRUFBRSxPQUFJLElBQUkwVixHQUFHQSxHQUFHMVYsR0FBbUMsT0FBdkI0WCxJQUFJQSxHQUFFLEVBQUd0QixFQUFFd0MsSUFBSTNCLEVBQUUxQixPQUFFK0IsRUFBRTlCLEdBQS9CRyxHQUFFLEVBQXNDLEdBQUcsT0FBT0osRUFBRSxDQUFDb0MsR0FBRSxFQUFHLElBQUlwQyxFQUFFSSxHQUFHLFFBQVFnQyxHQUFFLEtBQ2xmLElBQUlpQixFQUFFLFNBQVNyRCxHQUFHLEdBQUcsT0FBTzBCLEVBQUUsQ0FBQ2IsRUFBRXdDLEdBQUcsSUFBSXBELEVBQUVELEVBQUVxQyxFQUFFTyxFQUFFM0MsRUFBRTJDLEdBQUdGLEVBQUVFLEdBQUcsRUFBRTNDLElBQUlBLEVBQUUsR0FBRzJDLEVBQUUzQyxFQUFFeUMsRUFBRUEsRUFBRXpDLEdBQUd5QyxFQUFFekMsRUFBRW9DLEVBQUVyQyxFQUFFNEMsRUFBRWpCLElBQUlBLEdBQUUsRUFBR2dCLEVBQUU4L0IsaUJBQVksU0FBY3RnQyxHQUFFLEdBQUluWCxFQUFFLFNBQVNnVixFQUFFQyxHQUFHeUIsRUFBRTFCLEVBQUUrQixFQUFFOUIsRUFBRW1DLEdBQUcsRUFBRW5DLEVBQUUwQyxFQUFFOC9CLGlCQUFZLEdBQVF0Z0MsSUFBSUEsR0FBRSxFQUFHdEIsRUFBRXdDLEtBQUtqRSxFQUFFLFdBQVdzQyxFQUFFLEtBQUtDLEdBQUUsRUFBR0ksR0FBRyxHQUFHL1gsRUFBUWt5QywyQkFBMkIsRUFBRWx5QyxFQUFRbXlDLDhCQUE4QixFQUFFbnlDLEVBQVFveEMsd0JBQXdCLEVBQUVweEMsRUFBUXF5QyxzQkFBc0IsRUFBRXJ5QyxFQUFRb3lDLHFCQUFxQixFQUNyWnB5QyxFQUFRbXhDLHlCQUF5QixTQUFTbjdCLEVBQUVDLEdBQUcsT0FBT0QsR0FBRyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sUUFBUUEsRUFBRSxFQUFFLElBQUl6VixFQUFFMlYsRUFBRUUsRUFBRWxCLEVBQUVnQixFQUFFRixFQUFFZCxFQUFFbFYsRUFBUW16QyxlQUFlLElBQUksT0FBT2w5QixJQUFJLFFBQVFDLEVBQUUzVixFQUFFMlUsRUFBRWtCLEVBQUVkLE1BQU10VixFQUFRMDRDLGNBQWMsU0FBUzFpQyxHQUFHLE9BQU9FLEdBQUcsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSUQsRUFBRSxFQUFFLE1BQU0sUUFBUUEsRUFBRUMsRUFBRSxJQUFJM1YsRUFBRTJWLEVBQUVFLEVBQUVsQixFQUFFZ0IsRUFBRUQsRUFBRWYsRUFBRWxWLEVBQVFtekMsZUFBZSxJQUFJLE9BQU9uOUIsSUFBSSxRQUFRRSxFQUFFM1YsRUFBRTJVLEVBQUVrQixFQUFFZCxNQUMvVnRWLEVBQVFpZ0MsMEJBQTBCLFNBQVNqcUIsRUFBRUMsR0FBRyxJQUFJMVYsR0FBRyxJQUFJMlUsRUFBRUEsRUFBRWxWLEVBQVFtekMsZUFBZSxHQUFHLGlCQUFrQmw5QixHQUFHLE9BQU9BLEdBQUcsaUJBQWtCQSxFQUFFeTlCLFFBQVF6OUIsRUFBRTFWLEVBQUUwVixFQUFFeTlCLGFBQWEsT0FBT3g5QixHQUFHLEtBQUssRUFBRUQsRUFBRTFWLEdBQUcsRUFBRSxNQUFNLEtBQUssRUFBRTBWLEVBQUUxVixFQUFFLElBQUksTUFBTSxLQUFLLEVBQUUwVixFQUFFMVYsRUFBRSxXQUFXLE1BQU0sS0FBSyxFQUFFMFYsRUFBRTFWLEVBQUUsSUFBSSxNQUFNLFFBQVEwVixFQUFFMVYsRUFBRSxJQUE0RSxHQUF4RXlWLEVBQUUsQ0FBQ211QixTQUFTbnVCLEVBQUVnaUMsY0FBYzloQyxFQUFFbXNCLGVBQWVwc0IsRUFBRTZDLEtBQUssS0FBS2kvQixTQUFTLE1BQVMsT0FBT3YzQyxFQUFFQSxFQUFFd1YsRUFBRThDLEtBQUs5QyxFQUFFK2hDLFNBQVMvaEMsRUFBRWhVLFFBQVEsQ0FBQ3pCLEVBQUUsS0FBSyxJQUFJNlYsRUFBRTVWLEVBQUUsRUFBRSxDQUFDLEdBQUc0VixFQUFFaXNCLGVBQWVwc0IsRUFBRSxDQUFDMVYsRUFBRTZWLEVBQUUsTUFBTUEsRUFBRUEsRUFBRTBDLFdBQVcxQyxJQUFJNVYsR0FBRyxPQUFPRCxFQUFFQSxFQUFFQyxFQUFFRCxJQUFJQyxJQUFJQSxFQUFFd1YsRUFBRWhVLE1BQ2hmaVUsRUFBRTFWLEVBQUV3M0MsVUFBV2ovQixLQUFLdlksRUFBRXczQyxTQUFTL2hDLEVBQUVBLEVBQUU4QyxLQUFLdlksRUFBRXlWLEVBQUUraEMsU0FBUzloQyxFQUFFLE9BQU9ELEdBQUdoVyxFQUFRbWdDLHdCQUF3QixTQUFTbnFCLEdBQUcsSUFBSUMsRUFBRUQsRUFBRThDLEtBQUssR0FBRyxPQUFPN0MsRUFBRSxDQUFDLEdBQUdBLElBQUlELEVBQUV4VixFQUFFLFNBQVMsQ0FBQ3dWLElBQUl4VixJQUFJQSxFQUFFeVYsR0FBRyxJQUFJMVYsRUFBRXlWLEVBQUUraEMsU0FBU3gzQyxFQUFFdVksS0FBSzdDLEVBQUVBLEVBQUU4aEMsU0FBU3gzQyxFQUFFeVYsRUFBRThDLEtBQUs5QyxFQUFFK2hDLFNBQVMsT0FBTy8zQyxFQUFRMjRDLHNCQUFzQixTQUFTM2lDLEdBQUcsSUFBSUMsRUFBRUMsRUFBRSxPQUFPLFdBQVcsSUFBSTNWLEVBQUUyVixFQUFFRSxFQUFFbEIsRUFBRWdCLEVBQUVELEVBQUVmLEVBQUVsVixFQUFRbXpDLGVBQWUsSUFBSSxPQUFPbjlCLEVBQUUzUixNQUFNaEMsS0FBS2lDLFdBQVcsUUFBUTRSLEVBQUUzVixFQUFFMlUsRUFBRWtCLEVBQUVkLE9BQU90VixFQUFRaXlDLGlDQUFpQyxXQUFXLE9BQU8vN0IsR0FDM2NsVyxFQUFRaTBDLHFCQUFxQixXQUFXLE9BQU9sdkMsSUFBSSxPQUFPdkUsR0FBR0EsRUFBRTZoQyxlQUFlbGlDLEdBQUdvVixNQUFNdlYsRUFBUTQ0QywyQkFBMkIsV0FBVyxPQUFPcDRDLEdBQUd3QixLQUFLaEMsRUFBUTY0Qyx3QkFBd0IsYUFBYTc0QyxFQUFRODRDLDhCQUE4QixXQUFXLE9BQU90NEMsSyxnQ0NwQnpQLElBQUkwVixFQUdKQSxFQUFJLFdBQ0gsT0FBTzdULEtBREosR0FJSixJQUVDNlQsRUFBSUEsR0FBSyxJQUFJNmlDLFNBQVMsY0FBYixHQUNSLE1BQU9oMEMsR0FFYyxpQkFBWGQsU0FBcUJpUyxFQUFJalMsUUFPckNoRSxFQUFPRCxRQUFVa1csRyxpQkNuQlBqVyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSw0aENBQStoQyxNLGNDWXhqQ0QsRUFBT0QsUUFBVSxTQUFVZ0csR0FFekIsSUFBSTR0QixFQUE2QixvQkFBWDN2QixRQUEwQkEsT0FBTzJ2QixTQUV2RCxJQUFLQSxFQUNILE1BQU0sSUFBSXZ0QixNQUFNLG9DQUluQixJQUFLTCxHQUFzQixpQkFBUkEsRUFDakIsT0FBT0EsRUFHUixJQUFJZ3pDLEVBQVVwbEIsRUFBU3FsQixTQUFXLEtBQU9ybEIsRUFBU3NsQixLQUM5Q0MsRUFBYUgsRUFBVXBsQixFQUFTd2xCLFNBQVMxdEMsUUFBUSxZQUFhLEtBMkRuRSxPQS9CZTFGLEVBQUkwRixRQUFRLHNEQUF1RCxTQUFTMnRDLEVBQVdDLEdBRXJHLElBV0lDLEVBWEFDLEVBQWtCRixFQUNwQnpiLE9BQ0FueUIsUUFBUSxXQUFZLFNBQVMvSyxFQUFHODRDLEdBQUssT0FBT0EsSUFDNUMvdEMsUUFBUSxXQUFZLFNBQVMvSyxFQUFHODRDLEdBQUssT0FBT0EsSUFHOUMsTUFBSSxvREFBb0R4dkIsS0FBS3V2QixHQUNwREgsR0FRUkUsRUFGcUMsSUFBbENDLEVBQWdCdnlDLFFBQVEsTUFFbEJ1eUMsRUFDa0MsSUFBakNBLEVBQWdCdnlDLFFBQVEsS0FFekIreEMsRUFBVVEsRUFHVkwsRUFBYUssRUFBZ0I5dEMsUUFBUSxRQUFTLElBSWpELE9BQVMzSSxLQUFLQyxVQUFVdTJDLEdBQVUsUyx1VUNqRjNDeG1DLEVBQUFqVCxFQUFBLEcsT0FHQUEsRUFBQSxHQUlBLEksSUFBQUEsRUFBQSxLLElBQ0FBLEVBQUEsSyxJQUNBQSxFQUFBLEssSUFDQUEsRUFBQSxLLElBQ0FBLEVBQUEsSyxJQUNBQSxFQUFBLEssSUFDQUEsRUFBQSxLLElBQ0FBLEVBQUEsS0FHQTQ1QyxFQUFBNTVDLEVBQUEsR0FHQTY1QyxFQUFBNzVDLEVBQUEsSUFDQWtOLEVBQUFsTixFQUFBLEcsdURBRU04NUMsRSxZQUNGLFNBQUFBLEVBQVl4bkMsSSw0RkFBT2EsQ0FBQTVRLEtBQUF1M0MsR0FBQSxJQUFBQyxFLGlLQUFBM21DLENBQUE3USxNQUFBdTNDLEVBQUF6bUMsV0FBQXZTLE9BQUF3UyxlQUFBd21DLElBQUF2NUMsS0FBQWdDLEtBQ1QrUCxJQURTLE9BRWZ5bkMsRUFBS3pxQyxNQUFRLENBQ1RDLFVBQVUsRUFBQXJDLEVBQUEzQyxVQUFTLGNBQWdCLEdBQ25DTSxXQUFZLEdBQ1oyRSxlQUFnQixFQUNoQkksUUFBUyxDQUNMalAsS0FBTSxHQUNOMkssT0FBUSxHQUNSakYsTUFBTyxHQUNQaUosTUFBTyxNQUNQVSxPQUFRLEtBR2hCK3BDLEVBQUtycEMsYUFBZUEsZUFBYTlPLEtBQWJtNEMsR0FDcEJBLEVBQUsxcEMsWUFBY0EsY0FBWXpPLEtBQVptNEMsR0FDbkJBLEVBQUtwcUMsWUFBY0EsY0FBWS9OLEtBQVptNEMsR0FDbkJBLEVBQUs3cUMsb0JBQXNCQSxzQkFBb0J0TixLQUFwQm00QyxHQWpCWkEsRSxtVUFESnhtQyxhLHlDQXFCRDNELEdBQ1ZyTixLQUFLbU4sU0FBUyxDQUNWc3FDLGlCQUFrQnBxQyxNLHFDQUt0QnJOLEtBQUttTixTQUFTLENBQ1ZFLFFBQVNyTixLQUFLK00sTUFBTUMsU0FBU2hOLEtBQUsrTSxNQUFNRSxtQiwrQkFNNUMsSUFDTXlxQyxJQURXLEVBQUEvc0MsRUFBQTNDLFVBQVMsY0FBZ0IsSUFDUGhJLEtBQUsrTSxNQUFNRSxnQkFBa0JqTixLQUFLK00sTUFBTU0sUUFDdkVzcUMsR0FBVyxFQUFBTCxFQUFBaG1DLGFBQVlvbUMsRUFBaUJBLEVBQWdCM3VDLE9BQVEydUMsRUFBZ0I1ekMsTUFBT3BELEtBQUtzSixNQUFNMHRDLEVBQWdCM3FDLE9BQVEycUMsRUFBZ0JqcUMsUUFFOUksSUFDSSxPQUNJeUQsRUFBQWxMLFFBQUFqQixjQUFBLFdBQ0ltTSxFQUFBbEwsUUFBQWpCLGNBQUM2eUMsRUFBQTV4QyxRQUFELEtBQ0lrTCxFQUFBbEwsUUFBQWpCLGNBQUM4eUMsRUFBQTd4QyxRQUFELENBQ0lnSCxTQUFVaE4sS0FBSytNLE1BQU1DLFNBQ3JCOHFDLFlBQWE5M0MsS0FBSzJNLG9CQUNsQk0sY0FBZWpOLEtBQUsrTSxNQUFNRSxpQkFJbENpRSxFQUFBbEwsUUFBQWpCLGNBQUM2eUMsRUFBQTV4QyxRQUFELEtBRUlrTCxFQUFBbEwsUUFBQWpCLGNBQUNnekMsRUFBQS94QyxRQUFELENBQ0k1RyxJQUFLWSxLQUFLK00sTUFBTUUsY0FDaEJJLFFBQVNxcUMsRUFDVDFxQyxTQUFVaE4sS0FBSytNLE1BQU1DLFNBQ3JCZ3JDLGVBQWdCaDRDLEtBQUs4TixZQUNyQm1xQyxlQUFnQmo0QyxLQUFLbU8sZ0JBSzdCK0MsRUFBQWxMLFFBQUFqQixjQUFDNnlDLEVBQUE1eEMsUUFBRCxLQUNJa0wsRUFBQWxMLFFBQUFqQixjQUFDbXpDLEVBQUFseUMsUUFBRCxDQUNJNUcsSUFBS3NPLEtBQUtDLEtBQXFCLElBQWhCRCxLQUFLRSxVQUNwQlAsUUFBU3FxQyxFQUNUdDVDLEtBQU1zNUMsRUFBZ0J0NUMsS0FDdEIySyxPQUFRMnVDLEVBQWdCM3VDLE9BQ3hCakYsTUFBTzR6QyxFQUFnQjV6QyxNQUN2QmlKLE1BQU8ycUMsRUFBZ0IzcUMsTUFDdkJvckMsT0FBUW40QyxLQUFLb04sZUFJckI4RCxFQUFBbEwsUUFBQWpCLGNBQUM2eUMsRUFBQTV4QyxRQUFELEtBQ0lrTCxFQUFBbEwsUUFBQWpCLGNBQUNxekMsRUFBQXB5QyxRQUFELENBQVN3QyxVQUFXa3ZDLEtBR3hCeG1DLEVBQUFsTCxRQUFBakIsY0FBQzZ5QyxFQUFBNXhDLFFBQUQsS0FDSWtMLEVBQUFsTCxRQUFBakIsY0FBQ3N6QyxFQUFBcnlDLFFBQUQsQ0FBYWt1QixLQUFNeWpCLEtBR3ZCem1DLEVBQUFsTCxRQUFBakIsY0FBQzZ5QyxFQUFBNXhDLFFBQUQsS0FDSWtMLEVBQUFsTCxRQUFBakIsY0FBQ3V6QyxFQUFBdHlDLFFBQUQsQ0FDSTVHLElBQUtzTyxLQUFLQyxLQUFxQixJQUFoQkQsS0FBS0UsVUFDcEJwRixVQUFXa3ZDLEVBQ1hhLE9BQVF2NEMsS0FBS3c0QyxhQUFhbjVDLEtBQUtXLFNBR3ZDa1IsRUFBQWxMLFFBQUFqQixjQUFDNnlDLEVBQUE1eEMsUUFBRCxLQUNJa0wsRUFBQWxMLFFBQUFqQixjQUFDMHpDLEVBQUF6eUMsUUFBRCxRQU1oQixNQUFNdEQsR0FFRixPQURBb0gsUUFBUUMsSUFBSXJILEdBRVJ3TyxFQUFBbEwsUUFBQWpCLGNBQUM2eUMsRUFBQTV4QyxRQUFELEtBQ0lrTCxFQUFBbEwsUUFBQWpCLGNBQUMwekMsRUFBQXp5QyxRQUFELFksZUFRTHV4QyxHLG1oQkNySWY3bUMsRUFBQWpULEVBQUEsRyxPQUlBQSxFQUFBLElBSUEsSSxJQUFBQSxFQUFBLEtBSUE0NUMsRUFBQTU1QyxFQUFBLEdBSUFpN0MsRUFBQWo3QyxFQUFBLElBQ0FrTixFQUFBbE4sRUFBQSxHLHVEQUdNazdDLEUsWUFDRixTQUFBQSxFQUFZNW9DLEksNEZBQU9hLENBQUE1USxLQUFBMjRDLEdBQUEsSUFBQW5CLEUsaUtBQUEzbUMsQ0FBQTdRLE1BQUEyNEMsRUFBQTduQyxXQUFBdlMsT0FBQXdTLGVBQUE0bkMsSUFBQTM2QyxLQUFBZ0MsS0FDVCtQLElBRFMsT0FFZnluQyxFQUFLenFDLE1BQVEsQ0FDVEMsU0FBVXdxQyxFQUFLem5DLE1BQU0vQyxTQUNyQkMsY0FBYyxHQUdsQnVxQyxFQUFLeHBDLFNBQVdBLFdBQVMzTyxLQUFUbTRDLEdBUERBLEUsbVVBREV4bUMsYSx5Q0FXUHhJLEdBR1YsSUFBSW93QyxFQUFVbDRDLEtBQUtzSixNQUFNdEosS0FBS0MsVUFBVTZILElBbUJ4QyxPQWxCQW93QyxFQUFReDZDLEtBQU8sVUFBVXc2QyxFQUFReDZDLEtBQ2pDdzZDLEVBQVE3dkMsT0FBUzZ2QyxFQUFRN3ZDLE9BQU9NLFFBQVEsV0FBWSxxQkFHeEIsaUJBQWxCdXZDLEVBQVE3ckMsT0FDZDZyQyxFQUFRN3JDLE1BQVFyTSxLQUFLc0osTUFBTTR1QyxFQUFRN3JDLE9BQ25DNnJDLEVBQVE3ckMsTUFBTTZyQyxRQUFVLFFBRUssV0FBekJDLEVBQU9ELEVBQVE3ckMsT0FDbkI2ckMsRUFBUTdyQyxNQUFNNnJDLFFBQVUsT0FHeEJBLEVBQVE3ckMsTUFBUSxHQUVwQjZyQyxFQUFRN3JDLE1BQU02ckMsUUFBVSxPQUV4QkEsRUFBUTdyQyxNQUFRck0sS0FBS0MsVUFBVWk0QyxFQUFRN3JDLE9BRWhDNnJDLEksc0NBR0tweEMsR0FNWixJQUFJc3hDLEVBQW1COTRDLEtBQUsrTSxNQUFNQyxTQUFTeEYsR0FDdkNveEMsRUFBVTU0QyxLQUFLKzRDLGNBQWNELEdBRTdCOXJDLEVBQVdoTixLQUFLK00sTUFBTUMsU0FDMUJBLEVBQVN6TCxLQUFLcTNDLEdBRWQ1NEMsS0FBS21OLFNBQVMsQ0FDVkgsU0FBU0EsS0FFYixFQUFBckMsRUFBQXhDLFdBQVUsWUFBWTZFLEssK0JBR2pCLElBQUFnc0MsRUFBQWg1QyxLQUVDaTVDLEVBQWNqNUMsS0FBSytQLE1BQU0vQyxTQUFTL00sSUFBSSxTQUFDb04sRUFBUzdGLEdBQVYsT0FDeEMwSixFQUFBbEwsUUFBQWpCLGNBQUNtMEMsRUFBQWx6QyxRQUFELENBQ0k1RyxJQUFPb0ksRUFDUEEsTUFBU0EsRUFDVHlGLGNBQWlCK3JDLEVBQUtqcEMsTUFBTTlDLGNBQzVCSSxRQUFXQSxFQUNYOHJDLGtCQUFxQkgsRUFBS2pwQyxNQUFNK25DLFlBQ2hDc0IsU0FBWUEsV0FBUy81QyxLQUFLMjVDLEdBQzFCaHJDLFNBQVlnckMsRUFBS2hyQyxTQUNqQnFyQyxrQkFBcUJMLEVBQUtNLGdCQUFnQmo2QyxLQUFLMjVDLE9BSXZELE9BQ0k5bkMsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLFlBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSwwQkFDWEQsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLFNBQWYsY0FHQUQsRUFBQWxMLFFBQUFqQixjQUFBLFVBQ0trMEMsUyxlQVFWTixHLGdCQ3ZHZixJQUFJeDRDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSx5VkFBMFYsTSx5VUNGblg2UyxFQUFBalQsRUFBQSxHLG9DQUVBaTdDLEVBQUFqN0MsRUFBQSxJQUVBQSxFQUFBLEksSUFFTTg3QyxFLFlBQ0YsU0FBQUEsRUFBWXhwQyxJLDRGQUFPYSxDQUFBNVEsS0FBQXU1QyxHQUFBLElBQUEvQixFLGlLQUFBM21DLENBQUE3USxNQUFBdTVDLEVBQUF6b0MsV0FBQXZTLE9BQUF3UyxlQUFBd29DLElBQUF2N0MsS0FBQWdDLEtBQ1QrUCxJQURTLE9BRWZ5bkMsRUFBS3pxQyxNQUFRLEdBRkV5cUMsRSxtVUFERHhtQyxhLDZDQU9kaFIsS0FBSytQLE1BQU1zcEMsa0JBQWtCcjVDLEtBQUsrUCxNQUFNOUMsaUIsK0JBTXhDLE9BQ0lpRSxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsYUFBYXFvQyxVQUFVLE9BQU9sNEMsR0FBSXRCLEtBQUsrUCxNQUFNMUMsUUFBUWpQLEtBQU1xN0MsWUFBV3o1QyxLQUFLK1AsTUFBTTFDLFFBQVFqUCxLQUFNczdDLFlBQWFDLGFBQVd0NkMsS0FBS1csT0FDdklrUixFQUFBbEwsUUFBQWpCLGNBQUEsTUFDSW9NLFVBQWFuUixLQUFLK1AsTUFBTXZJLFFBQVF4SCxLQUFLK1AsTUFBTTlDLGNBQWdCLHFCQUFzQixZQUNqRnUrQixRQUFXb08sbUJBQWlCdjZDLEtBQUtXLE1BQ2pDd0gsTUFBU3hILEtBQUsrUCxNQUFNdkksT0FDcEIwSixFQUFBbEwsUUFBQWpCLGNBQUEsUUFBTW9NLFVBQVUsaUJBQ1huUixLQUFLK1AsTUFBTTFDLFFBQVFqUCxNQUV4QjhTLEVBQUFsTCxRQUFBakIsY0FBQSxZQUNJbU0sRUFBQWxMLFFBQUFqQixjQUFBLFVBQ0l5QyxNQUFTeEgsS0FBSytQLE1BQU12SSxNQUNwQmdrQyxRQUFTeHJDLEtBQUtzNUMsZ0JBQWdCajZDLEtBQUtXLE9BQU9rUixFQUFBbEwsUUFBQWpCLGNBQUEsS0FBR29NLFVBQVUsdUJBRjNELG9CQUdBRCxFQUFBbEwsUUFBQWpCLGNBQUEsVUFDSXlDLE1BQVN4SCxLQUFLK1AsTUFBTXZJLE1BQ3BCZ2tDLFFBQVN4ckMsS0FBSytQLE1BQU1xcEMsVUFBVWxvQyxFQUFBbEwsUUFBQWpCLGNBQUEsS0FBR29NLFVBQVUsdUJBRi9DLFVBR0FELEVBQUFsTCxRQUFBakIsY0FBQSxVQUNJeUMsTUFBU3hILEtBQUsrUCxNQUFNdkksTUFDcEJna0MsUUFBU3hyQyxLQUFLK1AsTUFBTS9CLFVBQVVrRCxFQUFBbEwsUUFBQWpCLGNBQUEsS0FBR29NLFVBQVUsZ0JBRi9DLGlCLGVBVVRvb0MsRyw2QkN6Q1IsU0FBU0ksRUFBV2ozQyxHQUV2QixJQUFJdEUsRUFBTzZQLE1BQU05TCxPQUFPMDNDLGFBQWEsYUFDckNuM0MsRUFBRWd2QixhQUFhb29CLFFBQVEsaUJBQWtCMTdDLEcsbURBUDdCdzdDLGlCQUFULFNBQTBCbDNDLEdBQzdCMUMsS0FBSytQLE1BQU1vcEMsa0JBQWtCejJDLEksRUFHakJpM0MsYUFNaEIvM0MsT0FBT200QyxlQUFpQixDQUNwQkosV0FBWUEsSSxnQkNWaEIsSUFBSXg1QyxFQUFVMUMsRUFBUSxJQUVBLGlCQUFaMEMsSUFBc0JBLEVBQVUsQ0FBQyxDQUFDdkMsRUFBT0MsRUFBSXNDLEVBQVMsTUFPaEUsSUFBSThDLEVBQVUsQ0FBQ3dKLEtBQU0sRUFFckIxRyxlQVBJQSxFQVFKaEMsZ0JBQXFCaUIsR0FFUnZILEVBQVEsRUFBUkEsQ0FBNkQwQyxFQUFTOEMsR0FFaEY5QyxFQUFRdU0sU0FBUTlPLEVBQU9ELFFBQVV3QyxFQUFRdU0sUyxpQkNqQmxDOU8sRUFBT0QsUUFBVUYsRUFBUSxFQUFSQSxFQUE2RCxJQUVoRjhELEtBQUssQ0FBQzNELEVBQU9DLEVBQUkseVZBQTBWLE0sZ0ZDRm5XNkwsYUFBVCxTQUFzQlgsR0FDekIsT0FBT0EsRUFBT0ssTUFBTSxLQUFLMUIsT0FBTyxTQUFBeEgsR0FBQSxPQUFPQSxFQUFLMkssU0FBUyxPQUFNbkQsT0FBT0MsU0FBUzFILElBQUksU0FBQUMsR0FBQSxPQUFNQSxFQUFLLFEsZ0ZDRzlFazVDLFNBQVQsV0FDSCxJQUFJNXVDLEdBQW1CLEVBQUFrRSxFQUFBaEUscUJBQW9CMUssS0FBSytNLE1BQU1DLFNBQVNoTixLQUFLK1AsTUFBTTlDLGdCQUUxRW5ELFFBQVFDLElBQUlTLEVBQWlCdkssSUFBSTBPLHNCQUFvQjFOLEtBQUssTUFQOUQsSUFBQXlOLEVBQUFqUixFQUFBLEdBQ0F5TixFQUFBek4sRUFBQSxJLGdGQ0RnQm9TLGFBQVQsU0FBc0JDLEVBQVN0SCxHQUNsQywrR0FFc0JzSCxFQUZ0QixnR0FJMENsTyxPQUFPc0wsc0JBSmpELElBSTBFMUUsRUFBVXBLLEtBSnBGLGlCLHlVQ0NKc1MsRUFBQWpULEVBQUEsRyxvQ0FFQUEsRUFBQSxJLElBRU11OEMsRSxZQUNGLFNBQUFBLEVBQVlqcUMsSSw0RkFBT2EsQ0FBQTVRLEtBQUFnNkMsR0FBQSxJQUFBeEMsRSxpS0FBQTNtQyxDQUFBN1EsTUFBQWc2QyxFQUFBbHBDLFdBQUF2UyxPQUFBd1MsZUFBQWlwQyxJQUFBaDhDLEtBQUFnQyxLQUNUK1AsSUFEUyxPQUVmeW5DLEVBQUt6cUMsTUFBUXJNLEtBQUtzSixNQUFNQyxhQUFhQyxRQUFiLDBDQUErRHN0QyxFQUFLem5DLE1BQU1uRixTQUFTMUYsS0FBSzlHLFFBQVksQ0FDeEgwRixNQUFRLENBQ0ptMkMsU0FBVSxRQUNWaGtCLElBQUssT0FDTEYsS0FBTSxTQUVWbWtCLFdBQVcsR0FFZjFDLEVBQUt6cUMsTUFBTXlzQyxVQUFXLFFBVlBoQyxFLG1VQURVeG1DLGEsbUNBY3JCdE8sR0FBRSxJQUFBczJDLEVBQUFoNUMsS0FDTixHQUFpQixTQUFkMEMsRUFBRVAsT0FBT2IsR0FBWSxDQUNwQixJQUFJeUwsRUFBUXJNLEtBQUtzSixNQUFNdEosS0FBS0MsVUFBVVgsS0FBSytNLFFBQzNDQSxFQUFNakosTUFBTW15QixJQUFNdnpCLEVBQUU0b0IsTUFBTyxLQUMzQnZlLEVBQU1qSixNQUFNaXlCLEtBQU9yekIsRUFBRTJvQixNQUFPLEtBQzVCcnJCLEtBQUttTixTQUFTLENBQ1ZySixNQUFRaUosRUFBTWpKLE9BQ2hCLFdBQ0VtRyxhQUFhRyxRQUFiLDBDQUErRDR1QyxFQUFLanBDLE1BQU1uRixTQUFTMUYsS0FBSzlHLEtBQU9zQyxLQUFLQyxVQUFVcTRDLEVBQUtqc0MsYSw2Q0FLeEdySyxHQUFHLElBQUF5M0MsRUFBQW42QyxLQUN0QkEsS0FBS21OLFNBQVMsQ0FDVitzQyxXQUFZbDZDLEtBQUsrTSxNQUFNbXRDLFdBQ3pCLFdBQ0Vqd0MsYUFBYUcsUUFBYiwwQ0FBK0QrdkMsRUFBS3BxQyxNQUFNbkYsU0FBUzFGLEtBQUs5RyxLQUFPc0MsS0FBS0MsVUFBVXc1QyxFQUFLcHRDLFkscUNBS3ZIL00sS0FBS21OLFNBQVMsQ0FDVnFzQyxVQUFVLFcscUNBS2R4NUMsS0FBS21OLFNBQVMsQ0FDVnFzQyxVQUFVLFksK0JBT2QsT0FDSXRvQyxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS3kwQyxVQUFXeDVDLEtBQUsrTSxNQUFNeXNDLFVBQVdsNEMsR0FBRyxPQUFPODRDLFVBQVdwNkMsS0FBS3E2QyxRQUFRaDdDLEtBQUtXLE1BQU84RCxNQUFPOUQsS0FBSytNLE1BQU1qSixPQUNsR29OLEVBQUFsTCxRQUFBakIsY0FBQSxRQUFNdTFDLE1BQU0sT0FBT25wQyxVQUFVLGNBQWNvcEMsWUFBYXY2QyxLQUFLdzZDLGFBQWFuN0MsS0FBS1csTUFBT3k2QyxVQUFXejZDLEtBQUswNkMsYUFBYXI3QyxLQUFLVyxPQUNwSGtSLEVBQUFsTCxRQUFBakIsY0FBQSxLQUFHb00sVUFBVSw0QkFHYm5SLEtBQUsrTSxNQUFNbXRDLFVBQ1hocEMsRUFBQWxMLFFBQUFqQixjQUFBLFFBQU11MUMsTUFBTSxXQUFXbnBDLFVBQVUsa0JBQWtCcTZCLFFBQVN4ckMsS0FBSzI2Qyx1QkFBdUJ0N0MsS0FBS1csT0FDekZrUixFQUFBbEwsUUFBQWpCLGNBQUEsS0FBR29NLFVBQVUsa0NBSWpCRCxFQUFBbEwsUUFBQWpCLGNBQUEsUUFBTXUxQyxNQUFNLFdBQVducEMsVUFBVSxrQkFBa0JxNkIsUUFBU3hyQyxLQUFLMjZDLHVCQUF1QnQ3QyxLQUFLVyxPQUN6RmtSLEVBQUFsTCxRQUFBakIsY0FBQSxLQUFHb00sVUFBVSxrQ0FJakJuUixLQUFLK00sTUFBTW10QyxVQUNQaHBDLEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSx3QkFDWEQsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLFNBQVNuUixLQUFLK1AsTUFBTW5GLFNBQVMxRixLQUFLOUcsT0FHckQ0QixLQUFLK1AsTUFBTW5GLGMsZUFRcEJvdkMsRyxnQkNyRmYsSUFBSTc1QyxFQUFVMUMsRUFBUSxJQUVBLGlCQUFaMEMsSUFBc0JBLEVBQVUsQ0FBQyxDQUFDdkMsRUFBT0MsRUFBSXNDLEVBQVMsTUFPaEUsSUFBSThDLEVBQVUsQ0FBQ3dKLEtBQU0sRUFFckIxRyxlQVBJQSxFQVFKaEMsZ0JBQXFCaUIsR0FFUnZILEVBQVEsRUFBUkEsQ0FBNkQwQyxFQUFTOEMsR0FFaEY5QyxFQUFRdU0sU0FBUTlPLEVBQU9ELFFBQVV3QyxFQUFRdU0sUyxpQkNqQmxDOU8sRUFBT0QsUUFBVUYsRUFBUSxFQUFSQSxFQUE2RCxJQUVoRjhELEtBQUssQ0FBQzNELEVBQU9DLEVBQUksaVBBQWtQLE0seVVDQzNRNlMsRUFBQWpULEVBQUEsRyxvQ0FFQUEsRUFBQSxJQUNBLElBQUE0NUMsRUFBQTU1QyxFQUFBLElBRUFrTixFQUFBbE4sRUFBQSxHLElBTU1tOUMsRSxZQUNGLFNBQUFBLEVBQVk3cUMsSSw0RkFBT2EsQ0FBQTVRLEtBQUE0NkMsR0FBQSxJQUFBcEQsRSxpS0FBQTNtQyxDQUFBN1EsTUFBQTQ2QyxFQUFBOXBDLFdBQUF2UyxPQUFBd1MsZUFBQTZwQyxJQUFBNThDLEtBQUFnQyxLQUNUK1AsSUFDRnZILEdBQVksRUFBQW1DLEVBQUF2QyxlQUFjb3ZDLEVBQUt6bkMsTUFBTTNSLE1BRjFCLE9BSWZvNUMsRUFBS3pxQyxNQUFRLENBQ1QzTyxLQUFNb0ssRUFBV0EsRUFBVXBLLEtBQU8sR0FDbEMySyxPQUFRUCxFQUFXQSxFQUFVTyxPQUFTLEdBQ3RDZ0UsTUFBT3ZFLEVBQVdBLEVBQVV1RSxNQUFRLEdBQ3BDakosTUFBTzBFLEVBQVdBLEVBQVUxRSxNQUFRLElBUnpCMHpDLEUsbVVBREZ4bUMsYSw0Q0FlYmhSLEtBQUsrUCxNQUFNb29DLE9BQU8sQ0FDZC81QyxLQUFNNEIsS0FBSytNLE1BQU0zTyxLQUNqQjJLLE9BQVEvSSxLQUFLK00sTUFBTWhFLE9BQ25CakYsTUFBTzlELEtBQUsrTSxNQUFNakosTUFDbEJpSixNQUFPL00sS0FBSytNLE1BQU1BLFUsK0JBTXRCLElBQUkzTyxFQUFNNEIsS0FBSytNLE1BQU0zTyxLQUNqQjJLLEVBQVEvSSxLQUFLK00sTUFBTWhFLE9BQ25CakYsRUFBTzlELEtBQUsrTSxNQUFNakosTUFDbEJpSixFQUFPL00sS0FBSytNLE1BQU1BLE1BRXRCLE9BQ0ltRSxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsd0JBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLFVBRUFELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxJQUNYRCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsU0FBZixrQkFDQUQsRUFBQWxMLFFBQUFqQixjQUFBLFNBQU9HLEtBQUssT0FBTzIxQyxZQUFZLHFCQUFxQi83QyxNQUFPVixFQUFNMDhDLFNBQVVDLGFBQVcxN0MsS0FBS1csTUFBT3NCLEdBQUcsZ0JBQ3JHNFAsRUFBQWxMLFFBQUFqQixjQUFBLFVBQVF5bUMsUUFBU3hyQyxLQUFLZzdDLGVBQWUzN0MsS0FBS1csTUFBT3NCLEdBQUcsUUFBTzRQLEVBQUFsTCxRQUFBakIsY0FBQSxLQUFHb00sVUFBVSxnQkFBeEUsU0FHSkQsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLElBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLG9CQUNBRCxFQUFBbEwsUUFBQWpCLGNBQUEsWUFBVWpHLE1BQU9pSyxFQUFRK3hDLFNBQVVHLGVBQWE1N0MsS0FBS1csTUFBT3NCLEdBQUcsZ0JBQWdCZzVDLE1BQU0sZ0NBSXpGcHBDLEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxJQUNYRCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsU0FBZixpQkFDQUQsRUFBQWxMLFFBQUFqQixjQUFBLFlBQVVqRyxNQUFPZ0YsRUFBT2czQyxTQUFVSSxjQUFZNzdDLEtBQUtXLFNBR3ZEa1IsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLElBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLG1CQUNBRCxFQUFBbEwsUUFBQWpCLGNBQUEsWUFBVWpHLE1BQU9pTyxFQUFPK3RDLFNBQVVLLGNBQVk5N0MsS0FBS1csTUFBT3NCLEdBQUcsdUIsZUFRbEVzNUMsRyxnQkMxRWYsSUFBSXo2QyxFQUFVMUMsRUFBUSxJQUVBLGlCQUFaMEMsSUFBc0JBLEVBQVUsQ0FBQyxDQUFDdkMsRUFBT0MsRUFBSXNDLEVBQVMsTUFPaEUsSUFBSThDLEVBQVUsQ0FBQ3dKLEtBQU0sRUFFckIxRyxlQVBJQSxFQVFKaEMsZ0JBQXFCaUIsR0FFUnZILEVBQVEsRUFBUkEsQ0FBNkQwQyxFQUFTOEMsR0FFaEY5QyxFQUFRdU0sU0FBUTlPLEVBQU9ELFFBQVV3QyxFQUFRdU0sUyxpQkNqQmxDOU8sRUFBT0QsUUFBVUYsRUFBUSxFQUFSQSxFQUE2RCxJQUVoRjhELEtBQUssQ0FBQzNELEVBQU9DLEVBQUksa0NBQW1DLE0sZ0ZDQTVDazlDLFdBQVQsU0FBcUI5c0MsR0FDeEJqTyxLQUFLbU4sU0FBUyxDQUNWL08sS0FBTTZQLEVBQU1yQixjQUFjOU4sUyxFQUlsQm04QyxhQUFULFNBQXVCaHRDLEdBQzFCak8sS0FBS21OLFNBQVMsQ0FDVnBFLE9BQVFrRixFQUFNckIsY0FBYzlOLFMsRUFJbkJvOEMsWUFBVixTQUF1Qmp0QyxHQUMxQmpPLEtBQUttTixTQUFTLENBQ1ZySixNQUFPbUssRUFBTXJCLGNBQWM5TixTLEVBSW5CcThDLFlBQVQsU0FBc0JsdEMsR0FDekJqTyxLQUFLbU4sU0FBUyxDQUNWSixNQUFPa0IsRUFBTXJCLGNBQWM5TixTLEVBSW5CczhDLDJCQUFULFNBQW9DejFDLEdBRXZDLElBQUlvSyxFQUFRLEdBQ1JoRCxTQUNKLElBQ0lBLEVBQVFyTSxLQUFLc0osTUFBTXJFLEVBQUlvSCxPQUUzQixNQUFNckssR0FDRm9ILFFBQVEwSCxNQUFNLGtGQUNkMUgsUUFBUUMsSUFBSXNFLE1BQU10QixPQUV0QixJQUFJLElBQUl2TixLQUFZdU4sRUFDYkEsRUFBTXZOLEdBQVVxTCxTQUFTLFNBQ3hCa0YsRUFBTXhPLEtBQUsvQixHQUduQixPQUFPdVEsSSx1VUN4Q1hXLEVBQUFqVCxFQUFBLEcsV0FPQUEsRUFBQSxLLElBQ0FBLEVBQUEsSyxJQUNBQSxFQUFBLEssSUFDQUEsRUFBQSxLQUlBQSxFQUFBLElBSUEsSUFBQTQ1QyxFQUFBNTVDLEVBQUEsSUFLQTY1QyxFQUFBNzVDLEVBQUEsSUFDQWtOLEVBQUFsTixFQUFBLEcsdURBRU1pM0MsRSxZQUNGLFNBQUFBLEVBQVkza0MsSSw0RkFBT2EsQ0FBQTVRLEtBQUEwMEMsR0FBQSxJQUFBOEMsRSxpS0FBQTNtQyxDQUFBN1EsTUFBQTAwQyxFQUFBNWpDLFdBQUF2UyxPQUFBd1MsZUFBQTJqQyxJQUFBMTJDLEtBQUFnQyxLQUNUK1AsSUFEUyxPQUVmeW5DLEVBQUt6cUMsTUFBUXhPLE9BQU9xTixPQUFPLEdBQUk0ckMsRUFBS3puQyxPQUNwQ3luQyxFQUFLenFDLE1BQU1zdUMsWUFBYyxHQUhWN0QsRSxtVUFERnhtQyxhLG9DQU9SLElBQUFnb0MsRUFBQWg1QyxLQUNDcU4sRUFBVXJOLEtBQUsrUCxNQUFNMUMsUUFHM0IsR0FBa0MsR0FBOUJyTixLQUFLK00sTUFBTUMsU0FBUzNMLE9BQ3BCLE9BQ0k2UCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsd0JBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLFlBQ0FELEVBQUFsTCxRQUFBakIsY0FBQSw4R0FNWixRQUFxQkMsSUFBakJxSSxFQUFRalAsTUFBb0QsR0FBOUI0QixLQUFLK00sTUFBTUMsU0FBUzNMLE9BQ2xELE9BQ0k2UCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsd0JBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLFlBQ0FELEVBQUFsTCxRQUFBakIsY0FBQSw2R0FLWixJQUFJNHlDLEdBQVcsRUFBQUwsRUFBQWhtQyxhQUFZakUsRUFBU0EsRUFBUXRFLE9BQVFzRSxFQUFRdkosTUFBT3BELEtBQUtzSixNQUFNcUQsRUFBUU4sT0FBUU0sRUFBUUksUUFHdEcsUUFBdUJ6SSxJQUFuQjJ5QyxFQUFTbm1DLE1BQ1QsT0FBTyxFQUFBOHBDLEVBQUF0MUMsU0FBWTJ4QyxFQUFTbm1DLE9BSWhDLFFBQXdCeE0sSUFBcEIyeUMsRUFBUzd4QyxRQUFzRCxHQUE5QjlGLEtBQUsrTSxNQUFNQyxTQUFTM0wsT0FDckQsT0FDSTZQLEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSx3QkFDWEQsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLFNBQWYsYUFLWixJQUFNa3FDLEVBQWNyN0MsS0FBSytNLE1BQU1zdUMsYUFBZSxHQUMxQ0UsU0FBcUJDLFNBRXpCLEdBQUlILEVBQVl4d0MsU0FBUyxvQkFBcUIsQ0FFMUMsSUFBSXZDLEdBQWEsRUFBQXFDLEVBQUEzQyxVQUFTLGFBR3RCeXpDLEVBQXFCSixFQUFZanlDLE1BQU0sb0JBQW9CLEdBTTNEc3lDLEVBSGlCcHpDLEVBQVdDLEtBQUssU0FBQUMsR0FBQSxPQUFhQSxFQUFVcEssT0FBU3E5QyxJQUdyQ2h1QyxPQUFPL0YsT0FBTyxTQUFBdUcsR0FBQSxPQUErQixJQUF0QkEsRUFBTXVCLGNBQXNCdlAsSUFBSSxTQUFBeVAsR0FBQSxPQUFvQkEsRUFBaUJDLGNBR3RIbEMsRUFBU0osRUFBUUksT0FBT3hOLElBQUksU0FBQ2dPLEVBQU96RyxHQUFSLE9BQWtCMEosRUFBQWxMLFFBQUFqQixjQUFDNDJDLEVBQUEzMUMsUUFBRCxDQUFPNUcsSUFBS29JLEVBQU9BLE1BQU9BLEVBQU95RyxNQUFPQSxFQUFPMnRDLGNBQWVQLEVBQWFLLFdBQVlBLEVBQVl2RCxPQUFRcnFDLGNBQVl6TyxLQUFLMjVDLEdBQU82QyxZQUFhQSxjQUFZeDhDLEtBQUsyNUMsT0FHck51QyxFQUFzQkYsRUFBYzV0QyxFQUFPL0YsT0FBTyxTQUFBdUcsR0FBQSxPQUFTb3RDLEVBQVl4d0MsU0FBU29ELEVBQU04QixNQUFNOUIsTUFBTTNNLE1BQU8sS0FFekdrNkMsRUFBZXRxQyxFQUFBbEwsUUFBQWpCLGNBQUMrMkMsRUFBQTkxQyxRQUFELENBQWM4MEMsU0FBVWlCLHNCQUFvQjE4QyxLQUFLVyxNQUFPc08sVUFBV210QyxFQUFvQnI1QyxPQUFRaUwsUUFFN0csQ0FDRCxJQUFNSSxFQUFTSixFQUFRSSxPQUNsQnhOLElBQUksU0FBQ2dPLEVBQU96RyxHQUFSLE9BQWtCMEosRUFBQWxMLFFBQUFqQixjQUFDNDJDLEVBQUEzMUMsUUFBRCxDQUFPNUcsSUFBS29JLEVBQU9BLE1BQU9BLEVBQU95RyxNQUFPQSxFQUFPMnRDLGNBQWVQLEVBQWFLLFdBQVksR0FBSXZELE9BQVFycUMsY0FBWXpPLEtBQUsyNUMsR0FBTzZDLFlBQWFBLGNBQVl4OEMsS0FBSzI1QyxPQUNwTHVDLEVBQXNCRixFQUFjNXRDLEVBQU8vRixPQUFPLFNBQUF1RyxHQUFBLE9BQVNvdEMsRUFBWXh3QyxTQUFTb0QsRUFBTThCLE1BQU05QixNQUFNM00sTUFBTyxLQUc3RyxPQUNJNFAsRUFBQWxMLFFBQUFqQixjQUFBLFdBQ0ltTSxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsd0JBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLFlBRUFELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxRQUNYRCxFQUFBbEwsUUFBQWpCLGNBQUNpM0MsRUFBQWgyQyxRQUFELENBQU9rdUIsS0FBTXlqQixFQUFTN3hDLE9BQVFtMkMscUJBQXNCQyxxQkFBbUI3OEMsS0FBS1csU0FFL0V3N0MsRUFFRHRxQyxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsU0FBZixVQUdBRCxFQUFBbEwsUUFBQWpCLGNBQUEsV0FDSW1NLEVBQUFsTCxRQUFBakIsY0FBQSxVQUNJbU0sRUFBQWxMLFFBQUFqQixjQUFBLFVBQ0ltTSxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsU0FBZixXQUVJRCxFQUFBbEwsUUFBQWpCLGNBQUEsV0FDS3cyQyxLQUlicnFDLEVBQUFsTCxRQUFBakIsY0FBQSxVQUNJbU0sRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLFNBQWYsTUFFSUQsRUFBQWxMLFFBQUFqQixjQUFBLFdBQ0ltTSxFQUFBbEwsUUFBQWpCLGNBQUM0MkMsRUFBQTMxQyxRQUFELENBQU81RyxJQUFLaU8sRUFBUUksT0FBT3BNLE9BQVFxNkMsV0FBWSxHQUFJRSxjQUFlUCxFQUFhbEQsT0FBUXJxQyxjQUFZek8sS0FBS1csbUIsZUFZakkwMEMsRyx5VUM3SWZoa0MsRUFBQWpULEVBQUEsRyxvQ0FFQUEsRUFBQSxJLElBR00wK0MsRSxZQUNGLFNBQUFBLEVBQVlwc0MsSSw0RkFBT2EsQ0FBQTVRLEtBQUFtOEMsR0FBQSxJQUFBM0UsRSxpS0FBQTNtQyxDQUFBN1EsTUFBQW04QyxFQUFBcnJDLFdBQUF2UyxPQUFBd1MsZUFBQW9yQyxJQUFBbitDLEtBQUFnQyxLQUNUK1AsSUFFRmxDLEVBQVNuTixLQUFLc0osTUFBTXd0QyxFQUFLem5DLE1BQU0zTixPQUFPeUwsUUFBUTJwQyxFQUFLem5DLE1BQU16QixZQUFjLENBQUNDLGNBQWEsR0FIMUUsT0FLZmlwQyxFQUFLenFDLE1BQVEsQ0FDVHlCLFNBQVVYLEVBQU9VLGNBTk5pcEMsRSxtVUFESXhtQyxhLDRDQVluQmhSLEtBQUttTixTQUFTLENBQ1ZxQixVQUFXeE8sS0FBSytNLE1BQU15QixXQUcxQnhPLEtBQUsrUCxNQUFNK3FDLFNBQVMsQ0FDaEJ0c0MsVUFBV3hPLEtBQUsrTSxNQUFNeUIsU0FDdEJGLFVBQVd0TyxLQUFLK1AsTUFBTXpCLFVBQ3RCRixXQUFZcE8sS0FBSytQLE1BQU0zTixPQUFPaEUsUywrQkFNbEMsT0FFSThTLEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxnQkFDWEQsRUFBQWxMLFFBQUFqQixjQUFBLEtBQUdvTSxVQUFVLHNCQUNURCxFQUFBbEwsUUFBQWpCLGNBQUEsUUFBTW9NLFVBQVUsU0FBaEIsd0JBQ0FELEVBQUFsTCxRQUFBakIsY0FBQSxRQUFNb00sVUFBVSxvQkFFcEJELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxXQUNYRCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsVUFDWEQsRUFBQWxMLFFBQUFqQixjQUFBLHFDQUNBbU0sRUFBQWxMLFFBQUFqQixjQUFBLFNBQU9HLEtBQUssV0FBVzQxQyxTQUFVOTZDLEtBQUtvOEMsZUFBZS84QyxLQUFLVyxNQUFPcWxCLFFBQVNybEIsS0FBSytNLE1BQU15QixTQUFXLFVBQVksWSxlQVNySDJ0QyxHLGdCQ2xEZixJQUFJaDhDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSwyYUFBNGEsTSxxaEJDQXJjNlMsRUFBQWpULEVBQUEsRyx3Q0FFTTQrQyxFLFlBQ0YsU0FBQUEsRUFBWXRzQyxHQUFPLE8sNEZBQUFhLENBQUE1USxLQUFBcThDLEcsaUtBQUF4ckMsQ0FBQTdRLE1BQUFxOEMsRUFBQXZyQyxXQUFBdlMsT0FBQXdTLGVBQUFzckMsSUFBQXIrQyxLQUFBZ0MsS0FDVCtQLEksbVVBRk1pQixhLG9DQUlQLElBQUFnb0MsRUFBQWg1QyxLQUVEazBCLEVBQU9sMEIsS0FBSytQLE1BQU1ta0IsS0FHdEIsSUFBSUEsRUFDQSxPQUFRaGpCLEVBQUFsTCxRQUFBakIsY0FBQSxvQkFFWixHQUFpQixpQkFBUG12QixFQUNOLE9BQ1FoakIsRUFBQWxMLFFBQUFqQixjQUFBLFVBQUttdkIsR0FHakIsSUFBSTV5QixFQUFLNHlCLEVBQUtua0IsTUFBTXpPLEdBQU0sSUFBSTR5QixFQUFLbmtCLE1BQU16TyxHQUFNLEdBRy9DLEdBQUc0eUIsRUFBS25rQixPQUFTcEgsTUFBTUMsUUFBUXNyQixFQUFLbmtCLE1BQU1uRixVQUFVLENBQ2hELElBQUlBLEVBQVdzcEIsRUFBS25rQixNQUFNbkYsU0FBUzNLLElBQUksU0FBQ29PLEVBQU03RyxHQUFQLE9BQWUwSixFQUFBbEwsUUFBQWpCLGNBQUNzM0MsRUFBRCxDQUFPajlDLElBQUtvSSxFQUFPMHNCLEtBQU03bEIsRUFBTzR0QyxxQkFBc0JqRCxFQUFLanBDLE1BQU1rc0MseUJBQ3ZILE9BQ0kvcUMsRUFBQWxMLFFBQUFqQixjQUFBLFVBQ0ltTSxFQUFBbEwsUUFBQWpCLGNBQUEsYUFDSW1NLEVBQUFsTCxRQUFBakIsY0FBQSxTQUNJRyxLQUFLLFFBQ0w5RyxLQUFLLGtCQUNMMDhDLFNBQVU5NkMsS0FBSytQLE1BQU1rc0MscUJBQ3JCbjlDLE1BQU9vMUIsRUFBS2h2QixLQUFPNUQsSUFDdEI0eUIsRUFBS2h2QixLQUFNNUQsR0FFZnNKLEdBS1IsR0FBa0MsV0FBL0JpdUMsRUFBTzNrQixFQUFLbmtCLE1BQU1uRixVQUFzQixDQUM1QyxJQUFJeUQsRUFBUTZsQixFQUFLbmtCLE1BQU1uRixTQUN2QixPQUNJc0csRUFBQWxMLFFBQUFqQixjQUFBLFVBQ0ltTSxFQUFBbEwsUUFBQWpCLGNBQUEsYUFDSW1NLEVBQUFsTCxRQUFBakIsY0FBQSxTQUNJRyxLQUFLLFFBQ0w5RyxLQUFLLGtCQUNMMDhDLFNBQVU5NkMsS0FBSytQLE1BQU1rc0MscUJBQ3JCbjlDLE9BQVFvMUIsRUFBS2h2QixLQUFLOUcsTUFBUTgxQixFQUFLaHZCLE1BQU01RCxJQUN2QzR5QixFQUFLaHZCLEtBQUs5RyxNQUFRODFCLEVBQUtodkIsTUFFN0JnTSxFQUFBbEwsUUFBQWpCLGNBQUNzM0MsRUFBRCxDQUFPajlDLElBQUtvSSxNQUFPMHNCLEtBQU03bEIsRUFBTzR0QyxxQkFBc0JqOEMsS0FBSytQLE1BQU1rc0Msd0JBS3hFLE1BQXdCLG1CQUFkL25CLEVBQUtodkIsS0FDUmdNLEVBQUFsTCxRQUFBakIsY0FBQSxVQUNKbU0sRUFBQWxMLFFBQUFqQixjQUFBLGFBQ0ltTSxFQUFBbEwsUUFBQWpCLGNBQUEsU0FDSUcsS0FBSyxRQUNMOUcsS0FBSyxrQkFDTFUsTUFBTyxtQkFBbUJvMUIsRUFBS2h2QixLQUFLOUcsS0FDcEMwOEMsU0FBVTk2QyxLQUFLK1AsTUFBTWtzQyx1QkFFeEIvbkIsRUFBS2h2QixLQUFLOUcsT0FNbkI4UyxFQUFBbEwsUUFBQWpCLGNBQUEsVUFDSW1NLEVBQUFsTCxRQUFBakIsY0FBQSxhQUNJbU0sRUFBQWxMLFFBQUFqQixjQUFBLFNBQ0lHLEtBQUssUUFDTDlHLEtBQUssa0JBQ0xVLE1BQU9vMUIsRUFBS2h2QixLQUFLNUQsRUFDakJ3NUMsU0FBVTk2QyxLQUFLK1AsTUFBTWtzQyx1QkFFeEIvbkIsRUFBS2h2QixLQUFNNUQsUSxlQVFqQis2QyxHLHVVQ3ZGZjNyQyxFQUFBalQsRUFBQSxHLE9BRUFBLEVBQUEsSUFJQSxJLElBQUFBLEVBQUEsS0FJQTQ1QyxFQUFBNTVDLEVBQUEsSUFJQWk3QyxFQUFBajdDLEVBQUEsSSx1REFFTTYrQyxFLFlBQ0YsU0FBQUEsRUFBWXZzQyxJLDRGQUFPYSxDQUFBNVEsS0FBQXM4QyxHQUFBLElBQUE5RSxFLGlLQUFBM21DLENBQUE3USxNQUFBczhDLEVBQUF4ckMsV0FBQXZTLE9BQUF3UyxlQUFBdXJDLElBQUF0K0MsS0FBQWdDLEtBQ1QrUCxJQURTLE9BRWZ5bkMsRUFBS3pxQyxNQUFRLENBQ1QzTyxLQUFNbzVDLEVBQUt6bkMsTUFBTTlCLE1BQVF1cEMsRUFBS3puQyxNQUFNOUIsTUFBTTdQLEtBQU8sR0FDakQwUixRQUFTMG5DLEVBQUt6bkMsTUFBTTlCLE1BQVF1cEMsRUFBS3puQyxNQUFNOUIsTUFBTTZCLFFBQVUsR0FDdkROLFlBQWFnb0MsRUFBS3puQyxNQUFNOUIsTUFBUXVwQyxFQUFLem5DLE1BQU05QixNQUFNdUIsWUFBYyxHQUMvREcsWUFBYTZuQyxFQUFLem5DLE1BQU05QixNQUFRdXBDLEVBQUt6bkMsTUFBTTlCLE1BQU0wQixZQUFjLElBTnBENm5DLEUsbVVBREh4bUMsYSxvQ0FhWixRQUFpQ2hNLElBQTdCaEYsS0FBSytQLE1BQU02ckMsY0FDWCxPQUFPLEVBQUFOLEVBQUF0MUMsV0FHWCxJQUFJMkosRUFBYzNQLEtBQUsrTSxNQUFNeUMsWUFBYTBCLEVBQUFsTCxRQUFBakIsY0FBQSxTQUFPRyxLQUFLLE9BQU80MUMsU0FBVXlCLG9CQUFrQmw5QyxLQUFLVyxNQUFPbEIsTUFBT2tCLEtBQUsrTSxNQUFNNEMsWUFBYWtyQyxZQUFZLGtFQUFvRSxLQUNoTmEsRUFBYTE3QyxLQUFLK1AsTUFBTTJyQyxXQUFXejdDLElBQUksU0FBQXU4QyxHQUFBLE9BQVd0ckMsRUFBQWxMLFFBQUFqQixjQUFBLFVBQVFqRyxNQUFPMDlDLE1BRXJFLE9BQ0l0ckMsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLFNBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxTQUFPakYsS0FBSyxXQUFXb0YsS0FBSyxPQUFPNDFDLFNBQVUyQixrQkFBZ0JwOUMsS0FBS1csTUFBT2xCLE1BQU9rQixLQUFLK00sTUFBTTNPLEtBQU15OEMsWUFBWSxtQkFBbUJQLE1BQU0sZUFDdElwcEMsRUFBQWxMLFFBQUFqQixjQUFBLFlBQVV6RCxHQUFHLFlBQ1JvNkMsR0FFTHhxQyxFQUFBbEwsUUFBQWpCLGNBQUEsV0FDQW1NLEVBQUFsTCxRQUFBakIsY0FBQSxZQUFVKzFDLFNBQVU0QixnQkFBY3I5QyxLQUFLVyxNQUFPbEIsTUFBT2tCLEtBQUsrTSxNQUFNK0MsUUFBUytxQyxZQUFZLHNCQUFzQlAsTUFBTSxZQUNqSHBwQyxFQUFBbEwsUUFBQWpCLGNBQUEsV0FDSW1NLEVBQUFsTCxRQUFBakIsY0FBQSxhQUNBbU0sRUFBQWxMLFFBQUFqQixjQUFBLFNBQU9HLEtBQUssV0FBVzQxQyxTQUFVNkIsa0JBQWdCdDlDLEtBQUtXLE1BQU9xbEIsUUFBU3JsQixLQUFLK00sTUFBTXlDLFlBQWEsVUFBVyxLQUR6RyxlQUlDRyxFQUNEdUIsRUFBQWxMLFFBQUFqQixjQUFBLFVBQVF5bUMsUUFBU29SLGVBQWF2OUMsS0FBS1csTUFBT3NCLEdBQUcsYUFBWTRQLEVBQUFsTCxRQUFBakIsY0FBQSxLQUFHb00sVUFBVSxnQkFBdEUsUUFDQUQsRUFBQWxMLFFBQUFqQixjQUFBLFVBQVF5bUMsUUFBU3FRLGNBQVl4OEMsS0FBS1csTUFBT3NCLEdBQUcsZUFBYzRQLEVBQUFsTCxRQUFBakIsY0FBQSxLQUFHb00sVUFBVSxpQkFBdkUsZ0IsZUFPTG1yQyxHLGdCQzNEZixJQUFJbjhDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSxrYUFBbWEsTSw4RUNGNWIsSSxFQUFBZy9DLEVBQUFwL0MsRUFBQSxJLDhDQUVBLFdBU0ksT0FBT2lVLE1BQUEzTSxjQUFDKzNDLEVBQUE5MkMsUUFBRCxDQUFtQmlMLFNBUlgsQ0FBQyxDQUNaL0wsS0FBTSxPQUNONmUsS0FBTSxxRkFDUixDQUNFN2UsS0FBTSxPQUNONmUsS0FBTSxvRCxnQkNQZCxJQUFJNWpCLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSxvSkFBcUosTSx5VUNBOUs2UyxFQUFBalQsRUFBQSxHLG9DQUVBQSxFQUFBLEksSUFFTXMvQyxFLFlBQ0YsU0FBQUEsRUFBWWh0QyxHQUFPLE8sNEZBQUFhLENBQUE1USxLQUFBKzhDLEcsaUtBQUFsc0MsQ0FBQTdRLE1BQUErOEMsRUFBQWpzQyxXQUFBdlMsT0FBQXdTLGVBQUFnc0MsSUFBQS8rQyxLQUFBZ0MsS0FDVCtQLEksbVVBRmlCaUIsYSxvQ0FPdkIsSUFBS0ksRUFBVXBSLEtBQUsrUCxNQUFNcUIsUUFFMUIsTUFBb0IsVUFBakJBLEVBQVFsTSxNQUFvQyxTQUFoQmtNLEVBQVFsTSxLQUUvQmdNLEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBV0MsRUFBUWxNLE1BQ3BCZ00sRUFBQWxMLFFBQUFqQixjQUFBLFlBQU9xTSxFQUFRMlMsUUFLdkJqYSxRQUFRMEgsTUFBTUosRUFBUWxNLEtBQU8sZ0tBRXpCZ00sRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLFdBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxVQUNYRCxFQUFBbEwsUUFBQWpCLGNBQUEsWUFBTyxnRixlQVNoQmc0QyxHLGdCQ25DZixJQUFJNThDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSwwRUFBMkUsTSwySkNpQmxHLFNBQVU4K0MsRUFBZ0JqNkMsR0FDcEIxQyxLQUFLbU4sU0FBUyxDQUNWcUMsWUFBYTlNLEVBQUVrSyxjQUFjeVksVUFJckN6bkIsRUFBT0QsU0FBUDhULEVBQUF1ckMsRUFBQSxDQUNJUCxnQkF6Qk4sU0FBMEIvNUMsR0FDcEIxQyxLQUFLbU4sU0FBUyxDQUNWL08sS0FBTXNFLEVBQUVQLE9BQU9yRCxTQXdCbkI2OUMsa0JBQ0FKLGtCQWZQLFNBQTZCNzVDLEdBQ3RCMUMsS0FBS21OLFNBQVMsQ0FDVndDLFlBQWFqTixFQUFFUCxPQUFPckQsVUFVOUIsa0JBSUk2OUMsR0FKSmxyQyxFQUFBdXJDLEVBQUEsZ0JBbEJGLFNBQXdCdDZDLEdBQ2xCMUMsS0FBS21OLFNBQVMsQ0FDVjJDLFFBQVNwTixFQUFFUCxPQUFPckQsVUFnQjFCaytDLEksZ0ZDekJZSixhQUFULFdBQ0M1OEMsS0FBSytQLE1BQU1vb0MsT0FBTyxDQUNkLzVDLEtBQU00QixLQUFLK00sTUFBTTNPLEtBQ2pCMFIsUUFBUzlQLEtBQUsrTSxNQUFNK0MsUUFDcEJ0SSxNQUFPeEgsS0FBSytQLE1BQU12SSxNQUNsQmdJLFlBQWF4UCxLQUFLK00sTUFBTXlDLFlBQ3hCRyxZQUFhM1AsS0FBSytNLE1BQU00QyxlLEVBSXBCa3NDLFlBQVQsV0FDQzc3QyxLQUFLK1AsTUFBTThyQyxZQUFZNzdDLEtBQUsrUCxNQUFNdkksUyw4RUNYMUMsSSxFQUFBcTFDLEVBQUFwL0MsRUFBQSxJLDhDQUVBLFNBQXNCK1QsR0FFbEIsSUFBSVAsRUFBVyxDQUFDLENBQ1ovTCxLQUFLLFFBQ0w2ZSxLQUFLLFdBQVd2UyxFQUFNLG1EQUUxQixPQUNJRSxNQUFBM00sY0FBQyszQyxFQUFBOTJDLFFBQUQsQ0FBbUJpTCxTQUFZQSxNLGdCQ1J2QyxJQUFJOVEsRUFBVTFDLEVBQVEsSUFFQSxpQkFBWjBDLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUk4QyxFQUFVLENBQUN3SixLQUFNLEVBRXJCMUcsZUFQSUEsRUFRSmhDLGdCQUFxQmlCLEdBRVJ2SCxFQUFRLEVBQVJBLENBQTZEMEMsRUFBUzhDLEdBRWhGOUMsRUFBUXVNLFNBQVE5TyxFQUFPRCxRQUFVd0MsRUFBUXVNLFMsaUJDakJsQzlPLEVBQU9ELFFBQVVGLEVBQVEsRUFBUkEsRUFBNkQsSUFFaEY4RCxLQUFLLENBQUMzRCxFQUFPQyxFQUFJLHdJQUF5SSxNLGdGQ0Q5SWlRLFlBQVQsU0FBcUJHLEdBQ3hCLElBQUlaLEVBQVUzTSxLQUFLc0osTUFBTXRKLEtBQUtDLFVBQVVYLEtBQUsrTSxNQUFNTSxVQUNuRFksRUFBTTNNLEdBQUt0QixLQUFLK00sTUFBTXN1QyxZQUFZanlDLE1BQU0sS0FBSyxRQUV6QnBFLElBQWhCaUosRUFBTXpHLE1BQ042RixFQUFRSSxPQUFPbE0sS0FBSzBNLEdBR3BCWixFQUFRSSxPQUFPUSxFQUFNekcsT0FBU3lHLEVBR2xDak8sS0FBSytQLE1BQU1pb0MsZUFBZTNxQyxFQUFRSSxTLEVBR3RCeXVDLG1CQUFULFNBQTRCeDVDLEdBQy9CMUMsS0FBS21OLFNBQVMsQ0FDVmt1QyxZQUFhMzRDLEVBQUVrSyxjQUFjOU4sUyxFQUlyQis4QyxZQUFULFNBQXFCcjBDLEdBR3hCLElBQUk2RixFQUFVM00sS0FBS3NKLE1BQU10SixLQUFLQyxVQUFVWCxLQUFLK00sTUFBTU0sVUFHbkRBLEVBQVFJLE9BQU81SSxPQUFPMkMsRUFBTyxHQUc3QnhILEtBQUsrUCxNQUFNaW9DLGVBQWUzcUMsRUFBUUksUyxFQUd0QnN1QyxvQkFBVCxTQUE2Qmx1QyxHQUNoQzdOLEtBQUsrUCxNQUFNa29DLGVBQWVwcUMsSyx5VUNoQ2xDNkMsRUFBQWpULEVBQUEsRyxvQ0FFQWtOLEVBQUFsTixFQUFBLEdBRUFBLEVBQUEsSSxJQUVNdy9DLEUsWUFDRixTQUFBQSxFQUFZbHRDLEdBQU8sTyw0RkFBQWEsQ0FBQTVRLEtBQUFpOUMsRyxpS0FBQXBzQyxDQUFBN1EsTUFBQWk5QyxFQUFBbnNDLFdBQUF2UyxPQUFBd1MsZUFBQWtzQyxJQUFBai9DLEtBQUFnQyxLQUNUK1AsSSxtVUFGUWlCLGEsZ0RBTWQsRUFBQXJHLEVBQUE3QyxnQiwrQkFLQSxPQUNJb0osRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLHFCQUNYRCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsU0FBZixXQUdBRCxFQUFBbEwsUUFBQWpCLGNBQUEsV0FDSW1NLEVBQUFsTCxRQUFBakIsY0FBQSxVQUFReW1DLFFBQVN4ckMsS0FBS2s5QyxrQkFBa0I3OUMsS0FBS1csT0FBN0MsaUIsZUFRTGk5QyxHLGdCQ2hDZixJQUFJOThDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSx3SUFBeUksTSx1VUNBbEs2UyxFQUFBalQsRUFBQSxHLE9BRUFBLEVBQUEsSUFFQSxJLElBQUFBLEVBQUEsSyxJQUNBQSxFQUFBLEtBSUEwL0MsRUFBQTEvQyxFQUFBLEksdURBRU0yL0MsRSxZQUNGLFNBQUFBLEVBQVlydEMsSSw0RkFBT2EsQ0FBQTVRLEtBQUFvOUMsR0FBQSxJQUFBNUYsRSxpS0FBQTNtQyxDQUFBN1EsTUFBQW85QyxFQUFBdHNDLFdBQUF2UyxPQUFBd1MsZUFBQXFzQyxJQUFBcC9DLEtBQUFnQyxLQUNUK1AsSUFEUyxPQUVmeW5DLEVBQUt6cUMsTUFBUSxDQUNUVSxPQUFRLEdBQ1I0dkMsWUFBWSxHQUNabDdDLE9BQVEsSUFMR3ExQyxFLG1VQUREeG1DLGEsMkNBVUYsSUFBQWdvQyxFQUFBaDVDLEtBQ1pBLEtBQUttTixTQUFTLENBQ1ZNLE9BQVEsQ0FDSjZ2QyxXQUFhLFNBQUM1NkMsR0FFVixJQUFJNjZDLEVBQWUxN0MsU0FBU1MsY0FBYyxjQUN2Q2k3QyxHQUNDQSxFQUFhQyxVQUFVMzNDLE9BQU8sYUFDbENuRCxFQUFFUCxPQUFPcTdDLFVBQVV6USxJQUFJLGFBRXZCcnFDLEVBQUVrZCxrQkFDSHZnQixLQUFLVyxNQUNSeTlDLE9BQVMsU0FBQy82QyxHQUNOQSxFQUFFa2QsaUJBQ0YsSUFBSXhkLEVBQVM0MkMsRUFBS2pwQyxNQUFNdkgsVUFDcEI2RixFQUFRM0wsRUFBRWd2QixhQUFhZ3NCLFFBQVEsa0JBQy9CeHJDLEVBQU94UCxFQUFFUCxPQUFPMDNDLGFBQWEsY0FDakMsRUFBQXNELEVBQUE5eEMsaUJBQWdCakosRUFBUWlNLEVBQU82RCxHQUMvQjhtQyxFQUFLN3JDLFNBQVMsQ0FDVk0sT0FBTyxNQUVacE8sS0FBS1csVyxzQ0FLSixJQUFBbTZDLEVBQUFuNkMsS0FFWkEsS0FBS21OLFNBQVMsQ0FDVk0sT0FBUSxDQUVKa3dDLFlBQWEsU0FBQ2o3QyxHQUNWLEdBQUdBLEVBQUVQLE9BQU8wM0MsYUFBYSxjQUFjLEVBQUUsQ0FFckMsSUFBSStELEVBQW1CLzdDLFNBQVNTLGNBQWMsZ0JBQzNDczdDLEdBQ0NBLEVBQWlCSixVQUFVMzNDLE9BQU8sZUFHdENuRCxFQUFFUCxPQUFPcTdDLFVBQVV6USxJQUFJLGVBRTNCampDLFFBQVFDLElBQUksZUFHaEIyd0MsYUFBYyxTQUFDaDRDLEdBQ1gsSUFBSWs3QyxFQUFtQi83QyxTQUFTUyxjQUFjLGdCQUMzQ3M3QyxHQUNDQSxFQUFpQkosVUFBVTMzQyxPQUFPLGVBRXRDczBDLEVBQUtodEMsU0FBUyxDQUNWa3dDLFlBQVksS0FFaEJ2ekMsUUFBUUMsSUFBSSxnQkFFaEJ5aEMsUUFBVSxTQUFDOW9DLEdBRVBBLEVBQUVQLE9BQU9xN0MsVUFBVTMzQyxPQUFPLGVBQzFCczBDLEVBQUtodEMsU0FBUyxDQUNWa3dDLFlBQWEzNkMsRUFBRVAsT0FBTzA3Qyx3QkFDdEJwd0MsT0FBUSxHQUNSdEwsT0FBUU8sRUFBRVAsVUFHZjlDLEtBQUtXLFcsd0NBTWhCQSxLQUFLbU4sU0FBUyxDQUNWTSxPQUFRLE8sZ0NBS1p6TixLQUFLbU4sU0FBUyxDQUNWTSxPQUFPLEdBQ1Bxd0MsVUFBVSxNLCtCQU9kLElBQUlDLEVBQVkvOUMsS0FBSytQLE1BQU12SCxVQUFVbEgsTUFBcUIsR0FBZG9NLEtBQUtFLFVBQ2pELE9BQ0lzRCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUscUJBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLFdBR0FELEVBQUFsTCxRQUFBakIsY0FBQSxXQUNJbU0sRUFBQWxMLFFBQUFqQixjQUFBLFVBQVF5bUMsUUFBU3hyQyxLQUFLZytDLGNBQWMzK0MsS0FBS1csT0FBT2tSLEVBQUFsTCxRQUFBakIsY0FBQSxLQUFHb00sVUFBVSx1QkFBN0QsUUFDQUQsRUFBQWxMLFFBQUFqQixjQUFBLFVBQVF5bUMsUUFBU3hyQyxLQUFLaStDLGNBQWM1K0MsS0FBS1csT0FBT2tSLEVBQUFsTCxRQUFBakIsY0FBQSxLQUFHb00sVUFBVSx1QkFBN0QsUUFDQUQsRUFBQWxMLFFBQUFqQixjQUFBLFVBQVF5bUMsUUFBU3hyQyxLQUFLaytDLGdCQUFnQjcrQyxLQUFLVyxPQUFPa1IsRUFBQWxMLFFBQUFqQixjQUFBLEtBQUdvTSxVQUFVLHVCQUEvRCxhQUVKRCxFQUFBbEwsUUFBQWpCLGNBQUNvNUMsRUFBQW40QyxRQUFELENBQWtCNUcsSUFBSzIrQyxFQUFXdjFDLFVBQVd4SSxLQUFLK1AsTUFBTXZILFVBQVdpRixPQUFRek4sS0FBSytNLE1BQU1VLFNBQ3RGeUQsRUFBQWxMLFFBQUFqQixjQUFDcTVDLEVBQUFwNEMsUUFBRCxDQUNJcTNDLFlBQWFyOUMsS0FBSytNLE1BQU1zd0MsWUFDeEI3MEMsVUFBV3hJLEtBQUsrUCxNQUFNdkgsVUFDdEJyRyxPQUFRbkMsS0FBSytNLE1BQU01SyxPQUNuQms4QyxRQUFTcitDLEtBQUtxK0MsUUFBUWgvQyxLQUFLVyxNQUMzQnMrQyxLQUFNdCtDLEtBQUsrTSxNQUFNK3dDLGdCLGVBT3RCVixHLGdCQ2xJZixJQUFJajlDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSwwT0FBMk8sTSx5VUNBcFE2UyxFQUFBalQsRUFBQSxHLG9DQUVBME4sRUFBQTFOLEVBQUEsR0FFQWlSLEVBQUFqUixFQUFBLEdBR0FBLEVBQUEsSSxJQUVNOGdELEUsWUFDRixTQUFBQSxFQUFZeHVDLEksNEZBQU9hLENBQUE1USxLQUFBdStDLEdBQUEsSUFBQS9HLEUsaUtBQUEzbUMsQ0FBQTdRLE1BQUF1K0MsRUFBQXp0QyxXQUFBdlMsT0FBQXdTLGVBQUF3dEMsSUFBQXZnRCxLQUFBZ0MsS0FDVCtQLElBRFMsT0FFZnluQyxFQUFLenFDLE1BQVEsQ0FDVHZFLFVBQVdndkMsRUFBS3puQyxNQUFNdkgsWUFHMUIsRUFBQTJDLEVBQUFDLGtCQUFpQm9zQyxFQUFLenFDLE1BQU12RSxVQUFVMUUsT0FOdkIwekMsRSxtVUFEUXhtQyxhLG9DQVl2QixHQUErQixLQUE1QmhSLEtBQUsrTSxNQUFNdkUsVUFBVXBLLEtBQ3BCLE9BQVE4UyxFQUFBbEwsUUFBQWpCLGNBQUEscUNBRVosSUFBSXlGLEdBQW1CLEVBQUFrRSxFQUFBaEUscUJBQW9CMUssS0FBSytNLE1BQU12RSxXQUt0RCxPQUpJZ0MsRUFBaUJuSixPQUFTLElBQzFCLEVBQUFxTixFQUFBbkUsd0JBQXVCQyxHQUd2QjVJLE9BQU81QixLQUFLK00sTUFBTXZFLFVBQVVwSyxNQUs1QjhTLEVBQUFsTCxRQUFBakIsY0FBQSxNQUFTL0UsS0FBSytQLE1BQU10QyxPQUNmaUUsVUFBTTNNLGNBQWNuRCxPQUFPNUIsS0FBSytNLE1BQU12RSxVQUFVcEssUUFMN0M4UyxFQUFBbEwsUUFBQWpCLGNBQUEseUMsZUFZTHc1QyxHLGdCQzNDZixJQUFJcCtDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSw2RUFBOEUsTSx5VUNBdkc2UyxFQUFBalQsRUFBQSxHLG9DQUVBQSxFQUFBLElBRUEsSUFBQTAvQyxFQUFBMS9DLEVBQUEsSSxJQUVNK2dELEUsWUFDRixTQUFBQSxFQUFZenVDLEdBQU8sTyw0RkFBQWEsQ0FBQTVRLEtBQUF3K0MsRyxpS0FBQTN0QyxDQUFBN1EsTUFBQXcrQyxFQUFBMXRDLFdBQUF2UyxPQUFBd1MsZUFBQXl0QyxJQUFBeGdELEtBQUFnQyxLQUNUK1AsSSxtVUFGa0JpQixhLHVDQUtoQnRPLEdBS1NQLE9BQU8wM0MsYUFBYSxlLDZFQVlyQyxJQUFJandDLEVBQU01SixLQUFLK1AsTUFBTTVOLE9BQU8wM0MsYUFBYSxhQUNyQzNuQyxFQUFPbFMsS0FBSytQLE1BQU01TixPQUFPMDNDLGFBQWEsY0FDMUMsRUFBQXNELEVBQUFockMsaUJBQWdCblMsS0FBSytQLE1BQU12SCxVQUFXb0IsRUFBS3NJLEdBQzNDbFMsS0FBSytQLE1BQU1zdUMsWSwrQkFJWCxJQUFJaEIsRUFBY3I5QyxLQUFLK1AsTUFBTXN0QyxZQUN6QnY1QyxFQUFRLENBQ1Jtb0IsTUFBTW94QixFQUFZcHhCLE9BQU8sRUFDekJDLE9BQU9teEIsRUFBWW54QixRQUFRLEVBQzNCK3RCLFNBQVUsUUFDVmhrQixJQUFLb25CLEVBQVlqcUMsR0FBRyxFQUNwQjJpQixLQUFLc25CLEVBQVlscUMsR0FBRyxFQUNwQnU1QixRQUFTMXNDLEtBQUsrUCxNQUFNdXVDLEtBQU0sT0FBUSxTQUV0QyxPQUNJcHRDLEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxhQUFhck4sTUFBT0EsR0FDL0JvTixFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsYUFJWEQsRUFBQWxMLFFBQUFqQixjQUFBLFFBQU11MUMsTUFBTSxXQUNScHBDLEVBQUFsTCxRQUFBakIsY0FBQSxVQUFReW1DLFFBQVN4ckMsS0FBS3krQyxZQUFZcC9DLEtBQUtXLE9BQ25Da1IsRUFBQWxMLFFBQUFqQixjQUFBLEtBQUdvTSxVQUFVLHFCQUdyQkQsRUFBQWxMLFFBQUFqQixjQUFBLFFBQU11MUMsTUFBTSxhQUNScHBDLEVBQUFsTCxRQUFBakIsY0FBQSxVQUFReW1DLFFBQVN4ckMsS0FBSzArQyxjQUFjci9DLEtBQUtXLE9BQ3JDa1IsRUFBQWxMLFFBQUFqQixjQUFBLEtBQUdvTSxVQUFVLHVCQVNyQkQsRUFBQWxMLFFBQUFqQixjQUFBLFFBQU11MUMsTUFBTSxVQUNScHBDLEVBQUFsTCxRQUFBakIsY0FBQSxVQUFReW1DLFFBQVN4ckMsS0FBSzIrQyxZQUFZdC9DLEtBQUtXLE9BQ25Da1IsRUFBQWxMLFFBQUFqQixjQUFBLEtBQUdvTSxVQUFVLG1CQUl6QkQsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLGNBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxnQixlQVNwQnF0QyxHLGdCQ25GZixJQUFJcitDLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSxxekJBQXN6QixNLGdGQ3FDL3pCeVUsbUJBQVQsU0FBNEJ2SixFQUFRbUosRUFBTXRJLEdBQzdDLElBQUlnMUMsRUFaUixTQUE0QjcxQyxFQUFRbUosRUFBTXRJLEdBRXRDLE9BaEJKLFNBQW9CaTFDLEVBQVNqMUMsR0FHekIsSUFBSWsxQyxFQUFXQSxLQUFLbDFDLEVBQWhCLElBQ0FtMUMsRUFBZ0JGLEVBQVFqNkMsUUFBUWs2QyxHQUFZQSxFQUFTejlDLE9BQ3pELE9BQU93OUMsRUFBUUcsT0FBTyxFQUFFRCxHQVdqQkUsQ0E3QlgsU0FBbUJsMkMsRUFBUW1KLEVBQU10SSxHQUU3QixJQUFJczFDLEVBQVluMkMsRUFBT25FLFFBQVFzTixHQUUzQjJzQyxFQUFVOTFDLEVBQU9pMkMsT0FBT0UsR0FFNUIsS0FBbUMsSUFBN0JMLEVBQVFqNkMsUUFBUixJQUFvQmdGLElBQ3RCczFDLElBQ0FMLEVBQVU5MUMsRUFBT2kyQyxPQUFPRSxHQUU1QixPQUFPTCxFQWtCT00sQ0FBVXAyQyxFQUFPLGdCQUFpQmEsR0FDckJBLEdBVUx3MUMsQ0FBbUJyMkMsRUFBUW1KLEVBQU10SSxHQUN2RCxPQUFPYixFQUFPSyxNQUFNdzFDLEdBQWlCMzlDLEtBQUssTSx1VUN2QzlDeVAsRUFBQWpULEVBQUEsRyxXQUlBQSxFQUFBLEtBRUE0aEQsRUFBQTVoRCxFQUFBLElBQ0FrTixFQUFBbE4sRUFBQSxHLG1EQUdBQSxFQUFBLEksSUFFTTZoRCxFLFlBQ0YsU0FBQUEsRUFBWXZ2QyxJLDRGQUFPYSxDQUFBNVEsS0FBQXMvQyxHQUFBLElBQUE5SCxFLGlLQUFBM21DLENBQUE3USxNQUFBcy9DLEVBQUF4dUMsV0FBQXZTLE9BQUF3UyxlQUFBdXVDLElBQUF0aEQsS0FBQWdDLEtBQ1QrUCxJQUNOeW5DLEVBQUt6cUMsTUFBUXhPLE9BQU9xTixPQUFPLEdBQUk0ckMsRUFBS3puQyxPQUVwQyxJQUFJdkgsR0FBWSxFQUFBbUMsRUFBQXZDLGVBQWNvdkMsRUFBS3pxQyxNQUFNdkUsVUFBVXBLLE1BSnBDLE9BS2ZvNUMsRUFBS3pxQyxNQUFNd3lDLE9BQVEsRUFBQUYsRUFBQUcsaUJBQWdCaDNDLEVBQVdBLEVBQVUxRSxNQUFRLElBTGpEMHpDLEUsbVVBREt4bUMsYSxxQ0FVcEIsSUFBSXl1QyxFQUFXOTJDLE1BQU0yRCxLQUFLdE0sS0FBSytNLE1BQU13eUMsT0FDckNFLEVBQVNDLFFBQVEsQ0FDYkMsU0FBVSxXQUNWQyxhQUFhLENBQUMsQ0FDVnBnRCxTQUFVLGNBQ1ZWLE1BQU8sT0FHZmtCLEtBQUttTixTQUFTLENBQ1ZveUMsTUFBT0UsTSxpQ0FJSkksRUFBTXI0QyxHQUdUcTRDLEVBQUtGLFdBQ0xFLE9BQU83NkMsR0FHWCxJQUFJdTZDLEVBQVF2L0MsS0FBSytNLE1BQU13eUMsTUFDdkJBLEVBQU0vM0MsR0FBU3E0QyxFQUVmLElBQUl2M0MsR0FBYSxFQUFBcUMsRUFBQTNDLFVBQVMsY0FDVixFQUFBMkMsRUFBQXZDLGVBQWNwSSxLQUFLK00sTUFBTXZFLFVBQVVwSyxNQUd6QzBGLE9BQVEsRUFBQXU3QyxFQUFBUyxzQkFBcUJQLEVBQU03M0MsT0FBT0MsV0FFcEQsRUFBQWdELEVBQUF4QyxXQUFVLFlBQVlHLEdBQ3RCdEksS0FBSytQLE1BQU13b0MsVywrQkFHTixJQUFBUyxFQUFBaDVDLEtBRUR1L0MsRUFBUXYvQyxLQUFLK00sTUFBTXd5QyxNQUFNdC9DLElBQUksU0FBQzQvQyxFQUFLcjRDLEdBQU4sT0FBYzBKLEVBQUFsTCxRQUFBakIsY0FBQ2c3QyxFQUFBLzVDLFFBQUQsQ0FBTTVHLElBQUtzTyxLQUFLQyxLQUFxQixJQUFoQkQsS0FBS0UsVUFBa0JwRyxNQUFPQSxFQUFPcTRDLEtBQU1BLEVBQU1HLFNBQVVoSCxFQUFLaUgsV0FBVzVnRCxLQUFLMjVDLE9BQ3BKLE9BQ0k5bkMsRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLGFBQ1hELEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLb00sVUFBVSxTQUFmLGdCQUNJRCxFQUFBbEwsUUFBQWpCLGNBQUEsVUFBUXltQyxRQUFTeHJDLEtBQUtrZ0QsUUFBUTdnRCxLQUFLVyxPQUFuQyxNQUVIdS9DLE8sZUFNRkQsRyx1VUNyRWY1dUMsRUFBQWpULEVBQUEsRyxPQUVBQSxFQUFBLElBRUEsSSxJQUFBQSxFQUFBLEssSUFDQUEsRUFBQSxLLHVEQUVNMGlELEUsWUFDRixTQUFBQSxFQUFZcHdDLEksNEZBQU9hLENBQUE1USxLQUFBbWdELEdBQUEsSUFBQTNJLEUsaUtBQUEzbUMsQ0FBQTdRLE1BQUFtZ0QsRUFBQXJ2QyxXQUFBdlMsT0FBQXdTLGVBQUFvdkMsSUFBQW5pRCxLQUFBZ0MsS0FDVCtQLElBRFMsT0FFZnluQyxFQUFLenFDLE1BQVF4TyxPQUFPcU4sT0FBTyxHQUFJNHJDLEVBQUt6bkMsTUFBTTh2QyxNQUYzQnJJLEUsbVVBREp4bUMsYSwwQ0FNQTJ1QyxHQUNYMy9DLEtBQUsrUCxNQUFNaXdDLFNBQVMsQ0FDaEJMLFNBQVVBLEVBQ1ZDLGFBQWM1L0MsS0FBSytNLE1BQU02eUMsY0FDMUI1L0MsS0FBSytQLE1BQU12SSxTLHlDQUdDbzRDLEdBRWY1L0MsS0FBSytQLE1BQU1pd0MsU0FBUyxDQUNoQkwsU0FBVTMvQyxLQUFLK00sTUFBTTR5QyxTQUNyQkMsYUFBY0EsR0FDaEI1L0MsS0FBSytQLE1BQU12SSxTLCtCQUliLE9BQ0kwSixFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsbUJBQ1hELEVBQUFsTCxRQUFBakIsY0FBQ3E3QyxFQUFBcDZDLFFBQUQsQ0FDSTVILEtBQU00QixLQUFLK00sTUFBTTR5QyxTQUNqQnZnRCxJQUFLc08sS0FBS0MsS0FBcUIsSUFBaEJELEtBQUtFLFVBQ3BCMnFDLE9BQVF2NEMsS0FBS3FnRCxlQUFlaGhELEtBQUtXLFFBQVMsS0FDOUNrUixFQUFBbEwsUUFBQWpCLGNBQUN1N0MsRUFBQXQ2QyxRQUFELENBQ0k0NUMsYUFBYzUvQyxLQUFLK00sTUFBTTZ5QyxhQUN6QnhnRCxJQUFLc08sS0FBS0MsS0FBcUIsSUFBaEJELEtBQUtFLFVBQ3BCMnFDLE9BQVF2NEMsS0FBS3VnRCxtQkFBbUJsaEQsS0FBS1csUUFDeEMsUyxlQU1GbWdELEcsZ0JDOUNmLElBQUloZ0QsRUFBVTFDLEVBQVEsSUFFQSxpQkFBWjBDLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUk4QyxFQUFVLENBQUN3SixLQUFNLEVBRXJCMUcsZUFQSUEsRUFRSmhDLGdCQUFxQmlCLEdBRVJ2SCxFQUFRLEVBQVJBLENBQWdFMEMsRUFBUzhDLEdBRW5GOUMsRUFBUXVNLFNBQVE5TyxFQUFPRCxRQUFVd0MsRUFBUXVNLFMsaUJDakJsQzlPLEVBQU9ELFFBQVVGLEVBQVEsRUFBUkEsRUFBZ0UsSUFFbkY4RCxLQUFLLENBQUMzRCxFQUFPQyxFQUFJLDJFQUE0RSxNLHlVQ0FyRzZTLEVBQUFqVCxFQUFBLEcsb0NBRUFBLEVBQUEsSSxJQUVNK2lELEUsWUFDRixTQUFBQSxFQUFZendDLEksNEZBQU9hLENBQUE1USxLQUFBd2dELEdBQUEsSUFBQWhKLEUsaUtBQUEzbUMsQ0FBQTdRLE1BQUF3Z0QsRUFBQTF2QyxXQUFBdlMsT0FBQXdTLGVBQUF5dkMsSUFBQXhpRCxLQUFBZ0MsS0FDVCtQLElBRFMsT0FFZnluQyxFQUFLenFDLE1BQVF4TyxPQUFPcU4sT0FBTyxHQUFJNHJDLEVBQUt6bkMsT0FGckJ5bkMsRSxtVUFEQXhtQyxhLDBDQU1KdE8sR0FDWDFDLEtBQUttTixTQUFTLENBQ1YvTyxLQUFNc0UsRUFBRWtLLGNBQWM5TixVLHFDQUt2QmtCLEtBQUsrUCxNQUFNM1IsT0FBTzRCLEtBQUsrTSxNQUFNM08sTUFFNUI0QixLQUFLK1AsTUFBTXdvQyxPQUFPdjRDLEtBQUsrTSxNQUFNM08sUSxpQ0FJMUJzRSxHQUNQQSxFQUFFa0ssY0FBYzBwQixXLCtCQUloQixJQUFJOEcsRUFBWXA5QixLQUFLK00sTUFBTTNPLEtBQUt5TSxTQUFTLFlBQWEsWUFBYSxHQUNuRSxPQUFPcUcsRUFBQWxMLFFBQUFqQixjQUFBLFNBQ1NHLEtBQUssT0FDTHBHLE1BQU9rQixLQUFLK00sTUFBTTNPLEtBQ2xCZy9CLFVBQVdBLEVBQ1hxakIsT0FBUXpnRCxLQUFLMGdELGFBQWFyaEQsS0FBS1csTUFDL0IyZ0QsUUFBUzNnRCxLQUFLNGdELFdBQVd2aEQsS0FBS1csTUFDOUI4NkMsU0FBVTk2QyxLQUFLcWdELGVBQWVoaEQsS0FBS1csWSxlQUk1Q3dnRCxHLGdCQ3hDZixJQUFJcmdELEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUFtRTBDLEVBQVM4QyxHQUV0RjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQW1FLElBRXRGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSxHQUFJLE0sdVVDQTdCNlMsRUFBQWpULEVBQUEsRyxPQUVBQSxFQUFBLElBSUEsSSxJQUFBQSxFQUFBLEssSUFDQUEsRUFBQSxLLCtLQUVNb2pELEUsWUFDRixTQUFBQSxFQUFZOXdDLEksNEZBQU9hLENBQUE1USxLQUFBNmdELEdBQUEsSUFBQXJKLEUsaUtBQUEzbUMsQ0FBQTdRLE1BQUE2Z0QsRUFBQS92QyxXQUFBdlMsT0FBQXdTLGVBQUE4dkMsSUFBQTdpRCxLQUFBZ0MsS0FDVCtQLElBRFMsT0FFZnluQyxFQUFLenFDLE1BQVF4TyxPQUFPcU4sT0FBTyxHQUFJNHJDLEVBQUt6bkMsT0FGckJ5bkMsRSxtVUFER3htQyxhLDZDQU1KeEosR0FDZCxJQUFJbzRDLEVBQWU1L0MsS0FBSytNLE1BQU02eUMsYUFDOUJwNEMsR0FBYyxFQUNkeEgsS0FBS21OLFNBQVMsQ0FDVnl5Qyx5QkFBa0JBLEVBQWF2bEMsTUFBTSxFQUFFN1MsSUFBdkMsQ0FBOEMsQ0FBQ2hJLFNBQVMsY0FBZVYsTUFBTyxLQUE5RWtNLEVBQXFGNDBDLEVBQWF2bEMsTUFBTTdTLEVBQU1vNEMsRUFBYXYrQyxjLDZCQUk1SHkvQyxFQUFlQyxFQUFjdjVDLEdBQ2hDLElBQUlvNEMsRUFBZTUvQyxLQUFLK00sTUFBTTZ5QyxhQUM5QkEsRUFBYXA0QyxHQUFPaEksU0FBV3VoRCxFQUMvQi9nRCxLQUFLbU4sU0FBUyxDQUFDeXlDLGFBQWFBLElBRXpCQSxFQUFhcDRDLEdBQU8xSSxPQUNuQmtCLEtBQUsrUCxNQUFNd29DLE9BQU9xSCxLLGtDQUlka0IsRUFBZUMsRUFBY3Y1QyxHQUNyQyxJQUFJbzRDLEVBQWU1L0MsS0FBSytNLE1BQU02eUMsYUFDOUJBLEVBQWFwNEMsR0FBTzFJLE1BQVFpaUQsRUFDNUIvZ0QsS0FBS21OLFNBQVMsQ0FBQ3l5QyxhQUFhQSxJQUM1QjUvQyxLQUFLK1AsTUFBTXdvQyxPQUFPcUgsSywrQkFHYixJQUFBNUcsRUFBQWg1QyxLQUVMLE9BQ0lrUixFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsZUFDVm5SLEtBQUsrTSxNQUFNNnlDLGFBQWEzL0MsSUFBSSxTQUFDK2dELEVBQVl4NUMsR0FBYixPQUFzQjBKLEVBQUFsTCxRQUFBakIsY0FBQSxPQUFLM0YsSUFBS29JLEdBQzdDMEosRUFBQWxMLFFBQUFqQixjQUFDazhDLEVBQUFqN0MsUUFBRCxDQUNJd0IsTUFBT0EsRUFDUHBJLElBQUtzTyxLQUFLQyxLQUFxQixJQUFoQkQsS0FBS0UsVUFDcEI5TyxNQUFPa2lELEVBQVl4aEQsU0FDbkIrNEMsT0FBUVMsRUFBS1QsT0FBT2w1QyxLQUFLMjVDLEtBTE0sSUFPbkM5bkMsRUFBQWxMLFFBQUFqQixjQUFDbThDLEVBQUFsN0MsUUFBRCxDQUNJNUcsSUFBS3NPLEtBQUtDLEtBQXFCLElBQWhCRCxLQUFLRSxVQUNwQnBHLE1BQU9BLEVBQ1AxSSxNQUFPa2lELEVBQVlsaUQsTUFDbkJxaUQsaUJBQWtCbkksRUFBS29JLGtCQUFrQi9oRCxLQUFLMjVDLEdBQzlDVCxPQUFRUyxFQUFLcUksWUFBWWhpRCxLQUFLMjVDLGEsZUFPbkQ2SCxHLGdCQ2hFZixJQUFJMWdELEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDd0osS0FBTSxFQUVyQjFHLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUFtRTBDLEVBQVM4QyxHQUV0RjlDLEVBQVF1TSxTQUFROU8sRUFBT0QsUUFBVXdDLEVBQVF1TSxTLGlCQ2pCbEM5TyxFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQW1FLElBRXRGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSwyQ0FBNEMsTSx5VUNBckU2UyxFQUFBalQsRUFBQSxHLG9DQUVBQSxFQUFBLEksSUFFTTZqRCxFLFlBQ0YsU0FBQUEsRUFBWXZ4QyxJLDRGQUFPYSxDQUFBNVEsS0FBQXNoRCxHQUFBLElBQUE5SixFLGlLQUFBM21DLENBQUE3USxNQUFBc2hELEVBQUF4d0MsV0FBQXZTLE9BQUF3UyxlQUFBdXdDLElBQUF0akQsS0FBQWdDLEtBQ1QrUCxJQURTLE9BRWZ5bkMsRUFBS3pxQyxNQUFReE8sT0FBT3FOLE9BQU8sR0FBSTRyQyxFQUFLem5DLE9BRnJCeW5DLEUsbVVBREF4bUMsYSwwQ0FNSnRPLEdBQ1gxQyxLQUFLbU4sU0FBUyxDQUNWck8sTUFBTzRELEVBQUVrSyxjQUFjOU4sVSxxQ0FLeEJrQixLQUFLK1AsTUFBTWpSLFFBQVFrQixLQUFLK00sTUFBTWpPLE9BRTdCa0IsS0FBSytQLE1BQU13b0MsT0FBT3Y0QyxLQUFLK1AsTUFBTWpSLE1BQU9rQixLQUFLK00sTUFBTWpPLE1BQU9rQixLQUFLK1AsTUFBTXZJLFMsaUNBSTlEOUUsR0FDUEEsRUFBRWtLLGNBQWMwcEIsVywrQkFJaEIsSUFBSThHLEVBQVlwOUIsS0FBSytNLE1BQU1qTyxNQUFNK0wsU0FBUyxlQUFnQixZQUFhLEdBQ3ZFLE9BQVFxRyxFQUFBbEwsUUFBQWpCLGNBQUEsU0FDSUcsS0FBSyxPQUNMcEcsTUFBT2tCLEtBQUsrTSxNQUFNak8sTUFDbEJzK0IsVUFBV0EsRUFDWHFqQixPQUFRemdELEtBQUswZ0QsYUFBYXJoRCxLQUFLVyxNQUMvQjJnRCxRQUFTM2dELEtBQUs0Z0QsV0FBV3ZoRCxLQUFLVyxNQUM5Qjg2QyxTQUFVOTZDLEtBQUtxZ0QsZUFBZWhoRCxLQUFLVyxZLGVBSXhDc2hELEcsZ0JDeENmLElBQUluaEQsRUFBVTFDLEVBQVEsSUFFQSxpQkFBWjBDLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUk4QyxFQUFVLENBQUN3SixLQUFNLEVBRXJCMUcsZUFQSUEsRUFRSmhDLGdCQUFxQmlCLEdBRVJ2SCxFQUFRLEVBQVJBLENBQXNFMEMsRUFBUzhDLEdBRXpGOUMsRUFBUXVNLFNBQVE5TyxFQUFPRCxRQUFVd0MsRUFBUXVNLFMsaUJDakJsQzlPLEVBQU9ELFFBQVVGLEVBQVEsRUFBUkEsRUFBc0UsSUFFekY4RCxLQUFLLENBQUMzRCxFQUFPQyxFQUFJLEdBQUksTSx5VUNBN0I2UyxFQUFBalQsRUFBQSxHLG9DQUVBQSxFQUFBLEksSUFFTThqRCxFLFlBQ0YsU0FBQUEsRUFBWXh4QyxJLDRGQUFPYSxDQUFBNVEsS0FBQXVoRCxHQUFBLElBQUEvSixFLGlLQUFBM21DLENBQUE3USxNQUFBdWhELEVBQUF6d0MsV0FBQXZTLE9BQUF3UyxlQUFBd3dDLElBQUF2akQsS0FBQWdDLEtBQ1QrUCxJQURTLE9BRWZ5bkMsRUFBS3pxQyxNQUFReE8sT0FBT3FOLE9BQU8sR0FBSTRyQyxFQUFLem5DLE9BRnJCeW5DLEUsbVVBREh4bUMsYSwwQ0FNRHRPLEdBQ1gxQyxLQUFLbU4sU0FBUyxDQUNWck8sTUFBTzRELEVBQUVrSyxjQUFjOU4sVSxxQ0FLeEJrQixLQUFLK1AsTUFBTTNSLE9BQU80QixLQUFLK00sTUFBTWpPLE9BQzVCa0IsS0FBSytQLE1BQU13b0MsT0FBT3Y0QyxLQUFLK1AsTUFBTWpSLE1BQU9rQixLQUFLK00sTUFBTWpPLE1BQU9rQixLQUFLK1AsTUFBTXZJLFMsNkJBSWxFOUUsR0FDUSxTQUFSQSxFQUFFdEQsS0FDRFksS0FBSytQLE1BQU1veEMsaUJBQWlCbmhELEtBQUsrUCxNQUFNdkksUyxpQ0FJcEM5RSxHQUNQQSxFQUFFa0ssY0FBYzBwQixXLCtCQUloQixPQUFPcGxCLEVBQUFsTCxRQUFBakIsY0FBQSxTQUFPRyxLQUFLLE9BQ1hwRyxNQUFPa0IsS0FBSytNLE1BQU1qTyxNQUNsQjJoRCxPQUFRemdELEtBQUswZ0QsYUFBYXJoRCxLQUFLVyxNQUMvQjg2QyxTQUFVOTZDLEtBQUtxZ0QsZUFBZWhoRCxLQUFLVyxNQUNuQzJnRCxRQUFTM2dELEtBQUs0Z0QsV0FBV3ZoRCxLQUFLVyxNQUM5QndoRCxXQUFZeGhELEtBQUt5aEQsT0FBT3BpRCxLQUFLVyxZLGVBSTlCdWhELEcsZ0JDM0NmLElBQUlwaEQsRUFBVTFDLEVBQVEsSUFFQSxpQkFBWjBDLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUk4QyxFQUFVLENBQUN3SixLQUFNLEVBRXJCMUcsZUFQSUEsRUFRSmhDLGdCQUFxQmlCLEdBRVJ2SCxFQUFRLEVBQVJBLENBQXNFMEMsRUFBUzhDLEdBRXpGOUMsRUFBUXVNLFNBQVE5TyxFQUFPRCxRQUFVd0MsRUFBUXVNLFMsaUJDakJsQzlPLEVBQU9ELFFBQVVGLEVBQVEsRUFBUkEsRUFBc0UsSUFFekY4RCxLQUFLLENBQUMzRCxFQUFPQyxFQUFJLEdBQUksTSw2QkNEN0IsU0FBUzZqRCxFQUFnQmxpRCxHQUNyQixVQUFXQSxFQUFTNEosTUFBTSxLQUFLLEdBQUdveUIsT0FBbEMsTUFBOENoOEIsRUFBUzRKLE1BQU0sS0FBSyxHQUFHb3lCLE9BQXJFLElBR0osU0FBU21tQixFQUFnQjlCLEdBRXJCLElBQUlGLEVBQVdFLEVBQUt6MkMsTUFBTSxLQUFLLEdBQUdveUIsT0FDOUJvbUIsRUFBYSxJQUFJL0IsRUFBS3oyQyxNQUFNLEtBQUssR0FBR0EsTUFBTSxLQUFLLEdBQUdBLE1BQU0sS0FBS25KLElBQUksU0FBQUwsR0FBQSxPQUFHQSxFQUFFNDdCLFNBQVE5ekIsT0FBT0MsU0FBUzFILElBQUl5aEQsR0FBaUJ6Z0QsS0FBSyxLQUFNLElBRTlIMitDLEVBQWVsL0MsS0FBS3NKLE1BQU00M0MsR0FZOUIsT0FWSS9CLEVBQU8sQ0FDUEYsU0FBVUEsRUFDVkMsYUFBY3JoRCxPQUFPaUgsS0FBS282QyxHQUFjMy9DLElBQUksU0FBQWIsR0FDeEMsTUFBTyxDQUNISSxTQUFVSixFQUNWTixNQUFPOGdELEVBQWF4Z0QsT0FnQnBDLFNBQVN5aUQsRUFBYWhDLEdBQ3JCLE9BQVVBLEVBQUtGLFNBQWYsVUFBcURFLEVBQUtELGFBR3RDMy9DLElBQUksU0FBQStnRCxHQUFBLGFBQW9CQSxFQUFZeGhELFNBQWhDLFNBQWlEd2hELEVBQVlsaUQsTUFBN0QsTUFBdUVtQyxLQUFLLE1BSHBHLE0sbURBVGV1K0MsZ0JBQVQsU0FBeUIxN0MsR0FDNUIsSUFBSUEsR0FBdUIsR0FBZEEsRUFBTXpDLE9BQ2YsTUFBTyxHQUdYLE9BRFl5QyxFQUFNc0YsTUFBTSxLQUFLMUIsT0FBT0MsU0FBUzFILElBQUksU0FBQUMsR0FBQSxPQUFNQSxFQUFLLE1BQy9DRCxJQUFJMGhELEksRUFVTDdCLHFCQUFULFNBQThCUCxHQUNqQyxPQUFPQSxFQUFNdC9DLElBQUk0aEQsR0FBYzVnRCxLQUFLLFEsZ0JDeEN4QyxJQUFJZCxFQUFVMUMsRUFBUSxJQUVBLGlCQUFaMEMsSUFBc0JBLEVBQVUsQ0FBQyxDQUFDdkMsRUFBT0MsRUFBSXNDLEVBQVMsTUFPaEUsSUFBSThDLEVBQVUsQ0FBQ3dKLEtBQU0sRUFFckIxRyxlQVBJQSxFQVFKaEMsZ0JBQXFCaUIsR0FFUnZILEVBQVEsRUFBUkEsQ0FBNkQwQyxFQUFTOEMsR0FFaEY5QyxFQUFRdU0sU0FBUTlPLEVBQU9ELFFBQVV3QyxFQUFRdU0sUyxpQkNqQmxDOU8sRUFBT0QsUUFBVUYsRUFBUSxFQUFSQSxFQUE2RCxJQUVoRjhELEtBQUssQ0FBQzNELEVBQU9DLEVBQUksR0FBSSxNLHVVQ0E3QjZTLEVBQUFqVCxFQUFBLEcsV0FNQUEsRUFBQSxLLG1EQUlBQSxFQUFBLEksSUFFTXFrRCxFLFlBQ0YsU0FBQUEsRUFBWS94QyxJLDRGQUFPYSxDQUFBNVEsS0FBQThoRCxHQUFBLElBQUF0SyxFLGlLQUFBM21DLENBQUE3USxNQUFBOGhELEVBQUFoeEMsV0FBQXZTLE9BQUF3UyxlQUFBK3dDLElBQUE5akQsS0FBQWdDLEtBQ1QrUCxJQURTLE9BRWZ5bkMsRUFBS3pxQyxNQUFReE8sT0FBT3FOLE9BQU8sR0FBSTRyQyxFQUFLem5DLE9BRnJCeW5DLEUsbVVBREd4bUMsYSxvQ0FRbEIsSUFBSTJtQyxFQUFXMzNDLEtBQUsrUCxNQUFNbWtCLEtBQUtwdUIsT0FFL0IsWUFBY2QsSUFBWDJ5QyxRQUFnRDN5QyxJQUF4QmhGLEtBQUsrUCxNQUFNbWtCLEtBQUsxaUIsTUFFbkNOLEVBQUFsTCxRQUFBakIsY0FBQSxZQUtKbU0sRUFBQWxMLFFBQUFqQixjQUFBLE9BQUtvTSxVQUFVLHdCQUNYRCxFQUFBbEwsUUFBQWpCLGNBQUEsT0FBS29NLFVBQVUsU0FBZixlQUNBRCxFQUFBbEwsUUFBQWpCLGNBQUEsTUFBSW9NLFVBQVUsUUFDVkQsRUFBQWxMLFFBQUFqQixjQUFDZzlDLEVBQUEvN0MsUUFBRCxDQUFNa3VCLEtBQU15akIsVSxlQU9qQm1LLEcscWhCQ3ZDZnB4QyxFQUFBalQsRUFBQSxHLG9DQUNBdWtELEVBQUF2a0QsRUFBQSxJLElBQ013a0QsRSxZQUNGLFNBQUFBLEVBQVlseUMsR0FBTyxPLDRGQUFBYSxDQUFBNVEsS0FBQWlpRCxHLGlLQUFBcHhDLENBQUE3USxNQUFBaWlELEVBQUFueEMsV0FBQXZTLE9BQUF3UyxlQUFBa3hDLElBQUFqa0QsS0FBQWdDLEtBQ1QrUCxJLG1VQUZLaUIsYSxvQ0FNWCxJQUFJa2pCLEVBQU9sMEIsS0FBSytQLE1BQU1ta0IsS0FDbEJua0IsRUFBUXhSLE9BQU9xTixPQUFPLEdBQUlzb0IsRUFBS25rQixPQU1uQyxVQUpPQSxFQUFNbkYsU0FFYm1GLEdBQVEsRUFBQWl5QyxFQUFBRSw2QkFBNEJueUMsSUFFaENta0IsR0FBd0IsaUJBQVRBLEVBQ2YsT0FBUWhqQixFQUFBbEwsUUFBQWpCLGNBQUEsb0JBSVosR0FBa0MsaUJBQXhCbXZCLEVBQUtua0IsTUFBTW5GLFNBQXNCLENBQ3ZDLElBQUl5RCxFQUFRNmxCLEVBQUtua0IsTUFBTW5GLFNBQ3ZCLE9BQ0lzRyxFQUFBbEwsUUFBQWpCLGNBQUEsY0FDU212QixFQUFLaHZCLEtBRGQsSUFDc0I2SyxFQUR0QixJQUMrQjFCLEVBRC9CLEtBQ3lDNmxCLEVBQUtodkIsS0FEOUMsS0FNUixHQUFHZ3ZCLEVBQUtua0IsT0FBU3BILE1BQU1DLFFBQVFzckIsRUFBS25rQixNQUFNbkYsVUFBVSxDQUNoRCxJQUFJQSxFQUFXc3BCLEVBQUtua0IsTUFBTW5GLFNBQVMzSyxJQUFJLFNBQUNvTyxFQUFNN0csR0FBUCxPQUFlMEosRUFBQWxMLFFBQUFqQixjQUFDazlDLEVBQUQsQ0FBTTdpRCxJQUFLb0ksRUFBTzBzQixLQUFNN2xCLE1BQzlFLE9BQ0k2QyxFQUFBbEwsUUFBQWpCLGNBQUEsY0FDU212QixFQUFLaHZCLEtBRGQsSUFDc0I2SyxFQUR0QixJQUVLbkYsRUFGTCxLQUdVc3BCLEVBQUtodkIsS0FIZixLQVFSLEdBQWtDLFdBQS9CMnpDLEVBQU8za0IsRUFBS25rQixNQUFNbkYsVUFBc0IsQ0FDdkMsSUFBSXlELEVBQVE2bEIsRUFBS25rQixNQUFNbkYsU0FDdkIsT0FDSXNHLEVBQUFsTCxRQUFBakIsY0FBQSxlQUNVbXZCLEVBQUtodkIsS0FBSzlHLE1BQVE4MUIsRUFBS2h2QixNQURqQyxJQUMwQzZLLEVBRDFDLElBRVFtQixFQUFBbEwsUUFBQWpCLGNBQUNrOUMsRUFBRCxDQUFNN2lELElBQUtvSSxNQUFPMHNCLEtBQU03bEIsSUFGaEMsTUFHVzZsQixFQUFLaHZCLEtBQUs5RyxNQUFRODFCLEVBQUtodkIsTUFIbEMsS0FRUixNQUF3QixtQkFBZGd2QixFQUFLaHZCLEtBRVBnTSxFQUFBbEwsUUFBQWpCLGNBQUEsY0FDU212QixFQUFLaHZCLEtBQUs5RyxLQURuQixNQU9nQixXQUFyQnk2QyxFQUFPM2tCLEVBQUtodkIsTUFFUGdNLEVBQUFsTCxRQUFBakIsY0FBQSxjQUNTbXZCLEVBQUtodkIsS0FBSzVELEdBRG5CLFNBRVU0eUIsRUFBS2h2QixLQUFLNUQsR0FGcEIsS0FPSjRQLEVBQUFsTCxRQUFBakIsY0FBQSxjQUNTbXZCLEVBQUtodkIsS0FEZCxJQUNzQjZLLEVBRHRCLElBRVNta0IsRUFBS2h2QixLQUZkLEtBR1VndkIsRUFBS2h2QixLQUhmLFMsZUFVRys4QyxHLGdGQ2hGQ0MsNEJBQVQsU0FBcUNueUMsR0FDeEMsSUFBSTdHLEVBQVN4SSxLQUFLQyxVQUFVb1AsR0FHNUIsR0FGQXhSLE9BQU9pSCxLQUFLdUssR0FBT3RLLFFBQVEsU0FBQTA4QyxHQUFBLE9BQU1weUMsRUFBTW95QyxHQUFOLElBQWdCcHlDLEVBQU1veUMsR0FBdEIsTUFFOUJqNUMsRUFBTzdILE9BQU8sRUFBRSxDQWNmLE9BYldYLEtBQUtDLFVBQVVvUCxHQUFPM0csTUFBTSxLQUFLbkosSUFBSSxTQUFBQyxHQUM1QyxJQUFHQSxFQUFLMkssU0FBUyxPQUFRM0ssRUFBSzJLLFNBQVMsS0FHdkMsTUFBVSxNQUFQM0ssRUFDUSxJQUVELE1BQVBBLEVBQ1EsSUFFSkEsSUFDUndILE9BQU9DLFNBRUUxRyxLQUFLLElBRXJCLE1BQU8sSyxnQkNwQlgsSUFBSWQsRUFBVTFDLEVBQVEsSUFFQSxpQkFBWjBDLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUk4QyxFQUFVLENBQUN3SixLQUFNLEVBRXJCMUcsZUFQSUEsRUFRSmhDLGdCQUFxQmlCLEdBRVJ2SCxFQUFRLEVBQVJBLENBQTZEMEMsRUFBUzhDLEdBRWhGOUMsRUFBUXVNLFNBQVE5TyxFQUFPRCxRQUFVd0MsRUFBUXVNLFMsaUJDakJsQzlPLEVBQU9ELFFBQVVGLEVBQVEsRUFBUkEsRUFBNkQsSUFFaEY4RCxLQUFLLENBQUMzRCxFQUFPQyxFQUFJLDRFQUE2RSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEzKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuICdAbWVkaWEgJyArIGl0ZW1bMl0gKyAneycgKyBjb250ZW50ICsgJ30nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9ICcoJyArIGl0ZW1bMl0gKyAnKSBhbmQgKCcgKyBtZWRpYVF1ZXJ5ICsgJyknO1xuICAgICAgICB9XG5cbiAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuICByZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufSIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJpbXBvcnQge2dldFN0YXJ0VGFnc30gZnJvbSBcIi4uL2dldC1zdGFydC10YWdzXCI7XG5cbmZ1bmN0aW9uIHB1c2hIaXN0b3J5KGNvbXBvbmVudHMpe1xuICAgIHdpbmRvdy5lZGl0b3JIaXN0b3J5ID0gcmVhZERhdGEoXCJ1aS1lZGl0b3ItaGlzdG9yeVwiKTtcbiAgICBlZGl0b3JIaXN0b3J5LnB1c2goY29tcG9uZW50cyk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ1aS1lZGl0b3ItaGlzdG9yeVwiLEpTT04uc3RyaW5naWZ5KGVkaXRvckhpc3RvcnkpICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3BIaXN0b3J5KCl7XG4gICAgXG4gICAgbGV0IGVkaXRvckhpc3RvcnkgPSByZWFkRGF0YShcInVpLWVkaXRvci1oaXN0b3J5XCIpO1xuICAgIGlmKCFlZGl0b3JIaXN0b3J5KXtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCBsYXN0SXRlbSA9IGVkaXRvckhpc3RvcnkucG9wKCk7XG4gICAgXG4gICAgaWYoIWVkaXRvckhpc3Rvcnkpe1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgd3JpdGVEYXRhKFwidWktZWRpdG9yLWhpc3RvcnlcIiwgZWRpdG9ySGlzdG9yeSwgdHJ1ZSk7XG5cbiAgICB3cml0ZURhdGEoXCJ1aS1lZGl0b3JcIiwgbGFzdEl0ZW0sIHRydWUpO1xufVxuXG4vLyBwdXRzIHV1aWQgdG8gc3RhcnQgdGFncyBvZiB0aGUgY29tcG9uZW50LlxuZnVuY3Rpb24gSWRNYXJrdXAgKGNvbXBvbmVudCkge1xuICAgIC8vIDEuR2V0IGFsbCBzdGFydCB0YWdzLlxuICAgIGxldCBzdGFydFRhZ3MgPSBnZXRTdGFydFRhZ3MoY29tcG9uZW50Lm1hcmt1cCk7XG5cbiAgICAvLyAyLlNhdmUgaXQgYXMgbmV3IHByb3BlcnR5LlxuICAgIGNvbXBvbmVudC5pZE1hcmt1cCA9IGNvbXBvbmVudC5tYXJrdXA7XG5cbiAgICAvLyAzLmdldCBpZCB0YWdzXG4gICAgbGV0IGlkVGFncyA9IHN0YXJ0VGFncy5tYXAoKHRhZywgaW5kZXgpPT57XG4gICAgICAgIHJldHVybiB0YWcucmVwbGFjZShcIj5cIixgIGRhdGEtdXVpZD1cIiR7aW5kZXh9XCI+YClcbiAgICB9KVxuXG4gICAgLy8gNC5yZXBsYWNlIHRoZSBzdGFydHRhZyB3aXRoIGlkVGFnXG4gICAgc3RhcnRUYWdzLmZvckVhY2goKHN0YXJ0VGFnLCBpbmRleCk9PntcbiAgICAgICAgY29tcG9uZW50LmlkTWFya3VwID0gY29tcG9uZW50LmlkTWFya3VwLnJlcGxhY2Uoc3RhcnRUYWcsIGlkVGFnc1tpbmRleF0pXG4gICAgfSlcbn1cblxuZnVuY3Rpb24gY291bnQoc3RyaW5nLCB3b3JkKSB7XG4gICAgcmV0dXJuIHN0cmluZy5zcGxpdCh3b3JkKS5sZW5ndGggLSAxO1xuIH1cblxuZnVuY3Rpb24gbm9JZE1hcmt1cCAoaWRNYXJrdXApIHtcblxuICAgIC8vMi4gZ2V0IGlkIHRhZ3MuXG4gICAgbGV0IGlkVGFnc0NvdW50ID0gY291bnQoaWRNYXJrdXAsXCJkYXRhLXV1aWRcIik7XG5cbiAgICAvLzMuIHJlbW92ZSB1dWlkc1xuICAgIGZvcih2YXIgaT0wO2k8aWRUYWdzQ291bnQ7aSsrKXtcbiAgICAgICAgaWRNYXJrdXAgPSBpZE1hcmt1cC5yZXBsYWNlKGAgZGF0YS11dWlkPVwiJHtpfVwiYCwgXCJcIilcbiAgICB9XG5cbiAgICByZXR1cm4gaWRNYXJrdXA7XG59XG5cbi8vIElmIGVtcHR5LCByZXR1cm4gZW1wdHkgYXJyYXkuXG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRGF0YShrZXkpe1xuICAgIC8qKlxuICAgICAqIDEuIGNoZWNrIGluIHdpbmRvdy5cbiAgICAgKiAyLiBpZiBlbXB0eSwgY3JlYXRlIGFuZCBhZGQgdG8gaXQuXG4gICAgICogMy4gcmV0dXJuXG4gICAgICovXG4gICAgY29uc29sZS5sb2coXCJSRUFEXCIpXG4gICAgaWYoIXdpbmRvdy5jb21wb25lbnRzKXtcbiAgICAgICAgd2luZG93LmNvbXBvbmVudHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xuICAgIH1cblxuICAgIGlmKHdpbmRvdy5jb21wb25lbnRzLmxlbmd0aCApe1xuXG4gICAgICAgIGlmKGtleT09PVwidWktZWRpdG9yXCIpe1xuICAgICAgICAgICAgLy8gU2V0cyBwcm9wZXJ0eSBpbiBjb21wb25lbnRzIHdpdGggbWFya3VwIGNvbnRhaW5pbmcgdXVpZC4gXG4gICAgICAgICAgICAvLyBUaGlzIGhlbHBzIHRvIGZpbmQgcGFyZW10ICwgY2hpbGQsIHNpYmJsaW5ncyBmb3IgZHJhbiBhbmQgZHJvcFxuICAgICAgICAgICAgd2luZG93LmNvbXBvbmVudHMuZm9yRWFjaChJZE1hcmt1cClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHdpbmRvdy5jb21wb25lbnRzKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFtdO1xuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZURhdGEoa2V5LCBjb21wb25lbnRzLCBub1B1c2gpe1xuICAgIGNvbnNvbGUubG9nKFwiV1JJVEVcIilcbiAgICB3aW5kb3cuY29tcG9uZW50cyA9IGNvbXBvbmVudHM7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShjb21wb25lbnRzKSk7XG4gICAgaWYoIW5vUHVzaCl7XG4gICAgICAgIHB1c2hIaXN0b3J5KGNvbXBvbmVudHMpO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRDb21wb25lbnQoY29tcG9uZW50TmFtZSl7XG4gICAgbGV0IGNvbXBvbmVudHMgPSByZWFkRGF0YShcInVpLWVkaXRvclwiKTtcbiAgICBpZighY29tcG9uZW50cyl7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBjb21wb25lbnRzLmZpbmQoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWNvbXBvbmVudE5hbWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVDb21wb25lbnQocGFyZW50LCBpZE1hcmt1cE1vZGlmaWVkKSB7XG4gICAgLy8gSWYgb25seSBvbmUgY29tcG9uZW50IGlzIHBhc3NlZFxuICAgIGlmKCFBcnJheS5pc0FycmF5KHBhcmVudCkgJiYgcGFyZW50Lm5hbWUpe1xuICAgICAgICBsZXQgY29tcG9uZW50cyA9IHJlYWREYXRhKCBcInVpLWVkaXRvclwiKTtcbiAgICAgICAgbGV0IGluZGV4ID0gY29tcG9uZW50cy5maW5kSW5kZXgoY29tcD0+Y29tcC5uYW1lID09PSBwYXJlbnQubmFtZSk7XG4gICAgICAgIGlmKGlkTWFya3VwTW9kaWZpZWQpe1xuICAgICAgICAgICAgcGFyZW50Lm1hcmt1cCA9IG5vSWRNYXJrdXAocGFyZW50LmlkTWFya3VwKTtcbiAgICAgICAgfVxuICAgICAgICBjb21wb25lbnRzW2luZGV4XSA9IHBhcmVudDtcbiAgICAgICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsIGNvbXBvbmVudHMpO1xuICAgIH1cbn0iLCIvLyBEZXBlbmRlbmNpZXMuXG5cbmltcG9ydCB7Y3JlYXRlQ29tcG9uZW50fSBmcm9tIFwiLi4vY29udmVydC10by1yZWFjdC1jb21wb25lbnRcIjtcbmltcG9ydCB7Y3JlYXRlU3R5bGVzaGVldH0gZnJvbSBcIi4uL2pzeFRyYW5zcGlsZXIvY3JlYXRlLXN0eWxlc2hlZXRcIjtcbmltcG9ydCB7cmVhZERhdGF9IGZyb20gXCIuLi9sb2NhbFN0b3JhZ2VcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrTmVzdGVkQ29tcG9uZW50cyggbWFya3VwKSB7XG5cbiAgICB2YXIgY29tcG9uZW50cyA9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuXG4gICAgcmV0dXJuIGNvbXBvbmVudHMuZmlsdGVyKGNvbXBvbmVudD0+IG1hcmt1cC5pbmNsdWRlcyhjb21wb25lbnQubmFtZSkpLmxlbmd0aCA+MDtcbn1cblxuLyoqIFRha2VzIGEgY29tcG9uZW50IGFuZCBjb252ZXJ0cyBpdCBhcyBhIHJlYWN0IGNvbXBvbmVudCAqL1xuZnVuY3Rpb24gc2F2ZVRvV2luZG93KCBjb21wb25lbnQgKSB7XG4gICAgY3JlYXRlU3R5bGVzaGVldChjb21wb25lbnQuc3R5bGUsIGNvbXBvbmVudC5uYW1lKVxuICAgIHdpbmRvd1tjb21wb25lbnQubmFtZV0gPSBjcmVhdGVDb21wb25lbnQoY29tcG9uZW50KTtcbn1cblxuLyoqIFRha2VzIGNvbXBvbmVudHMgYW5kIHNhdmVzIHRoZW0gdG8gd2luZG93IGFzIHJlYWN0IE9iamVjdCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNhdmVDb21wb25lbnRzVG9XaW5kb3coIG5lc3RlZENvbXBvbmVudHMpe1xuICAgIC8vIFRyYW5zcGlsZSB0aGVtIGFuZCBtYWtlIHRoZW0gZ2xvYmFsLlxuICAgIG5lc3RlZENvbXBvbmVudHMuZm9yRWFjaChzYXZlVG9XaW5kb3cpO1xufVxuXG4vKiogVGFrZXMgbWFya3VwIGFuZCByZXR1cm5zIGNoaWxkcmVuIGNvbXBvbmVudCBvYmplY3RzLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE5lc3RlZENvbXBvbmVudHMgKHBhcmVudCkge1xuICAgIC8vIFNob3VsZCBiZSBhYmxlIHRvIGRldGVjdCBuZXN0ZWQgY29tcG9uZW50LlxuXG4gICAgbGV0IGNvbXBvbmVudHM9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuICAgIGxldCBuZXN0ZWRDb21wb25lbnRzID0gW3BhcmVudF07XG4gICAgaWYoY2hlY2tOZXN0ZWRDb21wb25lbnRzKHBhcmVudC5tYXJrdXApKXtcbiAgICAgICAgLy8gZmluZCBhbGwgdGhlIG5lc3RlZCBjb21wb25lbnRzIGZyb20gdGhlIG1hcmt1cCBhbmQgcHVzaCBpdCB0byBuZXN0ZWRDb21wb25lbnRzLlxuICAgICAgICBsZXQgY2hpbGRyZW4gPSBjb21wb25lbnRzLmZpbHRlcihjb21wb25lbnQ9PiBwYXJlbnQubWFya3VwLmluY2x1ZGVzKGNvbXBvbmVudC5uYW1lKSk7XG4gICAgICAgIC8vIEZpbmQgZ3JhbmQga2lkcy5cbiAgICAgICAgbGV0IGdyYW5kS2lkcyA9IGNoaWxkcmVuLm1hcChnZXROZXN0ZWRDb21wb25lbnRzKS5mbGF0KDMpXG4gICAgICAgIG5lc3RlZENvbXBvbmVudHMucHVzaCguLi5ncmFuZEtpZHMpXG4gICAgfVxuICAgIHJldHVybiBuZXN0ZWRDb21wb25lbnRzLmZpbHRlcihjb21wb25lbnQ9PmNvbXBvbmVudCAmJiBjb21wb25lbnQubWFya3VwKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENoaWxkQ29tcG9uZW50cyAobWFya3VwKXtcbiAgICBsZXQgY29tcG9uZW50cz0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG4gICAgcmV0dXJuIGNvbXBvbmVudHMuZmlsdGVyKGNvbXBvbmVudD0+IG1hcmt1cC5pbmNsdWRlcyhjb21wb25lbnQubmFtZSkpO1xufSIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCIvLyBEZXBlbmRlbmNpZXMuXG5cbmltcG9ydCB7d3JpdGVEYXRhfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVzZWxlY3RlZEluZGV4IChlKSB7XG4gICAgbGV0IGNvbXBvbmVudE5hbWUgPSBlLmN1cnJlbnRUYXJnZXQuaW5uZXJUZXh0LnNwbGl0KFwiXFxuXCIpWzBdO1xuICAgIC8vIEZpbmQgdGhlIGVsZW1lbnQgZnJvbSBzdGF0ZSB0aGF0IG1hdGNoZXMgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCBlbGVtZW50LlxuICAgIGxldCBzZWxlY3RlZENvbXBvbmVudCA9IHRoaXMuc3RhdGUuZWxlbWVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09Y29tcG9uZW50TmFtZSk7XG4gICAgbGV0IHNlbGVjdGVkSW5kZXggPSB0aGlzLnN0YXRlLmVsZW1lbnRzLmZpbmRJbmRleChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09Y29tcG9uZW50TmFtZSk7XG5cbiAgICB3aW5kb3cuc2VsZWN0ZWRjb21wb25lbnRuYW1lID0gc2VsZWN0ZWRDb21wb25lbnQubmFtZTtcbiAgICAvLyBVcGRhdGUgdGhlIHN0YXRlIHdpdGggc2VsZWN0ZWRFbGVtZW50LlxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzZWxlY3RlZEluZGV4LFxuICAgICAgICBuYW1lOiBzZWxlY3RlZENvbXBvbmVudC5uYW1lLFxuICAgICAgICBtYXJrdXA6IHNlbGVjdGVkQ29tcG9uZW50Lm1hcmt1cFxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlRWxlbWVudCAoZWxlbWVudCkge1xuICAgIFxuICAgIGxldCBjb21wb25lbnRzID0gQXJyYXkuZnJvbSh0aGlzLnN0YXRlLmVsZW1lbnRzKTtcbiAgICBcbiAgICAvLyBDaGVjayBpZiBlbGVtZW50IGV4aXN0LlxuICAgIGxldCBlbGVtZW50RXhpc3QgPSBjb21wb25lbnRzLmZpbmQoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWVsZW1lbnQubmFtZSk7XG4gICAgbGV0IHNlbGVjdGVkSW5kZXggPSB0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXg7XG5cbiAgICBpZihlbGVtZW50RXhpc3Qpe1xuICAgICAgICAvLyBGaW5kIHRoZSBlbGVtZW50LlxuICAgICAgICBsZXQgZWxlbWVudFVuZGVyRWRpdCA9IGNvbXBvbmVudHNbdGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4XTtcblxuICAgICAgICAvLyBNZXJnZS5cbiAgICAgICAgZWxlbWVudFVuZGVyRWRpdCA9IE9iamVjdC5hc3NpZ24oZWxlbWVudFVuZGVyRWRpdCwgZWxlbWVudClcblxuICAgICAgICAvLyBQdXNoIGl0IHRvIG9yaWdpbmFsIGxpc3QuXG4gICAgICAgIGNvbXBvbmVudHNbdGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4XSA9IGVsZW1lbnRVbmRlckVkaXQ7XG4gICAgfVxuXG4gICAgZWxzZSB7XG4gICAgICAgIGxldCBuZXdFbGVtZW50ID0ge1xuICAgICAgICAgICAgbmFtZTogZWxlbWVudC5uYW1lLFxuICAgICAgICAgICAgbWFya3VwOiBlbGVtZW50Lm1hcmt1cCxcbiAgICAgICAgICAgIGV2ZW50czogW10sXG4gICAgICAgICAgICBzdGF0ZTogZWxlbWVudC5zdGF0ZSB8fCBcInt9XCIsXG4gICAgICAgICAgICBzdHlsZTogZWxlbWVudC5zdHlsZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgICAgIGlkOiBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSoxMDAwKSxcbiAgICAgICAgICAgIGNvbmZpZzpcInt9XCJcbiAgICAgICAgfTtcblxuICAgICAgICBzZWxlY3RlZEluZGV4ID0gY29tcG9uZW50cy5sZW5ndGgtMTtcbiAgICAgICAgY29tcG9uZW50cy5wdXNoKG5ld0VsZW1lbnQpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBlbGVtZW50czogY29tcG9uZW50cyxcbiAgICAgICAgZWxlbWVudDoge1xuICAgICAgICAgICAgbmFtZTogZWxlbWVudC5uYW1lLFxuICAgICAgICAgICAgbWFya3VwOiBlbGVtZW50Lm1hcmt1cCxcbiAgICAgICAgICAgIHN0eWxlOiBlbGVtZW50LnN0eWxlLFxuICAgICAgICAgICAgc3RhdGU6IGVsZW1lbnQuc3RhdGUsXG4gICAgICAgICAgICBldmVudHM6IGVsZW1lbnQuZXZlbnRzIHx8IFtdXG4gICAgICAgIH0sXG4gICAgICAgIHNlbGVjdGVkSW5kZXg6IHNlbGVjdGVkSW5kZXhcbiAgICB9KTtcblxuICAgIHdyaXRlRGF0YShcInVpLWVkaXRvclwiLCBjb21wb25lbnRzKVxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFdmVudCAoZXZlbnRzKSB7XG4gICAgLy8gQ3JlYXRlIG5ldyBzdGF0ZS5cbiAgICBsZXQgbmV3RWxlbWVudHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKS5lbGVtZW50cztcblxuICAgIG5ld0VsZW1lbnRzW3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleF0uZXZlbnRzID0gZXZlbnRzO1xuXG4gICAgLy8gU2V0IHN0YXRlIHRvIHRoZSBuZXcgc3RhdGUuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBuZXdFbGVtZW50c1xuICAgIH0pO1xuXG4gICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsIG5ld0VsZW1lbnRzKVxuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkRlbGV0ZShldmVudCkge1xuICAgIGxldCBjb21wb25lbnROYW1lID0gZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5pbm5lclRleHQuc3BsaXQoXCJcXG5cIilbMF07XG5cbiAgICBpZih0aGlzLnN0YXRlLmVsZW1lbnRzLmZpbmQoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWNvbXBvbmVudE5hbWUpLmxlbmd0aDwxKXtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBHZXQgYWxsIHRoZSBlbGVtZW50c1xuICAgIGxldCBlbGVtZW50cyA9IEFycmF5LmZyb20odGhpcy5zdGF0ZS5lbGVtZW50cyk7XG4gICAgXG4gICAgLy8gRmluZCB0aGUgaW5kZXggb2YgZWxlbWVudCB0byBiZSBkZWxldGVkLlxuICAgIGxldCBpbmRleCA9IGVsZW1lbnRzLmZpbmRJbmRleChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09Y29tcG9uZW50TmFtZSlcblxuICAgIC8vIFJlbW92ZSB0aGUgZWxlbWVudCBmcm9tIHRoZSBsaXN0XG4gICAgZWxlbWVudHMuc3BsaWNlKGluZGV4LDEpO1xuXG4gICAgLy8gVXBkYXRlIHRoZSBzdGF0ZSB3aXRoIG5ldyBlbGVtZW50cy5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZWxlbWVudHM6IGVsZW1lbnRzXG4gICAgfSlcblxuICAgIC8vIFBlcnNpc3QgdGhlIGNoYW5nZXMuXG4gICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsIGVsZW1lbnRzKVxuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVDb25maWcoY29uZmlnKXtcbiAgICBcbiAgICBsZXQgbmV3RWxlbWVudHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKS5lbGVtZW50cztcbiAgICBcbiAgICBsZXQgcGFyZW50ID0gbmV3RWxlbWVudHMuZmluZChlbGVtZW50PT5lbGVtZW50Lm5hbWU9PT1jb25maWcucGFyZW50TmFtZSk7XG4gICAgbGV0IGNoaWxkID0gbmV3RWxlbWVudHMuZmluZChlbGVtZW50PT5lbGVtZW50Lm5hbWU9PT1jb25maWcuY2hpbGROYW1lKTtcblxuICAgIHBhcmVudC5zdGF0ZSA9IEpTT04ucGFyc2UocGFyZW50LnN0YXRlKTtcblxuICAgIGlmKHBhcmVudC5jb25maWcgPT09IHVuZGVmaW5lZCl7XG4gICAgICAgIHBhcmVudC5jb25maWcgPSB7fTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHBhcmVudC5jb25maWcgPSBKU09OLnBhcnNlKHBhcmVudC5jb25maWcpO1xuICAgIH1cbiAgICBwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdID0gcGFyZW50LmNvbmZpZ1tjaGlsZC5uYW1lXSB8fCB7fVxuICAgIHBhcmVudC5jb25maWdbY2hpbGQubmFtZV0ub3ZlcmlkZVN0YXRlID0gY29uZmlnLm92ZXJyaWRlXG4gICAgXG4gICAgaWYocGFyZW50LmNvbmZpZ1tjaGlsZC5uYW1lXS5vdmVyaWRlU3RhdGUpIHsgICAgXG4gICAgICAgIHBhcmVudC5zdGF0ZVtjaGlsZC5uYW1lXSA9IEpTT04ucGFyc2UoY2hpbGQuc3RhdGUpO1xuICAgIH0gXG4gICAgZWxzZSB7XG4gICAgICAgIGRlbGV0ZSBwYXJlbnQuc3RhdGVbY2hpbGQubmFtZV07XG4gICAgICAgIGRlbGV0ZSBwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdO1xuICAgIH1cblxuXG4gICAgcGFyZW50LnN0YXRlID0gSlNPTi5zdHJpbmdpZnkocGFyZW50LnN0YXRlKVxuICAgIHBhcmVudC5jb25maWcgPSBKU09OLnN0cmluZ2lmeShwYXJlbnQuY29uZmlnKVxuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBuZXdFbGVtZW50c1xuICAgIH0pXG5cbiAgICB3cml0ZURhdGEoXCJ1aS1lZGl0b3JcIiwgbmV3RWxlbWVudHMpXG59IiwiaW1wb3J0IHsgY29kZU1vZGlmaWVyIH0gZnJvbSBcIi4vY29kZU1vZGlmaWVyXCI7XG5pbXBvcnQgeyBnZXRDaGlsZENvbXBvbmVudHMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL25lc3RlZENvbXBvbmVudFNldHVwXCI7XG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudFN0cmluZyhjb21wb25lbnQsIG9wdGlvbnMpe1xuXG4gICAgaWYoIWNvbXBvbmVudC5pZE1hcmt1cFszXSl7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnZlcnRUb1JlYWN0Y29tcG9uZW50KGNvbXBvbmVudCwgb3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudChjb21wb25lbnQpe1xuICAgIGxldCBjb21wb25lbnRTdHJpbmcgPSBnZXRDb21wb25lbnRTdHJpbmcoY29tcG9uZW50LCB7XCJkcmFnLWRyb3AtZmVhdHVyZVwiOnRydWV9KTtcbiAgICAvLyBldmFsIGRvZXMgbm90IGV2YWx1YXRlIGNsYXNzIGlmIG5vdCBleGNsb3NlZCBpbiBwYXJhbnRoZXNpcy5cbiAgICByZXR1cm4gZXZhbChCYWJlbC50cmFuc2Zvcm0oY29tcG9uZW50U3RyaW5nLCB7IHByZXNldHM6IFsncmVhY3QnXSwgcGx1Z2luczogW1widHJhbnNmb3JtLWVzMjAxNS1jbGFzc2VzXCJdICB9KS5jb2RlKVxufVxuXG5cbi8vIEVsZW1lbnRzIHRvICByZWFjdCBjb21wb25lbnQuXG5mdW5jdGlvbiBjb252ZXJ0VG9SZWFjdGNvbXBvbmVudCAoY29tcG9uZW50LCBvcHRpb25zKXtcblxuICAgIC8qKlxuICAgICAqIDEuIGlmIG9wdGlvbnMuZHJhZy1kcm9wLWZlYXR1cmUgPSB0cnVlLCB1c2UgaWRNYXJrdXAgYXMgcHJvcGVydHlcbiAgICAgKi9cblxuICAgIGxldCBtYXJrdXAgPSBcIm1hcmt1cFwiO1xuICAgIGlmKG9wdGlvbnMgJiYgb3B0aW9uc1tcImRyYWctZHJvcC1mZWF0dXJlXCJdKXtcbiAgICAgICAgbWFya3VwID0gXCJpZE1hcmt1cFwiXG4gICAgfVxuICAgIGNvbXBvbmVudC5ldmVudHMuZm9yRWFjaChldmVudD0+e1xuICAgICAgICBldmVudC5pZCA9IGV2ZW50LmlkLnJlcGxhY2UoXCItXCIsXCJcIik7XG4gICAgfSlcblxuICAgIGxldCBnZXRDb21wb25lbnROYW1lSW5NYXJrdXA9IChjb21wb25lbnQpPT57XG4gICAgICAgIHJldHVybiBjb21wb25lbnRbbWFya3VwXS5yZXBsYWNlKFwiPlwiLGAgZGF0YS1uYW1lPScke2NvbXBvbmVudC5uYW1lfScgey4uLnRoaXMucHJvcHN9IGRyYWdnYWJsZT1cInRydWVcIiBvbkRyYWdTdGFydD17d2luZG93LmV2ZW50Q2FsbGJhY2tzLmhhbmRsZURyYWd9Pnt0aGlzLnByb3BzLmNoaWxkcmVufWApXG4gICAgfVxuXG4gICAgbGV0IGdldENvbXBvbmVudEV2ZW50ZWRNYXJrdXAgPSAobWFya3VwLCBldmVudHMpPT57XG4gICAgICAgIGV2ZW50cy5mb3JFYWNoKGV2ZW50PT57XG4gICAgICAgICAgICBsZXQgaWQgPSBgaWQ9XCIke2V2ZW50LmlkfVwiYDtcbiAgICAgICAgICAgIG1hcmt1cCA9IG1hcmt1cC5yZXBsYWNlKGlkLCBgJHtpZH0gJHtldmVudC5uYW1lfT17dGhpcy4ke2V2ZW50LmlkK2V2ZW50Lm5hbWV9LmJpbmQodGhpcyl9YCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIFRoaXMgd2FzIGEgZWFzeSB0byB0aGluayBidXQgaGFyZCB0byB3cml0ZSBhIHJlYWRhYmxlIGNvZGUuIEkga25vdyBjb21tZW50cyB3b250IGhlbHAuXG4gICAgICAgIC8vIFJlZmFjdG9yIGV2ZW50cyB0byBwcmV2aWV3LnNldFRvRHJvcE1vZGUgc3R5bGVcbiAgICAgICAgbGV0IGNoaWxkQ29tcG9uZW50cyA9IGdldENoaWxkQ29tcG9uZW50cyhtYXJrdXApO1xuICAgICAgICBpZihjaGlsZENvbXBvbmVudHMubGVuZ3RoPjApe1xuICAgICAgICAgICAgLy8gRm9yIGVhY2ggb2YgY2hpbGQgY29tcG9uZW50c1xuICAgICAgICAgICAgY2hpbGRDb21wb25lbnRzLmZvckVhY2goY2hpbGQ9PntcblxuICAgICAgICAgICAgICAgIC8vIEZyb20gZWFjaCBvZiBjaGlsZCBldmVudHMgZmlsdGVyIHRoZSBwdWJsaXNoYWJsZSBldmVudHMuXG4gICAgICAgICAgICAgICAgbGV0IHB1Ymxpc2hhYmxlRXZlbnRzID0gY2hpbGQuZXZlbnRzLmZpbHRlcihldmVudD0+ZXZlbnQucHVibGlzaGFibGU9PT10cnVlKTtcbiAgICAgICAgICAgICAgICAvLyBGaWx0ZXIgcHVibGlzaGFibGUgY2hpbGQgZXZlbnRzIHRoYXQgYXJlIGluIHBhcmVudC5cbiAgICAgICAgICAgICAgICAvLyBGb3IgZWFjaCBvZiBwdWJsaXNoYWJsZSBldmVudHNcbiAgICAgICAgICAgICAgICAvLyBGaW5kIHdoaWNoIGlzIHByZXNlbnQgaW4gdGhpcyBjb21wb25lbnQuZXZlbnRzLm5hbWVcbiAgICAgICAgICAgICAgICBpZihwdWJsaXNoYWJsZUV2ZW50cy5sZW5ndGghPTApe1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCBldmVudFVzZWRJblBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgcHVibGlzaGFibGVFdmVudHMuZm9yRWFjaChwdWJsaXNoYWJsZUV2ZW50PT57XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFVzZWRJblBhcmVudCA9IGNvbXBvbmVudC5ldmVudHMuZmluZChldmVudD0+ZXZlbnQubmFtZT09PXB1Ymxpc2hhYmxlRXZlbnQucHVibGlzaE5hbWUpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIGxldCBmdW5jdGlvbkRlZiA9IGNvZGVNb2RpZmllcihldmVudFVzZWRJblBhcmVudC5yZWR1Y2VyLCBjb21wb25lbnQpO1xuICAgIFxuICAgICAgICAgICAgICAgICAgICBsZXQgcHJvcHMgPSBldmVudFVzZWRJblBhcmVudC5uYW1lKyc9Jytge2Z1bmN0aW9uKGUpeyR7ZnVuY3Rpb25EZWZ9fS5iaW5kKHRoaXMpfWBcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlbiBkbyBpZE1hcmt1cC5yZXBsYWNlXG4gICAgICAgICAgICAgICAgICAgIG1hcmt1cCA9IGNvbXBvbmVudFttYXJrdXBdLnJlcGxhY2UoY2hpbGQubmFtZSwgY2hpbGQubmFtZStcIiBcIitwcm9wcyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuIG1hcmt1cC5zcGxpdChcIntzdGF0ZS5cIikuam9pbihcInt0aGlzLnN0YXRlLlwiKTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICByZXR1cm4gbWFya3VwLnNwbGl0KFwie3N0YXRlLlwiKS5qb2luKFwie3RoaXMuc3RhdGUuXCIpXG4gICAgfVxuXG4gICAgLy8gY2hlY2tzIGlmIHN0YXRlIG92ZXJyaWRlIGlzIG9uLiB0aGVuIGFkZHMgc3RhdGUgcHJvcCB0byBjaGlsZCBcbiAgICBsZXQgZ2V0U3RhdGVkTWFya3VwID0gKG1hcmt1cCk9PntcbiAgICAgICAgLy8gZm9yIGFsbCB0aGUgY29uZmlnLlxuICAgICAgICAvLyBmaWx0ZXIgY2hpbGQgd2l0aCBvdmVyaWRlIHN0YXRlIGlzIHRydWVcbiAgICAgICAgbGV0IGNvbmZpZyA9IEpTT04ucGFyc2UoY29tcG9uZW50LmNvbmZpZyk7XG4gICAgICAgIGxldCBjaGlsZHJlbkNvbmZpZyA9IE9iamVjdC5rZXlzKGNvbmZpZyk7XG4gICAgICAgIGNoaWxkcmVuQ29uZmlnLmZvckVhY2goY2hpbGROYW1lPT57XG4gICAgICAgICAgICBpZihjb25maWdbY2hpbGROYW1lXS5vdmVyaWRlU3RhdGUpe1xuICAgICAgICAgICAgICAgIG1hcmt1cCA9IG1hcmt1cC5yZXBsYWNlKGNoaWxkTmFtZSwgY2hpbGROYW1lK2Agc3RhdGU9e3RoaXMuc3RhdGUuJHtjaGlsZE5hbWV9fWApXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBtYXJrdXA7XG4gICAgfVxuXG4gICAgbGV0IGdldENvbXBvbmVudFJlZHVjZXJzID0gKGV2ZW50cykgPT4ge1xuICAgICAgICByZXR1cm4gZXZlbnRzLm1hcChldmVudD0+e1xuICAgICAgICAgICAgbGV0IGZ1bmN0aW9uTmFtZSA9IGV2ZW50LmlkK2V2ZW50Lm5hbWU7XG4gICAgICAgICAgICBsZXQgZnVuY3Rpb25EZWYgPSBjb2RlTW9kaWZpZXIoZXZlbnQucmVkdWNlciwgY29tcG9uZW50KTtcblxuICAgICAgICAgICAgaWYoZXZlbnQucHVibGlzaGFibGU9PT10cnVlKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgICAgICAgICAke2Z1bmN0aW9uTmFtZX0gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR7ZnVuY3Rpb25EZWZ9XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnN0YXRlID0gc3RhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWJ1Z2dlcjsoMSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuJHtldmVudC5wdWJsaXNoTmFtZX0/IHRoaXMucHJvcHMuJHtldmVudC5wdWJsaXNoTmFtZX0oZSk6bnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgICAgICAgICAke2Z1bmN0aW9uTmFtZX0gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR7ZnVuY3Rpb25EZWZ9XG4gICAgICAgICAgICAgICAgICAgIH1gXG4gICAgICAgIH0pLmpvaW4oXCJcXG5cIilcbiAgICB9XG4gICAgXG4gICAgbGV0IGNvbXBvbmVudE5hbWVkTWFrcnVwID0gZ2V0Q29tcG9uZW50TmFtZUluTWFya3VwKGNvbXBvbmVudCk7XG4gICAgbGV0IGNvbXBvbmVudEV2ZW50ZWRNYXJrdXAgPSBnZXRDb21wb25lbnRFdmVudGVkTWFya3VwKGNvbXBvbmVudE5hbWVkTWFrcnVwLCBjb21wb25lbnQuZXZlbnRzKVxuICAgIGxldCBzdGF0ZU92ZXJpZGVNYXJrdXAgPSBnZXRTdGF0ZWRNYXJrdXAoY29tcG9uZW50RXZlbnRlZE1hcmt1cClcbiAgICBsZXQgY29tcG9uZW50UmVkdWNlcnMgPSBnZXRDb21wb25lbnRSZWR1Y2Vycyhjb21wb25lbnQuZXZlbnRzKVxuICAgIGxldCBjb21wb25lbnROYW1lID0gY29tcG9uZW50Lm5hbWUuc3BsaXQoXCIgXCIpLmpvaW4oXCJcIilcbiAgICBsZXQgY29tcG9uZW50U3RhdGUgPSBjb21wb25lbnQuc3RhdGVcbiAgICBsZXQgUmVhY3RDb21wb25lbnQgPSBcbiAgICBgKFxuICAgIGNsYXNzICR7Y29tcG9uZW50TmFtZX0gZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIFxuICAgICAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMucHJvcHMuc3RhdGUgfHwgJHtjb21wb25lbnRTdGF0ZX07XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgJHtjb21wb25lbnRSZWR1Y2Vyc31cbiAgICBcbiAgICAgICAgcmVuZGVyKCkge1xuICAgIFxuICAgICAgICAgICAgcmV0dXJuICgke3N0YXRlT3ZlcmlkZU1hcmt1cH0pXG4gICAgICAgIH1cbiAgICB9KVxuICAgIGBcbiAgICByZXR1cm4gUmVhY3RDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZUNvbXBvbmVudCxcbiAgICBnZXRDb21wb25lbnRTdHJpbmdcbn0iLCIvLyBJbXBsZW1lbnQgc3R5bGVzaGVldCBjbGVhbnVwXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdHlsZXNoZWV0KHN0eWxlLCBuYW1lKSB7XG5cbiAgICBsZXQgdG9EZWxldGUgPSBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWNvbXBvbmVudC1uYW1lPSdQYXJlbnRDb21wb25lbnQnXVwiKV07XG4gICAgdG9EZWxldGUuZm9yRWFjaChpdGVtPT57XG4gICAgICAgIGl0ZW0ucmVtb3ZlKClcbiAgICB9KVxuICAgIHZhciBkeW5hbWljU3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIGR5bmFtaWNTdHlsZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWNvbXBvbmVudC1uYW1lXCIsIG5hbWUpO1xuICAgIGR5bmFtaWNTdHlsZS50eXBlID0gJ3RleHQvY3NzJztcbiAgICBkeW5hbWljU3R5bGUuaW5uZXJIVE1MID0gc3R5bGU7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkeW5hbWljU3R5bGUpXG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmltcG9ydCBNZXNzYWdlQ29tcG9uZW50IGZyb20gXCIuLi9NZXNzYWdlQ29tcG9uZW50XCI7XG5cbmNsYXNzIE1lc3NhZ2VzQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBtZXNzYWdlcyA9IHRoaXMucHJvcHMubWVzc2FnZXM7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29uc29sZVwiPlxuICAgICAgICAgICAgICAgICAgICB7bWVzc2FnZXMubWFwKChtZXNzYWdlLGluZGV4KT0+PE1lc3NhZ2VDb21wb25lbnQga2V5PXtpbmRleH0gbWVzc2FnZT17bWVzc2FnZX0vPil9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VzQ29tcG9uZW50OyIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHvCoHNhdmVDb21wb25lbnRzVG9XaW5kb3csIGdldE5lc3RlZENvbXBvbmVudHMgfSBmcm9tIFwiLi9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuaW1wb3J0IHsgcmVhZERhdGEsIHdyaXRlRGF0YSB9IGZyb20gXCIuL2xvY2FsU3RvcmFnZVwiO1xuXG5cbi8vIFdoeT8gQmVjYXVzZSBpbXBvcnRpbmcgUmVhY3QgYXMgdmFyaWFibGUgYXQgbGluZSMyIHdpbGwgYmUgYWx0ZXJ0ZWQgYnkgYmFiZWwuIEtlZXAgaXQgYXMgYSBwcm9wZXJ0eSwgYmFiZWwgd2lsbCBpZ25vcmUgaXQuXG53aW5kb3cuUmVhY3QgPSBSZWFjdDtcbndpbmRvdy5Db21wb25lbnQgPSBSZWFjdC5Db21wb25lbnQ7XG53aW5kb3cuc2F2ZVZhcmlhbnRzID0gZnVuY3Rpb24gKHNvdXJjZSwgdGFyZ2V0LCBzdGF0ZSwgZXZlbnQpIHtcblxuICAgIHZhciBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG5cbiAgICBpZihzb3VyY2U9PT10YXJnZXQpe1xuICAgICAgICB2YXIgY29tcG9uZW50ID0gY29tcG9uZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWUgPT09IHNvdXJjZS5uYW1lKTtcbiAgICAgICAgY29tcG9uZW50LnZhcmlhbnRzID0gY29tcG9uZW50LnZhcmlhbnRzIHx8IFtjb21wb25lbnQuc3RhdGVdO1xuICAgICAgICBjb21wb25lbnQudmFyaWFudHMucHVzaChzdGF0ZSk7XG4gICAgICAgIGNvbXBvbmVudC52YXJpYW50cyA9IFsuLi5uZXcgU2V0KGNvbXBvbmVudC52YXJpYW50cy5tYXAoSlNPTi5zdHJpbmdpZnkpKV0ubWFwKEpTT04ucGFyc2UpLmZpbHRlcihCb29sZWFuKTtcbiAgICAgICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsY29tcG9uZW50cyk7XG4gICAgfVxuICAgIGVsc2V7XG5cblxuICAgICAgICAvLyBzb3VyY2UgaXMgdGhlIHBhcmVudCBhbmQgdGFyZ2V0IGlzIHRoZSBjaGlsZC5cbiAgICAgICAgLy8gQWN0dWFsIGZpeFxuICAgICAgICAvLyAxLiBmaW5kIHBhcmVudCB0aGF0IGhhcyBzdGF0ZVt0YXJnZXRdICE9PSB1bmRlZmluZWRcblxuICAgICAgICB2YXIgc291cmNlQ29tcG9uZW50ID0gY29tcG9uZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWUgPT09IHNvdXJjZS5uYW1lKTtcbiAgICAgICAgdmFyIHRhcmdldENvbXBvbmVudCA9IGNvbXBvbmVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lID09PSB0YXJnZXQubmFtZSk7XG5cblxuICAgICAgICAvLyB0ZW1wb3JhcnlGaXhcblxuICAgICAgICBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgPSBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgfHwgW0pTT04ucGFyc2Uoc291cmNlQ29tcG9uZW50LnN0YXRlKV07XG5cbiAgICAgICAgbGV0IHNvdXJjZXN0YXRlID0gSlNPTi5wYXJzZShzb3VyY2VDb21wb25lbnQuc3RhdGUpO1xuXG4gICAgICAgIGxldCBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICBuZXdTdGF0ZVt0YXJnZXRDb21wb25lbnQubmFtZV0gPSBzdGF0ZTtcblxuICAgICAgICBzb3VyY2VzdGF0ZSA9IE9iamVjdC5hc3NpZ24oc291cmNlc3RhdGUsbmV3U3RhdGUpXG5cbiAgICAgICAgc291cmNlQ29tcG9uZW50LnZhcmlhbnRzLnB1c2goc291cmNlc3RhdGUpO1xuICAgICAgICBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgPSBbLi4ubmV3IFNldChzb3VyY2VDb21wb25lbnQudmFyaWFudHMubWFwKEpTT04uc3RyaW5naWZ5KSldLm1hcChKU09OLnBhcnNlKS5maWx0ZXIoQm9vbGVhbik7XG4gICAgICAgIHdyaXRlRGF0YShcInVpLWVkaXRvclwiLGNvbXBvbmVudHMpXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm9kZVRyZWUoZWxlbWVudCwganN4LCBzdHlsZSwgc3RhdGUsIGV2ZW50cykge1xuICAgIFxuICAgIGxldCByZXN1bHQsIGVycm9yO1xuICAgIHRyeXtcbiAgICAgICAgbGV0IG5lc3RlZENvbXBvbmVudHMgPSBnZXROZXN0ZWRDb21wb25lbnRzKGVsZW1lbnQpO1xuICAgICAgICBpZiAobmVzdGVkQ29tcG9uZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBzYXZlQ29tcG9uZW50c1RvV2luZG93KG5lc3RlZENvbXBvbmVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IGV2YWwoQmFiZWwudHJhbnNmb3JtKGpzeCwgeyBwcmVzZXRzOiBbJ3JlYWN0J10gfSkuY29kZSlcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICBlcnJvciA9IGU7XG4gICAgfVxuICAgIGZpbmFsbHl7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlcnJvcjogZXJyb3IsXG4gICAgICAgICAgICByZXN1bHQsIHJlc3VsdFxuICAgICAgICB9O1xuICAgIH1cbn0iLCJpbXBvcnQgeyB3cml0ZUNvbXBvbmVudCB9IGZyb20gXCIuLi9sb2NhbFN0b3JhZ2VcIjtcbmltcG9ydCB7IGRlbGV0ZVN1YkNvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9Gb2N1c0JhckNvbXBvbmVudC9nZXRDb21wb25lbnRNYXJrdXBcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudChwYXJlbnQsIHRhZywgdXVpZCl7XG4gICAgcGFyZW50LmlkTWFya3VwID0gcGFyZW50LmlkTWFya3VwLnJlcGxhY2UoYFwiJHt1dWlkfVwiPmAsYFwiJHt1dWlkfVwiPjwke3RhZ30+PC8ke3RhZ30+YClcbiAgICB3cml0ZUNvbXBvbmVudChwYXJlbnQsIHRydWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlQ29tcG9uZW50KHBhcmVudCx0YWcsIHV1aWQpe1xuICAgIHZhciB0YXJnZXRVdWlkID0gYGRhdGEtdXVpZD1cIiR7dXVpZH1cImA7XG5cbiAgICBwYXJlbnQuaWRNYXJrdXAgPSBkZWxldGVTdWJDb21wb25lbnQocGFyZW50LmlkTWFya3VwLCB0YXJnZXRVdWlkLCB0YWcpO1xuXG4gICAgd3JpdGVDb21wb25lbnQocGFyZW50LCB0cnVlKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbW92ZUNvbXBvbmVudCgpe1xuXG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgUmVhY3RET00gZnJvbSBcInJlYWN0LWRvbVwiO1xuXG4vLyBEZXBlbmRlbmNpZXMuXG5pbXBvcnQgXCIuL0luZGV4L2luZGV4LmNzc1wiO1xuXG4vLyBDb21wb25lbnRzLlxuXG5pbXBvcnQgVG9vbCBmcm9tIFwiLi9Ub29sXCI7XG5cblxuY2xhc3MgSW5kZXggZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cblxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxUb29sIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblJlYWN0RE9NLnJlbmRlcig8SW5kZXggLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5kZXhcIikpOyIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuOC42XG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgaz1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxuPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IscD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLHE9bj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LHI9bj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsdD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCx1PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LHY9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksdz1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLHg9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLHk9bj9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsej1uP1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxhYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsYmE9bj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBjYShhLGIsZCxjLGUsZyxoLGYpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBsPVtkLGMsZSxnLGgsZl0sbT0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGxbbSsrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIEIoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxkPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTA7YzxiO2MrKylkKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTtjYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGQpfXZhciBDPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxEPXt9O1xuZnVuY3Rpb24gRShhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307RS5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hP0IoXCI4NVwiKTp2b2lkIDA7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtFLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBGKCl7fUYucHJvdG90eXBlPUUucHJvdG90eXBlO2Z1bmN0aW9uIEcoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q312YXIgSD1HLnByb3RvdHlwZT1uZXcgRjtcbkguY29uc3RydWN0b3I9RztrKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9e2N1cnJlbnQ6bnVsbH0sSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsZCl7dmFyIGM9dm9pZCAwLGU9e30sZz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZVtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1kO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGw9QXJyYXkoZiksbT0wO208ZjttKyspbFttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWx9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWVbY10mJihlW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjpwLHR5cGU6YSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gZGEoYSxiKXtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE4oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PXB9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIisoXCJcIithKS5yZXBsYWNlKC9bPTpdL2csZnVuY3Rpb24oYSl7cmV0dXJuIGJbYV19KX12YXIgTz0vXFwvKy9nLFA9W107ZnVuY3Rpb24gUShhLGIsZCxjKXtpZihQLmxlbmd0aCl7dmFyIGU9UC5wb3AoKTtlLnJlc3VsdD1hO2Uua2V5UHJlZml4PWI7ZS5mdW5jPWQ7ZS5jb250ZXh0PWM7ZS5jb3VudD0wO3JldHVybiBlfXJldHVybntyZXN1bHQ6YSxrZXlQcmVmaXg6YixmdW5jOmQsY29udGV4dDpjLGNvdW50OjB9fVxuZnVuY3Rpb24gUihhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlAubGVuZ3RoJiZQLnB1c2goYSl9XG5mdW5jdGlvbiBTKGEsYixkLGMpe3ZhciBlPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1lfHxcImJvb2xlYW5cIj09PWUpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBwOmNhc2UgcTpnPSEwfX1pZihnKXJldHVybiBkKGMsYSxcIlwiPT09Yj9cIi5cIitUKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBoPTA7aDxhLmxlbmd0aDtoKyspe2U9YVtoXTt2YXIgZj1iK1QoZSxoKTtnKz1TKGUsZixkLGMpfWVsc2UgaWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYT9mPW51bGw6KGY9QSYmYVtBXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxoPVxuMDshKGU9YS5uZXh0KCkpLmRvbmU7KWU9ZS52YWx1ZSxmPWIrVChlLGgrKyksZys9UyhlLGYsZCxjKTtlbHNlXCJvYmplY3RcIj09PWUmJihkPVwiXCIrYSxCKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZD9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjpkLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBVKGEsYixkKXtyZXR1cm4gbnVsbD09YT8wOlMoYSxcIlwiLGIsZCl9ZnVuY3Rpb24gVChhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gZWEoYSxiKXthLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspfVxuZnVuY3Rpb24gZmEoYSxiLGQpe3ZhciBjPWEucmVzdWx0LGU9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VihhLGMsZCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pOm51bGwhPWEmJihOKGEpJiYoYT1kYShhLGUrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpK2QpKSxjLnB1c2goYSkpfWZ1bmN0aW9uIFYoYSxiLGQsYyxlKXt2YXIgZz1cIlwiO251bGwhPWQmJihnPShcIlwiK2QpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIik7Yj1RKGIsZyxjLGUpO1UoYSxmYSxiKTtSKGIpfWZ1bmN0aW9uIFcoKXt2YXIgYT1JLmN1cnJlbnQ7bnVsbD09PWE/QihcIjMyMVwiKTp2b2lkIDA7cmV0dXJuIGF9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtWKGEsYyxudWxsLGIsZCk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1RKG51bGwsbnVsbCxiLGQpO1UoYSxlYSxiKTtSKGIpfSxjb3VudDpmdW5jdGlvbihhKXtyZXR1cm4gVShhLGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LG51bGwpfSx0b0FycmF5OmZ1bmN0aW9uKGEpe3ZhciBiPVtdO1YoYSxiLG51bGwsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTtyZXR1cm4gYn0sb25seTpmdW5jdGlvbihhKXtOKGEpP3ZvaWQgMDpCKFwiMTQzXCIpO3JldHVybiBhfX0sY3JlYXRlUmVmOmZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19LENvbXBvbmVudDpFLFB1cmVDb21wb25lbnQ6RyxjcmVhdGVDb250ZXh0OmZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6dyxfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6Yixcbl9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dixfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LHJlbmRlcjphfX0sbGF6eTpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6YmEsX2N0b3I6YSxfc3RhdHVzOi0xLF9yZXN1bHQ6bnVsbH19LG1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6YWEsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlQ2FsbGJhY2soYSxiKX0sdXNlQ29udGV4dDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlQ29udGV4dChhLGIpfSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUVmZmVjdChhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsXG5iLGQpe3JldHVybiBXKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsZCl9LHVzZURlYnVnVmFsdWU6ZnVuY3Rpb24oKXt9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZU1lbW8oYSxiKX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsZCl7cmV0dXJuIFcoKS51c2VSZWR1Y2VyKGEsYixkKX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlUmVmKGEpfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVN0YXRlKGEpfSxGcmFnbWVudDpyLFN0cmljdE1vZGU6dCxTdXNwZW5zZTp6LGNyZWF0ZUVsZW1lbnQ6TSxjbG9uZUVsZW1lbnQ6ZnVuY3Rpb24oYSxiLGQpe251bGw9PT1hfHx2b2lkIDA9PT1hP0IoXCIyNjdcIixhKTp2b2lkIDA7dmFyIGM9dm9pZCAwLGU9ayh7fSxhLnByb3BzKSxnPWEua2V5LGg9YS5yZWYsZj1hLl9vd25lcjtpZihudWxsIT1cbmIpe3ZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZixmPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpO3ZhciBsPXZvaWQgMDthLnR5cGUmJmEudHlwZS5kZWZhdWx0UHJvcHMmJihsPWEudHlwZS5kZWZhdWx0UHJvcHMpO2ZvcihjIGluIGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZVtjXT12b2lkIDA9PT1iW2NdJiZ2b2lkIDAhPT1sP2xbY106YltjXSl9Yz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWMpZS5jaGlsZHJlbj1kO2Vsc2UgaWYoMTxjKXtsPUFycmF5KGMpO2Zvcih2YXIgbT0wO208YzttKyspbFttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWx9cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmcscmVmOmgscHJvcHM6ZSxfb3duZXI6Zn19LGNyZWF0ZUZhY3Rvcnk6ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9LGlzVmFsaWRFbGVtZW50Ok4sdmVyc2lvbjpcIjE2LjguNlwiLFxudW5zdGFibGVfQ29uY3VycmVudE1vZGU6eCx1bnN0YWJsZV9Qcm9maWxlcjp1LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnREaXNwYXRjaGVyOkksUmVhY3RDdXJyZW50T3duZXI6Sixhc3NpZ246a319LFk9e2RlZmF1bHQ6WH0sWj1ZJiZYfHxZO21vZHVsZS5leHBvcnRzPVouZGVmYXVsdHx8WjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuOC42XG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIGJhKGEsYixjLGQsZSxmLGcsaCl7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2MsZCxlLGYsZyxoXSxrPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFtrKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24geChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGM9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGQ9MDtkPGI7ZCsrKWMrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2QrMV0pO2JhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsYyl9YWE/dm9pZCAwOngoXCIyMjdcIik7ZnVuY3Rpb24gY2EoYSxiLGMsZCxlLGYsZyxoLGwpe3ZhciBrPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGspfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19XG52YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsbCl7ZGE9ITE7ZWE9bnVsbDtjYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxsKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgaz1lYTtkYT0hMTtlYT1udWxsfWVsc2UgeChcIjE5OFwiKSxrPXZvaWQgMDtmYXx8KGZhPSEwLGhhPWspfX12YXIgbGE9bnVsbCxtYT17fTtcbmZ1bmN0aW9uIG5hKCl7aWYobGEpZm9yKHZhciBhIGluIG1hKXt2YXIgYj1tYVthXSxjPWxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6eChcIjk2XCIsYSk7aWYoIW9hW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOngoXCI5N1wiLGEpO29hW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cGEuaGFzT3duUHJvcGVydHkoaCk/eChcIjk5XCIsaCk6dm9pZCAwO3BhW2hdPWY7dmFyIGw9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihsKXtmb3IoZSBpbiBsKWwuaGFzT3duUHJvcGVydHkoZSkmJnFhKGxbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhxYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOngoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiBxYShhLGIsYyl7cmFbYV0/eChcIjEwMFwiLGEpOnZvaWQgMDtyYVthXT1iO3NhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIG9hPVtdLHBhPXt9LHJhPXt9LHNhPXt9LHRhPW51bGwsdWE9bnVsbCx2YT1udWxsO2Z1bmN0aW9uIHdhKGEsYixjKXt2YXIgZD1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD12YShjKTtrYShkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfWZ1bmN0aW9uIHhhKGEsYil7bnVsbD09Yj94KFwiMzBcIik6dm9pZCAwO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1cbmZ1bmN0aW9uIHlhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciB6YT1udWxsO2Z1bmN0aW9uIEFhKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKyl3YShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZ3YShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19XG52YXIgQmE9e2luamVjdEV2ZW50UGx1Z2luT3JkZXI6ZnVuY3Rpb24oYSl7bGE/eChcIjEwMVwiKTp2b2lkIDA7bGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYSk7bmEoKX0saW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lOmZ1bmN0aW9uKGEpe3ZhciBiPSExLGM7Zm9yKGMgaW4gYSlpZihhLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD1hW2NdO21hLmhhc093blByb3BlcnR5KGMpJiZtYVtjXT09PWR8fChtYVtjXT94KFwiMTAyXCIsYyk6dm9pZCAwLG1hW2NdPWQsYj0hMCl9YiYmbmEoKX19O1xuZnVuY3Rpb24gQ2EoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD10YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gRGEoYSl7bnVsbCE9PWEmJih6YT14YSh6YSxhKSk7YT16YTt6YT1udWxsO2lmKGEmJih5YShhLEFhKSx6YT94KFwiOTVcIik6dm9pZCAwLGZhKSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9dmFyIEVhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEZhPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrRWEsR2E9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitFYTtmdW5jdGlvbiBIYShhKXtpZihhW0ZhXSlyZXR1cm4gYVtGYV07Zm9yKDshYVtGYV07KWlmKGEucGFyZW50Tm9kZSlhPWEucGFyZW50Tm9kZTtlbHNlIHJldHVybiBudWxsO2E9YVtGYV07cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBJYShhKXthPWFbRmFdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZz9udWxsOmF9XG5mdW5jdGlvbiBKYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7eChcIjMzXCIpfWZ1bmN0aW9uIEthKGEpe3JldHVybiBhW0dhXXx8bnVsbH1mdW5jdGlvbiBMYShhKXtkbyBhPWEucmV0dXJuO3doaWxlKGEmJjUhPT1hLnRhZyk7cmV0dXJuIGE/YTpudWxsfWZ1bmN0aW9uIE1hKGEsYixjKXtpZihiPUNhKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9XG5mdW5jdGlvbiBOYShhKXtpZihhJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzKXtmb3IodmFyIGI9YS5fdGFyZ2V0SW5zdCxjPVtdO2I7KWMucHVzaChiKSxiPUxhKGIpO2ZvcihiPWMubGVuZ3RoOzA8Yi0tOylNYShjW2JdLFwiY2FwdHVyZWRcIixhKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKU1hKGNbYl0sXCJidWJibGVkXCIsYSl9fWZ1bmN0aW9uIE9hKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPUNhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gUGEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZPYShhLl90YXJnZXRJbnN0LG51bGwsYSl9XG5mdW5jdGlvbiBRYShhKXt5YShhLE5hKX12YXIgUmE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8IXdpbmRvdy5kb2N1bWVudHx8IXdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtmdW5jdGlvbiBTYShhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBUYT17YW5pbWF0aW9uZW5kOlNhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOlNhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6U2EoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxVYT17fSxWYT17fTtcblJhJiYoVmE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgVGEuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgVGEuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgVGEuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgVGEudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBXYShhKXtpZihVYVthXSlyZXR1cm4gVWFbYV07aWYoIVRhW2FdKXJldHVybiBhO3ZhciBiPVRhW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIFZhKXJldHVybiBVYVthXT1iW2NdO3JldHVybiBhfVxudmFyIFhhPVdhKFwiYW5pbWF0aW9uZW5kXCIpLFlhPVdhKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLFphPVdhKFwiYW5pbWF0aW9uc3RhcnRcIiksJGE9V2EoXCJ0cmFuc2l0aW9uZW5kXCIpLGFiPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxiYj1udWxsLGNiPW51bGwsZGI9bnVsbDtcbmZ1bmN0aW9uIGViKCl7aWYoZGIpcmV0dXJuIGRiO3ZhciBhLGI9Y2IsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4gYmI/YmIudmFsdWU6YmIudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gZGI9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1mdW5jdGlvbiBmYigpe3JldHVybiEwfWZ1bmN0aW9uIGdiKCl7cmV0dXJuITF9XG5mdW5jdGlvbiB5KGEsYixjLGQpe3RoaXMuZGlzcGF0Y2hDb25maWc9YTt0aGlzLl90YXJnZXRJbnN0PWI7dGhpcy5uYXRpdmVFdmVudD1jO2E9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2U7Zm9yKHZhciBlIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShlKSYmKChiPWFbZV0pP3RoaXNbZV09YihjKTpcInRhcmdldFwiPT09ZT90aGlzLnRhcmdldD1kOnRoaXNbZV09Y1tlXSk7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9KG51bGwhPWMuZGVmYXVsdFByZXZlbnRlZD9jLmRlZmF1bHRQcmV2ZW50ZWQ6ITE9PT1jLnJldHVyblZhbHVlKT9mYjpnYjt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWdiO3JldHVybiB0aGlzfVxubih5LnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWZiKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWZiKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PWZifSxpc1BlcnNpc3RlbnQ6Z2IsZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLFxuYjtmb3IoYiBpbiBhKXRoaXNbYl09bnVsbDt0aGlzLm5hdGl2ZUV2ZW50PXRoaXMuX3RhcmdldEluc3Q9dGhpcy5kaXNwYXRjaENvbmZpZz1udWxsO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Z2I7dGhpcy5fZGlzcGF0Y2hJbnN0YW5jZXM9dGhpcy5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbH19KTt5LkludGVyZmFjZT17dHlwZTpudWxsLHRhcmdldDpudWxsLGN1cnJlbnRUYXJnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sZXZlbnRQaGFzZTpudWxsLGJ1YmJsZXM6bnVsbCxjYW5jZWxhYmxlOm51bGwsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDpudWxsLGlzVHJ1c3RlZDpudWxsfTtcbnkuZXh0ZW5kPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXt9ZnVuY3Rpb24gYygpe3JldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZD10aGlzO2IucHJvdG90eXBlPWQucHJvdG90eXBlO3ZhciBlPW5ldyBiO24oZSxjLnByb3RvdHlwZSk7Yy5wcm90b3R5cGU9ZTtjLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1jO2MuSW50ZXJmYWNlPW4oe30sZC5JbnRlcmZhY2UsYSk7Yy5leHRlbmQ9ZC5leHRlbmQ7aGIoYyk7cmV0dXJuIGN9O2hiKHkpO2Z1bmN0aW9uIGliKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIGpiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDp4KFwiMjc5XCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1cbmZ1bmN0aW9uIGhiKGEpe2EuZXZlbnRQb29sPVtdO2EuZ2V0UG9vbGVkPWliO2EucmVsZWFzZT1qYn12YXIga2I9eS5leHRlbmQoe2RhdGE6bnVsbH0pLGxiPXkuZXh0ZW5kKHtkYXRhOm51bGx9KSxtYj1bOSwxMywyNywzMl0sbmI9UmEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LG9iPW51bGw7UmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKG9iPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7XG52YXIgcGI9UmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFvYixxYj1SYSYmKCFuYnx8b2ImJjg8b2ImJjExPj1vYikscmI9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksc2I9e2JlZm9yZUlucHV0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQmVmb3JlSW5wdXRcIixjYXB0dXJlZDpcIm9uQmVmb3JlSW5wdXRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbXCJjb21wb3NpdGlvbmVuZFwiLFwia2V5cHJlc3NcIixcInRleHRJbnB1dFwiLFwicGFzdGVcIl19LGNvbXBvc2l0aW9uRW5kOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25FbmRcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25FbmRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25lbmQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uU3RhcnQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblN0YXJ0XCIsXG5jYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25TdGFydENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblVwZGF0ZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uVXBkYXRlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9udXBkYXRlIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfX0sdGI9ITE7XG5mdW5jdGlvbiB1YihhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PW1iLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJibHVyXCI6cmV0dXJuITA7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gdmIoYSl7YT1hLmRldGFpbDtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJlwiZGF0YVwiaW4gYT9hLmRhdGE6bnVsbH12YXIgd2I9ITE7ZnVuY3Rpb24geGIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHZiKGIpO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDMyIT09Yi53aGljaClyZXR1cm4gbnVsbDt0Yj0hMDtyZXR1cm4gcmI7Y2FzZSBcInRleHRJbnB1dFwiOnJldHVybiBhPWIuZGF0YSxhPT09cmImJnRiP251bGw6YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIHliKGEsYil7aWYod2IpcmV0dXJuXCJjb21wb3NpdGlvbmVuZFwiPT09YXx8IW5iJiZ1YihhLGIpPyhhPWViKCksZGI9Y2I9YmI9bnVsbCx3Yj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gcWImJlwia29cIiE9PWIubG9jYWxlP251bGw6Yi5kYXRhO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIHpiPXtldmVudFR5cGVzOnNiLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dm9pZCAwO3ZhciBmPXZvaWQgMDtpZihuYiliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjplPXNiLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjplPXNiLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6ZT1zYi5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWU9dm9pZCAwfWVsc2Ugd2I/dWIoYSxjKSYmKGU9c2IuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZT1zYi5jb21wb3NpdGlvblN0YXJ0KTtlPyhxYiYmXCJrb1wiIT09Yy5sb2NhbGUmJih3Ynx8ZSE9PXNiLmNvbXBvc2l0aW9uU3RhcnQ/ZT09PXNiLmNvbXBvc2l0aW9uRW5kJiZ3YiYmKGY9ZWIoKSk6KGJiPWQsY2I9XCJ2YWx1ZVwiaW4gYmI/YmIudmFsdWU6YmIudGV4dENvbnRlbnQsd2I9XG4hMCkpLGU9a2IuZ2V0UG9vbGVkKGUsYixjLGQpLGY/ZS5kYXRhPWY6KGY9dmIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFFhKGUpLGY9ZSk6Zj1udWxsOyhhPXBiP3hiKGEsYyk6eWIoYSxjKSk/KGI9bGIuZ2V0UG9vbGVkKHNiLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxRYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxBYj1udWxsLEJiPW51bGwsQ2I9bnVsbDtmdW5jdGlvbiBEYihhKXtpZihhPXVhKGEpKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQWI/eChcIjI4MFwiKTp2b2lkIDA7dmFyIGI9dGEoYS5zdGF0ZU5vZGUpO0FiKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gRWIoYSl7QmI/Q2I/Q2IucHVzaChhKTpDYj1bYV06QmI9YX1mdW5jdGlvbiBGYigpe2lmKEJiKXt2YXIgYT1CYixiPUNiO0NiPUJiPW51bGw7RGIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKURiKGJbYV0pfX1cbmZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gSWIoKXt9dmFyIEpiPSExO2Z1bmN0aW9uIEtiKGEsYil7aWYoSmIpcmV0dXJuIGEoYik7SmI9ITA7dHJ5e3JldHVybiBHYihhLGIpfWZpbmFsbHl7aWYoSmI9ITEsbnVsbCE9PUJifHxudWxsIT09Q2IpSWIoKSxGYigpfX12YXIgTGI9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gTWIoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFMYlthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9XG5mdW5jdGlvbiBOYihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9ZnVuY3Rpb24gT2IoYSl7aWYoIVJhKXJldHVybiExO2E9XCJvblwiK2E7dmFyIGI9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIFBiKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBRYihhKXt2YXIgYj1QYihhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gUmIoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVFiKGEpKX1mdW5jdGlvbiBTYihhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9UGIoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX12YXIgVGI9YWEuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7VGIuaGFzT3duUHJvcGVydHkoXCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyXCIpfHwoVGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7XG52YXIgVWI9L14oLiopW1xcXFxcXC9dLyx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsVmI9ej9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxXYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsWGI9ej9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsWWI9ej9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsWmI9ej9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsJGI9ej9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksYWM9ej9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxiYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsY2M9ej9TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIik6NjAxMTIsZGM9ej9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsZWM9ej9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LGZjPXo/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsZ2M9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGhjKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1nYyYmYVtnY118fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGljKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgYmM6cmV0dXJuXCJDb25jdXJyZW50TW9kZVwiO2Nhc2UgWGI6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgV2I6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIFpiOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIFliOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgZGM6cmV0dXJuXCJTdXNwZW5zZVwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBhYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlICRiOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgY2M6dmFyIGI9YS5yZW5kZXI7Yj1iLmRpc3BsYXlOYW1lfHxiLm5hbWV8fFwiXCI7cmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcblwiKVwiOlwiRm9yd2FyZFJlZlwiKTtjYXNlIGVjOnJldHVybiBpYyhhLnR5cGUpO2Nhc2UgZmM6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiBpYyhhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBqYyhhKXt2YXIgYj1cIlwiO2Rve2E6c3dpdGNoKGEudGFnKXtjYXNlIDM6Y2FzZSA0OmNhc2UgNjpjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6dmFyIGM9XCJcIjticmVhayBhO2RlZmF1bHQ6dmFyIGQ9YS5fZGVidWdPd25lcixlPWEuX2RlYnVnU291cmNlLGY9aWMoYS50eXBlKTtjPW51bGw7ZCYmKGM9aWMoZC50eXBlKSk7ZD1mO2Y9XCJcIjtlP2Y9XCIgKGF0IFwiK2UuZmlsZU5hbWUucmVwbGFjZShVYixcIlwiKStcIjpcIitlLmxpbmVOdW1iZXIrXCIpXCI6YyYmKGY9XCIgKGNyZWF0ZWQgYnkgXCIrYytcIilcIik7Yz1cIlxcbiAgICBpbiBcIisoZHx8XCJVbmtub3duXCIpK2Z9Yis9YzthPWEucmV0dXJufXdoaWxlKGEpO3JldHVybiBifVxudmFyIGtjPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxsYz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LG1jPXt9LG5jPXt9O1xuZnVuY3Rpb24gb2MoYSl7aWYobGMuY2FsbChuYyxhKSlyZXR1cm4hMDtpZihsYy5jYWxsKG1jLGEpKXJldHVybiExO2lmKGtjLnRlc3QoYSkpcmV0dXJuIG5jW2FdPSEwO21jW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIHBjKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcWMoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8cGMoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBDKGEsYixjLGQsZSl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yn12YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDAsITEsYSxudWxsKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBDKGIsMSwhMSxhWzFdLG51bGwpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDIsITEsYSxudWxsKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwzLCEwLGEsbnVsbCl9KTtcbltcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDQsITEsYSxudWxsKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNiwhMSxhLG51bGwpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTt2YXIgcmM9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBzYyhhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYyxcbnNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLG51bGwpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6aHJlZiB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYyxzYyk7RFtiXT1uZXcgQyhiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIil9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYyxzYyk7RFtiXT1uZXcgQyhiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuZnVuY3Rpb24gdGMoYSxiLGMsZCl7dmFyIGU9RC5oYXNPd25Qcm9wZXJ0eShiKT9EW2JdOm51bGw7dmFyIGY9bnVsbCE9PWU/MD09PWUudHlwZTpkPyExOiEoMjxiLmxlbmd0aCl8fFwib1wiIT09YlswXSYmXCJPXCIhPT1iWzBdfHxcIm5cIiE9PWJbMV0mJlwiTlwiIT09YlsxXT8hMTohMDtmfHwocWMoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP29jKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKSl9XG5mdW5jdGlvbiB1YyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gdmMoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG4oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfVxuZnVuY3Rpb24gd2MoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9dWMobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiB4YyhhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnRjKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiB5YyhhLGIpe3hjKGEsYik7dmFyIGM9dWMoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/emMoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmemMoYSxiLnR5cGUsdWMoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBBYyhhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSFhLmRlZmF1bHRDaGVja2VkO2EuZGVmYXVsdENoZWNrZWQ9ISFhLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWQ7XCJcIiE9PWMmJihhLm5hbWU9Yyl9XG5mdW5jdGlvbiB6YyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9dmFyIEJjPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIENjKGEsYixjKXthPXkuZ2V0UG9vbGVkKEJjLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7RWIoYyk7UWEoYSk7cmV0dXJuIGF9dmFyIERjPW51bGwsRWM9bnVsbDtmdW5jdGlvbiBGYyhhKXtEYShhKX1cbmZ1bmN0aW9uIEdjKGEpe3ZhciBiPUphKGEpO2lmKFNiKGIpKXJldHVybiBhfWZ1bmN0aW9uIEhjKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIEljPSExO1JhJiYoSWM9T2IoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gSmMoKXtEYyYmKERjLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEtjKSxFYz1EYz1udWxsKX1mdW5jdGlvbiBLYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmR2MoRWMpJiYoYT1DYyhFYyxhLE5iKGEpKSxLYihGYyxhKSl9ZnVuY3Rpb24gTGMoYSxiLGMpe1wiZm9jdXNcIj09PWE/KEpjKCksRGM9YixFYz1jLERjLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEtjKSk6XCJibHVyXCI9PT1hJiZKYygpfWZ1bmN0aW9uIE1jKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIEdjKEVjKX1cbmZ1bmN0aW9uIE5jKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gR2MoYil9ZnVuY3Rpb24gT2MoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gR2MoYil9XG52YXIgUGM9e2V2ZW50VHlwZXM6QmMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpJYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/SmEoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPUhjOk1iKGUpP0ljP2Y9T2M6KGY9TWMsZz1MYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9TmMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIENjKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJihhPWUuX3dyYXBwZXJTdGF0ZSkmJmEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWUudHlwZSYmemMoZSxcIm51bWJlclwiLGUudmFsdWUpfX0sUWM9eS5leHRlbmQoe3ZpZXc6bnVsbCxkZXRhaWw6bnVsbH0pLFJjPXtBbHQ6XCJhbHRLZXlcIixcbkNvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFNjKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9UmNbYV0pPyEhYlthXTohMX1mdW5jdGlvbiBUYygpe3JldHVybiBTY31cbnZhciBVYz0wLFZjPTAsV2M9ITEsWGM9ITEsWWM9UWMuZXh0ZW5kKHtzY3JlZW5YOm51bGwsc2NyZWVuWTpudWxsLGNsaWVudFg6bnVsbCxjbGllbnRZOm51bGwscGFnZVg6bnVsbCxwYWdlWTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGJ1dHRvbjpudWxsLGJ1dHRvbnM6bnVsbCxyZWxhdGVkVGFyZ2V0OmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlbGF0ZWRUYXJnZXR8fChhLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQpfSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluIGEpcmV0dXJuIGEubW92ZW1lbnRYO3ZhciBiPVVjO1VjPWEuc2NyZWVuWDtyZXR1cm4gV2M/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblgtYjowOihXYz0hMCwwKX0sbW92ZW1lbnRZOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRZXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WTtcbnZhciBiPVZjO1ZjPWEuc2NyZWVuWTtyZXR1cm4gWGM/XCJtb3VzZW1vdmVcIj09PWEudHlwZT9hLnNjcmVlblktYjowOihYYz0hMCwwKX19KSxaYz1ZYy5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0YW5nZW50aWFsUHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwsdHdpc3Q6bnVsbCxwb2ludGVyVHlwZTpudWxsLGlzUHJpbWFyeTpudWxsfSksJGM9e21vdXNlRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0sbW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixcbmRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX19LGFkPXtldmVudFR5cGVzOiRjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZj1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFmJiYhZSlyZXR1cm4gbnVsbDtlPWQud2luZG93PT09ZD9kOihlPWQub3duZXJEb2N1bWVudCk/ZS5kZWZhdWx0Vmlld3x8ZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP0hhKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsbD12b2lkIDAsaz12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1ZYyxoPSRjLm1vdXNlTGVhdmUsbD0kYy5tb3VzZUVudGVyLGs9XCJtb3VzZVwiO1xuZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpZz1aYyxoPSRjLnBvaW50ZXJMZWF2ZSxsPSRjLnBvaW50ZXJFbnRlcixrPVwicG9pbnRlclwiO3ZhciBtPW51bGw9PWY/ZTpKYShmKTtlPW51bGw9PWI/ZTpKYShiKTthPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2EudHlwZT1rK1wibGVhdmVcIjthLnRhcmdldD1tO2EucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQobCxiLGMsZCk7Yy50eXBlPWsrXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PW07ZD1iO2lmKGYmJmQpYTp7Yj1mO2U9ZDtrPTA7Zm9yKGc9YjtnO2c9TGEoZykpaysrO2c9MDtmb3IobD1lO2w7bD1MYShsKSlnKys7Zm9yKDswPGstZzspYj1MYShiKSxrLS07Zm9yKDswPGctazspZT1MYShlKSxnLS07Zm9yKDtrLS07KXtpZihiPT09ZXx8Yj09PWUuYWx0ZXJuYXRlKWJyZWFrIGE7Yj1MYShiKTtlPUxhKGUpfWI9bnVsbH1lbHNlIGI9bnVsbDtlPWI7Zm9yKGI9W107ZiYmZiE9PWU7KXtrPVxuZi5hbHRlcm5hdGU7aWYobnVsbCE9PWsmJms9PT1lKWJyZWFrO2IucHVzaChmKTtmPUxhKGYpfWZvcihmPVtdO2QmJmQhPT1lOyl7az1kLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Zi5wdXNoKGQpO2Q9TGEoZCl9Zm9yKGQ9MDtkPGIubGVuZ3RoO2QrKylPYShiW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihkPWYubGVuZ3RoOzA8ZC0tOylPYShmW2RdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm5bYSxjXX19O2Z1bmN0aW9uIGJkKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgY2Q9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIGRkKGEsYil7aWYoYmQoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFjZC5jYWxsKGIsY1tkXSl8fCFiZChhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIGVkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGZkKGEpezIhPT1lZChhKT94KFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIGdkKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWVkKGEpLDM9PT1iP3goXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIGZkKGUpLGE7aWYoZz09PWQpcmV0dXJuIGZkKGUpLGI7Zz1nLnNpYmxpbmd9eChcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOngoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD94KFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/eChcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBoZChhKXthPWdkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxudmFyIGlkPXkuZXh0ZW5kKHthbmltYXRpb25OYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxqZD15LmV4dGVuZCh7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLGtkPVFjLmV4dGVuZCh7cmVsYXRlZFRhcmdldDpudWxsfSk7ZnVuY3Rpb24gbGQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgbWQ9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LG5kPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSxvZD1RYy5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9bWRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9bGQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP25kW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpUYyxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9sZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9sZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHBkPVljLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSxxZD1RYy5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpUY30pLHJkPXkuZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHNkPVljLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSksdGQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbWGEsXCJhbmltYXRpb25FbmRcIl0sW1lhLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFtaYSxcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sWyRhLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0sdWQ9e30sdmQ9e307ZnVuY3Rpb24gd2QoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTt1ZFthXT1iO3ZkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImF1eGNsaWNrXCIsXCJhdXhDbGlja1wiXSxbXCJkYmxjbGlja1wiLFwiZG91YmxlQ2xpY2tcIl0sW1wiZHJhZ2VuZFwiLFwiZHJhZ0VuZFwiXSxbXCJkcmFnc3RhcnRcIixcImRyYWdTdGFydFwiXSxbXCJkcm9wXCIsXCJkcm9wXCJdLFtcImZvY3VzXCIsXCJmb2N1c1wiXSxbXCJpbnB1dFwiLFwiaW5wdXRcIl0sW1wiaW52YWxpZFwiLFwiaW52YWxpZFwiXSxbXCJrZXlkb3duXCIsXCJrZXlEb3duXCJdLFtcImtleXByZXNzXCIsXCJrZXlQcmVzc1wiXSxbXCJrZXl1cFwiLFwia2V5VXBcIl0sW1wibW91c2Vkb3duXCIsXCJtb3VzZURvd25cIl0sW1wibW91c2V1cFwiLFwibW91c2VVcFwiXSxbXCJwYXN0ZVwiLFwicGFzdGVcIl0sW1wicGF1c2VcIixcInBhdXNlXCJdLFtcInBsYXlcIixcInBsYXlcIl0sW1wicG9pbnRlcmNhbmNlbFwiLFwicG9pbnRlckNhbmNlbFwiXSxcbltcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxbXCJwb2ludGVydXBcIixcInBvaW50ZXJVcFwiXSxbXCJyYXRlY2hhbmdlXCIsXCJyYXRlQ2hhbmdlXCJdLFtcInJlc2V0XCIsXCJyZXNldFwiXSxbXCJzZWVrZWRcIixcInNlZWtlZFwiXSxbXCJzdWJtaXRcIixcInN1Ym1pdFwiXSxbXCJ0b3VjaGNhbmNlbFwiLFwidG91Y2hDYW5jZWxcIl0sW1widG91Y2hlbmRcIixcInRvdWNoRW5kXCJdLFtcInRvdWNoc3RhcnRcIixcInRvdWNoU3RhcnRcIl0sW1widm9sdW1lY2hhbmdlXCIsXCJ2b2x1bWVDaGFuZ2VcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMCl9KTt0ZC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dkKGEsITEpfSk7XG52YXIgeGQ9e2V2ZW50VHlwZXM6dWQsaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlOmZ1bmN0aW9uKGEpe2E9dmRbYV07cmV0dXJuIHZvaWQgMCE9PWEmJiEwPT09YS5pc0ludGVyYWN0aXZlfSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZkW2FdO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09bGQoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPW9kO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1rZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVljO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOmE9XG5wZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXFkO2JyZWFrO2Nhc2UgWGE6Y2FzZSBZYTpjYXNlIFphOmE9aWQ7YnJlYWs7Y2FzZSAkYTphPXJkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPVFjO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9c2Q7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1qZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVpjO2JyZWFrO2RlZmF1bHQ6YT15fWI9YS5nZXRQb29sZWQoZSxiLGMsZCk7UWEoYik7cmV0dXJuIGJ9fSx5ZD14ZC5pc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUsXG56ZD1bXTtmdW5jdGlvbiBBZChhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkO2ZvcihkPWM7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKCFkKWJyZWFrO2EuYW5jZXN0b3JzLnB1c2goYyk7Yz1IYShkKX13aGlsZShjKTtmb3IoYz0wO2M8YS5hbmNlc3RvcnMubGVuZ3RoO2MrKyl7Yj1hLmFuY2VzdG9yc1tjXTt2YXIgZT1OYihhLm5hdGl2ZUV2ZW50KTtkPWEudG9wTGV2ZWxUeXBlO2Zvcih2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9bnVsbCxoPTA7aDxvYS5sZW5ndGg7aCsrKXt2YXIgbD1vYVtoXTtsJiYobD1sLmV4dHJhY3RFdmVudHMoZCxiLGYsZSkpJiYoZz14YShnLGwpKX1EYShnKX19dmFyIEJkPSEwO1xuZnVuY3Rpb24gRShhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPSh5ZChhKT9DZDpEZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfWZ1bmN0aW9uIEVkKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMCl9ZnVuY3Rpb24gQ2QoYSxiKXtIYihEZCxhLGIpfVxuZnVuY3Rpb24gRGQoYSxiKXtpZihCZCl7dmFyIGM9TmIoYik7Yz1IYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWVkKGMpfHwoYz1udWxsKTtpZih6ZC5sZW5ndGgpe3ZhciBkPXpkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e0tiKEFkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+emQubGVuZ3RoJiZ6ZC5wdXNoKGEpfX19dmFyIEZkPXt9LEdkPTAsSGQ9XCJfcmVhY3RMaXN0ZW5lcnNJRFwiKyhcIlwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDIpO1xuZnVuY3Rpb24gSWQoYSl7T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGEsSGQpfHwoYVtIZF09R2QrKyxGZFthW0hkXV09e30pO3JldHVybiBGZFthW0hkXV19ZnVuY3Rpb24gSmQoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fWZ1bmN0aW9uIEtkKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExkKGEsYil7dmFyIGM9S2QoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2QoYyl9fWZ1bmN0aW9uIE1kKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWQoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmQoKXtmb3IodmFyIGE9d2luZG93LGI9SmQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9SmQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2QoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbmZ1bmN0aW9uIFBkKCl7dmFyIGE9TmQoKTtpZihPZChhKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gYSl2YXIgYj17c3RhcnQ6YS5zZWxlY3Rpb25TdGFydCxlbmQ6YS5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7Yj0oYj1hLm93bmVyRG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGM9Yi5nZXRTZWxlY3Rpb24mJmIuZ2V0U2VsZWN0aW9uKCk7aWYoYyYmMCE9PWMucmFuZ2VDb3VudCl7Yj1jLmFuY2hvck5vZGU7dmFyIGQ9Yy5hbmNob3JPZmZzZXQsZT1jLmZvY3VzTm9kZTtjPWMuZm9jdXNPZmZzZXQ7dHJ5e2Iubm9kZVR5cGUsZS5ub2RlVHlwZX1jYXRjaChBKXtiPW51bGw7YnJlYWsgYX12YXIgZj0wLGc9LTEsaD0tMSxsPTAsaz0wLG09YSxwPW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdDs7KXttIT09Ynx8MCE9PWQmJjMhPT1tLm5vZGVUeXBlfHwoZz1mK2QpO20hPT1lfHwwIT09YyYmMyE9PW0ubm9kZVR5cGV8fChoPWYrYyk7Mz09PW0ubm9kZVR5cGUmJihmKz1tLm5vZGVWYWx1ZS5sZW5ndGgpO1xuaWYobnVsbD09PSh0PW0uZmlyc3RDaGlsZCkpYnJlYWs7cD1tO209dH1mb3IoOzspe2lmKG09PT1hKWJyZWFrIGI7cD09PWImJisrbD09PWQmJihnPWYpO3A9PT1lJiYrK2s9PT1jJiYoaD1mKTtpZihudWxsIT09KHQ9bS5uZXh0U2libGluZykpYnJlYWs7bT1wO3A9bS5wYXJlbnROb2RlfW09dH1iPS0xPT09Z3x8LTE9PT1oP251bGw6e3N0YXJ0OmcsZW5kOmh9fWVsc2UgYj1udWxsfWI9Ynx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgYj1udWxsO3JldHVybntmb2N1c2VkRWxlbTphLHNlbGVjdGlvblJhbmdlOmJ9fVxuZnVuY3Rpb24gUWQoYSl7dmFyIGI9TmQoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZjJiZjLm93bmVyRG9jdW1lbnQmJk1kKGMub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG51bGwhPT1kJiZPZChjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGE9KGI9Yy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdyxhLmdldFNlbGVjdGlvbil7YT1hLmdldFNlbGVjdGlvbigpO3ZhciBlPWMudGV4dENvbnRlbnQubGVuZ3RoLGY9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2Y6TWF0aC5taW4oZC5lbmQsZSk7IWEuZXh0ZW5kJiZmPmQmJihlPWQsZD1mLGY9ZSk7ZT1MZChjLGYpO3ZhciBnPUxkKGMsXG5kKTtlJiZnJiYoMSE9PWEucmFuZ2VDb3VudHx8YS5hbmNob3JOb2RlIT09ZS5ub2RlfHxhLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxhLmZvY3VzTm9kZSE9PWcubm9kZXx8YS5mb2N1c09mZnNldCE9PWcub2Zmc2V0KSYmKGI9Yi5jcmVhdGVSYW5nZSgpLGIuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KSxhLnJlbW92ZUFsbFJhbmdlcygpLGY+ZD8oYS5hZGRSYW5nZShiKSxhLmV4dGVuZChnLm5vZGUsZy5vZmZzZXQpKTooYi5zZXRFbmQoZy5ub2RlLGcub2Zmc2V0KSxhLmFkZFJhbmdlKGIpKSl9Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZm9jdXMmJmMuZm9jdXMoKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1hLnRvcH19XG52YXIgUmQ9UmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxTZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzIGtleWRvd24ga2V5dXAgbW91c2Vkb3duIG1vdXNldXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX0sVGQ9bnVsbCxVZD1udWxsLFZkPW51bGwsV2Q9ITE7XG5mdW5jdGlvbiBYZChhLGIpe3ZhciBjPWIud2luZG93PT09Yj9iLmRvY3VtZW50Ojk9PT1iLm5vZGVUeXBlP2I6Yi5vd25lckRvY3VtZW50O2lmKFdkfHxudWxsPT1UZHx8VGQhPT1KZChjKSlyZXR1cm4gbnVsbDtjPVRkO1wic2VsZWN0aW9uU3RhcnRcImluIGMmJk9kKGMpP2M9e3N0YXJ0OmMuc2VsZWN0aW9uU3RhcnQsZW5kOmMuc2VsZWN0aW9uRW5kfTooYz0oYy5vd25lckRvY3VtZW50JiZjLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk7cmV0dXJuIFZkJiZkZChWZCxjKT9udWxsOihWZD1jLGE9eS5nZXRQb29sZWQoU2Quc2VsZWN0LFVkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9VGQsUWEoYSksYSl9XG52YXIgWWQ9e2V2ZW50VHlwZXM6U2QsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9SWQoZSk7Zj1zYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP0phKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoTWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpVGQ9ZSxVZD1iLFZkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpWZD1VZD1UZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpXZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6cmV0dXJuIFdkPSExLFhkKGMsZCk7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFJkKWJyZWFrO1xuY2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjpyZXR1cm4gWGQoYyxkKX1yZXR1cm4gbnVsbH19O0JhLmluamVjdEV2ZW50UGx1Z2luT3JkZXIoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7dGE9S2E7dWE9SWE7dmE9SmE7QmEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lKHtTaW1wbGVFdmVudFBsdWdpbjp4ZCxFbnRlckxlYXZlRXZlbnRQbHVnaW46YWQsQ2hhbmdlRXZlbnRQbHVnaW46UGMsU2VsZWN0RXZlbnRQbHVnaW46WWQsQmVmb3JlSW5wdXRFdmVudFBsdWdpbjp6Yn0pO2Z1bmN0aW9uIFpkKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifVxuZnVuY3Rpb24gJGQoYSxiKXthPW4oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1aZChiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9ZnVuY3Rpb24gYWUoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK3VjKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBiZShhLGIpe251bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/eChcIjkxXCIpOnZvaWQgMDtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBjZShhLGIpe3ZhciBjPWIudmFsdWU7bnVsbD09YyYmKGM9Yi5kZWZhdWx0VmFsdWUsYj1iLmNoaWxkcmVuLG51bGwhPWImJihudWxsIT1jP3goXCI5MlwiKTp2b2lkIDAsQXJyYXkuaXNBcnJheShiKSYmKDE+PWIubGVuZ3RoP3ZvaWQgMDp4KFwiOTNcIiksYj1iWzBdKSxjPWIpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTp1YyhjKX19XG5mdW5jdGlvbiBkZShhLGIpe3ZhciBjPXVjKGIudmFsdWUpLGQ9dWMoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBlZShhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiYoYS52YWx1ZT1iKX12YXIgZmU9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gZ2UoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBoZShhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/Z2UoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgaWU9dm9pZCAwLGplPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PWZlLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle2llPWllfHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO2llLmlubmVySFRNTD1cIjxzdmc+XCIrYitcIjwvc3ZnPlwiO2ZvcihiPWllLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIGtlKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgbGU9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sbWU9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGxlKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe21lLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7bGVbYl09bGVbYV19KX0pO2Z1bmN0aW9uIG5lKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxsZS5oYXNPd25Qcm9wZXJ0eShhKSYmbGVbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gb2UoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bmUoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgcGU9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHFlKGEsYil7YiYmKHBlW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiMTM3XCIsYSxcIlwiKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP3goXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6eChcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/eChcIjYyXCIsXCJcIik6dm9pZCAwKX1cbmZ1bmN0aW9uIHJlKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX1cbmZ1bmN0aW9uIHNlKGEsYil7YT05PT09YS5ub2RlVHlwZXx8MTE9PT1hLm5vZGVUeXBlP2E6YS5vd25lckRvY3VtZW50O3ZhciBjPUlkKGEpO2I9c2FbYl07Zm9yKHZhciBkPTA7ZDxiLmxlbmd0aDtkKyspe3ZhciBlPWJbZF07aWYoIWMuaGFzT3duUHJvcGVydHkoZSl8fCFjW2VdKXtzd2l0Y2goZSl7Y2FzZSBcInNjcm9sbFwiOkVkKFwic2Nyb2xsXCIsYSk7YnJlYWs7Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImJsdXJcIjpFZChcImZvY3VzXCIsYSk7RWQoXCJibHVyXCIsYSk7Yy5ibHVyPSEwO2MuZm9jdXM9ITA7YnJlYWs7Y2FzZSBcImNhbmNlbFwiOmNhc2UgXCJjbG9zZVwiOk9iKGUpJiZFZChlLGEpO2JyZWFrO2Nhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcInN1Ym1pdFwiOmNhc2UgXCJyZXNldFwiOmJyZWFrO2RlZmF1bHQ6LTE9PT1hYi5pbmRleE9mKGUpJiZFKGUsYSl9Y1tlXT0hMH19fWZ1bmN0aW9uIHRlKCl7fXZhciB1ZT1udWxsLHZlPW51bGw7XG5mdW5jdGlvbiB3ZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9ZnVuY3Rpb24geGUoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfVxudmFyIHllPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHplPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBZT1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssQmU9ci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaztcbmZ1bmN0aW9uIENlKGEsYixjLGQsZSl7YVtHYV09ZTtcImlucHV0XCI9PT1jJiZcInJhZGlvXCI9PT1lLnR5cGUmJm51bGwhPWUubmFtZSYmeGMoYSxlKTtyZShjLGQpO2Q9cmUoYyxlKTtmb3IodmFyIGY9MDtmPGIubGVuZ3RoO2YrPTIpe3ZhciBnPWJbZl0saD1iW2YrMV07XCJzdHlsZVwiPT09Zz9vZShhLGgpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWc/amUoYSxoKTpcImNoaWxkcmVuXCI9PT1nP2tlKGEsaCk6dGMoYSxnLGgsZCl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOnljKGEsZSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZGUoYSxlKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1hLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZS5tdWx0aXBsZSxjPWUudmFsdWUsbnVsbCE9Yz9hZShhLCEhZS5tdWx0aXBsZSxjLCExKTpiIT09ISFlLm11bHRpcGxlJiYobnVsbCE9ZS5kZWZhdWx0VmFsdWU/YWUoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsXG4hMCk6YWUoYSwhIWUubXVsdGlwbGUsZS5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fWZ1bmN0aW9uIERlKGEpe2ZvcihhPWEubmV4dFNpYmxpbmc7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSl7Zm9yKGE9YS5maXJzdENoaWxkO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfW5ldyBTZXQ7dmFyIEZlPVtdLEdlPS0xO2Z1bmN0aW9uIEYoYSl7MD5HZXx8KGEuY3VycmVudD1GZVtHZV0sRmVbR2VdPW51bGwsR2UtLSl9ZnVuY3Rpb24gRyhhLGIpe0dlKys7RmVbR2VdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgSGU9e30sSD17Y3VycmVudDpIZX0sST17Y3VycmVudDohMX0sSWU9SGU7XG5mdW5jdGlvbiBKZShhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEhlO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEooYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBLZShhKXtGKEksYSk7RihILGEpfWZ1bmN0aW9uIExlKGEpe0YoSSxhKTtGKEgsYSl9XG5mdW5jdGlvbiBNZShhLGIsYyl7SC5jdXJyZW50IT09SGU/eChcIjE2OFwiKTp2b2lkIDA7RyhILGIsYSk7RyhJLGMsYSl9ZnVuY3Rpb24gTmUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWUgaW4gYT92b2lkIDA6eChcIjEwOFwiLGljKGIpfHxcIlVua25vd25cIixlKTtyZXR1cm4gbih7fSxjLGQpfWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2I9YiYmYi5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dHx8SGU7SWU9SC5jdXJyZW50O0coSCxiLGEpO0coSSxJLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiBQZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7ZD92b2lkIDA6eChcIjE2OVwiKTtjPyhiPU5lKGEsYixJZSksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1iLEYoSSxhKSxGKEgsYSksRyhILGIsYSkpOkYoSSxhKTtHKEksYyxhKX12YXIgUWU9bnVsbCxSZT1udWxsO2Z1bmN0aW9uIFNlKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBUZShhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtRZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7UmU9U2UoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIFVlKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5jb250ZXh0RGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5jaGlsZEV4cGlyYXRpb25UaW1lPXRoaXMuZXhwaXJhdGlvblRpbWU9MDt0aGlzLmFsdGVybmF0ZT1udWxsfWZ1bmN0aW9uIEsoYSxiLGMsZCl7cmV0dXJuIG5ldyBVZShhLGIsYyxkKX1cbmZ1bmN0aW9uIFZlKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9ZnVuY3Rpb24gV2UoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIFZlKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1jYylyZXR1cm4gMTE7aWYoYT09PWVjKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFhlKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9SyhhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yy5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcztjLnNpYmxpbmc9YS5zaWJsaW5nO1xuYy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gWWUoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKVZlKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIFhiOnJldHVybiBaZShjLmNoaWxkcmVuLGUsZixiKTtjYXNlIGJjOnJldHVybiAkZShjLGV8MyxmLGIpO2Nhc2UgWWI6cmV0dXJuICRlKGMsZXwyLGYsYik7Y2FzZSBaYjpyZXR1cm4gYT1LKDEyLGMsYixlfDQpLGEuZWxlbWVudFR5cGU9WmIsYS50eXBlPVpiLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgZGM6cmV0dXJuIGE9SygxMyxjLGIsZSksYS5lbGVtZW50VHlwZT1kYyxhLnR5cGU9ZGMsYS5leHBpcmF0aW9uVGltZT1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlICRiOmc9MTA7YnJlYWsgYTtjYXNlIGFjOmc9OTticmVhayBhO2Nhc2UgY2M6Zz0xMTticmVhayBhO2Nhc2UgZWM6Zz1cbjE0O2JyZWFrIGE7Y2FzZSBmYzpnPTE2O2Q9bnVsbDticmVhayBhfXgoXCIxMzBcIixudWxsPT1hP2E6dHlwZW9mIGEsXCJcIil9Yj1LKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gWmUoYSxiLGMsZCl7YT1LKDcsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiAkZShhLGIsYyxkKXthPUsoOCxhLGQsYik7Yj0wPT09KGImMSk/WWI6YmM7YS5lbGVtZW50VHlwZT1iO2EudHlwZT1iO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiBhZihhLGIsYyl7YT1LKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGJmKGEsYixjKXtiPUsoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IuZXhwaXJhdGlvblRpbWU9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9ZnVuY3Rpb24gY2YoYSxiKXthLmRpZEVycm9yPSExO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTswPT09Yz9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT1iOmM8Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YjphLmxhdGVzdFBlbmRpbmdUaW1lPmImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWIpO2RmKGIsYSl9XG5mdW5jdGlvbiBlZihhLGIpe2EuZGlkRXJyb3I9ITE7aWYoMD09PWIpYS5lYXJsaWVzdFBlbmRpbmdUaW1lPTAsYS5sYXRlc3RQZW5kaW5nVGltZT0wLGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTA7ZWxzZXtiPGEubGF0ZXN0UGluZ2VkVGltZSYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmxhdGVzdFBlbmRpbmdUaW1lOzAhPT1jJiYoYz5iP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPTA6YS5lYXJsaWVzdFBlbmRpbmdUaW1lPmImJihhLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZSkpO2M9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7MD09PWM/Y2YoYSxiKTpiPGEubGF0ZXN0U3VzcGVuZGVkVGltZT8oYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MCxjZihhLGIpKTpcbmI+YyYmY2YoYSxiKX1kZigwLGEpfWZ1bmN0aW9uIGZmKGEsYil7YS5kaWRFcnJvcj0hMTthLmxhdGVzdFBpbmdlZFRpbWU+PWImJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lLGQ9YS5sYXRlc3RQZW5kaW5nVGltZTtjPT09Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9ZD09PWI/YS5sYXRlc3RQZW5kaW5nVGltZT0wOmQ6ZD09PWImJihhLmxhdGVzdFBlbmRpbmdUaW1lPWMpO2M9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7ZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7MD09PWM/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YS5sYXRlc3RTdXNwZW5kZWRUaW1lPWI6YzxiP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWI6ZD5iJiYoYS5sYXRlc3RTdXNwZW5kZWRUaW1lPWIpO2RmKGIsYSl9XG5mdW5jdGlvbiBnZihhLGIpe3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZTthPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2M+YiYmKGI9Yyk7YT5iJiYoYj1hKTtyZXR1cm4gYn1mdW5jdGlvbiBkZihhLGIpe3ZhciBjPWIuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9Yi5sYXRlc3RTdXNwZW5kZWRUaW1lLGU9Yi5lYXJsaWVzdFBlbmRpbmdUaW1lLGY9Yi5sYXRlc3RQaW5nZWRUaW1lO2U9MCE9PWU/ZTpmOzA9PT1lJiYoMD09PWF8fGQ8YSkmJihlPWQpO2E9ZTswIT09YSYmYz5hJiYoYT1jKTtiLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWU7Yi5leHBpcmF0aW9uVGltZT1hfWZ1bmN0aW9uIEwoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1uKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSl9cmV0dXJuIGJ9XG5mdW5jdGlvbiBoZihhKXt2YXIgYj1hLl9yZXN1bHQ7c3dpdGNoKGEuX3N0YXR1cyl7Y2FzZSAxOnJldHVybiBiO2Nhc2UgMjp0aHJvdyBiO2Nhc2UgMDp0aHJvdyBiO2RlZmF1bHQ6YS5fc3RhdHVzPTA7Yj1hLl9jdG9yO2I9YigpO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSk7c3dpdGNoKGEuX3N0YXR1cyl7Y2FzZSAxOnJldHVybiBhLl9yZXN1bHQ7Y2FzZSAyOnRocm93IGEuX3Jlc3VsdDt9YS5fcmVzdWx0PWI7dGhyb3cgYjt9fXZhciBqZj0obmV3IGFhLkNvbXBvbmVudCkucmVmcztcbmZ1bmN0aW9uIGtmKGEsYixjLGQpe2I9YS5tZW1vaXplZFN0YXRlO2M9YyhkLGIpO2M9bnVsbD09PWN8fHZvaWQgMD09PWM/YjpuKHt9LGIsYyk7YS5tZW1vaXplZFN0YXRlPWM7ZD1hLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGQuYmFzZVN0YXRlPWMpfVxudmFyIHRmPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09ZWQoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9bGYoKTtkPW1mKGQsYSk7dmFyIGU9bmYoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO29mKCk7cGYoYSxlKTtxZihhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnRhZz1yZjtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBjPWxmKCk7Yz1tZihjLGEpO3ZhciBkPW5mKGMpO2QudGFnPVxuc2Y7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO29mKCk7cGYoYSxkKTtxZihhLGMpfX07ZnVuY3Rpb24gdWYoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hZGQoYyxkKXx8IWRkKGUsZik6ITB9XG5mdW5jdGlvbiB2ZihhLGIsYyl7dmFyIGQ9ITEsZT1IZTt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1NKGYpOihlPUooYik/SWU6SC5jdXJyZW50LGQ9Yi5jb250ZXh0VHlwZXMsZj0oZD1udWxsIT09ZCYmdm9pZCAwIT09ZCk/SmUoYSxlKTpIZSk7Yj1uZXcgYihjLGYpO2EubWVtb2l6ZWRTdGF0ZT1udWxsIT09Yi5zdGF0ZSYmdm9pZCAwIT09Yi5zdGF0ZT9iLnN0YXRlOm51bGw7Yi51cGRhdGVyPXRmO2Euc3RhdGVOb2RlPWI7Yi5fcmVhY3RJbnRlcm5hbEZpYmVyPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHdmKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIHhmKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9amY7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD1NKGYpOihmPUooYik/SWU6SC5jdXJyZW50LGUuY29udGV4dD1KZShhLGYpKTtmPWEudXBkYXRlUXVldWU7bnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoa2YoYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PVxudHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHwoYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmdGYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZj1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1mJiYoeWYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSkpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5lZmZlY3RUYWd8PTQpfXZhciB6Zj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gQWYoYSxiLGMpe2E9Yy5yZWY7aWYobnVsbCE9PWEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZcIm9iamVjdFwiIT09dHlwZW9mIGEpe2lmKGMuX293bmVyKXtjPWMuX293bmVyO3ZhciBkPXZvaWQgMDtjJiYoMSE9PWMudGFnP3goXCIzMDlcIik6dm9pZCAwLGQ9Yy5zdGF0ZU5vZGUpO2Q/dm9pZCAwOngoXCIxNDdcIixhKTt2YXIgZT1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZSlyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1kLnJlZnM7Yj09PWpmJiYoYj1kLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2VdOmJbZV09YX07Yi5fc3RyaW5nUmVmPWU7cmV0dXJuIGJ9XCJzdHJpbmdcIiE9PXR5cGVvZiBhP3goXCIyODRcIik6dm9pZCAwO2MuX293bmVyP3ZvaWQgMDp4KFwiMjkwXCIsYSl9cmV0dXJuIGF9XG5mdW5jdGlvbiBCZihhLGIpe1widGV4dGFyZWFcIiE9PWEudHlwZSYmeChcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpfVxuZnVuY3Rpb24gQ2YoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5lZmZlY3RUYWc9OH19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIsYyl7YT1YZShhLGIsYyk7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPWFmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsIT09YiYmYi5lbGVtZW50VHlwZT09PWMudHlwZSlyZXR1cm4gZD1lKGIsYy5wcm9wcyxkKSxkLnJlZj1BZihhLGIsYyksZC5yZXR1cm49YSxkO2Q9WWUoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9QWYoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gayhhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1iZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10sZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1aZShjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcChhLGIsYyl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBifHxcIm51bWJlclwiPT09dHlwZW9mIGIpcmV0dXJuIGI9YWYoXCJcIitiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09Yil7c3dpdGNoKGIuJCR0eXBlb2Ype2Nhc2UgVmI6cmV0dXJuIGM9WWUoYi50eXBlLGIua2V5LGIucHJvcHMsbnVsbCxhLm1vZGUsYyksYy5yZWY9QWYoYSxudWxsLGIpLGMucmV0dXJuPWEsYztjYXNlIFdiOnJldHVybiBiPWJmKGIsYS5tb2RlLGMpLGIucmV0dXJuPWEsYn1pZih6ZihiKXx8XG5oYyhiKSlyZXR1cm4gYj1aZShiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPWEsYjtCZihhLGIpfXJldHVybiBudWxsfWZ1bmN0aW9uIHQoYSxiLGMsZCl7dmFyIGU9bnVsbCE9PWI/Yi5rZXk6bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGN8fFwibnVtYmVyXCI9PT10eXBlb2YgYylyZXR1cm4gbnVsbCE9PWU/bnVsbDpoKGEsYixcIlwiK2MsZCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7c3dpdGNoKGMuJCR0eXBlb2Ype2Nhc2UgVmI6cmV0dXJuIGMua2V5PT09ZT9jLnR5cGU9PT1YYj9tKGEsYixjLnByb3BzLmNoaWxkcmVuLGQsZSk6bChhLGIsYyxkKTpudWxsO2Nhc2UgV2I6cmV0dXJuIGMua2V5PT09ZT9rKGEsYixjLGQpOm51bGx9aWYoemYoYyl8fGhjKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTtCZihhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIEEoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1cbmEuZ2V0KGMpfHxudWxsLGgoYixhLFwiXCIrZCxlKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09WGI/bShiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTpsKGIsYSxkLGUpO2Nhc2UgV2I6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGsoYixhLGQsZSl9aWYoemYoZCl8fGhjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTtCZihiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIHYoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsbT1udWxsLHE9Zyx1PWc9MCxCPW51bGw7bnVsbCE9PXEmJnU8aC5sZW5ndGg7dSsrKXtxLmluZGV4PnU/KEI9cSxxPW51bGwpOkI9cS5zaWJsaW5nO3ZhciB3PXQoZSxxLGhbdV0sayk7aWYobnVsbD09PXcpe251bGw9PT1xJiYocT1CKTticmVha31hJiZcbnEmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHEpO2c9Zih3LGcsdSk7bnVsbD09PW0/bD13Om0uc2libGluZz13O209dztxPUJ9aWYodT09PWgubGVuZ3RoKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDt1PGgubGVuZ3RoO3UrKylpZihxPXAoZSxoW3VdLGspKWc9ZihxLGcsdSksbnVsbD09PW0/bD1xOm0uc2libGluZz1xLG09cTtyZXR1cm4gbH1mb3IocT1kKGUscSk7dTxoLmxlbmd0aDt1KyspaWYoQj1BKHEsZSx1LGhbdV0saykpYSYmbnVsbCE9PUIuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09Qi5rZXk/dTpCLmtleSksZz1mKEIsZyx1KSxudWxsPT09bT9sPUI6bS5zaWJsaW5nPUIsbT1CO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gUihlLGcsaCxrKXt2YXIgbD1oYyhoKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgbD94KFwiMTUwXCIpOnZvaWQgMDtoPWwuY2FsbChoKTtudWxsPT1oP3goXCIxNTFcIik6dm9pZCAwO1xuZm9yKHZhciBtPWw9bnVsbCxxPWcsdT1nPTAsQj1udWxsLHc9aC5uZXh0KCk7bnVsbCE9PXEmJiF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHY9dChlLHEsdy52YWx1ZSxrKTtpZihudWxsPT09dil7cXx8KHE9Qik7YnJlYWt9YSYmcSYmbnVsbD09PXYuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHYsZyx1KTtudWxsPT09bT9sPXY6bS5zaWJsaW5nPXY7bT12O3E9Qn1pZih3LmRvbmUpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoOyF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpdz1wKGUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGc9Zih3LGcsdSksbnVsbD09PW0/bD13Om0uc2libGluZz13LG09dyk7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpOyF3LmRvbmU7dSsrLHc9aC5uZXh0KCkpdz1BKHEsZSx1LHcudmFsdWUsayksbnVsbCE9PXcmJihhJiZudWxsIT09dy5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT13LmtleT91Olxudy5rZXkpLGc9Zih3LGcsdSksbnVsbD09PW0/bD13Om0uc2libGluZz13LG09dyk7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09WGImJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgVmI6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKWlmKDc9PT1rLnRhZz9mLnR5cGU9PT1YYjprLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnR5cGU9PT1YYj9mLnByb3BzLmNoaWxkcmVuOmYucHJvcHMsaCk7ZC5yZWY9QWYoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1cbmsuc2libGluZ31mLnR5cGU9PT1YYj8oZD1aZShmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9WWUoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9QWYoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIFdiOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSxoKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9ZC5zaWJsaW5nfWQ9YmYoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XG5cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPWFmKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKHpmKGYpKXJldHVybiB2KGEsZCxmLGgpO2lmKGhjKGYpKXJldHVybiBSKGEsZCxmLGgpO2wmJkJmKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDA6aD1hLnR5cGUseChcIjE1MlwiLGguZGlzcGxheU5hbWV8fGgubmFtZXx8XCJDb21wb25lbnRcIil9cmV0dXJuIGMoYSxkKX19dmFyIERmPUNmKCEwKSxFZj1DZighMSksRmY9e30sTj17Y3VycmVudDpGZn0sR2Y9e2N1cnJlbnQ6RmZ9LEhmPXtjdXJyZW50OkZmfTtmdW5jdGlvbiBJZihhKXthPT09RmY/eChcIjE3NFwiKTp2b2lkIDA7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZihhLGIpe0coSGYsYixhKTtHKEdmLGEsYSk7RyhOLEZmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOmhlKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1oZShiLGMpfUYoTixhKTtHKE4sYixhKX1mdW5jdGlvbiBLZihhKXtGKE4sYSk7RihHZixhKTtGKEhmLGEpfWZ1bmN0aW9uIExmKGEpe0lmKEhmLmN1cnJlbnQpO3ZhciBiPUlmKE4uY3VycmVudCk7dmFyIGM9aGUoYixhLnR5cGUpO2IhPT1jJiYoRyhHZixhLGEpLEcoTixjLGEpKX1mdW5jdGlvbiBNZihhKXtHZi5jdXJyZW50PT09YSYmKEYoTixhKSxGKEdmLGEpKX1cbnZhciBOZj0wLE9mPTIsUGY9NCxRZj04LFJmPTE2LFNmPTMyLFRmPTY0LFVmPTEyOCxWZj1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLFdmPTAsWGY9bnVsbCxPPW51bGwsUD1udWxsLFlmPW51bGwsUT1udWxsLFpmPW51bGwsJGY9MCxhZz1udWxsLGJnPTAsY2c9ITEsZGc9bnVsbCxlZz0wO2Z1bmN0aW9uIGZnKCl7eChcIjMyMVwiKX1mdW5jdGlvbiBnZyhhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFiZChhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gaGcoYSxiLGMsZCxlLGYpe1dmPWY7WGY9YjtQPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO1ZmLmN1cnJlbnQ9bnVsbD09PVA/aWc6amc7Yj1jKGQsZSk7aWYoY2cpe2RvIGNnPSExLGVnKz0xLFA9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGwsWmY9WWYsYWc9UT1PPW51bGwsVmYuY3VycmVudD1qZyxiPWMoZCxlKTt3aGlsZShjZyk7ZGc9bnVsbDtlZz0wfVZmLmN1cnJlbnQ9a2c7YT1YZjthLm1lbW9pemVkU3RhdGU9WWY7YS5leHBpcmF0aW9uVGltZT0kZjthLnVwZGF0ZVF1ZXVlPWFnO2EuZWZmZWN0VGFnfD1iZzthPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDthP3goXCIzMDBcIik6dm9pZCAwO3JldHVybiBifWZ1bmN0aW9uIGxnKCl7VmYuY3VycmVudD1rZztXZj0wO1pmPVE9WWY9UD1PPVhmPW51bGw7JGY9MDthZz1udWxsO2JnPTA7Y2c9ITE7ZGc9bnVsbDtlZz0wfVxuZnVuY3Rpb24gbWcoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLHF1ZXVlOm51bGwsYmFzZVVwZGF0ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVE/WWY9UT1hOlE9US5uZXh0PWE7cmV0dXJuIFF9ZnVuY3Rpb24gbmcoKXtpZihudWxsIT09WmYpUT1aZixaZj1RLm5leHQsTz1QLFA9bnVsbCE9PU8/Ty5uZXh0Om51bGw7ZWxzZXtudWxsPT09UD94KFwiMzEwXCIpOnZvaWQgMDtPPVA7dmFyIGE9e21lbW9pemVkU3RhdGU6Ty5tZW1vaXplZFN0YXRlLGJhc2VTdGF0ZTpPLmJhc2VTdGF0ZSxxdWV1ZTpPLnF1ZXVlLGJhc2VVcGRhdGU6Ty5iYXNlVXBkYXRlLG5leHQ6bnVsbH07UT1udWxsPT09UT9ZZj1hOlEubmV4dD1hO1A9Ty5uZXh0fXJldHVybiBRfWZ1bmN0aW9uIG9nKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gcGcoYSl7dmFyIGI9bmcoKSxjPWIucXVldWU7bnVsbD09PWM/eChcIjMxMVwiKTp2b2lkIDA7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7aWYoMDxlZyl7dmFyIGQ9Yy5kaXNwYXRjaDtpZihudWxsIT09ZGcpe3ZhciBlPWRnLmdldChjKTtpZih2b2lkIDAhPT1lKXtkZy5kZWxldGUoYyk7dmFyIGY9Yi5tZW1vaXplZFN0YXRlO2RvIGY9YShmLGUuYWN0aW9uKSxlPWUubmV4dDt3aGlsZShudWxsIT09ZSk7YmQoZixiLm1lbW9pemVkU3RhdGUpfHwocWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT09PWMubGFzdCYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9ZjtyZXR1cm5bZixkXX19cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxkXX1kPWMubGFzdDt2YXIgZz1iLmJhc2VVcGRhdGU7Zj1iLmJhc2VTdGF0ZTtudWxsIT09Zz8obnVsbCE9PWQmJihkLm5leHQ9bnVsbCksZD1nLm5leHQpOmQ9bnVsbCE9PWQ/ZC5uZXh0Om51bGw7aWYobnVsbCE9PVxuZCl7dmFyIGg9ZT1udWxsLGw9ZCxrPSExO2Rve3ZhciBtPWwuZXhwaXJhdGlvblRpbWU7bTxXZj8oa3x8KGs9ITAsaD1nLGU9ZiksbT4kZiYmKCRmPW0pKTpmPWwuZWFnZXJSZWR1Y2VyPT09YT9sLmVhZ2VyU3RhdGU6YShmLGwuYWN0aW9uKTtnPWw7bD1sLm5leHR9d2hpbGUobnVsbCE9PWwmJmwhPT1kKTtrfHwoaD1nLGU9Zik7YmQoZixiLm1lbW9pemVkU3RhdGUpfHwocWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO2IuYmFzZVVwZGF0ZT1oO2IuYmFzZVN0YXRlPWU7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiByZyhhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07bnVsbD09PWFnPyhhZz17bGFzdEVmZmVjdDpudWxsfSxhZy5sYXN0RWZmZWN0PWEubmV4dD1hKTooYj1hZy5sYXN0RWZmZWN0LG51bGw9PT1iP2FnLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGM9Yi5uZXh0LGIubmV4dD1hLGEubmV4dD1jLGFnLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIHNnKGEsYixjLGQpe3ZhciBlPW1nKCk7Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gdGcoYSxiLGMsZCl7dmFyIGU9bmcoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZnZyhkLGcuZGVwcykpe3JnKE5mLGMsZixkKTtyZXR1cm59fWJnfD1hO2UubWVtb2l6ZWRTdGF0ZT1yZyhiLGMsZixkKX1mdW5jdGlvbiB1ZyhhLGIpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBhPWEoKSxiKGEpLGZ1bmN0aW9uKCl7YihudWxsKX07aWYobnVsbCE9PWImJnZvaWQgMCE9PWIpcmV0dXJuIGE9YSgpLGIuY3VycmVudD1hLGZ1bmN0aW9uKCl7Yi5jdXJyZW50PW51bGx9fWZ1bmN0aW9uIHZnKCl7fVxuZnVuY3Rpb24gd2coYSxiLGMpezI1PmVnP3ZvaWQgMDp4KFwiMzAxXCIpO3ZhciBkPWEuYWx0ZXJuYXRlO2lmKGE9PT1YZnx8bnVsbCE9PWQmJmQ9PT1YZilpZihjZz0hMCxhPXtleHBpcmF0aW9uVGltZTpXZixhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxudWxsPT09ZGcmJihkZz1uZXcgTWFwKSxjPWRnLmdldChiKSx2b2lkIDA9PT1jKWRnLnNldChiLGEpO2Vsc2V7Zm9yKGI9YztudWxsIT09Yi5uZXh0OyliPWIubmV4dDtiLm5leHQ9YX1lbHNle29mKCk7dmFyIGU9bGYoKTtlPW1mKGUsYSk7dmFyIGY9e2V4cGlyYXRpb25UaW1lOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sZz1iLmxhc3Q7aWYobnVsbD09PWcpZi5uZXh0PWY7ZWxzZXt2YXIgaD1nLm5leHQ7bnVsbCE9PWgmJihmLm5leHQ9aCk7Zy5uZXh0PWZ9Yi5sYXN0PWY7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09XG5kfHwwPT09ZC5leHBpcmF0aW9uVGltZSkmJihkPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZCkpdHJ5e3ZhciBsPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1kKGwsYyk7Zi5lYWdlclJlZHVjZXI9ZDtmLmVhZ2VyU3RhdGU9aztpZihiZChrLGwpKXJldHVybn1jYXRjaChtKXt9ZmluYWxseXt9cWYoYSxlKX19XG52YXIga2c9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZmcsdXNlQ29udGV4dDpmZyx1c2VFZmZlY3Q6ZmcsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmZyx1c2VMYXlvdXRFZmZlY3Q6ZmcsdXNlTWVtbzpmZyx1c2VSZWR1Y2VyOmZnLHVzZVJlZjpmZyx1c2VTdGF0ZTpmZyx1c2VEZWJ1Z1ZhbHVlOmZnfSxpZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe21nKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gc2coNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBzZyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gc2coNCxQZnxTZixhLGIpfSxcbnVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1tZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1tZygpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPXdnLmJpbmQobnVsbCxYZixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9bWcoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7dmFyIGI9bWcoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLFxubGFzdFJlbmRlcmVkUmVkdWNlcjpvZyxsYXN0UmVuZGVyZWRTdGF0ZTphfTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19LHVzZURlYnVnVmFsdWU6dmd9LGpnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7dmFyIGM9bmcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJmdnKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VDb250ZXh0Ok0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRnKDUxNixVZnxUZixhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdGcoNCxQZnxTZix1Zy5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsXG5iKXtyZXR1cm4gdGcoNCxQZnxTZixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9bmcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJmdnKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOnBnLHVzZVJlZjpmdW5jdGlvbigpe3JldHVybiBuZygpLm1lbW9pemVkU3RhdGV9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBwZyhvZyxhKX0sdXNlRGVidWdWYWx1ZTp2Z30seGc9bnVsbCx5Zz1udWxsLHpnPSExO1xuZnVuY3Rpb24gQWcoYSxiKXt2YXIgYz1LKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9ZnVuY3Rpb24gQmcoYSxiKXtzd2l0Y2goYS50YWcpe2Nhc2UgNTp2YXIgYz1hLnR5cGU7Yj0xIT09Yi5ub2RlVHlwZXx8Yy50b0xvd2VyQ2FzZSgpIT09Yi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpP251bGw6YjtyZXR1cm4gbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgNjpyZXR1cm4gYj1cIlwiPT09YS5wZW5kaW5nUHJvcHN8fDMhPT1iLm5vZGVUeXBlP251bGw6YixudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIENnKGEpe2lmKHpnKXt2YXIgYj15ZztpZihiKXt2YXIgYz1iO2lmKCFCZyhhLGIpKXtiPURlKGMpO2lmKCFifHwhQmcoYSxiKSl7YS5lZmZlY3RUYWd8PTI7emc9ITE7eGc9YTtyZXR1cm59QWcoeGcsYyl9eGc9YTt5Zz1FZShiKX1lbHNlIGEuZWZmZWN0VGFnfD0yLHpnPSExLHhnPWF9fWZ1bmN0aW9uIERnKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTghPT1hLnRhZzspYT1hLnJldHVybjt4Zz1hfWZ1bmN0aW9uIEVnKGEpe2lmKGEhPT14ZylyZXR1cm4hMTtpZighemcpcmV0dXJuIERnKGEpLHpnPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYheGUoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPXlnO2I7KUFnKGEsYiksYj1EZShiKTtEZyhhKTt5Zz14Zz9EZShhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBGZygpe3lnPXhnPW51bGw7emc9ITF9XG52YXIgR2c9VGIuUmVhY3RDdXJyZW50T3duZXIscWc9ITE7ZnVuY3Rpb24gUyhhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP0VmKGIsbnVsbCxjLGQpOkRmKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIEhnKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjtJZyhiLGUpO2Q9aGcoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxKZyhhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UyhhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIEtnKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhVmUoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsTGcoYSxiLGcsZCxlLGYpO2E9WWUoYy50eXBlLG51bGwsZCxudWxsLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKGU8ZiYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpkZCxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBKZyhhLGIsZik7Yi5lZmZlY3RUYWd8PTE7YT1YZShnLGQsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gTGcoYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmZGQoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocWc9ITEsZTxmKT9KZyhhLGIsZik6TWcoYSxiLGMsZCxmKX1mdW5jdGlvbiBOZyhhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIE1nKGEsYixjLGQsZSl7dmFyIGY9SihjKT9JZTpILmN1cnJlbnQ7Zj1KZShiLGYpO0lnKGIsZSk7Yz1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gT2coYSxiLGMsZCxlKXtpZihKKGMpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7SWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLHZmKGIsYyxkLGUpLHhmKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBsPWcuY29udGV4dCxrPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPU0oayk6KGs9SihjKT9JZTpILmN1cnJlbnQsaz1KZShiLGspKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGwhPT1rKSYmd2YoYixnLGQsayk7UGc9ITE7dmFyIHQ9Yi5tZW1vaXplZFN0YXRlO2w9Zy5zdGF0ZT10O3ZhciBBPWIudXBkYXRlUXVldWU7bnVsbCE9PUEmJih5ZihiLEEsZCxnLGUpLGw9Yi5tZW1vaXplZFN0YXRlKTtoIT09ZHx8dCE9PWx8fEkuY3VycmVudHx8UGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoa2YoYixjLG0sZCksbD1iLm1lbW9pemVkU3RhdGUpLChoPVBnfHx1ZihiLGMsaCxkLHQsbCxrKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudHx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxNb3VudCYmZy5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1sKSxnLnByb3BzPWQsZy5zdGF0ZT1sLGcuY29udGV4dD1rLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpLGQ9ITEpfWVsc2UgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpMKGIudHlwZSxoKSxsPWcuY29udGV4dCxrPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09az9rPU0oayk6KGs9SihjKT9JZTpILmN1cnJlbnQsaz1KZShiLGspKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PVxudHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKSxQZz0hMSxsPWIubWVtb2l6ZWRTdGF0ZSx0PWcuc3RhdGU9bCxBPWIudXBkYXRlUXVldWUsbnVsbCE9PUEmJih5ZihiLEEsZCxnLGUpLHQ9Yi5tZW1vaXplZFN0YXRlKSxoIT09ZHx8bCE9PXR8fEkuY3VycmVudHx8UGc/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBtJiYoa2YoYixjLG0sZCksdD1iLm1lbW9pemVkU3RhdGUpLChtPVBnfHx1ZihiLGMsaCxkLGwsdCxrKSk/KHB8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09XG50eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQsdCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9XG50KSxnLnByb3BzPWQsZy5zdGF0ZT10LGcuY29udGV4dD1rLGQ9bSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBRZyhhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBRZyhhLGIsYyxkLGUsZil7TmcoYSxiKTt2YXIgZz0wIT09KGIuZWZmZWN0VGFnJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJlBlKGIsYywhMSksSmcoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7R2cuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5lZmZlY3RUYWd8PTE7bnVsbCE9PWEmJmc/KGIuY2hpbGQ9RGYoYixhLmNoaWxkLG51bGwsZiksYi5jaGlsZD1EZihiLG51bGwsaCxmKSk6UyhhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZQZShiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIFJnKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/TWUoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmTWUoYSxiLmNvbnRleHQsITEpO0pmKGEsYi5jb250YWluZXJJbmZvKX1cbmZ1bmN0aW9uIFNnKGEsYixjKXt2YXIgZD1iLm1vZGUsZT1iLnBlbmRpbmdQcm9wcyxmPWIubWVtb2l6ZWRTdGF0ZTtpZigwPT09KGIuZWZmZWN0VGFnJjY0KSl7Zj1udWxsO3ZhciBnPSExfWVsc2UgZj17dGltZWRPdXRBdDpudWxsIT09Zj9mLnRpbWVkT3V0QXQ6MH0sZz0hMCxiLmVmZmVjdFRhZyY9LTY1O2lmKG51bGw9PT1hKWlmKGcpe3ZhciBoPWUuZmFsbGJhY2s7YT1aZShudWxsLGQsMCxudWxsKTswPT09KGIubW9kZSYxKSYmKGEuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpO2Q9WmUoaCxkLGMsbnVsbCk7YS5zaWJsaW5nPWQ7Yz1hO2MucmV0dXJuPWQucmV0dXJuPWJ9ZWxzZSBjPWQ9RWYoYixudWxsLGUuY2hpbGRyZW4sYyk7ZWxzZSBudWxsIT09YS5tZW1vaXplZFN0YXRlPyhkPWEuY2hpbGQsaD1kLnNpYmxpbmcsZz8oYz1lLmZhbGxiYWNrLGU9WGUoZCxkLnBlbmRpbmdQcm9wcywwKSwwPT09KGIubW9kZSYxKSYmKGc9bnVsbCE9PVxuYi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxnIT09ZC5jaGlsZCYmKGUuY2hpbGQ9ZykpLGQ9ZS5zaWJsaW5nPVhlKGgsYyxoLmV4cGlyYXRpb25UaW1lKSxjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6Yz1kPURmKGIsZC5jaGlsZCxlLmNoaWxkcmVuLGMpKTooaD1hLmNoaWxkLGc/KGc9ZS5mYWxsYmFjayxlPVplKG51bGwsZCwwLG51bGwpLGUuY2hpbGQ9aCwwPT09KGIubW9kZSYxKSYmKGUuY2hpbGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQpLGQ9ZS5zaWJsaW5nPVplKGcsZCxjLG51bGwpLGQuZWZmZWN0VGFnfD0yLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpkPWM9RGYoYixoLGUuY2hpbGRyZW4sYykpLGIuc3RhdGVOb2RlPWEuc3RhdGVOb2RlO2IubWVtb2l6ZWRTdGF0ZT1mO2IuY2hpbGQ9YztyZXR1cm4gZH1cbmZ1bmN0aW9uIEpnKGEsYixjKXtudWxsIT09YSYmKGIuY29udGV4dERlcGVuZGVuY2llcz1hLmNvbnRleHREZXBlbmRlbmNpZXMpO2lmKGIuY2hpbGRFeHBpcmF0aW9uVGltZTxjKXJldHVybiBudWxsO251bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZD94KFwiMTUzXCIpOnZvaWQgMDtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9WGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9WGUoYSxhLnBlbmRpbmdQcm9wcyxhLmV4cGlyYXRpb25UaW1lKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gVGcoYSxiLGMpe3ZhciBkPWIuZXhwaXJhdGlvblRpbWU7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fEkuY3VycmVudClxZz0hMDtlbHNle2lmKGQ8Yyl7cWc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6UmcoYik7RmcoKTticmVhaztjYXNlIDU6TGYoYik7YnJlYWs7Y2FzZSAxOkooYi50eXBlKSYmT2UoYik7YnJlYWs7Y2FzZSA0OkpmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpVZyhiLGIubWVtb2l6ZWRQcm9wcy52YWx1ZSk7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtpZigwIT09ZCYmZD49YylyZXR1cm4gU2coYSxiLGMpO2I9SmcoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6bnVsbH19cmV0dXJuIEpnKGEsYixjKX19ZWxzZSBxZz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1cbmIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9SmUoYixILmN1cnJlbnQpO0lnKGIsYyk7ZT1oZyhudWxsLGIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZ2b2lkIDA9PT1lLiQkdHlwZW9mKXtiLnRhZz0xO2xnKCk7aWYoSihkKSl7dmFyIGY9ITA7T2UoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJmtmKGIsZCxnLGEpO2UudXBkYXRlcj10ZjtiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO3hmKGIsZCxhLGMpO2I9UWcobnVsbCxiLGQsITAsZixcbmMpfWVsc2UgYi50YWc9MCxTKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7Zj1iLnBlbmRpbmdQcm9wczthPWhmKGUpO2IudHlwZT1hO2U9Yi50YWc9V2UoYSk7Zj1MKGEsZik7Zz12b2lkIDA7c3dpdGNoKGUpe2Nhc2UgMDpnPU1nKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxOmc9T2cobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDExOmc9SGcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE0Omc9S2cobnVsbCxiLGEsTChhLnR5cGUsZiksZCxjKTticmVhaztkZWZhdWx0OngoXCIzMDZcIixhLFwiXCIpfXJldHVybiBnO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE1nKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLFxuZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkwoZCxlKSxPZyhhLGIsZCxlLGMpO2Nhc2UgMzpSZyhiKTtkPWIudXBkYXRlUXVldWU7bnVsbD09PWQ/eChcIjI4MlwiKTp2b2lkIDA7ZT1iLm1lbW9pemVkU3RhdGU7ZT1udWxsIT09ZT9lLmVsZW1lbnQ6bnVsbDt5ZihiLGQsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKUZnKCksYj1KZyhhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGU9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmUuaHlkcmF0ZSl5Zz1FZShiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSx4Zz1iLGU9emc9ITA7ZT8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD1FZihiLG51bGwsZCxjKSk6KFMoYSxiLGQsYyksRmcoKSk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gTGYoYiksbnVsbD09PWEmJkNnKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6bnVsbCxcbmc9ZS5jaGlsZHJlbix4ZShkLGUpP2c9bnVsbDpudWxsIT09ZiYmeGUoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksTmcoYSxiKSwxIT09YyYmYi5tb2RlJjEmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLGI9bnVsbCk6KFMoYSxiLGcsYyksYj1iLmNoaWxkKSxiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJkNnKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gU2coYSxiLGMpO2Nhc2UgNDpyZXR1cm4gSmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9RGYoYixudWxsLGQsYyk6UyhhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkwoZCxlKSxIZyhhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMsYyksYi5jaGlsZDtjYXNlIDg6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7VWcoYixmKTtpZihudWxsIT09Zyl7dmFyIGg9Zy52YWx1ZTtmPWJkKGgsZik/MDooXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzP2QuX2NhbGN1bGF0ZUNoYW5nZWRCaXRzKGgsZik6MTA3Mzc0MTgyMyl8MDtpZigwPT09Zil7aWYoZy5jaGlsZHJlbj09PWUuY2hpbGRyZW4mJiFJLmN1cnJlbnQpe2I9SmcoYSxiLGMpO2JyZWFrIGF9fWVsc2UgZm9yKGg9Yi5jaGlsZCxudWxsIT09aCYmKGgucmV0dXJuPWIpO251bGwhPT1oOyl7dmFyIGw9aC5jb250ZXh0RGVwZW5kZW5jaWVzO2lmKG51bGwhPT1sKXtnPWguY2hpbGQ7Zm9yKHZhciBrPWwuZmlyc3Q7bnVsbCE9PWs7KXtpZihrLmNvbnRleHQ9PT1kJiYwIT09XG4oay5vYnNlcnZlZEJpdHMmZikpezE9PT1oLnRhZyYmKGs9bmYoYyksay50YWc9c2YscGYoaCxrKSk7aC5leHBpcmF0aW9uVGltZTxjJiYoaC5leHBpcmF0aW9uVGltZT1jKTtrPWguYWx0ZXJuYXRlO251bGwhPT1rJiZrLmV4cGlyYXRpb25UaW1lPGMmJihrLmV4cGlyYXRpb25UaW1lPWMpO2s9Yztmb3IodmFyIG09aC5yZXR1cm47bnVsbCE9PW07KXt2YXIgcD1tLmFsdGVybmF0ZTtpZihtLmNoaWxkRXhwaXJhdGlvblRpbWU8ayltLmNoaWxkRXhwaXJhdGlvblRpbWU9ayxudWxsIT09cCYmcC5jaGlsZEV4cGlyYXRpb25UaW1lPGsmJihwLmNoaWxkRXhwaXJhdGlvblRpbWU9ayk7ZWxzZSBpZihudWxsIT09cCYmcC5jaGlsZEV4cGlyYXRpb25UaW1lPGspcC5jaGlsZEV4cGlyYXRpb25UaW1lPWs7ZWxzZSBicmVhazttPW0ucmV0dXJufWwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9az1rLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9cbm51bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfX1TKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLElnKGIsYyksZT1NKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1MKGUsYi5wZW5kaW5nUHJvcHMpLGY9TChlLnR5cGUsZiksS2coYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIExnKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PVxuZD9lOkwoZCxlKSxudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksYi50YWc9MSxKKGQpPyhhPSEwLE9lKGIpKTphPSExLElnKGIsYyksdmYoYixkLGUsYykseGYoYixkLGUsYyksUWcobnVsbCxiLGQsITAsYSxjKX14KFwiMTU2XCIpfXZhciBWZz17Y3VycmVudDpudWxsfSxXZz1udWxsLFhnPW51bGwsWWc9bnVsbDtmdW5jdGlvbiBVZyhhLGIpe3ZhciBjPWEudHlwZS5fY29udGV4dDtHKFZnLGMuX2N1cnJlbnRWYWx1ZSxhKTtjLl9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBaZyhhKXt2YXIgYj1WZy5jdXJyZW50O0YoVmcsYSk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBJZyhhLGIpe1dnPWE7WWc9WGc9bnVsbDt2YXIgYz1hLmNvbnRleHREZXBlbmRlbmNpZXM7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU+PWImJihxZz0hMCk7YS5jb250ZXh0RGVwZW5kZW5jaWVzPW51bGx9XG5mdW5jdGlvbiBNKGEsYil7aWYoWWchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKVlnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O251bGw9PT1YZz8obnVsbD09PVdnP3goXCIzMDhcIik6dm9pZCAwLFhnPWIsV2cuY29udGV4dERlcGVuZGVuY2llcz17Zmlyc3Q6YixleHBpcmF0aW9uVGltZTowfSk6WGc9WGcubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyICRnPTAscmY9MSxzZj0yLGFoPTMsUGc9ITE7ZnVuY3Rpb24gYmgoYSl7cmV0dXJue2Jhc2VTdGF0ZTphLGZpcnN0VXBkYXRlOm51bGwsbGFzdFVwZGF0ZTpudWxsLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fVxuZnVuY3Rpb24gY2goYSl7cmV0dXJue2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdFVwZGF0ZTphLmZpcnN0VXBkYXRlLGxhc3RVcGRhdGU6YS5sYXN0VXBkYXRlLGZpcnN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxsYXN0Q2FwdHVyZWRVcGRhdGU6bnVsbCxmaXJzdEVmZmVjdDpudWxsLGxhc3RFZmZlY3Q6bnVsbCxmaXJzdENhcHR1cmVkRWZmZWN0Om51bGwsbGFzdENhcHR1cmVkRWZmZWN0Om51bGx9fWZ1bmN0aW9uIG5mKGEpe3JldHVybntleHBpcmF0aW9uVGltZTphLHRhZzokZyxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBkaChhLGIpe251bGw9PT1hLmxhc3RVcGRhdGU/YS5maXJzdFVwZGF0ZT1hLmxhc3RVcGRhdGU9YjooYS5sYXN0VXBkYXRlLm5leHQ9YixhLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBwZihhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKG51bGw9PT1jKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO3ZhciBlPW51bGw7bnVsbD09PWQmJihkPWEudXBkYXRlUXVldWU9YmgoYS5tZW1vaXplZFN0YXRlKSl9ZWxzZSBkPWEudXBkYXRlUXVldWUsZT1jLnVwZGF0ZVF1ZXVlLG51bGw9PT1kP251bGw9PT1lPyhkPWEudXBkYXRlUXVldWU9YmgoYS5tZW1vaXplZFN0YXRlKSxlPWMudXBkYXRlUXVldWU9YmgoYy5tZW1vaXplZFN0YXRlKSk6ZD1hLnVwZGF0ZVF1ZXVlPWNoKGUpOm51bGw9PT1lJiYoZT1jLnVwZGF0ZVF1ZXVlPWNoKGQpKTtudWxsPT09ZXx8ZD09PWU/ZGgoZCxiKTpudWxsPT09ZC5sYXN0VXBkYXRlfHxudWxsPT09ZS5sYXN0VXBkYXRlPyhkaChkLGIpLGRoKGUsYikpOihkaChkLGIpLGUubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIGVoKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZTtjPW51bGw9PT1jP2EudXBkYXRlUXVldWU9YmgoYS5tZW1vaXplZFN0YXRlKTpmaChhLGMpO251bGw9PT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT9jLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yy5sYXN0Q2FwdHVyZWRVcGRhdGU9YjooYy5sYXN0Q2FwdHVyZWRVcGRhdGUubmV4dD1iLGMubGFzdENhcHR1cmVkVXBkYXRlPWIpfWZ1bmN0aW9uIGZoKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmI9PT1jLnVwZGF0ZVF1ZXVlJiYoYj1hLnVwZGF0ZVF1ZXVlPWNoKGIpKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGdoKGEsYixjLGQsZSxmKXtzd2l0Y2goYy50YWcpe2Nhc2UgcmY6cmV0dXJuIGE9Yy5wYXlsb2FkLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtjYXNlIGFoOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0yMDQ5fDY0O2Nhc2UgJGc6YT1jLnBheWxvYWQ7ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7aWYobnVsbD09PWV8fHZvaWQgMD09PWUpYnJlYWs7cmV0dXJuIG4oe30sZCxlKTtjYXNlIHNmOlBnPSEwfXJldHVybiBkfVxuZnVuY3Rpb24geWYoYSxiLGMsZCxlKXtQZz0hMTtiPWZoKGEsYik7Zm9yKHZhciBmPWIuYmFzZVN0YXRlLGc9bnVsbCxoPTAsbD1iLmZpcnN0VXBkYXRlLGs9ZjtudWxsIT09bDspe3ZhciBtPWwuZXhwaXJhdGlvblRpbWU7bTxlPyhudWxsPT09ZyYmKGc9bCxmPWspLGg8bSYmKGg9bSkpOihrPWdoKGEsYixsLGssYyxkKSxudWxsIT09bC5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD0zMixsLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0RWZmZWN0P2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWw6KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0RWZmZWN0PWwpKSk7bD1sLm5leHR9bT1udWxsO2ZvcihsPWIuZmlyc3RDYXB0dXJlZFVwZGF0ZTtudWxsIT09bDspe3ZhciBwPWwuZXhwaXJhdGlvblRpbWU7cDxlPyhudWxsPT09bSYmKG09bCxudWxsPT09ZyYmKGY9aykpLGg8cCYmKGg9cCkpOihrPWdoKGEsYixsLGssYyxkKSxudWxsIT09bC5jYWxsYmFjayYmKGEuZWZmZWN0VGFnfD1cbjMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RDYXB0dXJlZEVmZmVjdD9iLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bDooYi5sYXN0Q2FwdHVyZWRFZmZlY3QubmV4dEVmZmVjdD1sLGIubGFzdENhcHR1cmVkRWZmZWN0PWwpKSk7bD1sLm5leHR9bnVsbD09PWcmJihiLmxhc3RVcGRhdGU9bnVsbCk7bnVsbD09PW0/Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbDphLmVmZmVjdFRhZ3w9MzI7bnVsbD09PWcmJm51bGw9PT1tJiYoZj1rKTtiLmJhc2VTdGF0ZT1mO2IuZmlyc3RVcGRhdGU9ZztiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9bTthLmV4cGlyYXRpb25UaW1lPWg7YS5tZW1vaXplZFN0YXRlPWt9XG5mdW5jdGlvbiBoaChhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7aWgoYi5maXJzdEVmZmVjdCxjKTtiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO2loKGIuZmlyc3RDYXB0dXJlZEVmZmVjdCxjKTtiLmZpcnN0Q2FwdHVyZWRFZmZlY3Q9Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bnVsbH1mdW5jdGlvbiBpaChhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmNhbGxiYWNrO2lmKG51bGwhPT1jKXthLmNhbGxiYWNrPW51bGw7dmFyIGQ9YjtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MuY2FsbChkKX1hPWEubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBqaChhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmpjKGIpfX1mdW5jdGlvbiBraChhKXthLmVmZmVjdFRhZ3w9NH12YXIgbGg9dm9pZCAwLG1oPXZvaWQgMCxuaD12b2lkIDAsb2g9dm9pZCAwO2xoPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTttaD1mdW5jdGlvbigpe307XG5uaD1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPWEubWVtb2l6ZWRQcm9wcztpZihmIT09ZCl7dmFyIGc9Yi5zdGF0ZU5vZGU7SWYoTi5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9dmMoZyxmKTtkPXZjKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj0kZChnLGYpO2Q9JGQoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1iZShnLGYpO2Q9YmUoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz10ZSl9cWUoYyxkKTtnPWM9dm9pZCAwO3ZhciBoPW51bGw7Zm9yKGMgaW4gZilpZighZC5oYXNPd25Qcm9wZXJ0eShjKSYmZi5oYXNPd25Qcm9wZXJ0eShjKSYmbnVsbCE9ZltjXSlpZihcInN0eWxlXCI9PT1cbmMpe3ZhciBsPWZbY107Zm9yKGcgaW4gbClsLmhhc093blByb3BlcnR5KGcpJiYoaHx8KGg9e30pLGhbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWMmJlwiY2hpbGRyZW5cIiE9PWMmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmXCJhdXRvRm9jdXNcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goYyxudWxsKSk7Zm9yKGMgaW4gZCl7dmFyIGs9ZFtjXTtsPW51bGwhPWY/ZltjXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShjKSYmayE9PWwmJihudWxsIT1rfHxudWxsIT1sKSlpZihcInN0eWxlXCI9PT1jKWlmKGwpe2ZvcihnIGluIGwpIWwuaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChofHwoaD17fSksaFtnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmxbZ10hPT1rW2ddJiYoaHx8XG4oaD17fSksaFtnXT1rW2ddKX1lbHNlIGh8fChhfHwoYT1bXSksYS5wdXNoKGMsaCkpLGg9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Yz8oaz1rP2suX19odG1sOnZvaWQgMCxsPWw/bC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmwhPT1rJiYoYT1hfHxbXSkucHVzaChjLFwiXCIraykpOlwiY2hpbGRyZW5cIj09PWM/bD09PWt8fFwic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoYT1hfHxbXSkucHVzaChjLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiYocmEuaGFzT3duUHJvcGVydHkoYyk/KG51bGwhPWsmJnNlKGUsYyksYXx8bD09PWt8fChhPVtdKSk6KGE9YXx8W10pLnB1c2goYyxrKSl9aCYmKGE9YXx8W10pLnB1c2goXCJzdHlsZVwiLGgpO2U9YTsoYi51cGRhdGVRdWV1ZT1lKSYma2goYil9fTtvaD1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYma2goYil9O1xudmFyIHBoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O2Z1bmN0aW9uIHFoKGEsYil7dmFyIGM9Yi5zb3VyY2UsZD1iLnN0YWNrO251bGw9PT1kJiZudWxsIT09YyYmKGQ9amMoYykpO251bGwhPT1jJiZpYyhjLnR5cGUpO2I9Yi52YWx1ZTtudWxsIT09YSYmMT09PWEudGFnJiZpYyhhLnR5cGUpO3RyeXtjb25zb2xlLmVycm9yKGIpfWNhdGNoKGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBlO30pfX1mdW5jdGlvbiByaChhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtzaChhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiB0aChhLGIsYyl7Yz1jLnVwZGF0ZVF1ZXVlO2M9bnVsbCE9PWM/Yy5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWMpe3ZhciBkPWM9Yy5uZXh0O2Rve2lmKChkLnRhZyZhKSE9PU5mKXt2YXIgZT1kLmRlc3Ryb3k7ZC5kZXN0cm95PXZvaWQgMDt2b2lkIDAhPT1lJiZlKCl9KGQudGFnJmIpIT09TmYmJihlPWQuY3JlYXRlLGQuZGVzdHJveT1lKCkpO2Q9ZC5uZXh0fXdoaWxlKGQhPT1jKX19XG5mdW5jdGlvbiB1aChhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkLnN0eWxlLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9bmUoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1jLnRhZyYmbnVsbCE9PWMubWVtb2l6ZWRTdGF0ZSl7ZD1jLmNoaWxkLnNpYmxpbmc7ZC5yZXR1cm49YztjPWQ7Y29udGludWV9ZWxzZSBpZihudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxcbmMucmV0dXJuPT09YSlyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX1cbmZ1bmN0aW9uIHZoKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBSZSYmUmUoYSk7c3dpdGNoKGEudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YiYmKGI9Yi5sYXN0RWZmZWN0LG51bGwhPT1iKSl7dmFyIGM9Yj1iLm5leHQ7ZG97dmFyIGQ9Yy5kZXN0cm95O2lmKHZvaWQgMCE9PWQpe3ZhciBlPWE7dHJ5e2QoKX1jYXRjaChmKXtzaChlLGYpfX1jPWMubmV4dH13aGlsZShjIT09Yil9YnJlYWs7Y2FzZSAxOnJoKGEpO2I9YS5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2IucHJvcHM9YS5tZW1vaXplZFByb3BzLGIuc3RhdGU9YS5tZW1vaXplZFN0YXRlLGIuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtzaChhLGYpfWJyZWFrO2Nhc2UgNTpyaChhKTticmVhaztjYXNlIDQ6d2goYSl9fVxuZnVuY3Rpb24geGgoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiB5aChhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZih4aChiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59eChcIjE2MFwiKTtjPXZvaWQgMH12YXIgZD1iPXZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpiPWMuc3RhdGVOb2RlO2Q9ITE7YnJlYWs7Y2FzZSAzOmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OngoXCIxNjFcIil9Yy5lZmZlY3RUYWcmMTYmJihrZShiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8eGgoYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmXG4yKWNvbnRpbnVlIGI7aWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1mb3IodmFyIGU9YTs7KXtpZig1PT09ZS50YWd8fDY9PT1lLnRhZylpZihjKWlmKGQpe3ZhciBmPWIsZz1lLnN0YXRlTm9kZSxoPWM7OD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGgpOmYuaW5zZXJ0QmVmb3JlKGcsaCl9ZWxzZSBiLmluc2VydEJlZm9yZShlLnN0YXRlTm9kZSxjKTtlbHNlIGQ/KGc9YixoPWUuc3RhdGVOb2RlLDg9PT1nLm5vZGVUeXBlPyhmPWcucGFyZW50Tm9kZSxmLmluc2VydEJlZm9yZShoLGcpKTooZj1nLGYuYXBwZW5kQ2hpbGQoaCkpLGc9Zy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1nJiZ2b2lkIDAhPT1nfHxudWxsIT09Zi5vbmNsaWNrfHwoZi5vbmNsaWNrPXRlKSk6Yi5hcHBlbmRDaGlsZChlLnN0YXRlTm9kZSk7XG5lbHNlIGlmKDQhPT1lLnRhZyYmbnVsbCE9PWUuY2hpbGQpe2UuY2hpbGQucmV0dXJuPWU7ZT1lLmNoaWxkO2NvbnRpbnVlfWlmKGU9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWUuc2libGluZzspe2lmKG51bGw9PT1lLnJldHVybnx8ZS5yZXR1cm49PT1hKXJldHVybjtlPWUucmV0dXJufWUuc2libGluZy5yZXR1cm49ZS5yZXR1cm47ZT1lLnNpYmxpbmd9fVxuZnVuY3Rpb24gd2goYSl7Zm9yKHZhciBiPWEsYz0hMSxkPXZvaWQgMCxlPXZvaWQgMDs7KXtpZighYyl7Yz1iLnJldHVybjthOmZvcig7Oyl7bnVsbD09PWM/eChcIjE2MFwiKTp2b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6ZD1jLnN0YXRlTm9kZTtlPSExO2JyZWFrIGE7Y2FzZSAzOmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGE7Y2FzZSA0OmQ9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2JyZWFrIGF9Yz1jLnJldHVybn1jPSEwfWlmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXthOmZvcih2YXIgZj1iLGc9Zjs7KWlmKHZoKGcpLG51bGwhPT1nLmNoaWxkJiY0IT09Zy50YWcpZy5jaGlsZC5yZXR1cm49ZyxnPWcuY2hpbGQ7ZWxzZXtpZihnPT09ZilicmVhaztmb3IoO251bGw9PT1nLnNpYmxpbmc7KXtpZihudWxsPT09Zy5yZXR1cm58fGcucmV0dXJuPT09ZilicmVhayBhO2c9Zy5yZXR1cm59Zy5zaWJsaW5nLnJldHVybj1nLnJldHVybjtnPWcuc2libGluZ31lP1xuKGY9ZCxnPWIuc3RhdGVOb2RlLDg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChnKTpmLnJlbW92ZUNoaWxkKGcpKTpkLnJlbW92ZUNoaWxkKGIuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1iLnRhZyl7aWYobnVsbCE9PWIuY2hpbGQpe2Q9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlPSEwO2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKHZoKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uIHpoKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6dGgoUGYsUWYsYik7YnJlYWs7Y2FzZSAxOmJyZWFrO2Nhc2UgNTp2YXIgYz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXt2YXIgZD1iLm1lbW9pemVkUHJvcHM7YT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDt2YXIgZT1iLnR5cGUsZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtudWxsIT09ZiYmQ2UoYyxmLGUsYSxkLGIpfWJyZWFrO2Nhc2UgNjpudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2MlwiKTp2b2lkIDA7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPWIubWVtb2l6ZWRQcm9wczticmVhaztjYXNlIDM6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmM9Yi5tZW1vaXplZFN0YXRlO2Q9dm9pZCAwO2E9YjtudWxsPT09Yz9kPSExOihkPSEwLGE9Yi5jaGlsZCwwPT09Yy50aW1lZE91dEF0JiYoYy50aW1lZE91dEF0PWxmKCkpKTtudWxsIT09YSYmdWgoYSxkKTtjPVxuYi51cGRhdGVRdWV1ZTtpZihudWxsIT09Yyl7Yi51cGRhdGVRdWV1ZT1udWxsO3ZhciBnPWIuc3RhdGVOb2RlO251bGw9PT1nJiYoZz1iLnN0YXRlTm9kZT1uZXcgcGgpO2MuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYz1BaC5iaW5kKG51bGwsYixhKTtnLmhhcyhhKXx8KGcuYWRkKGEpLGEudGhlbihjLGMpKX0pfWJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX12YXIgQmg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gQ2goYSxiLGMpe2M9bmYoYyk7Yy50YWc9YWg7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe0RoKGQpO3FoKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gRWgoYSxiLGMpe2M9bmYoYyk7Yy50YWc9YWg7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PUZoP0ZoPW5ldyBTZXQoW3RoaXNdKTpGaC5hZGQodGhpcykpO3ZhciBjPWIudmFsdWUsZT1iLnN0YWNrO3FoKGEsYik7dGhpcy5jb21wb25lbnREaWRDYXRjaChjLHtjb21wb25lbnRTdGFjazpudWxsIT09ZT9lOlwiXCJ9KX0pO3JldHVybiBjfVxuZnVuY3Rpb24gR2goYSl7c3dpdGNoKGEudGFnKXtjYXNlIDE6SihhLnR5cGUpJiZLZShhKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAzOnJldHVybiBLZihhKSxMZShhKSxiPWEuZWZmZWN0VGFnLDAhPT0oYiY2NCk/eChcIjI4NVwiKTp2b2lkIDAsYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhO2Nhc2UgNTpyZXR1cm4gTWYoYSksbnVsbDtjYXNlIDEzOnJldHVybiBiPWEuZWZmZWN0VGFnLGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMTg6cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBLZihhKSxudWxsO2Nhc2UgMTA6cmV0dXJuIFpnKGEpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgSGg9VGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixJaD1UYi5SZWFjdEN1cnJlbnRPd25lcixKaD0xMDczNzQxODIyLEtoPSExLFQ9bnVsbCxMaD1udWxsLFU9MCxNaD0tMSxOaD0hMSxWPW51bGwsT2g9ITEsUGg9bnVsbCxRaD1udWxsLFJoPW51bGwsRmg9bnVsbDtmdW5jdGlvbiBTaCgpe2lmKG51bGwhPT1UKWZvcih2YXIgYT1ULnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDE6dmFyIGM9Yi50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1jJiZ2b2lkIDAhPT1jJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7YnJlYWs7Y2FzZSA1Ok1mKGIpO2JyZWFrO2Nhc2UgNDpLZihiKTticmVhaztjYXNlIDEwOlpnKGIpfWE9YS5yZXR1cm59TGg9bnVsbDtVPTA7TWg9LTE7Tmg9ITE7VD1udWxsfVxuZnVuY3Rpb24gVGgoKXtmb3IoO251bGwhPT1WOyl7dmFyIGE9Vi5lZmZlY3RUYWc7YSYxNiYma2UoVi5zdGF0ZU5vZGUsXCJcIik7aWYoYSYxMjgpe3ZhciBiPVYuYWx0ZXJuYXRlO251bGwhPT1iJiYoYj1iLnJlZixudWxsIT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IobnVsbCk6Yi5jdXJyZW50PW51bGwpKX1zd2l0Y2goYSYxNCl7Y2FzZSAyOnloKFYpO1YuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO3poKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgNDp6aChWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDg6YT1WLHdoKGEpLGEucmV0dXJuPW51bGwsYS5jaGlsZD1udWxsLGEubWVtb2l6ZWRTdGF0ZT1udWxsLGEudXBkYXRlUXVldWU9bnVsbCxhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsKX1WPVYubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBVaCgpe2Zvcig7bnVsbCE9PVY7KXtpZihWLmVmZmVjdFRhZyYyNTYpYTp7dmFyIGE9Vi5hbHRlcm5hdGUsYj1WO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aChPZixOZixiKTticmVhayBhO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOkwoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1icmVhayBhO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrIGE7ZGVmYXVsdDp4KFwiMTYzXCIpfX1WPVYubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBWaChhLGIpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYz1WLmVmZmVjdFRhZztpZihjJjM2KXt2YXIgZD1WLmFsdGVybmF0ZSxlPVYsZj1iO3N3aXRjaChlLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aChSZixTZixlKTticmVhaztjYXNlIDE6dmFyIGc9ZS5zdGF0ZU5vZGU7aWYoZS5lZmZlY3RUYWcmNClpZihudWxsPT09ZClnLmNvbXBvbmVudERpZE1vdW50KCk7ZWxzZXt2YXIgaD1lLmVsZW1lbnRUeXBlPT09ZS50eXBlP2QubWVtb2l6ZWRQcm9wczpMKGUudHlwZSxkLm1lbW9pemVkUHJvcHMpO2cuY29tcG9uZW50RGlkVXBkYXRlKGgsZC5tZW1vaXplZFN0YXRlLGcuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWQ9ZS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmaGgoZSxkLGcsZik7YnJlYWs7Y2FzZSAzOmQ9ZS51cGRhdGVRdWV1ZTtpZihudWxsIT09ZCl7Zz1udWxsO2lmKG51bGwhPT1lLmNoaWxkKXN3aXRjaChlLmNoaWxkLnRhZyl7Y2FzZSA1Omc9XG5lLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6Zz1lLmNoaWxkLnN0YXRlTm9kZX1oaChlLGQsZyxmKX1icmVhaztjYXNlIDU6Zj1lLnN0YXRlTm9kZTtudWxsPT09ZCYmZS5lZmZlY3RUYWcmNCYmd2UoZS50eXBlLGUubWVtb2l6ZWRQcm9wcykmJmYuZm9jdXMoKTticmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpicmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6eChcIjE2M1wiKX19YyYxMjgmJihlPVYucmVmLG51bGwhPT1lJiYoZj1WLnN0YXRlTm9kZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9lKGYpOmUuY3VycmVudD1mKSk7YyY1MTImJihQaD1hKTtWPVYubmV4dEVmZmVjdH19XG5mdW5jdGlvbiBXaChhLGIpe1JoPVFoPVBoPW51bGw7dmFyIGM9VztXPSEwO2Rve2lmKGIuZWZmZWN0VGFnJjUxMil7dmFyIGQ9ITEsZT12b2lkIDA7dHJ5e3ZhciBmPWI7dGgoVWYsTmYsZik7dGgoTmYsVGYsZil9Y2F0Y2goZyl7ZD0hMCxlPWd9ZCYmc2goYixlKX1iPWIubmV4dEVmZmVjdH13aGlsZShudWxsIT09Yik7Vz1jO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKTtYfHxXfHxZaCgxMDczNzQxODIzLCExKX1mdW5jdGlvbiBvZigpe251bGwhPT1RaCYmQmUoUWgpO251bGwhPT1SaCYmUmgoKX1cbmZ1bmN0aW9uIFpoKGEsYil7T2g9S2g9ITA7YS5jdXJyZW50PT09Yj94KFwiMTc3XCIpOnZvaWQgMDt2YXIgYz1hLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09Yz94KFwiMjYxXCIpOnZvaWQgMDthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBkPWIuZXhwaXJhdGlvblRpbWUsZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU7ZWYoYSxlPmQ/ZTpkKTtJaC5jdXJyZW50PW51bGw7ZD12b2lkIDA7MTxiLmVmZmVjdFRhZz9udWxsIT09Yi5sYXN0RWZmZWN0PyhiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iLGQ9Yi5maXJzdEVmZmVjdCk6ZD1iOmQ9Yi5maXJzdEVmZmVjdDt1ZT1CZDt2ZT1QZCgpO0JkPSExO2ZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO3ZhciBmPXZvaWQgMDt0cnl7VWgoKX1jYXRjaChoKXtlPSEwLGY9aH1lJiYobnVsbD09PVY/eChcIjE3OFwiKTp2b2lkIDAsc2goVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7XG5mPXZvaWQgMDt0cnl7VGgoKX1jYXRjaChoKXtlPSEwLGY9aH1lJiYobnVsbD09PVY/eChcIjE3OFwiKTp2b2lkIDAsc2goVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9UWQodmUpO3ZlPW51bGw7QmQ9ISF1ZTt1ZT1udWxsO2EuY3VycmVudD1iO2ZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO2Y9dm9pZCAwO3RyeXtWaChhLGMpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1pZihudWxsIT09ZCYmbnVsbCE9PVBoKXt2YXIgZz1XaC5iaW5kKG51bGwsYSxkKTtRaD1yLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIEFlKGcpfSk7Umg9Z31LaD1PaD0hMTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgUWUmJlFlKGIuc3RhdGVOb2RlKTtjPWIuZXhwaXJhdGlvblRpbWU7Yj1iLmNoaWxkRXhwaXJhdGlvblRpbWU7Yj1cbmI+Yz9iOmM7MD09PWImJihGaD1udWxsKTskaChhLGIpfVxuZnVuY3Rpb24gYWkoYSl7Zm9yKDs7KXt2YXIgYj1hLmFsdGVybmF0ZSxjPWEucmV0dXJuLGQ9YS5zaWJsaW5nO2lmKDA9PT0oYS5lZmZlY3RUYWcmMTAyNCkpe1Q9YTthOnt2YXIgZT1iO2I9YTt2YXIgZj1VO3ZhciBnPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmJyZWFrO2Nhc2UgMTY6YnJlYWs7Y2FzZSAxNTpjYXNlIDA6YnJlYWs7Y2FzZSAxOkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAzOktmKGIpO0xlKGIpO2c9Yi5zdGF0ZU5vZGU7Zy5wZW5kaW5nQ29udGV4dCYmKGcuY29udGV4dD1nLnBlbmRpbmdDb250ZXh0LGcucGVuZGluZ0NvbnRleHQ9bnVsbCk7aWYobnVsbD09PWV8fG51bGw9PT1lLmNoaWxkKUVnKGIpLGIuZWZmZWN0VGFnJj0tMzttaChiKTticmVhaztjYXNlIDU6TWYoYik7dmFyIGg9SWYoSGYuY3VycmVudCk7Zj1iLnR5cGU7aWYobnVsbCE9PWUmJm51bGwhPWIuc3RhdGVOb2RlKW5oKGUsYixmLGcsaCksZS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD1cbjEyOCk7ZWxzZSBpZihnKXt2YXIgbD1JZihOLmN1cnJlbnQpO2lmKEVnKGIpKXtnPWI7ZT1nLnN0YXRlTm9kZTt2YXIgaz1nLnR5cGUsbT1nLm1lbW9pemVkUHJvcHMscD1oO2VbRmFdPWc7ZVtHYV09bTtmPXZvaWQgMDtoPWs7c3dpdGNoKGgpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixlKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3Ioaz0wO2s8YWIubGVuZ3RoO2srKylFKGFiW2tdLGUpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpFKFwiZXJyb3JcIixlKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpFKFwiZXJyb3JcIixlKTtFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIsZSk7RShcInN1Ym1pdFwiLGUpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RShcInRvZ2dsZVwiLGUpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOndjKGUsbSk7RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmUuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O0UoXCJpbnZhbGlkXCIsZSk7c2UocCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmNlKGUsbSksRShcImludmFsaWRcIixlKSxzZShwLFwib25DaGFuZ2VcIil9cWUoaCxtKTtrPW51bGw7Zm9yKGYgaW4gbSltLmhhc093blByb3BlcnR5KGYpJiYobD1tW2ZdLFwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBsP2UudGV4dENvbnRlbnQhPT1sJiYoaz1bXCJjaGlsZHJlblwiLGxdKTpcIm51bWJlclwiPT09dHlwZW9mIGwmJmUudGV4dENvbnRlbnQhPT1cIlwiK2wmJihrPVtcImNoaWxkcmVuXCIsXCJcIitsXSk6cmEuaGFzT3duUHJvcGVydHkoZikmJm51bGwhPWwmJnNlKHAsZikpO3N3aXRjaChoKXtjYXNlIFwiaW5wdXRcIjpSYihlKTtBYyhlLG0sITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKGUpO2VlKGUsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJvcHRpb25cIjpicmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLm9uQ2xpY2smJlxuKGUub25jbGljaz10ZSl9Zj1rO2cudXBkYXRlUXVldWU9ZjtnPW51bGwhPT1mPyEwOiExO2cmJmtoKGIpfWVsc2V7bT1iO3A9ZjtlPWc7az05PT09aC5ub2RlVHlwZT9oOmgub3duZXJEb2N1bWVudDtsPT09ZmUuaHRtbCYmKGw9Z2UocCkpO2w9PT1mZS5odG1sP1wic2NyaXB0XCI9PT1wPyhlPWsuY3JlYXRlRWxlbWVudChcImRpdlwiKSxlLmlubmVySFRNTD1cIjxzY3JpcHQ+XFx4M2Mvc2NyaXB0PlwiLGs9ZS5yZW1vdmVDaGlsZChlLmZpcnN0Q2hpbGQpKTpcInN0cmluZ1wiPT09dHlwZW9mIGUuaXM/az1rLmNyZWF0ZUVsZW1lbnQocCx7aXM6ZS5pc30pOihrPWsuY3JlYXRlRWxlbWVudChwKSxcInNlbGVjdFwiPT09cCYmKHA9ayxlLm11bHRpcGxlP3AubXVsdGlwbGU9ITA6ZS5zaXplJiYocC5zaXplPWUuc2l6ZSkpKTprPWsuY3JlYXRlRWxlbWVudE5TKGwscCk7ZT1rO2VbRmFdPW07ZVtHYV09ZztsaChlLGIsITEsITEpO3A9ZTtrPWY7bT1nO3ZhciB0PWgsQT1yZShrLG0pO3N3aXRjaChrKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkUoXCJsb2FkXCIsXG5wKTtoPW07YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGg9MDtoPGFiLmxlbmd0aDtoKyspRShhYltoXSxwKTtoPW07YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLHApO2g9bTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpFKFwiZXJyb3JcIixwKTtFKFwibG9hZFwiLHApO2g9bTticmVhaztjYXNlIFwiZm9ybVwiOkUoXCJyZXNldFwiLHApO0UoXCJzdWJtaXRcIixwKTtoPW07YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOndjKHAsbSk7aD12YyhwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpoPSRkKHAsbSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOnAuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtoPW4oe30sbSx7dmFsdWU6dm9pZCAwfSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UocCxcbm0pO2g9YmUocCxtKTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0Omg9bX1xZShrLGgpO2w9dm9pZCAwO3ZhciB2PWssUj1wLHU9aDtmb3IobCBpbiB1KWlmKHUuaGFzT3duUHJvcGVydHkobCkpe3ZhciBxPXVbbF07XCJzdHlsZVwiPT09bD9vZShSLHEpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWw/KHE9cT9xLl9faHRtbDp2b2lkIDAsbnVsbCE9cSYmamUoUixxKSk6XCJjaGlsZHJlblwiPT09bD9cInN0cmluZ1wiPT09dHlwZW9mIHE/KFwidGV4dGFyZWFcIiE9PXZ8fFwiXCIhPT1xKSYma2UoUixxKTpcIm51bWJlclwiPT09dHlwZW9mIHEmJmtlKFIsXCJcIitxKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJlwiYXV0b0ZvY3VzXCIhPT1sJiYocmEuaGFzT3duUHJvcGVydHkobCk/bnVsbCE9cSYmc2UodCxsKTpudWxsIT1xJiZ0YyhSLGwscSxBKSl9c3dpdGNoKGspe2Nhc2UgXCJpbnB1dFwiOlJiKHApO1xuQWMocCxtLCExKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpSYihwKTtlZShwLG0pO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1tLnZhbHVlJiZwLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIit1YyhtLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmg9cDtoLm11bHRpcGxlPSEhbS5tdWx0aXBsZTtwPW0udmFsdWU7bnVsbCE9cD9hZShoLCEhbS5tdWx0aXBsZSxwLCExKTpudWxsIT1tLmRlZmF1bHRWYWx1ZSYmYWUoaCwhIW0ubXVsdGlwbGUsbS5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGgub25DbGljayYmKHAub25jbGljaz10ZSl9KGc9d2UoZixnKSkmJmtoKGIpO2Iuc3RhdGVOb2RlPWV9bnVsbCE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZSBudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDA7YnJlYWs7Y2FzZSA2OmUmJm51bGwhPWIuc3RhdGVOb2RlP29oKGUsYixlLm1lbW9pemVkUHJvcHMsZyk6KFwic3RyaW5nXCIhPT1cbnR5cGVvZiBnJiYobnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjZcIik6dm9pZCAwKSxlPUlmKEhmLmN1cnJlbnQpLElmKE4uY3VycmVudCksRWcoYik/KGc9YixmPWcuc3RhdGVOb2RlLGU9Zy5tZW1vaXplZFByb3BzLGZbRmFdPWcsKGc9Zi5ub2RlVmFsdWUhPT1lKSYma2goYikpOihmPWIsZz0oOT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGcpLGdbRmFdPWIsZi5zdGF0ZU5vZGU9ZykpO2JyZWFrO2Nhc2UgMTE6YnJlYWs7Y2FzZSAxMzpnPWIubWVtb2l6ZWRTdGF0ZTtpZigwIT09KGIuZWZmZWN0VGFnJjY0KSl7Yi5leHBpcmF0aW9uVGltZT1mO1Q9YjticmVhayBhfWc9bnVsbCE9PWc7Zj1udWxsIT09ZSYmbnVsbCE9PWUubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmIWcmJmYmJihlPWUuY2hpbGQuc2libGluZyxudWxsIT09ZSYmKGg9Yi5maXJzdEVmZmVjdCxudWxsIT09aD8oYi5maXJzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1oKTooYi5maXJzdEVmZmVjdD1cbmIubGFzdEVmZmVjdD1lLGUubmV4dEVmZmVjdD1udWxsKSxlLmVmZmVjdFRhZz04KSk7aWYoZ3x8ZiliLmVmZmVjdFRhZ3w9NDticmVhaztjYXNlIDc6YnJlYWs7Y2FzZSA4OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSA0OktmKGIpO21oKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYik7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTQ6YnJlYWs7Y2FzZSAxNzpKKGIudHlwZSkmJktlKGIpO2JyZWFrO2Nhc2UgMTg6YnJlYWs7ZGVmYXVsdDp4KFwiMTU2XCIpfVQ9bnVsbH1iPWE7aWYoMT09PVV8fDEhPT1iLmNoaWxkRXhwaXJhdGlvblRpbWUpe2c9MDtmb3IoZj1iLmNoaWxkO251bGwhPT1mOyllPWYuZXhwaXJhdGlvblRpbWUsaD1mLmNoaWxkRXhwaXJhdGlvblRpbWUsZT5nJiYoZz1lKSxoPmcmJihnPWgpLGY9Zi5zaWJsaW5nO2IuY2hpbGRFeHBpcmF0aW9uVGltZT1nfWlmKG51bGwhPT1UKXJldHVybiBUO251bGwhPT1jJiYwPT09KGMuZWZmZWN0VGFnJjEwMjQpJiYobnVsbD09PWMuZmlyc3RFZmZlY3QmJlxuKGMuZmlyc3RFZmZlY3Q9YS5maXJzdEVmZmVjdCksbnVsbCE9PWEubGFzdEVmZmVjdCYmKG51bGwhPT1jLmxhc3RFZmZlY3QmJihjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxjLmxhc3RFZmZlY3Q9YS5sYXN0RWZmZWN0KSwxPGEuZWZmZWN0VGFnJiYobnVsbCE9PWMubGFzdEVmZmVjdD9jLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1hOmMuZmlyc3RFZmZlY3Q9YSxjLmxhc3RFZmZlY3Q9YSkpfWVsc2V7YT1HaChhLFUpO2lmKG51bGwhPT1hKXJldHVybiBhLmVmZmVjdFRhZyY9MTAyMyxhO251bGwhPT1jJiYoYy5maXJzdEVmZmVjdD1jLmxhc3RFZmZlY3Q9bnVsbCxjLmVmZmVjdFRhZ3w9MTAyNCl9aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBiaShhKXt2YXIgYj1UZyhhLmFsdGVybmF0ZSxhLFUpO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09YiYmKGI9YWkoYSkpO0loLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIGNpKGEsYil7S2g/eChcIjI0M1wiKTp2b2lkIDA7b2YoKTtLaD0hMDt2YXIgYz1IaC5jdXJyZW50O0hoLmN1cnJlbnQ9a2c7dmFyIGQ9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjtpZihkIT09VXx8YSE9PUxofHxudWxsPT09VClTaCgpLExoPWEsVT1kLFQ9WGUoTGguY3VycmVudCxudWxsLFUpLGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGU9ITE7ZG97dHJ5e2lmKGIpZm9yKDtudWxsIT09VCYmIWRpKCk7KVQ9YmkoVCk7ZWxzZSBmb3IoO251bGwhPT1UOylUPWJpKFQpfWNhdGNoKHUpe2lmKFlnPVhnPVdnPW51bGwsbGcoKSxudWxsPT09VCllPSEwLERoKHUpO2Vsc2V7bnVsbD09PVQ/eChcIjI3MVwiKTp2b2lkIDA7dmFyIGY9VCxnPWYucmV0dXJuO2lmKG51bGw9PT1nKWU9ITAsRGgodSk7ZWxzZXthOnt2YXIgaD1hLGw9ZyxrPWYsbT11O2c9VTtrLmVmZmVjdFRhZ3w9MTAyNDtrLmZpcnN0RWZmZWN0PWsubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1cbm0mJlwib2JqZWN0XCI9PT10eXBlb2YgbSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIG0udGhlbil7dmFyIHA9bTttPWw7dmFyIHQ9LTEsQT0tMTtkb3tpZigxMz09PW0udGFnKXt2YXIgdj1tLmFsdGVybmF0ZTtpZihudWxsIT09diYmKHY9di5tZW1vaXplZFN0YXRlLG51bGwhPT12KSl7QT0xMCooMTA3Mzc0MTgyMi12LnRpbWVkT3V0QXQpO2JyZWFrfXY9bS5wZW5kaW5nUHJvcHMubWF4RHVyYXRpb247aWYoXCJudW1iZXJcIj09PXR5cGVvZiB2KWlmKDA+PXYpdD0wO2Vsc2UgaWYoLTE9PT10fHx2PHQpdD12fW09bS5yZXR1cm59d2hpbGUobnVsbCE9PW0pO209bDtkb3tpZih2PTEzPT09bS50YWcpdj12b2lkIDA9PT1tLm1lbW9pemVkUHJvcHMuZmFsbGJhY2s/ITE6bnVsbD09PW0ubWVtb2l6ZWRTdGF0ZTtpZih2KXtsPW0udXBkYXRlUXVldWU7bnVsbD09PWw/KGw9bmV3IFNldCxsLmFkZChwKSxtLnVwZGF0ZVF1ZXVlPWwpOmwuYWRkKHApO2lmKDA9PT0obS5tb2RlJjEpKXttLmVmZmVjdFRhZ3w9XG42NDtrLmVmZmVjdFRhZyY9LTE5NTc7MT09PWsudGFnJiYobnVsbD09PWsuYWx0ZXJuYXRlP2sudGFnPTE3OihnPW5mKDEwNzM3NDE4MjMpLGcudGFnPXNmLHBmKGssZykpKTtrLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7YnJlYWsgYX1rPWg7bD1nO3ZhciBSPWsucGluZ0NhY2hlO251bGw9PT1SPyhSPWsucGluZ0NhY2hlPW5ldyBCaCx2PW5ldyBTZXQsUi5zZXQocCx2KSk6KHY9Ui5nZXQocCksdm9pZCAwPT09diYmKHY9bmV3IFNldCxSLnNldChwLHYpKSk7di5oYXMobCl8fCh2LmFkZChsKSxrPWVpLmJpbmQobnVsbCxrLHAsbCkscC50aGVuKGssaykpOy0xPT09dD9oPTEwNzM3NDE4MjM6KC0xPT09QSYmKEE9MTAqKDEwNzM3NDE4MjItZ2YoaCxnKSktNUUzKSxoPUErdCk7MDw9aCYmTWg8aCYmKE1oPWgpO20uZWZmZWN0VGFnfD0yMDQ4O20uZXhwaXJhdGlvblRpbWU9ZzticmVhayBhfW09bS5yZXR1cm59d2hpbGUobnVsbCE9PW0pO209RXJyb3IoKGljKGsudHlwZSl8fFwiQSBSZWFjdCBjb21wb25lbnRcIikrXG5cIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK2pjKGspKX1OaD0hMDttPWpoKG0sayk7aD1sO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmguZWZmZWN0VGFnfD0yMDQ4O2guZXhwaXJhdGlvblRpbWU9ZztnPUNoKGgsbSxnKTtlaChoLGcpO2JyZWFrIGE7Y2FzZSAxOmlmKHQ9bSxBPWgudHlwZSxrPWguc3RhdGVOb2RlLDA9PT0oaC5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEEuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09ayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGsuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoaykpKSl7aC5lZmZlY3RUYWd8PTIwNDg7XG5oLmV4cGlyYXRpb25UaW1lPWc7Zz1FaChoLHQsZyk7ZWgoaCxnKTticmVhayBhfX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKX1UPWFpKGYpO2NvbnRpbnVlfX19YnJlYWt9d2hpbGUoMSk7S2g9ITE7SGguY3VycmVudD1jO1lnPVhnPVdnPW51bGw7bGcoKTtpZihlKUxoPW51bGwsYS5maW5pc2hlZFdvcms9bnVsbDtlbHNlIGlmKG51bGwhPT1UKWEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZXtjPWEuY3VycmVudC5hbHRlcm5hdGU7bnVsbD09PWM/eChcIjI4MVwiKTp2b2lkIDA7TGg9bnVsbDtpZihOaCl7ZT1hLmxhdGVzdFBlbmRpbmdUaW1lO2Y9YS5sYXRlc3RTdXNwZW5kZWRUaW1lO2c9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDAhPT1lJiZlPGR8fDAhPT1mJiZmPGR8fDAhPT1nJiZnPGQpe2ZmKGEsZCk7ZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwtMSk7cmV0dXJufWlmKCFhLmRpZEVycm9yJiZiKXthLmRpZEVycm9yPSEwO2Q9YS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1kO1xuYj1hLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7ZmkoYSxjLGQsYiwtMSk7cmV0dXJufX1iJiYtMSE9PU1oPyhmZihhLGQpLGI9MTAqKDEwNzM3NDE4MjItZ2YoYSxkKSksYjxNaCYmKE1oPWIpLGI9MTAqKDEwNzM3NDE4MjItbGYoKSksYj1NaC1iLGZpKGEsYyxkLGEuZXhwaXJhdGlvblRpbWUsMD5iPzA6YikpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1kLGEuZmluaXNoZWRXb3JrPWMpfX1cbmZ1bmN0aW9uIHNoKGEsYil7Zm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7c3dpdGNoKGMudGFnKXtjYXNlIDE6dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUZofHwhRmguaGFzKGQpKSl7YT1qaChiLGEpO2E9RWgoYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59YnJlYWs7Y2FzZSAzOmE9amgoYixhKTthPUNoKGMsYSwxMDczNzQxODIzKTtwZihjLGEpO3FmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWM9Yy5yZXR1cm59Mz09PWEudGFnJiYoYz1qaChiLGEpLGM9Q2goYSxjLDEwNzM3NDE4MjMpLHBmKGEsYykscWYoYSwxMDczNzQxODIzKSl9XG5mdW5jdGlvbiBtZihhLGIpe3ZhciBjPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwoKSxkPXZvaWQgMDtpZigwPT09KGIubW9kZSYxKSlkPTEwNzM3NDE4MjM7ZWxzZSBpZihLaCYmIU9oKWQ9VTtlbHNle3N3aXRjaChjKXtjYXNlIHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk6ZD0xMDczNzQxODIzO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eTpkPTEwNzM3NDE4MjItMTAqKCgoMTA3Mzc0MTgyMi1hKzE1KS8xMHwwKSsxKTticmVhaztjYXNlIHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk6ZD0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItYSs1MDApLzI1fDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Mb3dQcmlvcml0eTpjYXNlIHIudW5zdGFibGVfSWRsZVByaW9yaXR5OmQ9MTticmVhaztkZWZhdWx0OngoXCIzMTNcIil9bnVsbCE9PUxoJiZkPT09VSYmLS1kfWM9PT1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5JiZcbigwPT09Z2l8fGQ8Z2kpJiYoZ2k9ZCk7cmV0dXJuIGR9ZnVuY3Rpb24gZWkoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtpZihudWxsIT09TGgmJlU9PT1jKUxoPW51bGw7ZWxzZSBpZihiPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXRlc3RTdXNwZW5kZWRUaW1lLDAhPT1iJiZjPD1iJiZjPj1kKXthLmRpZEVycm9yPSExO2I9YS5sYXRlc3RQaW5nZWRUaW1lO2lmKDA9PT1ifHxiPmMpYS5sYXRlc3RQaW5nZWRUaW1lPWM7ZGYoYyxhKTtjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJlhoKGEsYyl9fWZ1bmN0aW9uIEFoKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbCE9PWMmJmMuZGVsZXRlKGIpO2I9bGYoKTtiPW1mKGIsYSk7YT1oaShhLGIpO251bGwhPT1hJiYoY2YoYSxiKSxiPWEuZXhwaXJhdGlvblRpbWUsMCE9PWImJlhoKGEsYikpfVxuZnVuY3Rpb24gaGkoYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBkPWEucmV0dXJuLGU9bnVsbDtpZihudWxsPT09ZCYmMz09PWEudGFnKWU9YS5zdGF0ZU5vZGU7ZWxzZSBmb3IoO251bGwhPT1kOyl7Yz1kLmFsdGVybmF0ZTtkLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGQuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7aWYobnVsbD09PWQucmV0dXJuJiYzPT09ZC50YWcpe2U9ZC5zdGF0ZU5vZGU7YnJlYWt9ZD1kLnJldHVybn1yZXR1cm4gZX1cbmZ1bmN0aW9uIHFmKGEsYil7YT1oaShhLGIpO251bGwhPT1hJiYoIUtoJiYwIT09VSYmYj5VJiZTaCgpLGNmKGEsYiksS2gmJiFPaCYmTGg9PT1hfHxYaChhLGEuZXhwaXJhdGlvblRpbWUpLGlpPmppJiYoaWk9MCx4KFwiMTg1XCIpKSl9ZnVuY3Rpb24ga2koYSxiLGMsZCxlKXtyZXR1cm4gci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9dmFyIGxpPW51bGwsWT1udWxsLG1pPTAsbmk9dm9pZCAwLFc9ITEsb2k9bnVsbCxaPTAsZ2k9MCxwaT0hMSxxaT1udWxsLFg9ITEscmk9ITEsc2k9bnVsbCx0aT1yLnVuc3RhYmxlX25vdygpLHVpPTEwNzM3NDE4MjItKHRpLzEwfDApLHZpPXVpLGppPTUwLGlpPTAsd2k9bnVsbDtmdW5jdGlvbiB4aSgpe3VpPTEwNzM3NDE4MjItKChyLnVuc3RhYmxlX25vdygpLXRpKS8xMHwwKX1cbmZ1bmN0aW9uIHlpKGEsYil7aWYoMCE9PW1pKXtpZihiPG1pKXJldHVybjtudWxsIT09bmkmJnIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2sobmkpfW1pPWI7YT1yLnVuc3RhYmxlX25vdygpLXRpO25pPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayh6aSx7dGltZW91dDoxMCooMTA3Mzc0MTgyMi1iKS1hfSl9ZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXthLmV4cGlyYXRpb25UaW1lPWQ7MCE9PWV8fGRpKCk/MDxlJiYoYS50aW1lb3V0SGFuZGxlPXllKEFpLmJpbmQobnVsbCxhLGIsYyksZSkpOihhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jLGEuZmluaXNoZWRXb3JrPWIpfWZ1bmN0aW9uIEFpKGEsYixjKXthLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT1jO2EuZmluaXNoZWRXb3JrPWI7eGkoKTt2aT11aTtCaShhLGMpfWZ1bmN0aW9uICRoKGEsYil7YS5leHBpcmF0aW9uVGltZT1iO2EuZmluaXNoZWRXb3JrPW51bGx9XG5mdW5jdGlvbiBsZigpe2lmKFcpcmV0dXJuIHZpO0NpKCk7aWYoMD09PVp8fDE9PT1aKXhpKCksdmk9dWk7cmV0dXJuIHZpfWZ1bmN0aW9uIFhoKGEsYil7bnVsbD09PWEubmV4dFNjaGVkdWxlZFJvb3Q/KGEuZXhwaXJhdGlvblRpbWU9YixudWxsPT09WT8obGk9WT1hLGEubmV4dFNjaGVkdWxlZFJvb3Q9YSk6KFk9WS5uZXh0U2NoZWR1bGVkUm9vdD1hLFkubmV4dFNjaGVkdWxlZFJvb3Q9bGkpKTpiPmEuZXhwaXJhdGlvblRpbWUmJihhLmV4cGlyYXRpb25UaW1lPWIpO1d8fChYP3JpJiYob2k9YSxaPTEwNzM3NDE4MjMsRGkoYSwxMDczNzQxODIzLCExKSk6MTA3Mzc0MTgyMz09PWI/WWgoMTA3Mzc0MTgyMywhMSk6eWkoYSxiKSl9XG5mdW5jdGlvbiBDaSgpe3ZhciBhPTAsYj1udWxsO2lmKG51bGwhPT1ZKWZvcih2YXIgYz1ZLGQ9bGk7bnVsbCE9PWQ7KXt2YXIgZT1kLmV4cGlyYXRpb25UaW1lO2lmKDA9PT1lKXtudWxsPT09Y3x8bnVsbD09PVk/eChcIjI0NFwiKTp2b2lkIDA7aWYoZD09PWQubmV4dFNjaGVkdWxlZFJvb3Qpe2xpPVk9ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgaWYoZD09PWxpKWxpPWU9ZC5uZXh0U2NoZWR1bGVkUm9vdCxZLm5leHRTY2hlZHVsZWRSb290PWUsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Vsc2UgaWYoZD09PVkpe1k9YztZLm5leHRTY2hlZHVsZWRSb290PWxpO2QubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGMubmV4dFNjaGVkdWxlZFJvb3Q9ZC5uZXh0U2NoZWR1bGVkUm9vdCxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZD1jLm5leHRTY2hlZHVsZWRSb290fWVsc2V7ZT5hJiYoYT1lLGI9ZCk7aWYoZD09PVkpYnJlYWs7aWYoMTA3Mzc0MTgyMz09PVxuYSlicmVhaztjPWQ7ZD1kLm5leHRTY2hlZHVsZWRSb290fX1vaT1iO1o9YX12YXIgRWk9ITE7ZnVuY3Rpb24gZGkoKXtyZXR1cm4gRWk/ITA6ci51bnN0YWJsZV9zaG91bGRZaWVsZCgpP0VpPSEwOiExfWZ1bmN0aW9uIHppKCl7dHJ5e2lmKCFkaSgpJiZudWxsIT09bGkpe3hpKCk7dmFyIGE9bGk7ZG97dmFyIGI9YS5leHBpcmF0aW9uVGltZTswIT09YiYmdWk8PWImJihhLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPXVpKTthPWEubmV4dFNjaGVkdWxlZFJvb3R9d2hpbGUoYSE9PWxpKX1ZaCgwLCEwKX1maW5hbGx5e0VpPSExfX1cbmZ1bmN0aW9uIFloKGEsYil7Q2koKTtpZihiKWZvcih4aSgpLHZpPXVpO251bGwhPT1vaSYmMCE9PVomJmE8PVomJiEoRWkmJnVpPlopOylEaShvaSxaLHVpPlopLENpKCkseGkoKSx2aT11aTtlbHNlIGZvcig7bnVsbCE9PW9pJiYwIT09WiYmYTw9WjspRGkob2ksWiwhMSksQ2koKTtiJiYobWk9MCxuaT1udWxsKTswIT09WiYmeWkob2ksWik7aWk9MDt3aT1udWxsO2lmKG51bGwhPT1zaSlmb3IoYT1zaSxzaT1udWxsLGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTt0cnl7Yy5fb25Db21wbGV0ZSgpfWNhdGNoKGQpe3BpfHwocGk9ITAscWk9ZCl9fWlmKHBpKXRocm93IGE9cWkscWk9bnVsbCxwaT0hMSxhO31mdW5jdGlvbiBCaShhLGIpe1c/eChcIjI1M1wiKTp2b2lkIDA7b2k9YTtaPWI7RGkoYSxiLCExKTtZaCgxMDczNzQxODIzLCExKX1cbmZ1bmN0aW9uIERpKGEsYixjKXtXP3goXCIyNDVcIik6dm9pZCAwO1c9ITA7aWYoYyl7dmFyIGQ9YS5maW5pc2hlZFdvcms7bnVsbCE9PWQ/RmkoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSx6ZShkKSksY2koYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiYoZGkoKT9hLmZpbmlzaGVkV29yaz1kOkZpKGEsZCxiKSkpfWVsc2UgZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJkZpKGEsZCxiKSk7Vz0hMX1cbmZ1bmN0aW9uIEZpKGEsYixjKXt2YXIgZD1hLmZpcnN0QmF0Y2g7aWYobnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1jJiYobnVsbD09PXNpP3NpPVtkXTpzaS5wdXNoKGQpLGQuX2RlZmVyKSl7YS5maW5pc2hlZFdvcms9YjthLmV4cGlyYXRpb25UaW1lPTA7cmV0dXJufWEuZmluaXNoZWRXb3JrPW51bGw7YT09PXdpP2lpKys6KHdpPWEsaWk9MCk7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxmdW5jdGlvbigpe1poKGEsYil9KX1mdW5jdGlvbiBEaChhKXtudWxsPT09b2k/eChcIjI0NlwiKTp2b2lkIDA7b2kuZXhwaXJhdGlvblRpbWU9MDtwaXx8KHBpPSEwLHFpPWEpfWZ1bmN0aW9uIEdpKGEsYil7dmFyIGM9WDtYPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5eyhYPWMpfHxXfHxZaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBIaShhLGIpe2lmKFgmJiFyaSl7cmk9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7cmk9ITF9fXJldHVybiBhKGIpfWZ1bmN0aW9uIElpKGEsYixjKXtYfHxXfHwwPT09Z2l8fChZaChnaSwhMSksZ2k9MCk7dmFyIGQ9WDtYPSEwO3RyeXtyZXR1cm4gci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxmdW5jdGlvbigpe3JldHVybiBhKGIsYyl9KX1maW5hbGx5eyhYPWQpfHxXfHxZaCgxMDczNzQxODIzLCExKX19XG5mdW5jdGlvbiBKaShhLGIsYyxkLGUpe3ZhciBmPWIuY3VycmVudDthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6ezI9PT1lZChjKSYmMT09PWMudGFnP3ZvaWQgMDp4KFwiMTcwXCIpO3ZhciBnPWM7ZG97c3dpdGNoKGcudGFnKXtjYXNlIDM6Zz1nLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEooZy50eXBlKSl7Zz1nLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1nPWcucmV0dXJufXdoaWxlKG51bGwhPT1nKTt4KFwiMTcxXCIpO2c9dm9pZCAwfWlmKDE9PT1jLnRhZyl7dmFyIGg9Yy50eXBlO2lmKEooaCkpe2M9TmUoYyxoLGcpO2JyZWFrIGF9fWM9Z31lbHNlIGM9SGU7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj1lO2U9bmYoZCk7ZS5wYXlsb2FkPXtlbGVtZW50OmF9O2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJihlLmNhbGxiYWNrPWIpO1xub2YoKTtwZihmLGUpO3FmKGYsZCk7cmV0dXJuIGR9ZnVuY3Rpb24gS2koYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9bGYoKTtlPW1mKGYsZSk7cmV0dXJuIEppKGEsYixjLGUsZCl9ZnVuY3Rpb24gTGkoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBNaShhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOldiLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuQWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjp5YyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9S2EoZCk7ZT92b2lkIDA6eChcIjkwXCIpO1NiKGQpO3ljKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmYWUoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtcbmZ1bmN0aW9uIE5pKGEpe3ZhciBiPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1sZigpKzUwMCkvMjV8MCkrMSk7Yj49SmgmJihiPUpoLTEpO3RoaXMuX2V4cGlyYXRpb25UaW1lPUpoPWI7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1OaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDp4KFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcgT2k7SmkoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1xuTmkucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tcGxldGUpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuTmkucHJvdG90eXBlLmNvbW1pdD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxiPWEuZmlyc3RCYXRjaDt0aGlzLl9kZWZlciYmbnVsbCE9PWI/dm9pZCAwOngoXCIyNTFcIik7aWYodGhpcy5faGFzQ2hpbGRyZW4pe3ZhciBjPXRoaXMuX2V4cGlyYXRpb25UaW1lO2lmKGIhPT10aGlzKXt0aGlzLl9oYXNDaGlsZHJlbiYmKGM9dGhpcy5fZXhwaXJhdGlvblRpbWU9Yi5fZXhwaXJhdGlvblRpbWUsdGhpcy5yZW5kZXIodGhpcy5fY2hpbGRyZW4pKTtmb3IodmFyIGQ9bnVsbCxlPWI7ZSE9PXRoaXM7KWQ9ZSxlPWUuX25leHQ7bnVsbD09PWQ/eChcIjI1MVwiKTp2b2lkIDA7ZC5fbmV4dD1lLl9uZXh0O3RoaXMuX25leHQ9YjthLmZpcnN0QmF0Y2g9dGhpc310aGlzLl9kZWZlcj0hMTtCaShhLGMpO2I9dGhpcy5fbmV4dDt0aGlzLl9uZXh0PW51bGw7Yj1hLmZpcnN0QmF0Y2g9YjtudWxsIT09YiYmYi5faGFzQ2hpbGRyZW4mJmIucmVuZGVyKGIuX2NoaWxkcmVuKX1lbHNlIHRoaXMuX25leHQ9XG5udWxsLHRoaXMuX2RlZmVyPSExfTtOaS5wcm90b3R5cGUuX29uQ29tcGxldGU9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tcGxldGUpe3RoaXMuX2RpZENvbXBsZXRlPSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKykoMCxhW2JdKSgpfX07ZnVuY3Rpb24gT2koKXt0aGlzLl9jYWxsYmFja3M9bnVsbDt0aGlzLl9kaWRDb21taXQ9ITE7dGhpcy5fb25Db21taXQ9dGhpcy5fb25Db21taXQuYmluZCh0aGlzKX1PaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21taXQpYSgpO2Vsc2V7dmFyIGI9dGhpcy5fY2FsbGJhY2tzO251bGw9PT1iJiYoYj10aGlzLl9jYWxsYmFja3M9W10pO2IucHVzaChhKX19O1xuT2kucHJvdG90eXBlLl9vbkNvbW1pdD1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21taXQpe3RoaXMuX2RpZENvbW1pdD0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjE5MVwiLGMpOnZvaWQgMDtjKCl9fX07XG5mdW5jdGlvbiBQaShhLGIsYyl7Yj1LKDMsbnVsbCxudWxsLGI/MzowKTthPXtjdXJyZW50OmIsY29udGFpbmVySW5mbzphLHBlbmRpbmdDaGlsZHJlbjpudWxsLHBpbmdDYWNoZTpudWxsLGVhcmxpZXN0UGVuZGluZ1RpbWU6MCxsYXRlc3RQZW5kaW5nVGltZTowLGVhcmxpZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RQaW5nZWRUaW1lOjAsZGlkRXJyb3I6ITEscGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOjAsZmluaXNoZWRXb3JrOm51bGwsdGltZW91dEhhbmRsZTotMSxjb250ZXh0Om51bGwscGVuZGluZ0NvbnRleHQ6bnVsbCxoeWRyYXRlOmMsbmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT246MCxleHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTt0aGlzLl9pbnRlcm5hbFJvb3Q9Yi5zdGF0ZU5vZGU9YX1cblBpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcgT2k7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO0tpKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07UGkucHJvdG90eXBlLnVubW91bnQ9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5faW50ZXJuYWxSb290LGM9bmV3IE9pO2E9dm9pZCAwPT09YT9udWxsOmE7bnVsbCE9PWEmJmMudGhlbihhKTtLaShudWxsLGIsbnVsbCxjLl9vbkNvbW1pdCk7cmV0dXJuIGN9O1BpLnByb3RvdHlwZS5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoaXMuX2ludGVybmFsUm9vdCxlPW5ldyBPaTtjPXZvaWQgMD09PWM/bnVsbDpjO251bGwhPT1jJiZlLnRoZW4oYyk7S2koYixkLGEsZS5fb25Db21taXQpO3JldHVybiBlfTtcblBpLnByb3RvdHlwZS5jcmVhdGVCYXRjaD1mdW5jdGlvbigpe3ZhciBhPW5ldyBOaSh0aGlzKSxiPWEuX2V4cGlyYXRpb25UaW1lLGM9dGhpcy5faW50ZXJuYWxSb290LGQ9Yy5maXJzdEJhdGNoO2lmKG51bGw9PT1kKWMuZmlyc3RCYXRjaD1hLGEuX25leHQ9bnVsbDtlbHNle2ZvcihjPW51bGw7bnVsbCE9PWQmJmQuX2V4cGlyYXRpb25UaW1lPj1iOyljPWQsZD1kLl9uZXh0O2EuX25leHQ9ZDtudWxsIT09YyYmKGMuX25leHQ9YSl9cmV0dXJuIGF9O2Z1bmN0aW9uIFFpKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlJiYoOCE9PWEubm9kZVR5cGV8fFwiIHJlYWN0LW1vdW50LXBvaW50LXVuc3RhYmxlIFwiIT09YS5ub2RlVmFsdWUpKX1HYj1HaTtIYj1JaTtJYj1mdW5jdGlvbigpe1d8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKX07XG5mdW5jdGlvbiBSaShhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IFBpKGEsITEsYil9XG5mdW5jdGlvbiBTaShhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGc9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9TGkoZi5faW50ZXJuYWxSb290KTtnLmNhbGwoYSl9fW51bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9ZWxzZXtmPWMuX3JlYWN0Um9vdENvbnRhaW5lcj1SaShjLGQpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2guY2FsbChhKX19SGkoZnVuY3Rpb24oKXtudWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfSl9cmV0dXJuIExpKGYuX2ludGVybmFsUm9vdCl9XG5mdW5jdGlvbiBUaShhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO1FpKGIpP3ZvaWQgMDp4KFwiMjAwXCIpO3JldHVybiBNaShhLGIsbnVsbCxjKX1cbnZhciBWaT17Y3JlYXRlUG9ydGFsOlRpLGZpbmRET01Ob2RlOmZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZvaWQgMD09PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXI/eChcIjE4OFwiKTp4KFwiMjY4XCIsT2JqZWN0LmtleXMoYSkpKTthPWhkKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX0saHlkcmF0ZTpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCEwLGMpfSxyZW5kZXI6ZnVuY3Rpb24oYSxiLGMpe1FpKGIpP3ZvaWQgMDp4KFwiMjAwXCIpO3JldHVybiBTaShudWxsLGEsYiwhMSxjKX0sdW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI6ZnVuY3Rpb24oYSxiLGMsZCl7UWkoYyk/dm9pZCAwOngoXCIyMDBcIik7bnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyP1xueChcIjM4XCIpOnZvaWQgMDtyZXR1cm4gU2koYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7UWkoYSk/dm9pZCAwOngoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhIaShmdW5jdGlvbigpe1NpKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIFRpLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfSx1bnN0YWJsZV9iYXRjaGVkVXBkYXRlczpHaSx1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXM6SWksZmx1c2hTeW5jOmZ1bmN0aW9uKGEsYil7Vz94KFwiMTg3XCIpOnZvaWQgMDt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBraShhLGIpfWZpbmFsbHl7WD1jLFloKDEwNzM3NDE4MjMsITEpfX0sdW5zdGFibGVfY3JlYXRlUm9vdDpVaSx1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQ6ZnVuY3Rpb24oYSl7dmFyIGI9XG5YO1g9ITA7dHJ5e2tpKGEpfWZpbmFsbHl7KFg9Yil8fFd8fFloKDEwNzM3NDE4MjMsITEpfX0sX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e0V2ZW50czpbSWEsSmEsS2EsQmEuaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lLHBhLFFhLGZ1bmN0aW9uKGEpe3lhKGEsUGEpfSxFYixGYixEZCxEYV19fTtmdW5jdGlvbiBVaShhLGIpe1FpKGEpP3ZvaWQgMDp4KFwiMjk5XCIsXCJ1bnN0YWJsZV9jcmVhdGVSb290XCIpO3JldHVybiBuZXcgUGkoYSwhMCxudWxsIT1iJiYhMD09PWIuaHlkcmF0ZSl9XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gVGUobih7fSxhLHtvdmVycmlkZVByb3BzOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6VGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWhkKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpmdW5jdGlvbihhKXtyZXR1cm4gYj9iKGEpOm51bGx9fSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOkhhLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuOC42XCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7dmFyIFdpPXtkZWZhdWx0OlZpfSxYaT1XaSYmVml8fFdpO21vZHVsZS5leHBvcnRzPVhpLmRlZmF1bHR8fFhpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xMy42XG4gKiBzY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7dmFyIGQ9bnVsbCxlPSExLGc9MyxrPS0xLGw9LTEsbT0hMSxuPSExO2Z1bmN0aW9uIHAoKXtpZighbSl7dmFyIGE9ZC5leHBpcmF0aW9uVGltZTtuP3EoKTpuPSEwO3IodCxhKX19XG5mdW5jdGlvbiB1KCl7dmFyIGE9ZCxiPWQubmV4dDtpZihkPT09YilkPW51bGw7ZWxzZXt2YXIgYz1kLnByZXZpb3VzO2Q9Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGw7Yz1hLmNhbGxiYWNrO2I9YS5leHBpcmF0aW9uVGltZTthPWEucHJpb3JpdHlMZXZlbDt2YXIgZj1nLFE9bDtnPWE7bD1iO3RyeXt2YXIgaD1jKCl9ZmluYWxseXtnPWYsbD1RfWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBoKWlmKGg9e2NhbGxiYWNrOmgscHJpb3JpdHlMZXZlbDphLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9LG51bGw9PT1kKWQ9aC5uZXh0PWgucHJldmlvdXM9aDtlbHNle2M9bnVsbDthPWQ7ZG97aWYoYS5leHBpcmF0aW9uVGltZT49Yil7Yz1hO2JyZWFrfWE9YS5uZXh0fXdoaWxlKGEhPT1kKTtudWxsPT09Yz9jPWQ6Yz09PWQmJihkPWgscCgpKTtiPWMucHJldmlvdXM7Yi5uZXh0PWMucHJldmlvdXM9aDtoLm5leHQ9YztoLnByZXZpb3VzPVxuYn19ZnVuY3Rpb24gdigpe2lmKC0xPT09ayYmbnVsbCE9PWQmJjE9PT1kLnByaW9yaXR5TGV2ZWwpe209ITA7dHJ5e2RvIHUoKTt3aGlsZShudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl9ZmluYWxseXttPSExLG51bGwhPT1kP3AoKTpuPSExfX19ZnVuY3Rpb24gdChhKXttPSEwO3ZhciBiPWU7ZT1hO3RyeXtpZihhKWZvcig7bnVsbCE9PWQ7KXt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKGQuZXhwaXJhdGlvblRpbWU8PWMpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTw9Yyl9ZWxzZSBicmVha31lbHNlIGlmKG51bGwhPT1kKXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJiF3KCkpfX1maW5hbGx5e209ITEsZT1iLG51bGwhPT1kP3AoKTpuPSExLHYoKX19XG52YXIgeD1EYXRlLHk9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lP3JlcXVlc3RBbmltYXRpb25GcmFtZTp2b2lkIDAsQj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2FuY2VsQW5pbWF0aW9uRnJhbWU/Y2FuY2VsQW5pbWF0aW9uRnJhbWU6dm9pZCAwLEMsRDtmdW5jdGlvbiBFKGEpe0M9QShmdW5jdGlvbihiKXt6KEQpO2EoYil9KTtEPXkoZnVuY3Rpb24oKXtCKEMpO2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LDEwMCl9XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgRj1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBGLm5vdygpfX1lbHNlIGV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCl9O3ZhciByLHEsdyxHPW51bGw7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiB3aW5kb3c/Rz13aW5kb3c6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBnbG9iYWwmJihHPWdsb2JhbCk7XG5pZihHJiZHLl9zY2hlZE1vY2spe3ZhciBIPUcuX3NjaGVkTW9jaztyPUhbMF07cT1IWzFdO3c9SFsyXTtleHBvcnRzLnVuc3RhYmxlX25vdz1IWzNdfWVsc2UgaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIEk9bnVsbCxKPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1JKXRyeXtJKGEpfWZpbmFsbHl7ST1udWxsfX07cj1mdW5jdGlvbihhKXtudWxsIT09ST9zZXRUaW1lb3V0KHIsMCxhKTooST1hLHNldFRpbWVvdXQoSiwwLCExKSl9O3E9ZnVuY3Rpb24oKXtJPW51bGx9O3c9ZnVuY3Rpb24oKXtyZXR1cm4hMX19ZWxzZXtcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUmJihcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBCJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCBjYW5jZWxBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIikpO3ZhciBLPW51bGwsTD0hMSxNPS0xLE49ITEsTz0hMSxQPTAsUj0zMyxTPTMzO3c9ZnVuY3Rpb24oKXtyZXR1cm4gUDw9ZXhwb3J0cy51bnN0YWJsZV9ub3coKX07dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe0w9ITE7dmFyIGE9SyxiPU07Sz1udWxsO009LTE7dmFyIGM9ZXhwb3J0cy51bnN0YWJsZV9ub3coKSxmPSExO2lmKDA+PVAtYylpZigtMSE9PWImJmI8PWMpZj0hMDtlbHNle058fChOPSEwLEUoVikpO0s9YTtNPWI7cmV0dXJufWlmKG51bGwhPT1hKXtPPSEwO3RyeXthKGYpfWZpbmFsbHl7Tz0hMX19fTtcbnZhciBWPWZ1bmN0aW9uKGEpe2lmKG51bGwhPT1LKXtFKFYpO3ZhciBiPWEtUCtTO2I8UyYmUjxTPyg4PmImJihiPTgpLFM9YjxSP1I6Yik6Uj1iO1A9YStTO0x8fChMPSEwLFUucG9zdE1lc3NhZ2Uodm9pZCAwKSl9ZWxzZSBOPSExfTtyPWZ1bmN0aW9uKGEsYil7Sz1hO009YjtPfHwwPmI/VS5wb3N0TWVzc2FnZSh2b2lkIDApOk58fChOPSEwLEUoVikpfTtxPWZ1bmN0aW9uKCl7Sz1udWxsO0w9ITE7TT0tMX19ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7XG5leHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPWcsZj1rO2c9YTtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBiKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O2V4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goZyl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9Z312YXIgYz1nLGY9aztnPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fTtcbmV4cG9ydHMudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3ZhciBjPS0xIT09az9rOmV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBiJiZudWxsIT09YiYmXCJudW1iZXJcIj09PXR5cGVvZiBiLnRpbWVvdXQpYj1jK2IudGltZW91dDtlbHNlIHN3aXRjaChnKXtjYXNlIDE6Yj1jKy0xO2JyZWFrO2Nhc2UgMjpiPWMrMjUwO2JyZWFrO2Nhc2UgNTpiPWMrMTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6Yj1jKzFFNDticmVhaztkZWZhdWx0OmI9Yys1RTN9YT17Y2FsbGJhY2s6YSxwcmlvcml0eUxldmVsOmcsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH07aWYobnVsbD09PWQpZD1hLm5leHQ9YS5wcmV2aW91cz1hLHAoKTtlbHNle2M9bnVsbDt2YXIgZj1kO2Rve2lmKGYuZXhwaXJhdGlvblRpbWU+Yil7Yz1mO2JyZWFrfWY9Zi5uZXh0fXdoaWxlKGYhPT1kKTtudWxsPT09Yz9jPWQ6Yz09PWQmJihkPWEscCgpKTtcbmI9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1hO2EubmV4dD1jO2EucHJldmlvdXM9Yn1yZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1hLm5leHQ7aWYobnVsbCE9PWIpe2lmKGI9PT1hKWQ9bnVsbDtlbHNle2E9PT1kJiYoZD1iKTt2YXIgYz1hLnByZXZpb3VzO2MubmV4dD1iO2IucHJldmlvdXM9Y31hLm5leHQ9YS5wcmV2aW91cz1udWxsfX07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9ZztyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1nLGY9aztnPWI7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtnPWMsaz1mLHYoKX19fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIGd9O1xuZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiFlJiYobnVsbCE9PWQmJmQuZXhwaXJhdGlvblRpbWU8bHx8dygpKX07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe251bGwhPT1kJiZwKCl9O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gZH07XG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcImJvZHkgeyBcXG4gICAgY29sb3I6ICNkOWQ5ZDk7XFxuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZiwgR2VvcmdpYSwgc2VyaWY7XFxufVxcblxcbnVsIHtcXG4gICAgYm9yZGVyOiAxcHggIzQwNDA0MCBzb2xpZDtcXG59XFxuXFxubGkgLCBsYWJlbCwgcCB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG59XFxuXFxuaDQsIGg1LCBoNiB7XFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMzMzMzMzO1xcbn1cXG5cXG5pbnB1dCwgdGV4dGFyZWEgeyBcXG4gICAgZm9udC1zaXplOiAxMXB4O1xcbiAgICBiYWNrZ3JvdW5kOiAjMmIyYjJiO1xcbiAgICBjb2xvcjogI2Q5ZDlkOTtcXG4gICAgb3BhY2l0eTogMC43NTtcXG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcXG59XFxuXFxuaW5wdXRbdHlwZT1cXFwidGV4dFxcXCJdIHtcXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0YXJlYTtcXG59XFxuXFxudWwgbGFiZWwgaW5wdXQge1xcbiAgICB3aWR0aDogMTBweDtcXG59XFxuXFxudWwsIGxpIHtcXG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XFxuICAgIG1hcmdpbi10b3A6IDBweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xcbn1cXG5cXG5idXR0b24ge1xcbiAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjUpO1xcbiAgICBib3JkZXItY29sb3I6IHJnYmEoMCwwLDAsMC45KTtcXG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XFxuICAgIHBhZGRpbmc6IDdweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM0M2E0MDtcXG4gICAgbWFyZ2luLWxlZnQ6IDRweDtcXG59XFxuXFxuYnV0dG9uIGl7XFxuICAgIHBhZGRpbmctcmlnaHQ6NHB4O1xcbn1cXG5cXG5idXR0b246aG92ZXIge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZDogcmdiKDQzLCA0MywgNDMpO1xcbn1cXG5cXG51bCxsaSwgdWwgbGFiZWwge1xcbiAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjUpO1xcbn1cXG5cXG51bCBsYWJlbDpob3ZlciwgbGk6aG92ZXIsIC5jb250ZW50OmhvdmVye1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZDogcmdiKDQzLCA0MywgNDMpO1xcbn1cXG5cXG4jaW5kZXh7XFxuICAgIG1hcmdpbjotNHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBEZXBlbmRlbmNpZXMuXG5pbXBvcnQgXCIuLi9JbmRleC9pbmRleC5jc3NcIjtcblxuLy8gQ29tcG9uZW50cy5cblxuaW1wb3J0IENvbXBvbmVudHMgZnJvbSBcIi4uL0VsZW1lbnRzXCI7XG5pbXBvcnQgRHJhZ2dhYmxlQ29tcG9uZW50IGZyb20gXCIuLi9EcmFnZ2FibGVDb21wb25lbnRcIjtcbmltcG9ydCBFZGl0b3IgZnJvbSBcIi4uL0VkaXRvclwiO1xuaW1wb3J0IEV2ZW50cyBmcm9tIFwiLi4vRXZlbnRzXCI7XG5pbXBvcnQgSGlzdG9yeSBmcm9tIFwiLi4vSGlzdG9yeVwiO1xuaW1wb3J0IFByZXZpZXcgZnJvbSBcIi4uL1ByZXZpZXdcIjtcbmltcG9ydCBTdHlsZUV4cGxvcmVyIGZyb20gXCIuLi9TdHlsZUV4cGxvcmVyXCI7XG5pbXBvcnQgVGFnRXhwbG9yZXIgZnJvbSBcIi4uL1RhZ0V4cGxvcmVyXCI7XG5cbi8vIFJlZHVjZXJzLlxuaW1wb3J0IHsgdXBkYXRlRXZlbnQsIHVwZGF0ZUNvbmZpZywgc2F2ZUVsZW1lbnQsIHVwZGF0ZXNlbGVjdGVkSW5kZXggfSBmcm9tIFwiLi4vRWxlbWVudHMvUmVkdWNlclwiO1xuXG4vLyBVdGlsc1xuaW1wb3J0IHsgZ2V0Tm9kZVRyZWUgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2dldC1ub2RlLXRyZWUuanNcIjtcbmltcG9ydCB7cmVhZERhdGF9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG5cbmNsYXNzIFRvb2wgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVsZW1lbnRzOiByZWFkRGF0YShcInVpLWVkaXRvclwiKSB8fCBbXSxcbiAgICAgICAgICAgIGNvbXBvbmVudHM6IFtdLFxuICAgICAgICAgICAgc2VsZWN0ZWRJbmRleDogLTEsXG4gICAgICAgICAgICBlbGVtZW50OiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICBtYXJrdXA6IFwiXCIsXG4gICAgICAgICAgICAgICAgc3R5bGU6IFwiXCIsXG4gICAgICAgICAgICAgICAgc3RhdGU6IFwieyB9XCIsXG4gICAgICAgICAgICAgICAgZXZlbnRzOiBbXVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRlQ29uZmlnID0gdXBkYXRlQ29uZmlnLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudXBkYXRlRXZlbnQgPSB1cGRhdGVFdmVudC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNhdmVFbGVtZW50ID0gc2F2ZUVsZW1lbnQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy51cGRhdGVzZWxlY3RlZEluZGV4ID0gdXBkYXRlc2VsZWN0ZWRJbmRleC5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIHVwZGF0ZVByZXZpZXcoZWxlbWVudCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHByZXZpZXdDb21wb25lbnQ6IGVsZW1lbnRcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdXBkYXRlU3R5bGVzKCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWxlbWVudDogdGhpcy5zdGF0ZS5lbGVtZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIikgfHwgW107XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkRWxlbWVudCA9IGNvbXBvbmVudHNbdGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4XSB8fCB0aGlzLnN0YXRlLmVsZW1lbnQ7XG4gICAgICAgIGxldCBub2RlVHJlZSA9IGdldE5vZGVUcmVlKHNlbGVjdGVkRWxlbWVudCwgc2VsZWN0ZWRFbGVtZW50Lm1hcmt1cCwgc2VsZWN0ZWRFbGVtZW50LnN0eWxlLCBKU09OLnBhcnNlKHNlbGVjdGVkRWxlbWVudC5zdGF0ZSksIHNlbGVjdGVkRWxlbWVudC5ldmVudHMpO1xuICAgICAgICBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxDb21wb25lbnRzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudHM9e3RoaXMuc3RhdGUuZWxlbWVudHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Rpb249e3RoaXMudXBkYXRlc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZEluZGV4PXt0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8L0RyYWdnYWJsZUNvbXBvbmVudD5cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxFdmVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50PXtzZWxlY3RlZEVsZW1lbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudHM9e3RoaXMuc3RhdGUuZWxlbWVudHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25FdmVudHNVcGRhdGU9e3RoaXMudXBkYXRlRXZlbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25Db25maWdVcGRhdGU9e3RoaXMudXBkYXRlQ29uZmlnfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIDxEcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8RWRpdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwMDApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ9e3NlbGVjdGVkRWxlbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtzZWxlY3RlZEVsZW1lbnQubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrdXA9e3NlbGVjdGVkRWxlbWVudC5tYXJrdXB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3NlbGVjdGVkRWxlbWVudC5zdHlsZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZT17c2VsZWN0ZWRFbGVtZW50LnN0YXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU2F2ZT17dGhpcy5zYXZlRWxlbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgIFxuICAgICAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFByZXZpZXcgY29tcG9uZW50PXtzZWxlY3RlZEVsZW1lbnR9IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgIFxuICAgICAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRhZ0V4cGxvcmVyIG5vZGU9e25vZGVUcmVlfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L0RyYWdnYWJsZUNvbXBvbmVudD5cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTdHlsZUV4cGxvcmVyIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDAwKX0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50PXtzZWxlY3RlZEVsZW1lbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25FZGl0PXt0aGlzLnVwZGF0ZVN0eWxlcy5iaW5kKHRoaXMpfS8+XG4gICAgICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgIFxuICAgICAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICAgICAgPEhpc3RvcnkvPlxuICAgICAgICAgICAgICAgICAgICA8L0RyYWdnYWJsZUNvbXBvbmVudD5cbiAgICBcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2goZSl7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPEhpc3RvcnkvPlxuICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVG9vbDsiLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG4vLyBTdHlsZXMuXG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBFbGVtZW50IGZyb20gXCIuLi9FbGVtZW50XCI7XG5cbi8vIFJlZHVjZXJzLlxuXG5pbXBvcnQge29uRGVsZXRlfSBmcm9tIFwiLi9SZWR1Y2VyXCJcblxuLy8gRXZlbnRzLlxuXG5pbXBvcnQgeyBvbkV4cG9ydH0gZnJvbSBcIi4vRXZlbnRzXCI7XG5pbXBvcnQge3dyaXRlRGF0YX0gZnJvbSBcIi4uL3V0aWxpdGllcy9sb2NhbFN0b3JhZ2VcIjtcblxuXG5jbGFzcyBDb21wb25lbnRzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBlbGVtZW50czogdGhpcy5wcm9wcy5lbGVtZW50cyxcbiAgICAgICAgICAgIHNlbGVjdGVkSW5kZXg6MFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMub25EZWxldGUgPSBvbkRlbGV0ZS5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIGNyZWF0ZVZhcmlhbnQoY29tcG9uZW50KXtcblxuICAgICAgICAvLyAxLiBVcGRhdGUgbWFya3VwLlxuICAgICAgICBsZXQgdmFyaWFudCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoY29tcG9uZW50KSk7XG4gICAgICAgIHZhcmlhbnQubmFtZSA9IFwiVmFyaWFudFwiK3ZhcmlhbnQubmFtZVxuICAgICAgICB2YXJpYW50Lm1hcmt1cCA9IHZhcmlhbnQubWFya3VwLnJlcGxhY2UoLz4oLio/KTwvZywgJz57c3RhdGUudmFyaWFudH08JylcblxuICAgICAgICAvLyAyLiBVcGRhdGUgc3RhdGUuXG4gICAgICAgIGlmKHR5cGVvZiB2YXJpYW50LnN0YXRlID09PSBcInN0cmluZ1wiKXtcbiAgICAgICAgICAgIHZhcmlhbnQuc3RhdGUgPSBKU09OLnBhcnNlKHZhcmlhbnQuc3RhdGUpXG4gICAgICAgICAgICB2YXJpYW50LnN0YXRlLnZhcmlhbnQgPSBcInRleHRcIlxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYodHlwZW9mIHZhcmlhbnQuc3RhdGUgPT09IFwib2JqZWN0XCIpe1xuICAgICAgICAgICAgdmFyaWFudC5zdGF0ZS52YXJpYW50ID0gXCJ0ZXh0XCJcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgdmFyaWFudC5zdGF0ZSA9IHt9XG4gICAgICAgIH1cbiAgICAgICAgdmFyaWFudC5zdGF0ZS52YXJpYW50ID0gXCJ0ZXh0XCI7XG5cbiAgICAgICAgdmFyaWFudC5zdGF0ZSA9IEpTT04uc3RyaW5naWZ5KHZhcmlhbnQuc3RhdGUpO1xuXG4gICAgICAgIHJldHVybiB2YXJpYW50O1xuICAgIH1cblxuICAgIGdlbmVyYXRlVmFyaWFudChpbmRleCl7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiAxLiBUYWtlIHRoZSBjdXJyZW50IGVsZW1lbnQgc2VsZWN0ZWRcbiAgICAgICAgICogMi4gUmVtb3ZlIHBsYWluIHRleHRzIGFuZCByZXBsYWNlIGl0IHdpdGggcHJvcGVydHlcbiAgICAgICAgICogMy4gQ3JlYXRlIHRoZSBwcm9wZXJ0eSBpbiB0aGUgc3RhdGUuXG4gICAgICAgICAqL1xuICAgICAgICBsZXQgY3VycmVudENvbXBvbmVudCA9IHRoaXMuc3RhdGUuZWxlbWVudHNbaW5kZXhdO1xuICAgICAgICBsZXQgdmFyaWFudCA9IHRoaXMuY3JlYXRlVmFyaWFudChjdXJyZW50Q29tcG9uZW50KTtcblxuICAgICAgICBsZXQgZWxlbWVudHMgPSB0aGlzLnN0YXRlLmVsZW1lbnRzO1xuICAgICAgICBlbGVtZW50cy5wdXNoKHZhcmlhbnQpO1xuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWxlbWVudHM6ZWxlbWVudHNcbiAgICAgICAgfSlcbiAgICAgICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsZWxlbWVudHMpO1xuICAgIH1cbiAgICBcbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgY29uc3QgZWxlbWVudExpc3QgPSB0aGlzLnByb3BzLmVsZW1lbnRzLm1hcCgoZWxlbWVudCwgaW5kZXgpID0+IFxuICAgICAgICAgICAgPEVsZW1lbnQgXG4gICAgICAgICAgICAgICAga2V5ID0ge2luZGV4fSBcbiAgICAgICAgICAgICAgICBpbmRleCA9IHtpbmRleH1cbiAgICAgICAgICAgICAgICBzZWxlY3RlZEluZGV4ID0ge3RoaXMucHJvcHMuc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICBlbGVtZW50ID0ge2VsZW1lbnR9XG4gICAgICAgICAgICAgICAgb25TZWxlY3Rpb25DaGFuZ2UgPSB7dGhpcy5wcm9wcy5vblNlbGVjdGlvbn1cbiAgICAgICAgICAgICAgICBvbkV4cG9ydCA9IHtvbkV4cG9ydC5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgIG9uRGVsZXRlID0ge3RoaXMub25EZWxldGV9XG4gICAgICAgICAgICAgICAgb25HZW5lcmF0ZVZhcmlhbnQgPSB7dGhpcy5nZW5lcmF0ZVZhcmlhbnQuYmluZCh0aGlzKX0vPlxuICAgICAgICApO1xuXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlbGVtZW50c1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGVsZW1lbnRzLXRhYlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBDb21wb25lbnRzXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICB7ZWxlbWVudExpc3R9XG4gICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudHM7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5vdmVycmlkZSB7XFxuICAgIGxpbmUtaGVpZ2h0OiAwJTtcXG59XFxuXFxudGV4dGFyZWEge1xcbiAgICBoZWlnaHQ6IDcwcHg7XFxuICAgIHdpZHRoOiA0NTBweDtcXG59XFxuXFxuLmVsZW1lbnRze1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxufVxcblxcbi50aXRsZXtcXG4gICAgbWFyZ2luLXRvcDogMTVweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogMTFweDtcXG4gICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcXG4gICAgYmFja2dyb3VuZDogcmdiKDY0LCA2NCwgNjQpO1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgICBwYWRkaW5nOiA1cHg7XFxufVxcblxcbi5lbGVtZW50cy10YWIge1xcbiAgICBsZWZ0OjEwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7c2VsZWN0aW9uQ2hhbmdlZCwgaGFuZGxlRHJhZ30gZnJvbSBcIi4vRXZlbnRzXCI7XG5cbmltcG9ydCAgXCIuL1N0eWxlLmNzc1wiO1xuXG5jbGFzcyBFbGVtZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7fTtcbiAgICB9XG5cbiAgICBnZW5lcmF0ZVZhcmlhbnQoKXtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkdlbmVyYXRlVmFyaWFudCh0aGlzLnByb3BzLnNlbGVjdGVkSW5kZXgpXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIC8vIFJlbW92ZSB0aGlzLnByb3BzLmluZGV4LCBpbnN0ZWFkIHVzZSB0aGlzIGVsZW1lbnQgaW5zdGFuY2UgaW5kZXguIFJlbW92ZXMgZHVwbGljYXRlIGNvZGVcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFja2dyb3VuZFwiIGRyYWdnYWJsZT1cInRydWVcIiBpZD17dGhpcy5wcm9wcy5lbGVtZW50Lm5hbWV9IGRhdGEtbmFtZT17dGhpcy5wcm9wcy5lbGVtZW50Lm5hbWV9IG9uRHJhZ1N0YXJ0PXtoYW5kbGVEcmFnLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgIDxsaSBcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lID0ge3RoaXMucHJvcHMuaW5kZXg9PT10aGlzLnByb3BzLnNlbGVjdGVkSW5kZXggPyBcInNlbGVjdGVkIGNvbXBvbmVudFwiOiBcImNvbXBvbmVudFwifVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrID0ge3NlbGVjdGlvbkNoYW5nZWQuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB7dGhpcy5wcm9wcy5pbmRleH0+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNvbXBvbmVudE5hbWVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLmVsZW1lbnQubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB7dGhpcy5wcm9wcy5pbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmdlbmVyYXRlVmFyaWFudC5iaW5kKHRoaXMpfT48aSBjbGFzc05hbWU9XCJmYXMgZmEtZmlsZS1leHBvcnRcIj48L2k+R2VuZXJhdGUgVmFyaWFudDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IHt0aGlzLnByb3BzLmluZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMucHJvcHMub25FeHBvcnR9PjxpIGNsYXNzTmFtZT1cImZhcyBmYS1maWxlLWV4cG9ydFwiPjwvaT5FeHBvcnQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB7dGhpcy5wcm9wcy5pbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLm9uRGVsZXRlfT48aSBjbGFzc05hbWU9XCJmYSBmYS10cmFzaFwiPjwvaT5EZWxldGU8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8LyBkaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFbGVtZW50O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdGlvbkNoYW5nZWQoZSkge1xuICAgIHRoaXMucHJvcHMub25TZWxlY3Rpb25DaGFuZ2UoZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVEcmFnKGUpe1xuXG4gICAgbGV0IG5hbWUgPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1uYW1lXCIpXG4gICAgZS5kYXRhVHJhbnNmZXIuc2V0RGF0YShcImNvbXBvbmVudC1uYW1lXCIsIG5hbWUpO1xufVxuXG53aW5kb3cuZXZlbnRDYWxsYmFja3MgPSB7XG4gICAgaGFuZGxlRHJhZzogaGFuZGxlRHJhZ1xufTsiLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5zZWxlY3RlZCwgLmdyZWVuIHtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW47XFxuICAgIGJhY2tncm91bmQ6IHJnYig0MywgNDMsIDQzKTtcXG59XFxuXFxuLmJhY2tncm91bmQge1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMzMzMzMzO1xcbn1cXG5cXG4uY29tcG9uZW50IHtcXG4gICAgZGlzcGxheTpmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5jb21wb25lbnQgLmNvbXBvbmVudE5hbWV7XFxuICAgIHBhZGRpbmc6N3B4O1xcbn1cXG5cXG4udGh1bWJuYWlsIHtcXG4gICAgd2lkdGg6IDUwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsImV4cG9ydCBmdW5jdGlvbiBnZXRTdGFydFRhZ3MobWFya3VwKXtcbiAgICByZXR1cm4gbWFya3VwLnNwbGl0KFwiPlwiKS5maWx0ZXIoaXRlbT0+IWl0ZW0uaW5jbHVkZXMoXCIvXCIpKS5maWx0ZXIoQm9vbGVhbikubWFwKGl0ZW09Pml0ZW0rXCI+XCIpXG59IiwiaW1wb3J0IHvCoGdldE5lc3RlZENvbXBvbmVudHMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL25lc3RlZENvbXBvbmVudFNldHVwXCI7XG5pbXBvcnQgeyBnZXRDb21wb25lbnRTdHJpbmcgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2NvbnZlcnQtdG8tcmVhY3QtY29tcG9uZW50XCI7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIG9uRXhwb3J0KCkge1xuICAgIGxldCBuZXN0ZWRDb21wb25lbnRzID0gZ2V0TmVzdGVkQ29tcG9uZW50cyh0aGlzLnN0YXRlLmVsZW1lbnRzW3RoaXMucHJvcHMuc2VsZWN0ZWRJbmRleF0pO1xuXG4gICAgY29uc29sZS5sb2cobmVzdGVkQ29tcG9uZW50cy5tYXAoZ2V0Q29tcG9uZW50U3RyaW5nKS5qb2luKFwiXCIpKTtcbn0iLCJleHBvcnQgZnVuY3Rpb24gY29kZU1vZGlmaWVyKHJlZHVjZXIsIGNvbXBvbmVudCkge1xuICAgIHJldHVybiBgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgJHtyZWR1Y2VyfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2F2ZVZhcmlhbnRzKCR7d2luZG93LnNlbGVjdGVkY29tcG9uZW50bmFtZX0sJHtjb21wb25lbnQubmFtZX0sc3RhdGUsIGUpXG5gXG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNsYXNzIERyYWdnYWJsZUNvbXBvbmVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgdWktZWRpdG9yLXNldHRpbmdzLWRyYWdnYWJsZS1jb21wb25lbnQtJHt0aGlzLnByb3BzLmNoaWxkcmVuLnR5cGUubmFtZX1gKSkgfHwge1xuICAgICAgICAgICAgc3R5bGU6ICB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICAgICAgICAgICAgICB0b3A6IFwiMzBweFwiLFxuICAgICAgICAgICAgICAgIGxlZnQ6IFwiMjAwcHhcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1pbmltaXNlZDogZmFsc2VcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YXRlLmRyYWdnYWJsZT0gXCJmYWxzZVwiXG4gICAgfVxuXG4gICAgbW92ZURpdihlKXtcbiAgICAgICAgaWYoZS50YXJnZXQuaWQ9PT1cIm1vdmVcIil7XG4gICAgICAgICAgICBsZXQgc3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKTtcbiAgICAgICAgICAgIHN0YXRlLnN0eWxlLnRvcCA9IGUucGFnZVkgK1wicHhcIlxuICAgICAgICAgICAgc3RhdGUuc3R5bGUubGVmdCA9IGUucGFnZVggK1wicHhcIlxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc3R5bGUgOiBzdGF0ZS5zdHlsZVxuICAgICAgICAgICAgfSwoKT0+e1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGB1aS1lZGl0b3Itc2V0dGluZ3MtZHJhZ2dhYmxlLWNvbXBvbmVudC0ke3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfWAsSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZSkpO1xuICAgICAgICAgICAgfSkgICAgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0b2dnbGVNaW5pbWlzZU1heGltaXNlKGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBtaW5pbWlzZWQ6ICF0aGlzLnN0YXRlLm1pbmltaXNlZFxuICAgICAgICB9LCgpPT57XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShgdWktZWRpdG9yLXNldHRpbmdzLWRyYWdnYWJsZS1jb21wb25lbnQtJHt0aGlzLnByb3BzLmNoaWxkcmVuLnR5cGUubmFtZX1gLEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvbk1vdXNlRW50ZXIoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZHJhZ2dhYmxlOlwidHJ1ZVwiXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgb25Nb3VzZUxlYXZlKCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZHJhZ2dhYmxlOlwiZmFsc2VcIlxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgZHJhZ2dhYmxlPXt0aGlzLnN0YXRlLmRyYWdnYWJsZX0gaWQ9XCJtb3ZlXCIgb25EcmFnRW5kPXt0aGlzLm1vdmVEaXYuYmluZCh0aGlzKX0gc3R5bGU9e3RoaXMuc3RhdGUuc3R5bGV9ID5cbiAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cIk1vdmVcIiBjbGFzc05hbWU9XCJtb3ZlLWhhbmRsZVwiIG9uTW91c2VEb3duPXt0aGlzLm9uTW91c2VFbnRlci5iaW5kKHRoaXMpfSBvbk1vdXNlVXA9e3RoaXMub25Nb3VzZUxlYXZlLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1hcnJvd3MtYWx0IGZhLXhzXCI+PC9pPlxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUubWluaW1pc2VkID8gICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cIk1pbmltaXNlXCIgY2xhc3NOYW1lPVwibWF4aW1pc2UtaGFuZGxlXCIgb25DbGljaz17dGhpcy50b2dnbGVNaW5pbWlzZU1heGltaXNlLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmFzIGZhLXdpbmRvdy1tYXhpbWl6ZSBmYS14c1wiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwiTWluaW1pc2VcIiBjbGFzc05hbWU9XCJtaW5pbWlzZS1oYW5kbGVcIiBvbkNsaWNrPXt0aGlzLnRvZ2dsZU1pbmltaXNlTWF4aW1pc2UuYmluZCh0aGlzKX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYXMgZmEtd2luZG93LW1pbmltaXplIGZhLXhzXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5taW5pbWlzZWQgPyBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGVkaXRvci10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+e3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmNoaWxkcmVuIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBEcmFnZ2FibGVDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIjbW92ZSA+IHNwYW57ICBcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGNvbG9yOiBibGFjaztcXG59XFxuXFxuI21vdmUgLm1vdmUtaGFuZGxle1xcbiAgICBjdXJzb3I6IG1vdmU7XFxufVxcblxcbiNtb3ZlIC5tb3ZlLWhhbmRsZSxcXG4jbW92ZSAubWluaW1pc2UtaGFuZGxlLFxcbiNtb3ZlIC5tYXhpbWlzZS1oYW5kbGUge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDJweDtcXG4gICAgcGFkZGluZy1yaWdodDogMnB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJcbi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcbmltcG9ydCB7dXBkYXRlTmFtZSwgdXBkYXRlTWFya3VwLCB1cGRhdGVTdHlsZSwgdXBkYXRlU3RhdGV9IGZyb20gXCIuL1JlZHVjZXJcIjtcblxuaW1wb3J0IHtyZWFkQ29tcG9uZW50fSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG4vKipcbiAqIFNob3dzIENvbmZpZ3VyYXRvciBvbiBzZWxlY3Qgb2YgdmFsaWQgY2hpbGQgY29tcG9uZW50IG5hbWUgaW4gdGhlIG1hcmt1cCBhbmQgbW91c2VPdXQgZnJvbSBtYXJrdXBcbiAqIEhpZGVzIENvbmZpZ3VyYXRvciBvbiBtb3VzZUxlYXZlIGZyb20gdGhlIGVkaXRvci5cbiAqL1xuY2xhc3MgRWRpdG9yIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHZhciBjb21wb25lbnQgPSByZWFkQ29tcG9uZW50KHRoaXMucHJvcHMubmFtZSk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG5hbWU6IGNvbXBvbmVudD8gY29tcG9uZW50Lm5hbWUgOiBcIlwiLFxuICAgICAgICAgICAgbWFya3VwOiBjb21wb25lbnQ/IGNvbXBvbmVudC5tYXJrdXAgOiBcIlwiLFxuICAgICAgICAgICAgc3RhdGU6IGNvbXBvbmVudD8gY29tcG9uZW50LnN0YXRlIDogXCJcIixcbiAgICAgICAgICAgIHN0eWxlOiBjb21wb25lbnQ/IGNvbXBvbmVudC5zdHlsZSA6IFwiXCJcbiAgICAgICAgfTtcblxuICAgIH1cblxuICAgIHB1Ymxpc2hFbGVtZW50ICgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vblNhdmUoe1xuICAgICAgICAgICAgbmFtZTogdGhpcy5zdGF0ZS5uYW1lLFxuICAgICAgICAgICAgbWFya3VwOiB0aGlzLnN0YXRlLm1hcmt1cCxcbiAgICAgICAgICAgIHN0eWxlOiB0aGlzLnN0YXRlLnN0eWxlLFxuICAgICAgICAgICAgc3RhdGU6IHRoaXMuc3RhdGUuc3RhdGVcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBuYW1lPSB0aGlzLnN0YXRlLm5hbWU7XG4gICAgICAgIGxldCBtYXJrdXA9IHRoaXMuc3RhdGUubWFya3VwO1xuICAgICAgICBsZXQgc3R5bGU9IHRoaXMuc3RhdGUuc3R5bGU7XG4gICAgICAgIGxldCBzdGF0ZT0gdGhpcy5zdGF0ZS5zdGF0ZTtcbiAgICAgICAgLy8gVE9ETzogU2hvdWxkIHBhc3MgdGhlIGN1cnJlbnQgZGF0YS4gSW5zdGVhZCBvZiBhY2Nlc3NpbmcgaXQgZnJvbSBnbG9iYWxcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGVkaXRvci10YWJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+RWRpdG9yPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IE5hbWU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFbnRlciBlbGVtZW50IG5hbWVcIiB2YWx1ZT17bmFtZX0gb25DaGFuZ2U9e3VwZGF0ZU5hbWUuYmluZCh0aGlzKX0gaWQ9XCJlbGVtZW50TmFtZVwiLz5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnB1Ymxpc2hFbGVtZW50LmJpbmQodGhpcyl9IGlkPVwic2F2ZVwiPjxpIGNsYXNzTmFtZT1cImZhcyBmYS1zYXZlXCI+PC9pPlNhdmU8L2J1dHRvbj4gICAgXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPkNvbXBvbmVudCBNYXJrdXA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHZhbHVlPXttYXJrdXB9IG9uQ2hhbmdlPXt1cGRhdGVNYXJrdXAuYmluZCh0aGlzKX0gaWQ9XCJlbGVtZW50TWFya3VwXCIgdGl0bGU9XCJJRCBpcyBtYW5kYXRvcnkgZm9yIGV2ZW50c1wiLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPkNvbXBvbmVudCBDU1M8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHZhbHVlPXtzdHlsZX0gb25DaGFuZ2U9e3VwZGF0ZVN0eWxlLmJpbmQodGhpcyl9IC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IFN0YXRlPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSB2YWx1ZT17c3RhdGV9IG9uQ2hhbmdlPXt1cGRhdGVTdGF0ZS5iaW5kKHRoaXMpfSBpZD1cImVsZW1lbnRTdGF0ZVwiLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFZGl0b3I7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5oaWRkZW57XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVwiLCBcIlwiXSk7XG5cbiIsIi8vIFB1YmxpYy5cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZU5hbWUgKGV2ZW50KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG5hbWU6IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlTWFya3VwIChldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBtYXJrdXA6IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gIHVwZGF0ZVN0eWxlIChldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdHlsZTogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVTdGF0ZSAoZXZlbnQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc3RhdGU6IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvcGVydHlDb250YWluaW5nUHJvcHMob2JqKXtcbiAgICAvLyBGZXRjaCBsaXN0IG9mIHByb3BzIGZyb20gY2hpbGQuXG4gICAgbGV0IHByb3BzID0gW107XG4gICAgbGV0IHN0YXRlO1xuICAgIHRyeXtcbiAgICAgICAgc3RhdGUgPSBKU09OLnBhcnNlKG9iai5zdGF0ZSk7XG4gICAgfVxuICAgIGNhdGNoKGUpe1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3I6IENoaWxkIHN0YXRlIGlzIGFuIGludmFsaWQganNvbiwgdHJ5IGFuIG9ubGluZSB2YWxpZGF0b3Igb24gYmVsb3cgc3RyaW5nXCIpXG4gICAgICAgIGNvbnNvbGUubG9nKGNoaWxkLnN0YXRlKTtcbiAgICB9XG4gICAgZm9yKGxldCBwcm9wZXJ0eSBpbiBzdGF0ZSl7XG4gICAgICAgIGlmKHN0YXRlW3Byb3BlcnR5XS5pbmNsdWRlcyhcInByb3BcIikpe1xuICAgICAgICAgICAgcHJvcHMucHVzaChwcm9wZXJ0eSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHByb3BzO1xufSIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBEZXBlbmRlbmNpZXMuXG5cblxuLy8gQ29tcG9uZW50cy4gXG5cbmltcG9ydCBDb25maWd1cmF0b3IgZnJvbSBcIi4uL0NvbmZpZ3VyYXRvclwiO1xuaW1wb3J0IE5vZGVzIGZyb20gXCIuLi9Ob2Rlc1wiO1xuaW1wb3J0IEV2ZW50IGZyb20gXCIuLi9FdmVudFwiO1xuaW1wb3J0IGdldE1lc3NhZ2VzIGZyb20gXCIuL01lc3NhZ2VzXCI7XG5cbi8vIFN0eWxlcy5cblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuLy8gUmVkdWNlcnMuXG5cbmltcG9ydCB7IHVwZGF0ZUV2ZW50LCBzZWxlY3RlZFRhZ0NoYW5nZWQsIGRlbGV0ZUV2ZW50LCB1cGRhdGVDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4vUmVkdWNlclwiO1xuXG5cbi8vIFV0aWxzLlxuXG5pbXBvcnQgeyBnZXROb2RlVHJlZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvZ2V0LW5vZGUtdHJlZS5qc1wiO1xuaW1wb3J0IHsgcmVhZERhdGEgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG5jbGFzcyBFdmVudHMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnID0gXCJcIjtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLnByb3BzLmVsZW1lbnQ7XG5cbiAgICAgICAgLy8gUmVwb3J0IGlmIG5vIGNvbXBvbmVudCBpcyBjcmVhdGVkLlxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lbGVtZW50cy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5TZXR0aW5nczwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8cD5Mb29rcyBsaWtlIHlvdSBkbyBub3QgaGF2ZSBhbnkgV2ViIGNvbXBvbmVudCBjcmVhdGVkLiBUeXBlIHNvbWUgXCJodG1sXCIgb24gdGhlIHJpZ2h0IFwiRWRpdG9yXCIgdGFiPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlcG9ydCBpZiBubyBjb21wb25lbnQgaXMgc2VsZWN0ZWQuXG4gICAgICAgIGlmIChlbGVtZW50Lm5hbWUgPT09IHVuZGVmaW5lZCAmJiB0aGlzLnN0YXRlLmVsZW1lbnRzLmxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlNldHRpbmdzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxwPkxvb2tzIGxpa2UgeW91IGhhdmUgbm90IHNlbGVjdGVkIGFueSBjb21wb25lbnQuIENsaWNrIG9uIGFueSBvZiB0aGUgY29tcG9uZW50IGluIHRoZSBsZWZ0IHBhbmUuPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IG5vZGVUcmVlID0gZ2V0Tm9kZVRyZWUoZWxlbWVudCwgZWxlbWVudC5tYXJrdXAsIGVsZW1lbnQuc3R5bGUsIEpTT04ucGFyc2UoZWxlbWVudC5zdGF0ZSksIGVsZW1lbnQuZXZlbnRzKTtcblxuICAgICAgICAvLyBSZXBvcnQgZXJyb3IuXG4gICAgICAgIGlmIChub2RlVHJlZS5lcnJvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0TWVzc2FnZXMobm9kZVRyZWUuZXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmVwb3J0IGVycm9yIGlmIGNvbXBvbmVudCBpcyBub3QgXG4gICAgICAgIGlmIChub2RlVHJlZS5yZXN1bHQgPT09IHVuZGVmaW5lZCAmJiB0aGlzLnN0YXRlLmVsZW1lbnRzLmxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlNldHRpbmdzPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRUYWcgPSB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnIHx8IFwiXCI7XG4gICAgICAgIGxldCBldmVudHNPZlNlbGVjdGVkVGFnLCBjb25maWd1cmF0b3I7XG4gICAgICAgIC8vIENoZWNrIGlmIGl0IGlzIGEgY2hpbGQgY29tcG9uZW50XG4gICAgICAgIGlmIChzZWxlY3RlZFRhZy5pbmNsdWRlcyhcImNoaWxkLWNvbXBvbmVudC1cIikpIHtcbiAgICAgICAgICAgIC8vIEdldCBsaXN0IG9mIGNvbXBvbmVudHMuXG4gICAgICAgICAgICBsZXQgY29tcG9uZW50cyA9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuXG4gICAgICAgICAgICAvLyBHZXQgY2hpbGQgY29tcG9uZW50IG5hbWUgZnJvbSB0aGUgc2VsZWN0ZWQgdGFnLlxuICAgICAgICAgICAgbGV0IGNoaWxkQ29tcG9uZW50TmFtZSA9IHNlbGVjdGVkVGFnLnNwbGl0KFwiY2hpbGQtY29tcG9uZW50LVwiKVsxXTtcblxuICAgICAgICAgICAgLy8gRmluZCB0aGUgY2hpbGQgY29tcG9uZW50IGZyb20gdGhlIGxpc3Qgb2YgY29tcG9uZW50cy5cbiAgICAgICAgICAgIGxldCBjaGlsZENvbXBvbmVudCA9IGNvbXBvbmVudHMuZmluZChjb21wb25lbnQgPT4gY29tcG9uZW50Lm5hbWUgPT09IGNoaWxkQ29tcG9uZW50TmFtZSk7XG5cbiAgICAgICAgICAgIC8vIEZpbmQgZXZlbnRzIHRoYXQgYXJlIHB1Ymxpc2hhYmxlIGZyb20gdGhlIGNoaWxkIGNvbXBvbmVudC5cbiAgICAgICAgICAgIGxldCBldmVudE5hbWVzID0gY2hpbGRDb21wb25lbnQuZXZlbnRzLmZpbHRlcihldmVudCA9PiBldmVudC5wdWJsaXNoYWJsZSA9PT0gdHJ1ZSkubWFwKHB1Ymxpc2hhYmxlRXZlbnQgPT4gcHVibGlzaGFibGVFdmVudC5wdWJsaXNoTmFtZSk7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSBldmVudCB2aWV3IGZvciBsaXN0IG9mIGFsbCBldmVudHNcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50cyA9IGVsZW1lbnQuZXZlbnRzLm1hcCgoZXZlbnQsIGluZGV4KSA9PiA8RXZlbnQga2V5PXtpbmRleH0gaW5kZXg9e2luZGV4fSBldmVudD17ZXZlbnR9IHNlbGVjdGVkVGFnSUQ9e3NlbGVjdGVkVGFnfSBldmVudE5hbWVzPXtldmVudE5hbWVzfSBvblNhdmU9e3VwZGF0ZUV2ZW50LmJpbmQodGhpcyl9IGRlbGV0ZUV2ZW50PXtkZWxldGVFdmVudC5iaW5kKHRoaXMpfSAvPik7XG5cbiAgICAgICAgICAgIC8vIEZpbHRlciBvdXQgZXZlbnRzIHRoYXQgYXJlIG5vdCBwYXJ0IG9mIHNlbGVjdGVkVGFnXG4gICAgICAgICAgICBldmVudHNPZlNlbGVjdGVkVGFnID0gc2VsZWN0ZWRUYWcgPyBldmVudHMuZmlsdGVyKGV2ZW50ID0+IHNlbGVjdGVkVGFnLmluY2x1ZGVzKGV2ZW50LnByb3BzLmV2ZW50LmlkKSkgOiBudWxsO1xuXG4gICAgICAgICAgICBjb25maWd1cmF0b3IgPSA8Q29uZmlndXJhdG9yIG9uQ2hhbmdlPXt1cGRhdGVDb25maWd1cmF0aW9uLmJpbmQodGhpcyl9IGNoaWxkTmFtZT17Y2hpbGRDb21wb25lbnROYW1lfSBwYXJlbnQ9e2VsZW1lbnR9IC8+O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZXZlbnRzID0gZWxlbWVudC5ldmVudHNcbiAgICAgICAgICAgICAgICAubWFwKChldmVudCwgaW5kZXgpID0+IDxFdmVudCBrZXk9e2luZGV4fSBpbmRleD17aW5kZXh9IGV2ZW50PXtldmVudH0gc2VsZWN0ZWRUYWdJRD17c2VsZWN0ZWRUYWd9IGV2ZW50TmFtZXM9e1tdfSBvblNhdmU9e3VwZGF0ZUV2ZW50LmJpbmQodGhpcyl9IGRlbGV0ZUV2ZW50PXtkZWxldGVFdmVudC5iaW5kKHRoaXMpfSAvPik7XG4gICAgICAgICAgICBldmVudHNPZlNlbGVjdGVkVGFnID0gc2VsZWN0ZWRUYWcgPyBldmVudHMuZmlsdGVyKGV2ZW50ID0+IHNlbGVjdGVkVGFnLmluY2x1ZGVzKGV2ZW50LnByb3BzLmV2ZW50LmlkKSkgOiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZXZlbnRzLXRhYlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+U2V0dGluZ3M8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxOb2RlcyBub2RlPXtub2RlVHJlZS5yZXN1bHR9IG9uU2VsZWN0ZWRUYWdDaGFuZ2VkPXtzZWxlY3RlZFRhZ0NoYW5nZWQuYmluZCh0aGlzKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHtjb25maWd1cmF0b3J9XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRzXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhpc3RpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2V2ZW50c09mU2VsZWN0ZWRUYWd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ld1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RXZlbnQga2V5PXtlbGVtZW50LmV2ZW50cy5sZW5ndGh9IGV2ZW50TmFtZXM9e1tdfSBzZWxlY3RlZFRhZ0lEPXtzZWxlY3RlZFRhZ30gb25TYXZlPXt1cGRhdGVFdmVudC5iaW5kKHRoaXMpfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXZlbnRzO1xuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCJcblxuXG5jbGFzcyBDb25maWd1cmF0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICBsZXQgY29uZmlnID0gSlNPTi5wYXJzZSh0aGlzLnByb3BzLnBhcmVudC5jb25maWcpW3RoaXMucHJvcHMuY2hpbGROYW1lXSB8fCB7b3ZlcmlkZVN0YXRlOmZhbHNlfTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBvdmVycmlkZTogY29uZmlnLm92ZXJpZGVTdGF0ZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgdG9nZ2VsT3ZlcnJpZGUoKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBvdmVycmlkZTogIXRoaXMuc3RhdGUub3ZlcnJpZGVcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHtcbiAgICAgICAgICAgIG92ZXJyaWRlOiAhdGhpcy5zdGF0ZS5vdmVycmlkZSxcbiAgICAgICAgICAgIGNoaWxkTmFtZTogdGhpcy5wcm9wcy5jaGlsZE5hbWUsXG4gICAgICAgICAgICBwYXJlbnROYW1lOiB0aGlzLnByb3BzLnBhcmVudC5uYW1lXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICByZXR1cm4gKFxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm9wdGlvbi1ncm91cFwiPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm9wdGlvbi1ncm91cC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0aXRsZVwiPkNoaWxkIENvbmZpZ3VyYXRpb25zPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJwYW5lbCBleHBhbmRlZFwiPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3B0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+T3ZlcnJpZGUgY2hpbGQgc3RhdGU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG9uQ2hhbmdlPXt0aGlzLnRvZ2dlbE92ZXJyaWRlLmJpbmQodGhpcyl9IGNoZWNrZWQ9e3RoaXMuc3RhdGUub3ZlcnJpZGUgPyBcImNoZWNrZWRcIiA6IFwiXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbmZpZ3VyYXRvcjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnNvbGV7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDE1MHB4O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbn1cXG5cXG4uZXZlbnQgeyBcXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMzMzMzMzO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxufVxcblxcbi5pbmZvIHtcXG4gICAgY29sb3I6IHllbGxvd2dyZWVuO1xcbn1cXG5cXG5sYWJlbCB7XFxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XFxufVxcblxcbi5jb25maWd1cmF0b3Ige1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmNsYXNzIE5vZGVzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICB2YXIgbm9kZSA9IHRoaXMucHJvcHMubm9kZTtcblxuXG4gICAgICAgIGlmKCFub2RlKXtcbiAgICAgICAgICAgIHJldHVybiAoPHNwYW4+bnVsbDwvc3Bhbj4pXG4gICAgICAgIH1cbiAgICAgICAgaWYodHlwZW9mIG5vZGU9PT1cInN0cmluZ1wiKXtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxsaT57bm9kZX08L2xpPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaWQgPSBub2RlLnByb3BzLmlkID8gKFwiLVwiK25vZGUucHJvcHMuaWQpIDogXCJcIjtcblxuICAgICAgICAvLyBDaGVjayBpZiBpdCBjb250YWlucyBjaGlsZHJlbi5cbiAgICAgICAgaWYobm9kZS5wcm9wcyAmJiBBcnJheS5pc0FycmF5KG5vZGUucHJvcHMuY2hpbGRyZW4pKXtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUucHJvcHMuY2hpbGRyZW4ubWFwKChjaGlsZCxpbmRleCk9PjxOb2RlcyBrZXk9e2luZGV4fSBub2RlPXtjaGlsZH0gb25TZWxlY3RlZFRhZ0NoYW5nZWQ9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9Lz4pO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicmFkaW9cIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwic2VsZWN0ZWRFbGVtZW50XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtub2RlLnR5cGUgKyBpZH0vPlxuICAgICAgICAgICAgICAgICAgICAgICAge25vZGUudHlwZSAraWR9XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiBub2RlIGNvbnRhaW5zIG9ubHkgb25lIGNoaWxkcmVuLCBqc3ggZ2V0IHRyYW5zcGlsZWQgdG8gb2JqZWN0IHJhdGhlciB0aGFuIGFycmF5LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnByb3BzLmNoaWxkcmVuID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIGxldCBjaGlsZCA9IG5vZGUucHJvcHMuY2hpbGRyZW47XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJzZWxlY3RlZEVsZW1lbnRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5wcm9wcy5vblNlbGVjdGVkVGFnQ2hhbmdlZH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9eyhub2RlLnR5cGUubmFtZSB8fCBub2RlLnR5cGUpK2lkfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7KG5vZGUudHlwZS5uYW1lIHx8IG5vZGUudHlwZSl9XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxOb2RlcyBrZXk9e2luZGV4fSBub2RlPXtjaGlsZH0gb25TZWxlY3RlZFRhZ0NoYW5nZWQ9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9Lz5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBuZXN0ZWQgY29tcG9uZW50LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnR5cGUgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICByZXR1cm4gKDx1bD5cbiAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInNlbGVjdGVkRWxlbWVudFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e1wiY2hpbGQtY29tcG9uZW50LVwiK25vZGUudHlwZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9IFxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAge25vZGUudHlwZS5uYW1lfVxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwic2VsZWN0ZWRFbGVtZW50XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bm9kZS50eXBlK2lkfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9IFxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAge25vZGUudHlwZSAraWR9XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE5vZGVzOyIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiXG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBnZXRNZXNzYWdlcyBmcm9tIFwiLi9NZXNzYWdlc1wiO1xuXG4vLyBSZWR1Y2Vycy4gXG5cbmltcG9ydCB7dXBkYXRlRXZlbnROYW1lLCB1cGRhdGVFdmVudFR5cGUsIHVwZGF0ZVB1Ymxpc2hOYW1lLCB1cGRhdGVSZWR1Y2VyfSBmcm9tIFwiLi9SZWR1Y2VyXCI7XG5cbi8vIEV2ZW50cy5cblxuaW1wb3J0IHtwdWJsaXNoRXZlbnQsIGRlbGV0ZUV2ZW50fSBmcm9tICcuL0V2ZW50cyc7XG5cbmNsYXNzIEV2ZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLnByb3BzLmV2ZW50ID8gdGhpcy5wcm9wcy5ldmVudC5uYW1lIDogXCJcIixcbiAgICAgICAgICAgIHJlZHVjZXI6IHRoaXMucHJvcHMuZXZlbnQgPyB0aGlzLnByb3BzLmV2ZW50LnJlZHVjZXIgOiBcIlwiLFxuICAgICAgICAgICAgcHVibGlzaGFibGU6IHRoaXMucHJvcHMuZXZlbnQgPyB0aGlzLnByb3BzLmV2ZW50LnB1Ymxpc2hhYmxlIDogXCJcIixcbiAgICAgICAgICAgIHB1Ymxpc2hOYW1lOiB0aGlzLnByb3BzLmV2ZW50ID8gdGhpcy5wcm9wcy5ldmVudC5wdWJsaXNoTmFtZSA6IFwiXCIsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc2VsZWN0ZWRUYWdJRCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0TWVzc2FnZXMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBwdWJsaXNoTmFtZSA9IHRoaXMuc3RhdGUucHVibGlzaGFibGU/IDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXt1cGRhdGVQdWJsaXNoTmFtZS5iaW5kKHRoaXMpfSB2YWx1ZT17dGhpcy5zdGF0ZS5wdWJsaXNoTmFtZX0gcGxhY2Vob2xkZXI9XCJFbnRlciBldmVudCBwdWJsaXNoIG5hbWUgZm9yIG90aGVyIGNvbXBvbmVudHMgdG8gc3Vic2NyaWJlIHRvXCIvPiA6IG51bGw7XG4gICAgICAgIGxldCBldmVudE5hbWVzID0gdGhpcy5wcm9wcy5ldmVudE5hbWVzLm1hcChldmVudE5hbWU9PjxvcHRpb24gdmFsdWU9e2V2ZW50TmFtZX0+PC9vcHRpb24+KVxuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImV2ZW50XCI+XG4gICAgICAgICAgICAgICAgPGlucHV0IGxpc3Q9XCJicm93c2Vyc1wiIHR5cGU9XCJ0ZXh0XCIgb25DaGFuZ2U9e3VwZGF0ZUV2ZW50TmFtZS5iaW5kKHRoaXMpfSB2YWx1ZT17dGhpcy5zdGF0ZS5uYW1lfSBwbGFjZWhvbGRlcj1cIkVudGVyIGV2ZW50IG5hbWVcIiB0aXRsZT1cIkV2ZW50IE5hbWVcIi8+XG4gICAgICAgICAgICAgICAgPGRhdGFsaXN0IGlkPVwiYnJvd3NlcnNcIj5cbiAgICAgICAgICAgICAgICAgICAge2V2ZW50TmFtZXN9XG4gICAgICAgICAgICAgICAgPC9kYXRhbGlzdD5cbiAgICAgICAgICAgICAgICA8YnIvPlxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBvbkNoYW5nZT17dXBkYXRlUmVkdWNlci5iaW5kKHRoaXMpfSB2YWx1ZT17dGhpcy5zdGF0ZS5yZWR1Y2VyfSBwbGFjZWhvbGRlcj1cIkVudGVyIHN0YXRlIHJlZHVjZXJcIiB0aXRsZT1cIlJlZHVjZXJcIi8+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgb25DaGFuZ2U9e3VwZGF0ZUV2ZW50VHlwZS5iaW5kKHRoaXMpfSBjaGVja2VkPXt0aGlzLnN0YXRlLnB1Ymxpc2hhYmxlPyBcImNoZWNrZWRcIjogXCJcIn0vPlxuICAgICAgICAgICAgICAgICAgICBQdWJsaXNoYWJsZVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICB7cHVibGlzaE5hbWV9XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17cHVibGlzaEV2ZW50LmJpbmQodGhpcyl9IGlkPVwic2F2ZUV2ZW50XCI+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLXNhdmVcIj48L2k+U2F2ZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2RlbGV0ZUV2ZW50LmJpbmQodGhpcyl9IGlkPVwiZGVsZXRlRXZlbnRcIj48aSBjbGFzc05hbWU9XCJmYXMgZmEtdHJhc2hcIj48L2k+RGVsZXRlPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEV2ZW50O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29uc29sZXtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICByaWdodDogMTUwcHg7XFxufVxcblxcbi5lcnJvciB7XFxuICAgIGNvbG9yOiByZWQ7XFxufVxcblxcbi5ldmVudCB7IFxcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XFxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMzMzMzMzM7XFxuICAgIGJhY2tncm91bmQ6IHJnYig2NCwgNjQsIDY0KTtcXG59XFxuXFxuLmluZm8ge1xcbiAgICBjb2xvcjogeWVsbG93Z3JlZW47XFxufVxcblxcbmxhYmVsIHtcXG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcXG59XFxuXFxuLmV2ZW50IGlucHV0IHtcXG4gICAgbWFyZ2luLWxlZnQ6MHB4O1xcbn1cXG5cXG4uZXZlbnQgdGV4dGFyZWEge1xcbiAgICBtYXJnaW4tdG9wOiA4cHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsImltcG9ydCBNZXNzYWdlc0NvbXBvbmVudCBmcm9tIFwiLi4vTWVzc2FnZXNDb21wb25lbnRcIjtcblxuZnVuY3Rpb24gZ2V0TWVzc2FnZXMgKCkge1xuICAgIGxldCBtZXNzYWdlcyA9IFt7XG4gICAgICAgIHR5cGU6IFwiaW5mb1wiLFxuICAgICAgICB0ZXh0OiBcIiMxIElORk86IFNlbGVjdCBhbnkgZWxlbWVudCBpbiB0aGUgbGVmdCBtb3N0IHBhbmUoZWRpdG9yIHBhbmUpIHRvIHNlZSBpdHMgY29udGVudFwiXG4gICAgfSx7XG4gICAgICAgIHR5cGU6IFwiaW5mb1wiLFxuICAgICAgICB0ZXh0OiBcIiMyIElORk86IENsaWNrIG9uICdBZGQnIHRvIGFkZCBhbiBjb21wb25lbnRcIlxuICAgIH1dXG5cbiAgICByZXR1cm4gPE1lc3NhZ2VzQ29tcG9uZW50IG1lc3NhZ2VzPXttZXNzYWdlc30gLz47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldE1lc3NhZ2VzOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnNvbGV7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDE1MHB4O1xcbiAgICBib3R0b206IDUwcHg7XFxufVxcblxcbi5lcnJvciB7XFxuICAgIGNvbG9yOiByZWQ7XFxufVxcblxcblxcbi5pbmZvIHtcXG4gICAgY29sb3I6IHllbGxvd2dyZWVuO1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuY2xhc3MgTWVzc2FnZUNvbXBvbmVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBsZXQgIG1lc3NhZ2UgPSB0aGlzLnByb3BzLm1lc3NhZ2U7XG5cbiAgICAgICAgaWYobWVzc2FnZS50eXBlID09PSBcImVycm9yXCIgfHwgbWVzc2FnZS50eXBlPT09IFwiaW5mb1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXttZXNzYWdlLnR5cGV9PlxuICAgICAgICAgICAgICAgICAgICA8Y29kZT57bWVzc2FnZS50ZXh0fTwvY29kZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlLnR5cGUgKyBcIiBpcyB1bmlkZW50aWZpZWQgbWVzc2FnZSB0eXBlIGZvciA8TWVzc2FnZXNDb21wb25lbnQvPi4gUGxlYXNlIHVzZSBlaXRoZXIgJ2Vycm9yJyBvciAnaW5mbycgb25seS4gSWYgeW91IHJlcXVpcmUgYSBkaWZmZXJlbnQgdHlwZSwgcmFpc2UgYW4gaXNzdWUsIHNlbmQgYSBQUlwiKVxuICAgICAgICAgICAgcmV0dXJuICAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb25zb2xlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZWVycm9yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29kZT57XCJlcnJvciA6IHVuaWRlbnRpZmllZCBtZXNzYWdlIHR5cGUuIFBsZWFzZSB1c2UgZWl0aGVyIGVycm9yLyBpbmZvIG9ubHlcIn08L2NvZGU+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbn1cXG5cXG5cXG4uaW5mbyB7XFxuICAgIGNvbG9yOiB5ZWxsb3dncmVlbjtcXG59XCIsIFwiXCJdKTtcblxuIiwiXG4gIGZ1bmN0aW9uICB1cGRhdGVFdmVudE5hbWUoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG5hbWU6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gIGZ1bmN0aW9uICB1cGRhdGVSZWR1Y2VyKGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICByZWR1Y2VyOiBlLnRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuIGZ1bmN0aW9uICAgdXBkYXRlUHVibGlzaE5hbWUoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHB1Ymxpc2hOYW1lOiBlLnRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICBmdW5jdGlvbiAgdXBkYXRlRXZlbnRUeXBlKGUpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHB1Ymxpc2hhYmxlOiBlLmN1cnJlbnRUYXJnZXQuY2hlY2tlZFxuICAgICAgICB9KVxuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0ge1xuICAgICAgICB1cGRhdGVFdmVudE5hbWUsXG4gICAgICAgIHVwZGF0ZUV2ZW50VHlwZSxcbiAgICAgICAgdXBkYXRlUHVibGlzaE5hbWUsXG4gICAgICAgIHVwZGF0ZUV2ZW50VHlwZSxcbiAgICAgICAgdXBkYXRlUmVkdWNlclxuICAgIH0iLCJleHBvcnQgZnVuY3Rpb24gcHVibGlzaEV2ZW50KCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uU2F2ZSh7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLnN0YXRlLm5hbWUsXG4gICAgICAgICAgICByZWR1Y2VyOiB0aGlzLnN0YXRlLnJlZHVjZXIsXG4gICAgICAgICAgICBpbmRleDogdGhpcy5wcm9wcy5pbmRleCxcbiAgICAgICAgICAgIHB1Ymxpc2hhYmxlOiB0aGlzLnN0YXRlLnB1Ymxpc2hhYmxlLFxuICAgICAgICAgICAgcHVibGlzaE5hbWU6IHRoaXMuc3RhdGUucHVibGlzaE5hbWVcbiAgICAgICAgfSlcbiAgICB9XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVFdmVudCgpe1xuICAgICAgICB0aGlzLnByb3BzLmRlbGV0ZUV2ZW50KHRoaXMucHJvcHMuaW5kZXgpO1xuICAgIH0iLCJpbXBvcnQgTWVzc2FnZXNDb21wb25lbnQgZnJvbSBcIi4uL01lc3NhZ2VzQ29tcG9uZW50XCI7XG5cbmZ1bmN0aW9uIGdldE1lc3NhZ2VzIChlcnJvcikge1xuXG4gICAgbGV0IG1lc3NhZ2VzID0gW3tcbiAgICAgICAgdHlwZTpcImVycm9yXCIsXG4gICAgICAgIHRleHQ6XCJFUlJPUiA6IFwiK2Vycm9yK1wiZGV2ZWxvcGVyIGxvZzogbG9vayBpbiBjb25zb2xlIHJlbGF0ZWQgdG8gZXZhbFwiXG4gICAgfV1cbiAgICByZXR1cm4gKFxuICAgICAgICA8TWVzc2FnZXNDb21wb25lbnQgbWVzc2FnZXMgPSB7bWVzc2FnZXN9Lz5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldE1lc3NhZ2VzOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmV2ZW50cyB7XFxuICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuLmVycm9yIHtcXG4gICAgY29sb3I6IHJlZDtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICByaWdodDogMTUwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIlxuICAgIGV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFdmVudChldmVudCkge1xuICAgICAgICBsZXQgZWxlbWVudCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZS5lbGVtZW50KSlcbiAgICAgICAgZXZlbnQuaWQgPSB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnLnNwbGl0KFwiLVwiKVsxXTtcbiAgICAgICAgLy8gQWRkIFxuICAgICAgICBpZiAoZXZlbnQuaW5kZXggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZWxlbWVudC5ldmVudHMucHVzaChldmVudCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBFZGl0XG4gICAgICAgICAgICBlbGVtZW50LmV2ZW50c1tldmVudC5pbmRleF0gPSBldmVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucHJvcHMub25FdmVudHNVcGRhdGUoZWxlbWVudC5ldmVudHMpO1xuICAgIH1cblxuICAgIGV4cG9ydCBmdW5jdGlvbiBzZWxlY3RlZFRhZ0NoYW5nZWQoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNlbGVjdGVkVGFnOiBlLmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gZGVsZXRlRXZlbnQoaW5kZXgpIHtcblxuICAgICAgICAvLyBHZXQgY3VycmVudCBjb21wb25lbnQuXG4gICAgICAgIGxldCBlbGVtZW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmVsZW1lbnQpKTtcblxuICAgICAgICAvLyBSZW1vdmUgdGhlIGV2ZW50IHRvIGJlIGRlbGV0ZWQuXG4gICAgICAgIGVsZW1lbnQuZXZlbnRzLnNwbGljZShpbmRleCwgMSk7XG5cbiAgICAgICAgLy8gVXBkYXRlIGVsZW1lbnRzIHdpdGggbmV3IGV2ZW50cy5cbiAgICAgICAgdGhpcy5wcm9wcy5vbkV2ZW50c1VwZGF0ZShlbGVtZW50LmV2ZW50cyk7XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUNvbmZpZ3VyYXRpb24oY29uZmlnKXtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkNvbmZpZ1VwZGF0ZShjb25maWcpO1xuICAgIH0iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgcG9wSGlzdG9yeSB9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNsYXNzIEhpc3RvcnkgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZWZyZXNoVG9QcmV2aW91cygpe1xuICAgICAgICBwb3BIaXN0b3J5KCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBwcmV2aWV3XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICBIaXN0b3J5XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnJlZnJlc2hUb1ByZXZpb3VzLmJpbmQodGhpcyl9PkdvIGJhY2s8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBIaXN0b3J5OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnRhaW5lcntcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAyNnB4IC04cHggYmxhY2s7XFxuICAgIGJhY2tncm91bmQ6ICMyQzMxMzQ7XFxufVxcblwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuXG5pbXBvcnQgRHluYW1pY0NvbXBvbmVudCBmcm9tIFwiLi4vRHluYW1pY0NvbXBvbmVudFwiO1xuaW1wb3J0IEZvY3VzQmFyQ29tcG9uZW50IGZyb20gXCIuLi9Gb2N1c0JhckNvbXBvbmVudFwiO1xuXG4vLyBVdGlsaXRpZXMuXG5cbmltcG9ydCB7IGNyZWF0ZUNvbXBvbmVudCB9IGZyb20gXCIuLi91dGlsaXRpZXMvQ29tcG9uZW50XCI7XG5cbmNsYXNzIFByZXZpZXcgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGV2ZW50czoge30sXG4gICAgICAgICAgICBjb29yZGluYXRlczp7fSxcbiAgICAgICAgICAgIHRhcmdldDoge31cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldFRvRHJvcE1vZGUoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgb25EcmFnT3ZlcjogKChlKT0+e1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHZhciBwcmV2aW91c0Ryb3AgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRyb3BQb2ludFwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYocHJldmlvdXNEcm9wKVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNEcm9wLmNsYXNzTGlzdC5yZW1vdmUoXCJkcm9wUG9pbnRcIik7XG4gICAgICAgICAgICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJkcm9wUG9pbnRcIilcbiAgICAgICAgICAgICAgICAgICAgLy8gU2hvdyBkcm9wIHBvaW50cy5cbiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIH0pLmJpbmQodGhpcyksXG4gICAgICAgICAgICAgICAgb25Ecm9wOiAoKGUpPT57XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudCA9IHRoaXMucHJvcHMuY29tcG9uZW50O1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSBlLmRhdGFUcmFuc2Zlci5nZXREYXRhKFwiY29tcG9uZW50LW5hbWVcIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciB1dWlkID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS11dWlkXCIpO1xuICAgICAgICAgICAgICAgICAgICBjcmVhdGVDb21wb25lbnQocGFyZW50LCBjaGlsZCwgdXVpZClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudHM6e31cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9KS5iaW5kKHRoaXMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc2V0VG9FZGl0TW9kZSgpIHtcbiAgICAgICAgLy8gU2V0IG92ZXJsYXkuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZXZlbnRzOiB7XG4gICAgICAgICAgICAgICAgLy8gU2hvdyBlZGl0IHRvb2xzLlxuICAgICAgICAgICAgICAgIG9uTW91c2VPdmVyOiAoZSk9PntcbiAgICAgICAgICAgICAgICAgICAgaWYoZS50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS11dWlkXCIpPj0wKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBmb3IgcHJlc2VsZWN0ZWQgY2hpbGQuXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcHJlU2VsZWN0ZWRjaGlsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudGFyZ2V0Q2hpbGRcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHByZVNlbGVjdGVkY2hpbGQpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZVNlbGVjdGVkY2hpbGQuY2xhc3NMaXN0LnJlbW92ZShcInRhcmdldENoaWxkXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBhZGQgY2xhc3MuXG4gICAgICAgICAgICAgICAgICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKFwidGFyZ2V0Q2hpbGRcIilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk1PVVNFIE9WRVJcIilcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIC8vIFJlbW92ZSBlZGl0IHRvb2xzLlxuICAgICAgICAgICAgICAgIG9uTW91c2VMZWF2ZTogKGUpPT57XG4gICAgICAgICAgICAgICAgICAgIGxldCBwcmVTZWxlY3RlZGNoaWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50YXJnZXRDaGlsZFwiKVxuICAgICAgICAgICAgICAgICAgICBpZihwcmVTZWxlY3RlZGNoaWxkKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZVNlbGVjdGVkY2hpbGQuY2xhc3NMaXN0LnJlbW92ZShcInRhcmdldENoaWxkXCIpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb29yZGluYXRlczp7fVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk1PVVNFIExFQVZFXCIpXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBvbkNsaWNrOiAoKGUpPT57XG4gICAgICAgICAgICAgICAgICAgIC8vIHJlbW92ZSB0YXJnZXRDaGlsZFxuICAgICAgICAgICAgICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKFwidGFyZ2V0Q2hpbGRcIik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29vcmRpbmF0ZXM6IGUudGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldDogZS50YXJnZXRcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLy8gc2hvdyBlZGl0IHRvb2xzXG4gICAgICAgICAgICAgICAgfSkuYmluZCh0aGlzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGludGVyYWN0aXZlTW9kZSgpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGV2ZW50czoge31cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZWZyZXNoKCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZXZlbnRzOnt9LFxuICAgICAgICAgICAgaGlkZVRvb2w6IHRydWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgLy8gSGVscHMgdG8gcmVyZW5kZXIgd2hlbiBjaGFuZ2VzIHRvIG1hcmt1cC9ldmVudHMgYXJlIG1hZGUgdG8gdGhlIGNvbXBvbmVudCBhbmQgcHJldmlldyB0aGVtLlxuICAgICAgICBsZXQgcmFuZG9tS2V5ID0gdGhpcy5wcm9wcy5jb21wb25lbnQuaWQqKH5+KE1hdGgucmFuZG9tKCkqMTApKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIHByZXZpZXdcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgIFByZXZpZXdcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuc2V0VG9Ecm9wTW9kZS5iaW5kKHRoaXMpfT48aSBjbGFzc05hbWU9XCJmYXMgZmEtZmlsZS1leHBvcnRcIj48L2k+RHJvcDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuc2V0VG9FZGl0TW9kZS5iaW5kKHRoaXMpfT48aSBjbGFzc05hbWU9XCJmYXMgZmEtZmlsZS1leHBvcnRcIj48L2k+RWRpdDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuaW50ZXJhY3RpdmVNb2RlLmJpbmQodGhpcyl9PjxpIGNsYXNzTmFtZT1cImZhcyBmYS1maWxlLWV4cG9ydFwiPjwvaT5JbnRlcmFjdDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxEeW5hbWljQ29tcG9uZW50IGtleT17cmFuZG9tS2V5fSBjb21wb25lbnQ9e3RoaXMucHJvcHMuY29tcG9uZW50fSBldmVudHM9e3RoaXMuc3RhdGUuZXZlbnRzfS8+XG4gICAgICAgICAgICAgICAgPEZvY3VzQmFyQ29tcG9uZW50IFxuICAgICAgICAgICAgICAgICAgICBjb29yZGluYXRlcz17dGhpcy5zdGF0ZS5jb29yZGluYXRlc30gXG4gICAgICAgICAgICAgICAgICAgIGNvbXBvbmVudD17dGhpcy5wcm9wcy5jb21wb25lbnR9IFxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9e3RoaXMuc3RhdGUudGFyZ2V0fVxuICAgICAgICAgICAgICAgICAgICByZWZyZXNoPXt0aGlzLnJlZnJlc2guYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgaGlkZT17dGhpcy5zdGF0ZS5oaWRlVG9vbH0vPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFByZXZpZXc7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29udGFpbmVye1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICBib3gtc2hhZG93OiAwcHggOHB4IDI2cHggLThweCBibGFjaztcXG4gICAgYmFja2dyb3VuZDogIzJDMzEzNDtcXG59XFxuXFxuLmRyb3BQb2ludHtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW47XFxufVxcblxcbi50YXJnZXRDaGlsZHtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzNFOENFNDtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7Y3JlYXRlU3R5bGVzaGVldH0gZnJvbSBcIi4uL3V0aWxpdGllcy9qc3hUcmFuc3BpbGVyL2NyZWF0ZS1zdHlsZXNoZWV0XCI7XG5cbmltcG9ydCB7wqBnZXROZXN0ZWRDb21wb25lbnRzLCBzYXZlQ29tcG9uZW50c1RvV2luZG93IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuXG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNsYXNzIER5bmFtaWNDb21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGNvbXBvbmVudDogdGhpcy5wcm9wcy5jb21wb25lbnRcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY3JlYXRlU3R5bGVzaGVldCh0aGlzLnN0YXRlLmNvbXBvbmVudC5zdHlsZSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGlmKHRoaXMuc3RhdGUuY29tcG9uZW50Lm5hbWU9PT1cIlwiKXtcbiAgICAgICAgICAgIHJldHVybiAoPGRpdj5ObyBjb21wb25lbnQgc2VsZWN0ZWQuPC9kaXY+KVxuICAgICAgICB9XG4gICAgICAgIGxldCBuZXN0ZWRDb21wb25lbnRzID0gZ2V0TmVzdGVkQ29tcG9uZW50cyh0aGlzLnN0YXRlLmNvbXBvbmVudCk7XG4gICAgICAgIGlmIChuZXN0ZWRDb21wb25lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNhdmVDb21wb25lbnRzVG9XaW5kb3cobmVzdGVkQ29tcG9uZW50cyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZighd2luZG93W3RoaXMuc3RhdGUuY29tcG9uZW50Lm5hbWVdKXtcbiAgICAgICAgICAgIHJldHVybiAoPGRpdj5Db21wb25lbnQgbm90IHJlbmRlcmVkPC9kaXY+KVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgey4uLnRoaXMucHJvcHMuZXZlbnRzfT5cbiAgICAgICAgICAgICAgICB7UmVhY3QuY3JlYXRlRWxlbWVudCh3aW5kb3dbdGhpcy5zdGF0ZS5jb21wb25lbnQubmFtZV0pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IER5bmFtaWNDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuYm94IHtcXG4gICAgbWFyZ2luOiA1cHg7XFxuICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6NXB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuaW1wb3J0IHsgZGVsZXRlQ29tcG9uZW50IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9Db21wb25lbnRcIjtcblxuY2xhc3MgRm9jdXNCYXJDb21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICBtb3ZlQ2hpbGRVcChlKXtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIDEuIGdldCB0YXJnZXQgdXVpZFxuICAgICAgICAgKiAyLiBnZXQgZWxlbWVudCBjb250YWluaW5nIHV1aWRcbiAgICAgICAgICovXG4gICAgICAgIHZhciB0YXJnZXRVdWlkID0gdGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtdXVpZFwiKTtcblxuICAgICAgICAvLyBJbnNlcnQgdGhlIGNoaWxkIGJlZm9yZSB0aGUgcHJldmlvdXMgY2hpbGQuIFxuXG4gICAgfVxuICAgIG1vdmVDaGlsZERvd24oKXtcblxuICAgICAgICAvLyBSZW1vdmUgdGhlIGNoaWxkLlxuICAgICAgICAvLyBJbnNlcnQgdGhlIGNoaWxkIGFmdGVyIHRoZSBuZXh0IGNoaWxkLiBcblxuICAgIH1cbiAgICBkZWxldGVDaGlsZCgpe1xuICAgICAgICB2YXIgdGFnID0gdGhpcy5wcm9wcy50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1uYW1lXCIpO1xuICAgICAgICB2YXIgdXVpZCA9IHRoaXMucHJvcHMudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtdXVpZFwiKVxuICAgICAgICBkZWxldGVDb21wb25lbnQodGhpcy5wcm9wcy5jb21wb25lbnQsIHRhZywgdXVpZCk7XG4gICAgICAgIHRoaXMucHJvcHMucmVmcmVzaCgpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGNvb3JkaW5hdGVzID0gdGhpcy5wcm9wcy5jb29yZGluYXRlcztcbiAgICAgICAgbGV0IHN0eWxlID0ge1xuICAgICAgICAgICAgd2lkdGg6Y29vcmRpbmF0ZXMud2lkdGh8fDAsIFxuICAgICAgICAgICAgaGVpZ2h0OmNvb3JkaW5hdGVzLmhlaWdodHx8MCwgXG4gICAgICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLCBcbiAgICAgICAgICAgIHRvcDogY29vcmRpbmF0ZXMueXx8MCwgXG4gICAgICAgICAgICBsZWZ0OmNvb3JkaW5hdGVzLnh8fDAsXG4gICAgICAgICAgICBkaXNwbGF5OiB0aGlzLnByb3BzLmhpZGU/IFwibm9uZVwiOiBcImJsb2NrXCJcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1aS1vdmVybGF5XCIgc3R5bGU9e3N0eWxlfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvY3VzLWJhclwiPlxuICAgICAgICAgICAgICAgICAgICB7LyogPHNwYW4gdGl0bGU9XCJNb3ZlXCIgY2xhc3NOYW1lPVwibW92ZS1oYW5kbGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWFycm93cy1hbHRcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4gKi99XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwiTW92ZSB1cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLm1vdmVDaGlsZFVwLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWFycm93LXVwXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdGl0bGU9XCJNb3ZlIGRvd25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5tb3ZlQ2hpbGREb3duLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWFycm93LWRvd25cIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICB7LyogPHNwYW4gdGl0bGU9XCJFZGl0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1wZW5jaWwtYWx0XCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+ICovfVxuICAgICAgICAgICAgICAgICAgICB7LyogPHNwYW4gdGl0bGU9XCJEdXBsaWNhdGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNsb25lXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+ICovfVxuICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cIkRlbGV0ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmRlbGV0ZUNoaWxkLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLXRyYXNoXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhpZ2hsaWdodHNcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmb2N1c1wiPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvY3VzQmFyQ29tcG9uZW50OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmZvY3VzLWJhciB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcG9pbnRlci1ldmVudHM6IGFsbDtcXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gICAgdG9wOiAtMjBweDtcXG4gICAgaGVpZ2h0OiAyMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0U4Q0U0O1xcbiAgICBib3JkZXItcmFkaXVzOiAycHggMnB4IDAgMDtcXG4gICAgZm9udDogMTZweC8xIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XFxuICAgIGNvbG9yOiAjZmZmO1xcbn1cXG5cXG4uZm9jdXMtYmFyID4gc3BhbiBpIHtcXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gICAgZm9udC1zaXplOiAxNHB4O1xcbiAgICBjb2xvcjogI2ZmZjtcXG59XFxuXFxuLmZvY3VzLWJhciAubW92ZS1oYW5kbGU6Zmlyc3QtY2hpbGQge1xcbiAgICBjdXJzb3I6IG1vdmUgIWltcG9ydGFudDtcXG59XFxuXFxuLmZvY3VzLWJhciA+IHNwYW4ge1xcbiAgICBwYWRkaW5nOiA1cHg7XFxufVxcblxcbi5mb2N1cy1iYXIgPiBzcGFuOm5vdCgubW92ZS1oYW5kbGUpOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjEpO1xcbn1cXG5cXG5cXG4uaGlnaGxpZ2h0cyAuZm9jdXMge1xcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzNFOENFNDtcXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcblxcbiAgICBib3JkZXItd2lkdGg6IDFweDtcXG59XFxuXFxuLnVpLW92ZXJsYXkge1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVwiLCBcIlwiXSk7XG5cbiIsIlxuZnVuY3Rpb24gcGFyc2VMZWZ0KG1hcmt1cCwgdXVpZCwgdGFnKXtcbiAgICBcbiAgICBsZXQgdXVpZEluZGV4ID0gbWFya3VwLmluZGV4T2YodXVpZCk7XG4gICAgXG4gICAgbGV0IHN1c3BlY3QgPSBtYXJrdXAuc3Vic3RyKHV1aWRJbmRleCk7XG4gICAgLy8gZmluZCB0YWcgaW5kZXggZnJvbSBsZWZ0IG9mIHV1aWRJbmRleFxuICAgIHdoaWxlKHN1c3BlY3QuaW5kZXhPZihgPCR7dGFnfWApIT09MCl7XG4gICAgICAgIHV1aWRJbmRleC0tXG4gICAgICAgIHN1c3BlY3QgPSBtYXJrdXAuc3Vic3RyKHV1aWRJbmRleCk7XG4gICAgfVxuICAgIHJldHVybiBzdXNwZWN0O1xufVxuXG5mdW5jdGlvbiBwYXJzZVJpZ2h0KHN1c3BlY3QsIHRhZyl7XG4gICAgLy8gMS4gcmV0dXJuIHN1YnN0cmluZyBpbmRleCBvZiA8LyR7dGFnfT5cbiAgICAvLyAyLiB3aGF0IGlmIG5lc3RlZD9cbiAgICBsZXQgY2xvc2VUYWcgPSBgPC8ke3RhZ30+YFxuICAgIGxldCBjbG9zZVRhZ0luZGV4ID0gc3VzcGVjdC5pbmRleE9mKGNsb3NlVGFnKSArIGNsb3NlVGFnLmxlbmd0aFxuICAgIHJldHVybiBzdXNwZWN0LnN1YnN0cigwLGNsb3NlVGFnSW5kZXgpXG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgc3Vic3RyaW5nIGZyb20gbWFya3VwIGNvbnRhaW5pbmcgdGhlIHRhZy5cbiAqIEBwYXJhbSB7Kn0gbWFya3VwIFxuICogQHBhcmFtIHsqfSB1dWlkIC0gJ2RhdGEtdXVpZD1cIjJcIidcbiAqIEBwYXJhbSB7Kn0gdGFnIC0gSGlDb21wb25lbnRcbiAqL1xuZnVuY3Rpb24gZ2V0Q29tcG9uZW50TWFya3VwKG1hcmt1cCwgdXVpZCwgdGFnKXtcbiAgICB2YXIgc3VzcGVjdCA9IHBhcnNlTGVmdChtYXJrdXAsJ2RhdGEtdXVpZD1cIjFcIicsIHRhZyk7XG4gICAgcmV0dXJuIHBhcnNlUmlnaHQoc3VzcGVjdCwgdGFnKVxufVxuXG4vKipcbiAqIFJldHVybnMgc3RyaW5nIGFmdGVyIHJlbW92aW5nIGEgc3ViIGNvbXBvbmVudCBvZiBtYXRoY2luZyB0YWcgbmFtZVxuICogQHBhcmFtIHsqfSBtYXJrdXAgXG4gKiBAcGFyYW0geyp9IHV1aWQgXG4gKiBAcGFyYW0geyp9IHRhZyBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVN1YkNvbXBvbmVudChtYXJrdXAsIHV1aWQsIHRhZyl7XG4gICAgbGV0IGNvbXBvbmVudE1hcmt1cCA9IGdldENvbXBvbmVudE1hcmt1cChtYXJrdXAsIHV1aWQsIHRhZyk7XG4gICAgcmV0dXJuIG1hcmt1cC5zcGxpdChjb21wb25lbnRNYXJrdXApLmpvaW4oXCJcIilcbn0iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuLy8gQ29tcG9uZW50cy5cblxuaW1wb3J0IFJ1bGUgZnJvbSBcIi4vUnVsZVwiO1xuXG5pbXBvcnQge2dldE9iamVjdEZvcm1hdCwgY29udmVydFRvU3R5bGVTdHJpbmd9IGZyb20gXCIuLi91dGlsaXRpZXMvU3R5bGVcIjtcbmltcG9ydCB7cmVhZENvbXBvbmVudCwgd3JpdGVEYXRhLCByZWFkRGF0YX0gZnJvbSBcIi4uL3V0aWxpdGllcy9sb2NhbFN0b3JhZ2VcIjtcbi8vIFN0eWxlcy5cblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgU3R5bGVFeHBsb3JlciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG5cbiAgICAgICAgdmFyIGNvbXBvbmVudCA9IHJlYWRDb21wb25lbnQodGhpcy5zdGF0ZS5jb21wb25lbnQubmFtZSk7XG4gICAgICAgIHRoaXMuc3RhdGUucnVsZXMgPSBnZXRPYmplY3RGb3JtYXQoY29tcG9uZW50PyBjb21wb25lbnQuc3R5bGUgOiBcIlwiKTtcbiAgICB9XG5cbiAgICBhZGRSdWxlKCl7XG4gICAgICAgIGxldCBuZXdSdWxlcyA9IEFycmF5LmZyb20odGhpcy5zdGF0ZS5ydWxlcyk7XG4gICAgICAgIG5ld1J1bGVzLnVuc2hpZnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwibmV3Q2xhc3NcIixcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczpbe1xuICAgICAgICAgICAgICAgIHByb3BlcnR5OiBcIm5ld1Byb3BlcnR5XCIsXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgICAgICAgIH1dXG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcnVsZXM6IG5ld1J1bGVzXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcnVsZVVwZGF0ZShydWxlLCBpbmRleCkge1xuXG4gICAgICAgIC8vIERlbGV0ZSBpZiBzZWxlY3RvciBpcyBlbXB0eVxuICAgICAgICBpZighcnVsZS5zZWxlY3Rvcil7XG4gICAgICAgICAgICBydWxlID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHJ1bGVzID0gdGhpcy5zdGF0ZS5ydWxlcztcbiAgICAgICAgcnVsZXNbaW5kZXhdID0gcnVsZTtcblxuICAgICAgICB2YXIgY29tcG9uZW50cyA9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuICAgICAgICB2YXIgY29tcG9uZW50ID0gcmVhZENvbXBvbmVudCh0aGlzLnN0YXRlLmNvbXBvbmVudC5uYW1lKTtcblxuICAgICAgICAvLyBjb252ZXJ0IHJ1bGVzIHRvIGEgc3R5bGUgc3RyaW5nLlxuICAgICAgICBjb21wb25lbnQuc3R5bGUgPSBjb252ZXJ0VG9TdHlsZVN0cmluZyhydWxlcy5maWx0ZXIoQm9vbGVhbikpO1xuICAgICAgICBcbiAgICAgICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsY29tcG9uZW50cyk7XG4gICAgICAgIHRoaXMucHJvcHMub25FZGl0KCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBydWxlcyA9IHRoaXMuc3RhdGUucnVsZXMubWFwKChydWxlLGluZGV4KT0+PFJ1bGUga2V5PXtNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwMDApfSBpbmRleD17aW5kZXh9IHJ1bGU9e3J1bGV9IG9uVXBkYXRlPXt0aGlzLnJ1bGVVcGRhdGUuYmluZCh0aGlzKX0gLz4pO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+U3R5bGVFeHBsb3JlciAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmFkZFJ1bGUuYmluZCh0aGlzKX0+KzwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIHtydWxlc31cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU3R5bGVFeHBsb3JlcjtcbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG5pbXBvcnQgU2VsZWN0b3IgZnJvbSBcIi4vU2VsZWN0b3JcIjtcbmltcG9ydCBEZWNsYXJhdGlvbiBmcm9tIFwiLi9EZWNsYXJhdGlvblwiO1xuXG5jbGFzcyBSdWxlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzLnJ1bGUpO1xuICAgIH1cblxuICAgIHVwZGF0ZVNlbGVjdG9yKHNlbGVjdG9yKXtcbiAgICAgICAgdGhpcy5wcm9wcy5vblVwZGF0ZSh7XG4gICAgICAgICAgICBzZWxlY3Rvcjogc2VsZWN0b3IsXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IHRoaXMuc3RhdGUuZGVjbGFyYXRpb25zXG4gICAgICAgIH0sIHRoaXMucHJvcHMuaW5kZXgpXG4gICAgfVxuXG4gICAgdXBkYXRlRGVjbGFyYXRpb25zKGRlY2xhcmF0aW9ucyl7XG5cbiAgICAgICAgdGhpcy5wcm9wcy5vblVwZGF0ZSh7XG4gICAgICAgICAgICBzZWxlY3RvcjogdGhpcy5zdGF0ZS5zZWxlY3RvcixcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogZGVjbGFyYXRpb25zXG4gICAgICAgIH0sdGhpcy5wcm9wcy5pbmRleClcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJ1bGVzIGNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxTZWxlY3RvciBcbiAgICAgICAgICAgICAgICAgICAgbmFtZT17dGhpcy5zdGF0ZS5zZWxlY3Rvcn1cbiAgICAgICAgICAgICAgICAgICAga2V5PXtNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwMDApfVxuICAgICAgICAgICAgICAgICAgICBvbkVkaXQ9e3RoaXMudXBkYXRlU2VsZWN0b3IuYmluZCh0aGlzKX0vPntcIiB7XCJ9XG4gICAgICAgICAgICAgICAgPERlY2xhcmF0aW9uIFxuICAgICAgICAgICAgICAgICAgICBkZWNsYXJhdGlvbnM9e3RoaXMuc3RhdGUuZGVjbGFyYXRpb25zfSBcbiAgICAgICAgICAgICAgICAgICAga2V5PXtNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwMDApfVxuICAgICAgICAgICAgICAgICAgICBvbkVkaXQ9e3RoaXMudXBkYXRlRGVjbGFyYXRpb25zLmJpbmQodGhpcyl9Lz5cbiAgICAgICAgICAgICAgICB7XCJ9XCJ9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJ1bGU7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5ydWxlcyB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG59XFxuXFxuLnJ1bGVzIGlucHV0IHtcXG4gICAgYm9yZGVyOiAwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG5jbGFzcyBTZWxlY3RvciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdXBkYXRlU2VsZWN0b3IoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbmFtZTogZS5jdXJyZW50VGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgdmFsdWVDaGFuZ2VkKCl7XG4gICAgICAgIGlmKHRoaXMucHJvcHMubmFtZSE9PXRoaXMuc3RhdGUubmFtZSl7XG4gICAgICAgICAgICAvLyB0aGVuIHNlbGVjdG9yIG5hbWUgY2hhbmdlZFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkVkaXQodGhpcy5zdGF0ZS5uYW1lKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2VsZWN0VGV4dChlKXtcbiAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnNlbGVjdCgpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGF1dG9Gb2N1cyA9IHRoaXMuc3RhdGUubmFtZS5pbmNsdWRlcyhcIm5ld0NsYXNzXCIpPyBcImF1dG9Gb2N1c1wiOiBcIlwiO1xuICAgICAgICByZXR1cm4gPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLm5hbWV9IFxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0b0ZvY3VzPXthdXRvRm9jdXN9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkJsdXI9e3RoaXMudmFsdWVDaGFuZ2VkLmJpbmQodGhpcyl9IFxuICAgICAgICAgICAgICAgICAgICAgICAgb25Gb2N1cz17dGhpcy5zZWxlY3RUZXh0LmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy51cGRhdGVTZWxlY3Rvci5iaW5kKHRoaXMpfS8+XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTZWxlY3RvcjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBQcm9wZXJ0eSBmcm9tIFwiLi9Qcm9wZXJ0eVwiO1xuaW1wb3J0IFZhbHVlIGZyb20gXCIuL1ZhbHVlXCI7XG5cbmNsYXNzIERlY2xhcmF0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICBhZGROZXdEZWNsYXJhdGlvbihpbmRleCkge1xuICAgICAgICBsZXQgZGVjbGFyYXRpb25zID0gdGhpcy5zdGF0ZS5kZWNsYXJhdGlvbnM7XG4gICAgICAgIGluZGV4ID0gaW5kZXgrMTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFsuLi5kZWNsYXJhdGlvbnMuc2xpY2UoMCxpbmRleCkse3Byb3BlcnR5OlwiYWRkUHJvcGVydHlcIiwgdmFsdWU6IFwiXCJ9LC4uLmRlY2xhcmF0aW9ucy5zbGljZShpbmRleCxkZWNsYXJhdGlvbnMubGVuZ3RoKV1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvbkVkaXQocHJldmlvdXNWYWx1ZSwgY3VycmVudFZhbHVlLCBpbmRleCkge1xuICAgICAgICBsZXQgZGVjbGFyYXRpb25zID0gdGhpcy5zdGF0ZS5kZWNsYXJhdGlvbnM7XG4gICAgICAgIGRlY2xhcmF0aW9uc1tpbmRleF0ucHJvcGVydHkgPSBjdXJyZW50VmFsdWU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2RlY2xhcmF0aW9uczpkZWNsYXJhdGlvbnN9KTtcblxuICAgICAgICBpZihkZWNsYXJhdGlvbnNbaW5kZXhdLnZhbHVlKXtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25FZGl0KGRlY2xhcmF0aW9ucylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uVmFsdWVFZGl0KHByZXZpb3VzVmFsdWUsIGN1cnJlbnRWYWx1ZSwgaW5kZXgpIHtcbiAgICAgICAgbGV0IGRlY2xhcmF0aW9ucyA9IHRoaXMuc3RhdGUuZGVjbGFyYXRpb25zO1xuICAgICAgICBkZWNsYXJhdGlvbnNbaW5kZXhdLnZhbHVlID0gY3VycmVudFZhbHVlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtkZWNsYXJhdGlvbnM6ZGVjbGFyYXRpb25zfSlcbiAgICAgICAgdGhpcy5wcm9wcy5vbkVkaXQoZGVjbGFyYXRpb25zKVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJkZWNsYXJhdGlvblwiPlxuICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmRlY2xhcmF0aW9ucy5tYXAoKGRlY2xhcmF0aW9uLGluZGV4KT0+IDxkaXYga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxQcm9wZXJ0eSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDAwKX0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17ZGVjbGFyYXRpb24ucHJvcGVydHl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkVkaXQ9e3RoaXMub25FZGl0LmJpbmQodGhpcyl9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxWYWx1ZSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDAwKX0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleD17aW5kZXh9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2RlY2xhcmF0aW9uLnZhbHVlfSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uTmV3ZGVjbGFyYXRpb249e3RoaXMuYWRkTmV3RGVjbGFyYXRpb24uYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRWRpdD17dGhpcy5vblZhbHVlRWRpdC5iaW5kKHRoaXMpfS8+XG4gICAgICAgICAgICAgICAgPC9kaXY+KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGVjbGFyYXRpb247XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5kZWNsYXJhdGlvbntcXG4gICAgcGFkZGluZy1sZWZ0OjEwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG5jbGFzcyBQcm9wZXJ0eSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdXBkYXRlU2VsZWN0b3IoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IGUuY3VycmVudFRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHZhbHVlQ2hhbmdlZCgpe1xuICAgICAgICBpZih0aGlzLnByb3BzLnZhbHVlIT09dGhpcy5zdGF0ZS52YWx1ZSl7XG4gICAgICAgICAgICAvLyB0aGVuIHNlbGVjdG9yIG5hbWUgY2hhbmdlZFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkVkaXQodGhpcy5wcm9wcy52YWx1ZSwgdGhpcy5zdGF0ZS52YWx1ZSwgdGhpcy5wcm9wcy5pbmRleClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNlbGVjdFRleHQoZSl7XG4gICAgICAgIGUuY3VycmVudFRhcmdldC5zZWxlY3QoKTtcbiAgICB9XG4gICAgXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgYXV0b0ZvY3VzID0gdGhpcy5zdGF0ZS52YWx1ZS5pbmNsdWRlcyhcImFkZFByb3BlcnR5XCIpPyBcImF1dG9Gb2N1c1wiOiBcIlwiO1xuICAgICAgICByZXR1cm4gIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIiBcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUudmFsdWV9XG4gICAgICAgICAgICAgICAgICAgIGF1dG9Gb2N1cz17YXV0b0ZvY3VzfVxuICAgICAgICAgICAgICAgICAgICBvbkJsdXI9e3RoaXMudmFsdWVDaGFuZ2VkLmJpbmQodGhpcyl9IFxuICAgICAgICAgICAgICAgICAgICBvbkZvY3VzPXt0aGlzLnNlbGVjdFRleHQuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMudXBkYXRlU2VsZWN0b3IuYmluZCh0aGlzKX0vPlxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUHJvcGVydHk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG5jbGFzcyBWYWx1ZSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgdXBkYXRlU2VsZWN0b3IoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgdmFsdWU6IGUuY3VycmVudFRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHZhbHVlQ2hhbmdlZCgpe1xuICAgICAgICBpZih0aGlzLnByb3BzLm5hbWUhPT10aGlzLnN0YXRlLnZhbHVlKXtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25FZGl0KHRoaXMucHJvcHMudmFsdWUsIHRoaXMuc3RhdGUudmFsdWUsIHRoaXMucHJvcHMuaW5kZXgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkTmV3KGUpe1xuICAgICAgICBpZihlLmtleT09IFwiRW50ZXJcIil7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uTmV3ZGVjbGFyYXRpb24odGhpcy5wcm9wcy5pbmRleCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZWxlY3RUZXh0KGUpe1xuICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc2VsZWN0KCk7XG4gICAgfVxuICAgIFxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIDxpbnB1dCB0eXBlPVwidGV4dFwiIFxuICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfSBcbiAgICAgICAgICAgICAgICBvbkJsdXI9e3RoaXMudmFsdWVDaGFuZ2VkLmJpbmQodGhpcyl9IFxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnVwZGF0ZVNlbGVjdG9yLmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgb25Gb2N1cz17dGhpcy5zZWxlY3RUZXh0LmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgb25LZXlQcmVzcz17dGhpcy5hZGROZXcuYmluZCh0aGlzKX0vPlxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVmFsdWU7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiXSk7XG5cbiIsIlxuZnVuY3Rpb24gY29udmVydFRvU3RyaW5nKHByb3BlcnR5KXtcbiAgICByZXR1cm4gYFwiJHtwcm9wZXJ0eS5zcGxpdChcIjpcIilbMF0udHJpbSgpfVwiOlwiJHtwcm9wZXJ0eS5zcGxpdChcIjpcIilbMV0udHJpbSgpfVwiYFxufVxuXG5mdW5jdGlvbiBjb252ZXJ0VG9PYmplY3QocnVsZSl7XG5cbiAgICB2YXIgc2VsZWN0b3IgPSBydWxlLnNwbGl0KFwie1wiKVswXS50cmltKCk7XG4gICAgdmFyIHByb3BlcnRpZXMgPSAneycrcnVsZS5zcGxpdChcIntcIilbMV0uc3BsaXQoXCJ9XCIpWzBdLnNwbGl0KFwiO1wiKS5tYXAocz0+cy50cmltKCkpLmZpbHRlcihCb29sZWFuKS5tYXAoY29udmVydFRvU3RyaW5nKS5qb2luKFwiLFwiKSArJ30nO1xuXG4gICAgdmFyIGRlY2xhcmF0aW9ucyA9IEpTT04ucGFyc2UocHJvcGVydGllcylcblxuICAgIHZhciBydWxlID0ge1xuICAgICAgICBzZWxlY3Rvcjogc2VsZWN0b3IsXG4gICAgICAgIGRlY2xhcmF0aW9uczogT2JqZWN0LmtleXMoZGVjbGFyYXRpb25zKS5tYXAoa2V5PT57XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHByb3BlcnR5OiBrZXksXG4gICAgICAgICAgICAgICAgdmFsdWU6IGRlY2xhcmF0aW9uc1trZXldXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfTtcblxuICAgIHJldHVybiBydWxlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0T2JqZWN0Rm9ybWF0KHN0eWxlKXtcbiAgICBpZighc3R5bGUgfHwgc3R5bGUubGVuZ3RoPT0wKXtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICB2YXIgcnVsZXMgPSBzdHlsZS5zcGxpdChcIn1cIikuZmlsdGVyKEJvb2xlYW4pLm1hcChpdGVtPT5pdGVtK1wifVwiKTtcbiAgICByZXR1cm4gcnVsZXMubWFwKGNvbnZlcnRUb09iamVjdCk7XG59XG5cbmZ1bmN0aW9uIHJ1bGVUb1N0cmluZyhydWxlKXtcblx0cmV0dXJuIGAke3J1bGUuc2VsZWN0b3J9ICAgIHtcXG4ke2RlY2xhcmF0aW9uVG9TdHJpbmcocnVsZS5kZWNsYXJhdGlvbnMpfVxcbn1gXG59XG5mdW5jdGlvbiBkZWNsYXJhdGlvblRvU3RyaW5nKGRlY2xhcmF0aW9ucyl7XG5cdHJldHVybiBkZWNsYXJhdGlvbnMubWFwKGRlY2xhcmF0aW9uPT5gICAgICR7ZGVjbGFyYXRpb24ucHJvcGVydHl9OiAgICAgJHtkZWNsYXJhdGlvbi52YWx1ZX07YCkuam9pbihcIlxcblwiKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRvU3R5bGVTdHJpbmcocnVsZXMpe1xuICAgIHJldHVybiBydWxlcy5tYXAocnVsZVRvU3RyaW5nKS5qb2luKFwiXFxuXCIpO1xufSIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIENvbXBvbmVudHMuIFxuXG4vLyBwcml2YXRlIC0gZXhwYW5kL2NvbGxhcHNlIFxuLy8gcHVibGljICAtIG9uQ2xpY2sgLSBTaG93IGxpc3Qgb2YgY2xhc3Nlcy4gXG5pbXBvcnQgVGFncyBmcm9tIFwiLi9UYWdzXCI7XG5cbi8vIFN0eWxlcy5cblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgVGFnRXhwbG9yZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBsZXQgbm9kZVRyZWUgPSB0aGlzLnByb3BzLm5vZGUucmVzdWx0O1xuXG4gICAgICAgIGlmKG5vZGVUcmVlPT09dW5kZWZpbmVkIHx8IHRoaXMucHJvcHMubm9kZS5lcnJvciE9PXVuZGVmaW5lZCl7XG4gICAgICAgICAgICByZXR1cm4oXG4gICAgICAgICAgICAgICAgPGRpdj48L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+VGFnRXhwbG9yZXI8L2Rpdj5cbiAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwidGFnc1wiPlxuICAgICAgICAgICAgICAgICAgICA8VGFncyBub2RlPXtub2RlVHJlZX0vPlxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhZ0V4cGxvcmVyO1xuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge2NvbnZlcnRKU09OdG9IVE1MQXR0cmlidXRlc30gZnJvbSBcIi4uL3V0aWxpdGllcy9jb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXNcIjtcbmNsYXNzIFRhZ3MgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHZhciBub2RlID0gdGhpcy5wcm9wcy5ub2RlO1xuICAgICAgICB2YXIgcHJvcHMgPSBPYmplY3QuYXNzaWduKHt9LCBub2RlLnByb3BzKTsgXG4gICAgICAgIFxuICAgICAgICBkZWxldGUgcHJvcHMuY2hpbGRyZW5cblxuICAgICAgICBwcm9wcyA9IGNvbnZlcnRKU09OdG9IVE1MQXR0cmlidXRlcyhwcm9wcyk7XG5cbiAgICAgICAgaWYoIW5vZGUgfHwgdHlwZW9mIG5vZGUgPT09IFwic3RyaW5nXCIpe1xuICAgICAgICAgICAgcmV0dXJuICg8c3Bhbj5udWxsPC9zcGFuPilcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gbm9kZVxuICAgICAgICBpZih0eXBlb2Ygbm9kZS5wcm9wcy5jaGlsZHJlbiA9PT0gXCJzdHJpbmdcIil7XG4gICAgICAgICAgICBsZXQgY2hpbGQgPSBub2RlLnByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgIHtgPCR7bm9kZS50eXBlfSAke3Byb3BzfT4ke2NoaWxkfTwvJHtub2RlLnR5cGV9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2hpbGRyZW5cbiAgICAgICAgaWYobm9kZS5wcm9wcyAmJiBBcnJheS5pc0FycmF5KG5vZGUucHJvcHMuY2hpbGRyZW4pKXtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUucHJvcHMuY2hpbGRyZW4ubWFwKChjaGlsZCxpbmRleCk9PjxUYWdzIGtleT17aW5kZXh9IG5vZGU9e2NoaWxkfS8+KTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZX0gJHtwcm9wc30+YH1cbiAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgICAgICB7YDwvJHtub2RlLnR5cGV9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgbm9kZSBjb250YWlucyBvbmx5IG9uZSBjaGlsZHJlbiwganN4IGdldCB0cmFuc3BpbGVkIHRvIG9iamVjdCByYXRoZXIgdGhhbiBhcnJheS5cbiAgICAgICAgaWYodHlwZW9mIG5vZGUucHJvcHMuY2hpbGRyZW4gPT09IFwib2JqZWN0XCIpe1xuICAgICAgICAgICAgbGV0IGNoaWxkID0gbm9kZS5wcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwkeyhub2RlLnR5cGUubmFtZSB8fCBub2RlLnR5cGUpfSAke3Byb3BzfT5gfVxuICAgICAgICAgICAgICAgICAgICAgICAgPFRhZ3Mga2V5PXtpbmRleH0gbm9kZT17Y2hpbGR9Lz5cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7KG5vZGUudHlwZS5uYW1lIHx8IG5vZGUudHlwZSl9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2hpbHJlbiBjb21wb25lbnQgLyBOZXN0ZWQgY29tcG9uZW50XG4gICAgICAgIGlmKHR5cGVvZiBub2RlLnR5cGUgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGUubmFtZX0vPmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjaGVjayBpZiBub2RlIGlzIG9iamVjdFxuICAgICAgICBpZih0eXBlb2Ygbm9kZS50eXBlID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZS5pZH0+YH1cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlLmlkfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PmB9XG4gICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGV9XG4gICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFnczsiLCJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMocHJvcHMpIHtcbiAgICBsZXQgc3RyaW5nID0gSlNPTi5zdHJpbmdpZnkocHJvcHMpO1xuICAgIE9iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKHByb3A9PnByb3BzW3Byb3BdPWAnJHtwcm9wc1twcm9wXX0nYCk7XG4gICAgLy8gRG9udCBjb25zaWRlciB0aGUgZW1wdHkgb2JqZWN0cy5cbiAgICBpZihzdHJpbmcubGVuZ3RoPjIpe1xuICAgICAgICBsZXQgbGlzdCA9IEpTT04uc3RyaW5naWZ5KHByb3BzKS5zcGxpdCgnXCInKS5tYXAoaXRlbT0+IHtcbiAgICAgICAgICAgIGlmKGl0ZW0uaW5jbHVkZXMoXCJ7XCIpIHx8IGl0ZW0uaW5jbHVkZXMoXCJ9XCIpKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoaXRlbT09PVwiOlwiKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCI9XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKGl0ZW09PT1cIixcIil7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiIFwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgfSkuZmlsdGVyKEJvb2xlYW4pXG5cbiAgICAgICAgcmV0dXJuIGxpc3Quam9pbihcIlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGFncyB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG59XFxuXFxuLnRhZ3MgbGkge1xcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcXG59XCIsIFwiXCJdKTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==