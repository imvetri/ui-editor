!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=13)}([function(e,t,n){"use strict";e.exports=n(14)},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(i=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}var i;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];null!=a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];null!=i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){var r,o,a={},i=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),u=null,s=0,c=[],f=n(21);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=a[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(b(r.parts[i],t))}else{var l=[];for(i=0;i<r.parts.length;i++)l.push(b(r.parts[i],t));a[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),c.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return y(t,e.attrs),m(e,t),t}function y(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function b(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var i=s++;n=u||(u=v(t)),r=_.bind(null,n,i,!1),o=_.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var i=n[o];(l=a[i.id]).refs--,r.push(l)}e&&d(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete a[l.id]}}}};var g,x=(g=[],function(e,t){return g[e]=t,g.filter(Boolean).join("\n")});function _(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=x(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.popHistory=function(){var e=i("ui-editor-history");if(!e)return;var t=e.pop();o("ui-editor-history",e,!0),o("ui-editor",t,!0)},t.writeData=o,t.readData=i,t.readComponent=function(e){var t=i("ui-editor");if(!t)return;return t.find(function(t){return t.name===e})},t.writeComponent=function(e,t){if(!Array.isArray(e)&&e.name){var n=i("ui-editor"),a=n.findIndex(function(t){return t.name===e.name});t&&(e.markup=function(e){(0,r.getStartTags)(e);for(var t=(o=e,a="data-uuid",o.split(a).length-1),n=0;n<t;n++)e=e.replace(' data-uuid="'+n+'"',"");var o,a;return e}(e.idMarkup)),n[a]=e,o("ui-editor",n)}};var r=n(31);function o(e,t,n){localStorage.setItem(e,JSON.stringify(t)),n||function(e){window.editorHistory=i("ui-editor-history"),editorHistory.push(e),localStorage.setItem("ui-editor-history",JSON.stringify(editorHistory))}(t)}function a(e){var t=(0,r.getStartTags)(e.markup);e.idMarkup=e.markup;var n=t.map(function(e,t){return e.replace(">",' data-uuid="'+t+'">')});t.forEach(function(t,r){e.idMarkup=e.idMarkup.replace(t,n[r])})}function i(e){var t=JSON.parse(localStorage.getItem(e));return t.length?("ui-editor"===e&&t.forEach(a),t):[]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkNestedComponents=i,t.saveComponentsToWindow=function(e){e.forEach(l)},t.getNestedComponents=function e(t){var n=(0,a.readData)("ui-editor");var r=[t];if(i(t.markup)){var o=n.filter(function(e){return t.markup.includes(e.name)}),l=o.map(e).flat(3);r.push.apply(r,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(l))}return r.filter(function(e){return e&&e.markup})},t.getChildComponents=function(e){return(0,a.readData)("ui-editor").filter(function(t){return e.includes(t.name)})};var r=n(9),o=n(8),a=n(3);function i(e){return(0,a.readData)("ui-editor").filter(function(t){return e.includes(t.name)}).length>0}function l(e){(0,o.createStylesheet)(e.style,e.name),window[e.name]=(0,r.createComponent)(e)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))o.call(n,c)&&(u[c]=n[c]);if(r){l=r(n);for(var f=0;f<l.length;f++)a.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(8),u=n(4),s=n(3);n(32);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={component:n.props.component},(0,l.createStylesheet)(n.state.component.style),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"preventDefault",value:function(e){var t=document.querySelectorAll(".droptarget.green");t[0]&&(t[0].classList.remove("droptarget"),t[0].classList.remove("green")),e.target.classList.add("droptarget"),e.target.classList.add("green"),e.preventDefault()}},{key:"onDrop",value:function(e){e.preventDefault();var t=e.dataTransfer.getData("component-name"),n=e.target.getAttribute("data-uuid"),r=this.state.component;r.idMarkup=r.idMarkup.replace('"'+n+'">','"'+n+'"><'+t+"/>"),(0,s.writeComponent)(r,!0),this.setState({component:r})}},{key:"render",value:function(){if(""===this.state.component.name)return i.default.createElement("div",null,"Nothing created.");var e=(0,u.getNestedComponents)(this.state.component);return e.length>0&&(0,u.saveComponentsToWindow)(e),window[this.state.component.name]?i.default.createElement("div",{onDrop:this.onDrop.bind(this),onDragOver:this.preventDefault.bind(this)},i.default.createElement(window[this.state.component.name])):i.default.createElement("div",null,"Component not rendered")}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createStylesheet=function(e,t){[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(document.querySelectorAll("[data-component-name='ParentComponent']"))).forEach(function(e){e.remove()});var n=document.createElement("style");n.setAttribute("data-component-name",t),n.type="text/css",n.innerHTML=e,document.body.appendChild(n)}},function(module,exports,__webpack_require__){"use strict";var _codeModifier=__webpack_require__(30),_nestedComponentSetup=__webpack_require__(4);function getComponentString(e,t){if(e.idMarkup[3])return convertToReactcomponent(e,t)}function createComponent(component){var componentString=getComponentString(component,{"drag-drop-feature":!0});return eval(Babel.transform(componentString,{presets:["react"],plugins:["transform-es2015-classes"]}).code)}function convertToReactcomponent(e,t){var n="markup";t&&t["drag-drop-feature"]&&(n="idMarkup"),e.events.forEach(function(e){e.id=e.id.replace("-","")});var r=function(t){var n=JSON.parse(e.config);return Object.keys(n).forEach(function(e){n[e].overideState&&(t=t.replace(e,e+" state={this.state."+e+"}"))}),t}(function(t,n){n.forEach(function(e){var n='id="'+e.id+'"';t=t.replace(n,n+" "+e.name+"={this."+(e.id+e.name)+".bind(this)}")});var r=(0,_nestedComponentSetup.getChildComponents)(t);return r.length>0?(r.forEach(function(n){var r=n.events.filter(function(e){return!0===e.publishable});if(0!=r.length){var o=void 0;r.forEach(function(t){o=e.events.find(function(e){return e.name===t.publishName})});var a=(0,_codeModifier.codeModifier)(o.reducer,e),i=o.name+"={function(e){"+a+"}.bind(this)}";t=e[t].replace(n.name,n.name+" "+i)}}),t.split("{state.").join("{this.state.")):t.split("{state.").join("{this.state.")}(function(e){return e[n].replace(">"," data-name='"+e.name+"'>")}(e),e.events)),o=e.events.map(function(t){var n=t.id+t.name,r=(0,_codeModifier.codeModifier)(t.reducer,e);return!0===t.publishable?"\n                    "+n+" (e) {\n                        "+r+"\n                        e.state = state;\n                        debugger;(1)\n                        this.props."+t.publishName+"? this.props."+t.publishName+"(e):null;\n                    }\n                    ":"\n                    "+n+" (e) {\n                        "+r+"\n                    }"}).join("\n");return"(\n    class "+e.name.split(" ").join("")+" extends Component {\n    \n        constructor(props) {\n            super(props);\n            this.state = this.props.state || "+e.state+";\n        }\n    \n        "+o+"\n    \n        render() {\n    \n            return ("+r+")\n        }\n    })\n    "}module.exports={createComponent:createComponent,getComponentString:getComponentString}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateselectedIndex=function(e){var t=e.currentTarget.innerText.split("\n")[0],n=this.state.elements.find(function(e){return e.name===t}),r=this.state.elements.findIndex(function(e){return e.name===t});window.selectedcomponentname=n.name,this.setState({selectedIndex:r,name:n.name,markup:n.markup})},t.saveElement=function(e){var t=Array.from(this.state.elements),n=t.find(function(t){return t.name===e.name}),o=this.state.selectedIndex;if(n){var a=t[this.state.selectedIndex];a=Object.assign(a,e),t[this.state.selectedIndex]=a}else{var i={name:e.name,markup:e.markup,events:[],state:e.state||"{}",style:e.style,children:[],id:Math.ceil(1e3*Math.random()),config:"{}"};o=t.length-1,t.push(i)}this.setState({elements:t,element:{name:e.name,markup:e.markup,style:e.style,state:e.state,events:e.events||[]},selectedIndex:o}),(0,r.writeData)("ui-editor",t)},t.updateEvent=function(e){var t=Object.assign({},this.state).elements;t[this.state.selectedIndex].events=e,this.setState({elements:t}),(0,r.writeData)("ui-editor",t)},t.onDelete=function(e){var t=e.target.parentElement.parentElement.innerText.split("\n")[0];if(this.state.elements.find(function(e){return e.name===t}).length<1)return;var n=Array.from(this.state.elements),o=n.findIndex(function(e){return e.name===t});n.splice(o,1),this.setState({elements:n}),(0,r.writeData)("ui-editor",n)},t.updateConfig=function(e){var t=Object.assign({},this.state).elements,n=t.find(function(t){return t.name===e.parentName}),o=t.find(function(t){return t.name===e.childName});n.state=JSON.parse(n.state),void 0===n.config?n.config={}:n.config=JSON.parse(n.config);n.config[o.name]=n.config[o.name]||{},n.config[o.name].overideState=e.override,n.config[o.name].overideState?n.state[o.name]=JSON.parse(o.state):(delete n.state[o.name],delete n.config[o.name]);n.state=JSON.stringify(n.state),n.config=JSON.stringify(n.config),this.setState({elements:t}),(0,r.writeData)("ui-editor",t)};var r=n(3)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o);n(51);var i=l(n(53));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.messages;return a.default.createElement("div",{className:"console"},e.map(function(e,t){return a.default.createElement(i.default,{key:t,message:e})}))}}]),t}();t.default=u},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getNodeTree=getNodeTree;var _react=__webpack_require__(0),_react2=_interopRequireDefault(_react),_nestedComponentSetup=__webpack_require__(4),_localStorage=__webpack_require__(3);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function getNodeTree(element,jsx,style,state,events){var result=void 0,error=void 0;try{var nestedComponents=(0,_nestedComponentSetup.getNestedComponents)(element);nestedComponents.length>0&&(0,_nestedComponentSetup.saveComponentsToWindow)(nestedComponents),result=eval(Babel.transform(jsx,{presets:["react"]}).code)}catch(e){error=e}finally{return _defineProperty({error:error,result:result},"result",result)}}window.React=_react2.default,window.Component=_react2.default.Component,window.saveVariants=function(e,t,n,r){var o=(0,_localStorage.readData)("ui-editor");if(e===t){var a=o.find(function(t){return t.name===e.name});a.variants=a.variants||[a.state],a.variants.push(n),a.variants=[].concat(_toConsumableArray(new Set(a.variants.map(JSON.stringify)))).map(JSON.parse).filter(Boolean),(0,_localStorage.writeData)("ui-editor",o)}else{var i=o.find(function(t){return t.name===e.name}),l=o.find(function(e){return e.name===t.name});i.variants=i.variants||[JSON.parse(i.state)];var u=JSON.parse(i.state),s={};s[l.name]=n,u=Object.assign(u,s),i.variants.push(u),i.variants=[].concat(_toConsumableArray(new Set(i.variants.map(JSON.stringify)))).map(JSON.parse).filter(Boolean),(0,_localStorage.writeData)("ui-editor",o)}}},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o),i=u(n(15));n(6);var l=u(n(22));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("div",null,a.default.createElement(l.default,null))}}]),t}();i.default.render(a.default.createElement(s,null),document.getElementById("index"))},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function _(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||g}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||g}_.prototype.isReactComponent={},_.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&b("85"),this.updater.enqueueSetState(this,e,t,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=_.prototype;var E=k.prototype=new w;E.constructor=k,r(E,_.prototype),E.isPureReactComponent=!0;var S={current:null},T={current:null},C=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)C.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:T.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var j=/\/+/g,M=[];function I(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case a:case i:u=!0}}if(u)return r(o,t,""===n?"."+U(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+U(l=t[s],s);u+=e(l,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=y&&t[y]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(l=t.next()).done;)u+=e(l=l.value,c=n+U(l,s++),r,o);else"object"===l&&b("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function U(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function z(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(j,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(j,"$&/")+"/"),D(e,z,t=I(t,a,r,o)),R(t)}function F(){var e=S.current;return null===e&&b("321"),e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,A,t=I(null,null,t,n)),R(t)},count:function(e){return D(e,function(){return null},null)},toArray:function(e){var t=[];return L(e,t,null,function(e){return e}),t},only:function(e){return N(e)||b("143"),e}},createRef:function(){return{current:null}},Component:_,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return F().useCallback(e,t)},useContext:function(e,t){return F().useContext(e,t)},useEffect:function(e,t){return F().useEffect(e,t)},useImperativeHandle:function(e,t,n){return F().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return F().useLayoutEffect(e,t)},useMemo:function(e,t){return F().useMemo(e,t)},useReducer:function(e,t,n){return F().useReducer(e,t,n)},useRef:function(e){return F().useRef(e)},useState:function(e){return F().useState(e)},Fragment:l,StrictMode:u,Suspense:m,createElement:P,cloneElement:function(e,t,n){null==e&&b("267",e);var o=void 0,i=r({},e.props),l=e.key,u=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,s=T.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)C.call(t,o)&&!O.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];i.children=c}return{$$typeof:a,type:e.type,key:l,ref:u,props:i,_owner:s}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:T,assign:r}},V={default:W},B=V&&W||V;e.exports=B.default||B},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(16)},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),a=n(17);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var l=!1,u=null,s=!1,c=null,f={onError:function(e){l=!0,u=e}};function d(e,t,n,r,o,a,i,s,c){l=!1,u=null,function(e,t,n,r,o,a,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||i("96",e),!y[n])for(var r in t.extractEvents||i("97",e),y[n]=t,n=t.eventTypes){var o=void 0,a=n[r],l=t,u=r;b.hasOwnProperty(u)&&i("99",u),b[u]=a;var s=a.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&v(s[o],l,u);o=!0}else a.registrationName?(v(a.registrationName,l,u),o=!0):o=!1;o||i("98",r,e)}}}function v(e,t,n){g[e]&&i("100",e),g[e]=t,x[e]=t.eventTypes[n].dependencies}var y=[],b={},g={},x={},_=null,w=null,k=null;function E(e,t,n){var r=e.type||"unknown-event";e.currentTarget=k(n),function(e,t,n,r,o,a,f,p,m){if(d.apply(this,arguments),l){if(l){var h=u;l=!1,u=null}else i("198"),h=void 0;s||(s=!0,c=h)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function T(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)E(e,t[r],n[r]);else t&&E(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var P={injectEventPluginOrder:function(e){p&&i("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&i("102",t),m[t]=r,n=!0)}n&&h()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function j(e){if(null!==e&&(C=S(C,e)),e=C,C=null,e&&(T(e,O),C&&i("95"),s))throw e=c,s=!1,c=null,e}var M=Math.random().toString(36).slice(2),I="__reactInternalInstance$"+M,R="__reactEventHandlers$"+M;function D(e){if(e[I])return e[I];for(;!e[I];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[I]).tag||6===e.tag?e:null}function U(e){return!(e=e[I])||5!==e.tag&&6!==e.tag?null:e}function A(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function z(e){return e[R]||null}function L(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function F(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=L(t);for(t=n.length;0<t--;)F(n[t],"captured",e);for(t=0;t<n.length;t++)F(n[t],"bubbled",e)}}function V(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&V(e._targetInst,null,e)}function H(e){T(e,W)}var $=!("undefined"==typeof window||!window.document||!window.document.createElement);function J(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var q={animationend:J("Animation","AnimationEnd"),animationiteration:J("Animation","AnimationIteration"),animationstart:J("Animation","AnimationStart"),transitionend:J("Transition","TransitionEnd")},Q={},K={};function Y(e){if(Q[e])return Q[e];if(!q[e])return e;var t,n=q[e];for(t in n)if(n.hasOwnProperty(t)&&t in K)return Q[e]=n[t];return e}$&&(K=document.createElement("div").style,"AnimationEvent"in window||(delete q.animationend.animation,delete q.animationiteration.animation,delete q.animationstart.animation),"TransitionEvent"in window||delete q.transitionend.transition);var X=Y("animationend"),G=Y("animationiteration"),Z=Y("animationstart"),ee=Y("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:le,this.isPropagationStopped=le,this}function se(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=se,e.release=ce}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=$&&"CompositionEvent"in window,ve=null;$&&"documentMode"in document&&(ve=document.documentMode);var ye=$&&"TextEvent"in window&&!ve,be=$&&(!he||ve&&8<ve&&11>=ve),ge=String.fromCharCode(32),xe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},_e=!1;function we(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ke(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ee=!1;var Se={eventTypes:xe,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(he)e:{switch(e){case"compositionstart":o=xe.compositionStart;break e;case"compositionend":o=xe.compositionEnd;break e;case"compositionupdate":o=xe.compositionUpdate;break e}o=void 0}else Ee?we(e,n)&&(o=xe.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=xe.compositionStart);return o?(be&&"ko"!==n.locale&&(Ee||o!==xe.compositionStart?o===xe.compositionEnd&&Ee&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,Ee=!0)),o=de.getPooled(o,t,n,r),a?o.data=a:null!==(a=ke(n))&&(o.data=a),H(o),a=o):a=null,(e=ye?function(e,t){switch(e){case"compositionend":return ke(t);case"keypress":return 32!==t.which?null:(_e=!0,ge);case"textInput":return(e=t.data)===ge&&_e?null:e;default:return null}}(e,n):function(e,t){if(Ee)return"compositionend"===e||!he&&we(e,t)?(e=ae(),oe=re=ne=null,Ee=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return be&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(xe.beforeInput,t,n,r)).data=e,H(t)):t=null,null===a?t:null===t?a:[a,t]}},Te=null,Ce=null,Oe=null;function Pe(e){if(e=w(e)){"function"!=typeof Te&&i("280");var t=_(e.stateNode);Te(e.stateNode,e.type,t)}}function Ne(e){Ce?Oe?Oe.push(e):Oe=[e]:Ce=e}function je(){if(Ce){var e=Ce,t=Oe;if(Oe=Ce=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Me(e,t){return e(t)}function Ie(e,t,n){return e(t,n)}function Re(){}var De=!1;function Ue(e,t){if(De)return e(t);De=!0;try{return Me(e,t)}finally{De=!1,(null!==Ce||null!==Oe)&&(Re(),je())}}var Ae={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ae[e.type]:"textarea"===t}function Le(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Fe(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ve(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Be(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var He=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;He.hasOwnProperty("ReactCurrentDispatcher")||(He.ReactCurrentDispatcher={current:null});var $e=/^(.*)[\\\/]/,Je="function"==typeof Symbol&&Symbol.for,qe=Je?Symbol.for("react.element"):60103,Qe=Je?Symbol.for("react.portal"):60106,Ke=Je?Symbol.for("react.fragment"):60107,Ye=Je?Symbol.for("react.strict_mode"):60108,Xe=Je?Symbol.for("react.profiler"):60114,Ge=Je?Symbol.for("react.provider"):60109,Ze=Je?Symbol.for("react.context"):60110,et=Je?Symbol.for("react.concurrent_mode"):60111,tt=Je?Symbol.for("react.forward_ref"):60112,nt=Je?Symbol.for("react.suspense"):60113,rt=Je?Symbol.for("react.memo"):60115,ot=Je?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ke:return"Fragment";case Qe:return"Portal";case Xe:return"Profiler";case Ye:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Ge:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=lt(e.type);n=null,r&&(n=lt(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace($e,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var st=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new pt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(dt,e)||!ct.call(ft,e)&&(st.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function bt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function gt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=bt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _t(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function wt(e,t){_t(e,t);var n=bt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Et(e,t.type,n):t.hasOwnProperty("defaultValue")&&Et(e,t.type,bt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function kt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Et(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new pt(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Tt(e,t,n){return(e=ue.getPooled(St.change,e,t,n)).type="change",Ne(n),H(e),e}var Ct=null,Ot=null;function Pt(e){j(e)}function Nt(e){if(Be(A(e)))return e}function jt(e,t){if("change"===e)return t}var Mt=!1;function It(){Ct&&(Ct.detachEvent("onpropertychange",Rt),Ot=Ct=null)}function Rt(e){"value"===e.propertyName&&Nt(Ot)&&Ue(Pt,e=Tt(Ot,e,Le(e)))}function Dt(e,t,n){"focus"===e?(It(),Ot=n,(Ct=t).attachEvent("onpropertychange",Rt)):"blur"===e&&It()}function Ut(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Ot)}function At(e,t){if("click"===e)return Nt(t)}function zt(e,t){if("input"===e||"change"===e)return Nt(t)}$&&(Mt=Fe("input")&&(!document.documentMode||9<document.documentMode));var Lt={eventTypes:St,_isInputEventSupported:Mt,extractEvents:function(e,t,n,r){var o=t?A(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=jt:ze(o)?Mt?a=zt:(a=Ut,i=Dt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=At),a&&(a=a(e,t)))return Tt(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Et(o,"number",o.value)}},Ft=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Vt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Bt(){return Vt}var Ht=0,$t=0,Jt=!1,qt=!1,Qt=Ft.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Bt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ht;return Ht=e.screenX,Jt?"mousemove"===e.type?e.screenX-t:0:(Jt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,qt?"mousemove"===e.type?e.screenY-t:0:(qt=!0,0)}}),Kt=Qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Yt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Yt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(i=Qt,l=Yt.mouseLeave,u=Yt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Kt,l=Yt.pointerLeave,u=Yt.pointerEnter,s="pointer");var c=null==a?o:A(a);if(o=null==t?o:A(t),(e=i.getPooled(l,a,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,a&&r)e:{for(o=r,s=0,i=t=a;i;i=L(i))s++;for(i=0,u=o;u;u=L(u))i++;for(;0<s-i;)t=L(t),s--;for(;0<i-s;)o=L(o),i--;for(;s--;){if(t===o||t===o.alternate)break e;t=L(t),o=L(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(s=a.alternate)||s!==o);)t.push(a),a=L(a);for(a=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)a.push(r),r=L(r);for(r=0;r<t.length;r++)V(t[r],"bubbled",e);for(r=a.length;0<r--;)V(a[r],"captured",n);return[e,n]}};function Gt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Gt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Gt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}l||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Ft.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ft.extend({key:function(e){if(e.key){var t=sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=Qt.extend({dataTransfer:null}),pn=Ft.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Bt}),mn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=Qt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[X,"animationEnd"],[G,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},bn={};function gn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,bn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){gn(e,!0)}),vn.forEach(function(e){gn(e,!1)});var xn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=bn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=bn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case X:case G:case Z:e=on;break;case ee:e=mn;break;case"scroll":e=Ft;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Kt;break;default:e=ue}return H(t=e.getPooled(o,t,n,r)),t}},_n=xn.isInteractiveTopLevelEventType,wn=[];function kn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Le(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,l=0;l<y.length;l++){var u=y[l];u&&(u=u.extractEvents(r,t,a,o))&&(i=S(i,u))}j(i)}}var En=!0;function Sn(e,t){if(!t)return null;var n=(_n(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!1)}function Tn(e,t){if(!t)return null;var n=(_n(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!0)}function Cn(e,t){Ie(On,e,t)}function On(e,t){if(En){var n=Le(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),wn.length){var r=wn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ue(kn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>wn.length&&wn.push(e)}}}var Pn={},Nn=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function Mn(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=Nn++,Pn[e[jn]]={}),Pn[e[jn]]}function In(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Rn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Dn(e,t){var n,r=Rn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Rn(r)}}function Un(){for(var e=window,t=In();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=In((e=t.contentWindow).document)}return t}function An(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function zn(e){var t=Un(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&An(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=Dn(n,a);var i=Dn(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Ln=$&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Vn=null,Bn=null,Hn=!1;function $n(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hn||null==Wn||Wn!==In(n)?null:("selectionStart"in(n=Wn)&&An(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(Fn.select,Vn,e,t)).type="select",e.target=Wn,H(e),e))}var Jn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=Mn(a),o=x.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?A(t):window,e){case"focus":(ze(a)||"true"===a.contentEditable)&&(Wn=a,Vn=t,Bn=null);break;case"blur":Bn=Vn=Wn=null;break;case"mousedown":Hn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hn=!1,$n(n,r);case"selectionchange":if(Ln)break;case"keydown":case"keyup":return $n(n,r)}return null}};function qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Qn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+bt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Yn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:bt(n)}}function Xn(e,t){var n=bt(t.value),r=bt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Gn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}P.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=z,w=U,k=A,P.injectEventPluginsByName({SimpleEventPlugin:xn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Lt,SelectEventPlugin:Jn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr=void 0,rr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ir=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=Mn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Tn("scroll",e);break;case"focus":case"blur":Tn("focus",e),Tn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Fe(o)&&Tn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function pr(){}var mr=null,hr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,gr="function"==typeof clearTimeout?clearTimeout:void 0,xr=a.unstable_scheduleCallback,_r=a.unstable_cancelCallback;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function kr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Er=[],Sr=-1;function Tr(e){0>Sr||(e.current=Er[Sr],Er[Sr]=null,Sr--)}function Cr(e,t){Er[++Sr]=e.current,e.current=t}var Or={},Pr={current:Or},Nr={current:!1},jr=Or;function Mr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ir(e){return null!=(e=e.childContextTypes)}function Rr(e){Tr(Nr),Tr(Pr)}function Dr(e){Tr(Nr),Tr(Pr)}function Ur(e,t,n){Pr.current!==Or&&i("168"),Cr(Pr,t),Cr(Nr,n)}function Ar(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",lt(t)||"Unknown",a);return o({},n,r)}function zr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,jr=Pr.current,Cr(Pr,t),Cr(Nr,Nr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=Ar(e,t,jr),r.__reactInternalMemoizedMergedChildContext=t,Tr(Nr),Tr(Pr),Cr(Pr,t)):Tr(Nr),Cr(Nr,n)}var Fr=null,Wr=null;function Vr(e){return function(t){try{return e(t)}catch(e){}}}function Br(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new Br(e,t,n,r)}function $r(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Jr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function qr(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)$r(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ke:return Qr(n.children,o,a,t);case et:return Kr(n,3|o,a,t);case Ye:return Kr(n,2|o,a,t);case Xe:return(e=Hr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=a,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Ge:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=Hr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function Qr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Kr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Ye:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Yr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Xr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),to(t,e)}function Zr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),to(t,e)}function eo(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function to(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function no(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ro=(new r.Component).refs;function oo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=_l(),o=Ka(r=Qi(r,e));o.payload=t,null!=n&&(o.callback=n),Vi(),Xa(e,o),Xi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=_l(),o=Ka(r=Qi(r,e));o.tag=Ba,o.payload=t,null!=n&&(o.callback=n),Vi(),Xa(e,o),Xi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=_l(),r=Ka(n=Qi(n,e));r.tag=Ha,null!=t&&(r.callback=t),Vi(),Xa(e,r),Xi(e,n)}};function io(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function lo(e,t,n){var r=!1,o=Or,a=t.contextType;return"object"==typeof a&&null!==a?a=Wa(a):(o=Ir(t)?jr:Pr.current,a=(r=null!=(r=t.contextTypes))?Mr(e,o):Or),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function uo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=ro;var a=t.contextType;"object"==typeof a&&null!==a?o.context=Wa(a):(a=Ir(t)?jr:Pr.current,o.context=Mr(e,a)),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(oo(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var co=Array.isArray;function fo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("309"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===ro&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function po(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Jr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Yr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=fo(e,t,n),r.return=e,r):((r=qr(n.type,n.key,n.props,null,e.mode,r)).ref=fo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Xr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Qr(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Yr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case qe:return(n=qr(t.type,t.key,t.props,null,e.mode,n)).ref=fo(e,null,t),n.return=e,n;case Qe:return(t=Xr(t,e.mode,n)).return=e,t}if(co(t)||it(t))return(t=Qr(t,e.mode,n,null)).return=e,t;po(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case qe:return n.key===o?n.type===Ke?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case Qe:return n.key===o?c(e,t,n,r):null}if(co(n)||it(n))return null!==o?null:f(e,t,n,r,null);po(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ke?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case Qe:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(co(r)||it(r))return f(t,e=e.get(n)||null,r,o,null);po(t,r)}return null}function h(o,i,l,u){for(var s=null,c=null,f=i,h=i=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(o,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),i=a(y,i,h),null===c?s=y:c.sibling=y,c=y,f=v}if(h===l.length)return n(o,f),s;if(null===f){for(;h<l.length;h++)(f=d(o,l[h],u))&&(i=a(f,i,h),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);h<l.length;h++)(v=m(f,o,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),i=a(v,i,h),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach(function(e){return t(o,e)}),s}function v(o,l,u,s){var c=it(u);"function"!=typeof c&&i("150"),null==(u=c.call(u))&&i("151");for(var f=c=null,h=l,v=l=0,y=null,b=u.next();null!==h&&!b.done;v++,b=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var g=p(o,h,b.value,s);if(null===g){h||(h=y);break}e&&h&&null===g.alternate&&t(o,h),l=a(g,l,v),null===f?c=g:f.sibling=g,f=g,h=y}if(b.done)return n(o,h),c;if(null===h){for(;!b.done;v++,b=u.next())null!==(b=d(o,b.value,s))&&(l=a(b,l,v),null===f?c=b:f.sibling=b,f=b);return c}for(h=r(o,h);!b.done;v++,b=u.next())null!==(b=m(h,o,v,b.value,s))&&(e&&null!==b.alternate&&h.delete(null===b.key?v:b.key),l=a(b,l,v),null===f?c=b:f.sibling=b,f=b);return e&&h.forEach(function(e){return t(o,e)}),c}return function(e,r,a,u){var s="object"==typeof a&&null!==a&&a.type===Ke&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case qe:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?a.type===Ke:s.elementType===a.type){n(e,s.sibling),(r=o(s,a.type===Ke?a.props.children:a.props)).ref=fo(e,s,a),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===Ke?((r=Qr(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=qr(a.type,a.key,a.props,null,e.mode,u)).ref=fo(e,r,a),u.return=e,e=u)}return l(e);case Qe:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Xr(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Yr(a,e.mode,u)).return=e,e=r),l(e);if(co(a))return h(e,r,a,u);if(it(a))return v(e,r,a,u);if(c&&po(e,a),void 0===a&&!s)switch(e.tag){case 1:case 0:i("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var ho=mo(!0),vo=mo(!1),yo={},bo={current:yo},go={current:yo},xo={current:yo};function _o(e){return e===yo&&i("174"),e}function wo(e,t){Cr(xo,t),Cr(go,e),Cr(bo,yo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Tr(bo),Cr(bo,t)}function ko(e){Tr(bo),Tr(go),Tr(xo)}function Eo(e){_o(xo.current);var t=_o(bo.current),n=tr(t,e.type);t!==n&&(Cr(go,e),Cr(bo,n))}function So(e){go.current===e&&(Tr(bo),Tr(go))}var To=0,Co=2,Oo=4,Po=8,No=16,jo=32,Mo=64,Io=128,Ro=He.ReactCurrentDispatcher,Do=0,Uo=null,Ao=null,zo=null,Lo=null,Fo=null,Wo=null,Vo=0,Bo=null,Ho=0,$o=!1,Jo=null,qo=0;function Qo(){i("321")}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Gt(e[n],t[n]))return!1;return!0}function Yo(e,t,n,r,o,a){if(Do=a,Uo=t,zo=null!==e?e.memoizedState:null,Ro.current=null===zo?sa:ca,t=n(r,o),$o){do{$o=!1,qo+=1,zo=null!==e?e.memoizedState:null,Wo=Lo,Bo=Fo=Ao=null,Ro.current=ca,t=n(r,o)}while($o);Jo=null,qo=0}return Ro.current=ua,(e=Uo).memoizedState=Lo,e.expirationTime=Vo,e.updateQueue=Bo,e.effectTag|=Ho,e=null!==Ao&&null!==Ao.next,Do=0,Wo=Fo=Lo=zo=Ao=Uo=null,Vo=0,Bo=null,Ho=0,e&&i("300"),t}function Xo(){Ro.current=ua,Do=0,Wo=Fo=Lo=zo=Ao=Uo=null,Vo=0,Bo=null,Ho=0,$o=!1,Jo=null,qo=0}function Go(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Fo?Lo=Fo=e:Fo=Fo.next=e,Fo}function Zo(){if(null!==Wo)Wo=(Fo=Wo).next,zo=null!==(Ao=zo)?Ao.next:null;else{null===zo&&i("310");var e={memoizedState:(Ao=zo).memoizedState,baseState:Ao.baseState,queue:Ao.queue,baseUpdate:Ao.baseUpdate,next:null};Fo=null===Fo?Lo=e:Fo.next=e,zo=Ao.next}return Fo}function ea(e,t){return"function"==typeof t?t(e):t}function ta(e){var t=Zo(),n=t.queue;if(null===n&&i("311"),n.lastRenderedReducer=e,0<qo){var r=n.dispatch;if(null!==Jo){var o=Jo.get(n);if(void 0!==o){Jo.delete(n);var a=t.memoizedState;do{a=e(a,o.action),o=o.next}while(null!==o);return Gt(a,t.memoizedState)||(_a=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.lastRenderedState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(a=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,s=r,c=!1;do{var f=s.expirationTime;f<Do?(c||(c=!0,u=l,o=a),f>Vo&&(Vo=f)):a=s.eagerReducer===e?s.eagerState:e(a,s.action),l=s,s=s.next}while(null!==s&&s!==r);c||(u=l,o=a),Gt(a,t.memoizedState)||(_a=!0),t.memoizedState=a,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function na(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Bo?(Bo={lastEffect:null}).lastEffect=e.next=e:null===(t=Bo.lastEffect)?Bo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Bo.lastEffect=e),e}function ra(e,t,n,r){var o=Go();Ho|=e,o.memoizedState=na(t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Zo();r=void 0===r?null:r;var a=void 0;if(null!==Ao){var i=Ao.memoizedState;if(a=i.destroy,null!==r&&Ko(r,i.deps))return void na(To,n,a,r)}Ho|=e,o.memoizedState=na(t,n,a,r)}function aa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ia(){}function la(e,t,n){25>qo||i("301");var r=e.alternate;if(e===Uo||null!==r&&r===Uo)if($o=!0,e={expirationTime:Do,action:n,eagerReducer:null,eagerState:null,next:null},null===Jo&&(Jo=new Map),void 0===(n=Jo.get(t)))Jo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Vi();var o=_l(),a={expirationTime:o=Qi(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)a.next=a;else{var u=l.next;null!==u&&(a.next=u),l.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var s=t.lastRenderedState,c=r(s,n);if(a.eagerReducer=r,a.eagerState=c,Gt(c,s))return}catch(e){}Xi(e,o)}}var ua={readContext:Wa,useCallback:Qo,useContext:Qo,useEffect:Qo,useImperativeHandle:Qo,useLayoutEffect:Qo,useMemo:Qo,useReducer:Qo,useRef:Qo,useState:Qo,useDebugValue:Qo},sa={readContext:Wa,useCallback:function(e,t){return Go().memoizedState=[e,void 0===t?null:t],e},useContext:Wa,useEffect:function(e,t){return ra(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Go();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Go();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=la.bind(null,Uo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Go().memoizedState=e},useState:function(e){var t=Go();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ea,lastRenderedState:e}).dispatch=la.bind(null,Uo,e),[t.memoizedState,e]},useDebugValue:ia},ca={readContext:Wa,useCallback:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Wa,useEffect:function(e,t){return oa(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oa(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ta,useRef:function(){return Zo().memoizedState},useState:function(e){return ta(ea)},useDebugValue:ia},fa=null,da=null,pa=!1;function ma(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ha(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function va(e){if(pa){var t=da;if(t){var n=t;if(!ha(e,t)){if(!(t=wr(n))||!ha(e,t))return e.effectTag|=2,pa=!1,void(fa=e);ma(fa,n)}fa=e,da=kr(t)}else e.effectTag|=2,pa=!1,fa=e}}function ya(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;fa=e}function ba(e){if(e!==fa)return!1;if(!pa)return ya(e),pa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=da;t;)ma(e,t),t=wr(t);return ya(e),da=fa?wr(e.stateNode):null,!0}function ga(){da=fa=null,pa=!1}var xa=He.ReactCurrentOwner,_a=!1;function wa(e,t,n,r){t.child=null===e?vo(t,null,n,r):ho(t,e.child,n,r)}function ka(e,t,n,r,o){n=n.render;var a=t.ref;return Fa(t,o),r=Yo(e,t,n,r,a,o),null===e||_a?(t.effectTag|=1,wa(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function Ea(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||$r(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=qr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Sa(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Ma(e,t,a):(t.effectTag|=1,(e=Jr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Sa(e,t,n,r,o,a){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(_a=!1,o<a)?Ma(e,t,a):Ca(e,t,n,r,a)}function Ta(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ca(e,t,n,r,o){var a=Ir(n)?jr:Pr.current;return a=Mr(t,a),Fa(t,o),n=Yo(e,t,n,r,a,o),null===e||_a?(t.effectTag|=1,wa(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function Oa(e,t,n,r,o){if(Ir(n)){var a=!0;zr(t)}else a=!1;if(Fa(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),lo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;"object"==typeof s&&null!==s?s=Wa(s):s=Mr(t,s=Ir(n)?jr:Pr.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&uo(t,i,r,s),Ja=!1;var d=t.memoizedState;u=i.state=d;var p=t.updateQueue;null!==p&&(ti(t,p,r,i,o),u=t.memoizedState),l!==r||d!==u||Nr.current||Ja?("function"==typeof c&&(oo(t,n,c,r),u=t.memoizedState),(l=Ja||io(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,l=t.memoizedProps,i.props=t.type===t.elementType?l:no(t.type,l),u=i.context,"object"==typeof(s=n.contextType)&&null!==s?s=Wa(s):s=Mr(t,s=Ir(n)?jr:Pr.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&uo(t,i,r,s),Ja=!1,u=t.memoizedState,d=i.state=u,null!==(p=t.updateQueue)&&(ti(t,p,r,i,o),d=t.memoizedState),l!==r||u!==d||Nr.current||Ja?("function"==typeof c&&(oo(t,n,c,r),d=t.memoizedState),(c=Ja||io(t,n,l,r,u,d,s))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,s)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Pa(e,t,n,r,a,o)}function Pa(e,t,n,r,o,a){Ta(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Lr(t,n,!1),Ma(e,t,a);r=t.stateNode,xa.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=ho(t,e.child,null,a),t.child=ho(t,null,l,a)):wa(e,t,l,a),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?Ur(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ur(0,t.context,!1),wo(e,t.containerInfo)}function ja(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var l=o.fallback;e=Qr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Qr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=vo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,i?(n=o.fallback,o=Jr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Jr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=ho(t,r.child,o.children,n)):(l=e.child,i?(i=o.fallback,(o=Qr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Qr(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=ho(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Ma(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Jr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Jr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ia(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Nr.current)_a=!0;else if(r<n){switch(_a=!1,t.tag){case 3:Na(t),ga();break;case 5:Eo(t);break;case 1:Ir(t.type)&&zr(t);break;case 4:wo(t,t.stateNode.containerInfo);break;case 10:za(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?ja(e,t,n):null!==(t=Ma(e,t,n))?t.sibling:null}return Ma(e,t,n)}}else _a=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Mr(t,Pr.current);if(Fa(t,n),o=Yo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Xo(),Ir(r)){var a=!0;zr(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&oo(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Pa(null,t,r,!0,a,n)}else t.tag=0,wa(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),a=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return $r(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),a=no(e,a),l=void 0,o){case 0:l=Ca(null,t,e,a,n);break;case 1:l=Oa(null,t,e,a,n);break;case 11:l=ka(null,t,e,a,n);break;case 14:l=Ea(null,t,e,no(e.type,a),r,n);break;default:i("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Ca(e,t,r,o=t.elementType===r?o:no(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oa(e,t,r,o=t.elementType===r?o:no(r,o),n);case 3:return Na(t),null===(r=t.updateQueue)&&i("282"),o=null!==(o=t.memoizedState)?o.element:null,ti(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ga(),t=Ma(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(da=kr(t.stateNode.containerInfo),fa=t,o=pa=!0),o?(t.effectTag|=2,t.child=vo(t,null,r,n)):(wa(e,t,r,n),ga()),t=t.child),t;case 5:return Eo(t),null===e&&va(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,yr(r,o)?l=null:null!==a&&yr(r,a)&&(t.effectTag|=16),Ta(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(wa(e,t,l,n),t=t.child),t;case 6:return null===e&&va(t),null;case 13:return ja(e,t,n);case 4:return wo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ho(t,null,r,n):wa(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ka(e,t,r,o=t.elementType===r?o:no(r,o),n);case 7:return wa(e,t,t.pendingProps,n),t.child;case 8:case 12:return wa(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,za(t,a=o.value),null!==l){var u=l.value;if(0===(a=Gt(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!Nr.current){t=Ma(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.contextDependencies;if(null!==s){l=u.child;for(var c=s.first;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===u.tag&&((c=Ka(n)).tag=Ha,Xa(u,c)),u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n),c=n;for(var f=u.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<c)f.childExpirationTime=c,null!==d&&d.childExpirationTime<c&&(d.childExpirationTime=c);else{if(!(null!==d&&d.childExpirationTime<c))break;d.childExpirationTime=c}f=f.return}s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}wa(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,Fa(t,n),r=r(o=Wa(o,a.unstable_observedBits)),t.effectTag|=1,wa(e,t,r,n),t.child;case 14:return a=no(o=t.type,t.pendingProps),Ea(e,t,o,a=no(o.type,a),r,n);case 15:return Sa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:no(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ir(r)?(e=!0,zr(t)):e=!1,Fa(t,n),lo(t,r,o),so(t,r,o,n),Pa(null,t,r,!0,e,n)}i("156")}var Ra={current:null},Da=null,Ua=null,Aa=null;function za(e,t){var n=e.type._context;Cr(Ra,n._currentValue),n._currentValue=t}function La(e){var t=Ra.current;Tr(Ra),e.type._context._currentValue=t}function Fa(e,t){Da=e,Aa=Ua=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(_a=!0),e.contextDependencies=null}function Wa(e,t){return Aa!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Aa=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ua?(null===Da&&i("308"),Ua=t,Da.contextDependencies={first:t,expirationTime:0}):Ua=Ua.next=t),e._currentValue}var Va=0,Ba=1,Ha=2,$a=3,Ja=!1;function qa(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Qa(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ka(e){return{expirationTime:e,tag:Va,payload:null,callback:null,next:null,nextEffect:null}}function Ya(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Xa(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=qa(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=qa(e.memoizedState),o=n.updateQueue=qa(n.memoizedState)):r=e.updateQueue=Qa(o):null===o&&(o=n.updateQueue=Qa(r));null===o||r===o?Ya(r,t):null===r.lastUpdate||null===o.lastUpdate?(Ya(r,t),Ya(o,t)):(Ya(r,t),o.lastUpdate=t)}function Ga(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=qa(e.memoizedState):Za(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Za(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Qa(t)),t}function ei(e,t,n,r,a,i){switch(n.tag){case Ba:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case $a:e.effectTag=-2049&e.effectTag|64;case Va:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case Ha:Ja=!0}return r}function ti(e,t,n,r,o){Ja=!1;for(var a=(t=Za(e,t)).baseState,i=null,l=0,u=t.firstUpdate,s=a;null!==u;){var c=u.expirationTime;c<o?(null===i&&(i=u,a=s),l<c&&(l=c)):(s=ei(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(c=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===c&&(c=u,null===i&&(a=s)),l<f&&(l=f)):(s=ei(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===c&&(a=s),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=c,e.expirationTime=l,e.memoizedState=s}function ni(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),ri(t.firstEffect,n),t.firstEffect=t.lastEffect=null,ri(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function ri(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function oi(e,t){return{value:e,source:t,stack:ut(t)}}function ai(e){e.effectTag|=4}var ii=void 0,li=void 0,ui=void 0,si=void 0;ii=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},li=function(){},ui=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var l=t.stateNode;switch(_o(bo.current),e=null,n){case"input":i=gt(l,i),r=gt(l,r),e=[];break;case"option":i=qn(l,i),r=qn(l,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Kn(l,i),r=Kn(l,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(l.onclick=pr)}cr(n,r),l=n=void 0;var u=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var s=i[n];for(l in s)s.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(g.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(u||(u={}),u[l]=c[l])}else u||(e||(e=[]),e.push(n,u)),u=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(g.hasOwnProperty(n)?(null!=c&&dr(a,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}u&&(e=e||[]).push("style",u),a=e,(t.updateQueue=a)&&ai(t)}},si=function(e,t,n,r){n!==r&&ai(t)};var ci="function"==typeof WeakSet?WeakSet:Set;function fi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){qi(e,t)}else t.current=null}function pi(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==To){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==To&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function mi(e){switch("function"==typeof Wr&&Wr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){qi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(di(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){qi(e,t)}break;case 5:di(e);break;case 4:yi(e)}}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(hi(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,l=o.stateNode,u=n;8===a.nodeType?a.parentNode.insertBefore(l,u):a.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(a=l.parentNode).insertBefore(u,l):(a=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==a.onclick||(a.onclick=pr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function yi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,l=a;;)if(mi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===a)break;for(;null===l.sibling;){if(null===l.return||l.return===a)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(a=r,l=t.stateNode,8===a.nodeType?a.parentNode.removeChild(l):a.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(mi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function bi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:pi(Oo,Po,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[R]=o,"input"===n&&"radio"===o.type&&null!=o.name&&_t(e,o),fr(n,r),r=fr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?ur(e,l):"dangerouslySetInnerHTML"===i?rr(e,l):"children"===i?or(e,l):yt(e,i,l,r)}switch(n){case"input":wt(e,o);break;case"textarea":Xn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Qn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Qn(e,!!o.multiple,o.defaultValue,!0):Qn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=_l())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new ci),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Qi(t=_l(),e),null!==(e=Yi(e,t))&&(Gr(e,t),0!==(t=e.expirationTime)&&wl(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var gi="function"==typeof WeakMap?WeakMap:Map;function xi(e,t,n){(n=Ka(n)).tag=$a,n.payload={element:null};var r=t.value;return n.callback=function(){jl(r),fi(e,t)},n}function _i(e,t,n){(n=Ka(n)).tag=$a;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ai?Ai=new Set([this]):Ai.add(this));var n=t.value,o=t.stack;fi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function wi(e){switch(e.tag){case 1:Ir(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return ko(),Dr(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return So(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return ko(),null;case 10:return La(e),null;default:return null}}var ki=He.ReactCurrentDispatcher,Ei=He.ReactCurrentOwner,Si=1073741822,Ti=!1,Ci=null,Oi=null,Pi=0,Ni=-1,ji=!1,Mi=null,Ii=!1,Ri=null,Di=null,Ui=null,Ai=null;function zi(){if(null!==Ci)for(var e=Ci.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Rr();break;case 3:ko(),Dr();break;case 5:So(t);break;case 4:ko();break;case 10:La(t)}e=e.return}Oi=null,Pi=0,Ni=-1,ji=!1,Ci=null}function Li(){for(;null!==Mi;){var e=Mi.effectTag;if(16&e&&or(Mi.stateNode,""),128&e){var t=Mi.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:vi(Mi),Mi.effectTag&=-3;break;case 6:vi(Mi),Mi.effectTag&=-3,bi(Mi.alternate,Mi);break;case 4:bi(Mi.alternate,Mi);break;case 8:yi(e=Mi),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Mi=Mi.nextEffect}}function Fi(){for(;null!==Mi;){if(256&Mi.effectTag)e:{var e=Mi.alternate,t=Mi;switch(t.tag){case 0:case 11:case 15:pi(Co,To,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:no(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}Mi=Mi.nextEffect}}function Wi(e,t){for(;null!==Mi;){var n=Mi.effectTag;if(36&n){var r=Mi.alternate,o=Mi,a=t;switch(o.tag){case 0:case 11:case 15:pi(No,jo,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:no(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ni(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ni(0,r,l)}break;case 5:a=o.stateNode,null===r&&4&o.effectTag&&vr(o.type,o.memoizedProps)&&a.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}128&n&&(null!==(o=Mi.ref)&&(a=Mi.stateNode,"function"==typeof o?o(a):o.current=a)),512&n&&(Ri=e),Mi=Mi.nextEffect}}function Vi(){null!==Di&&_r(Di),null!==Ui&&Ui()}function Bi(e,t){Ii=Ti=!0,e.current===t&&i("177");var n=e.pendingCommitExpirationTime;0===n&&i("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Gr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Gr(e,t)):t>n&&Gr(e,t)}to(0,e)}(e,o>r?o:r),Ei.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=En,hr=function(){var e=Un();if(An(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,u=0,s=0,c=e,f=null;t:for(;;){for(var d;c!==t||0!==r&&3!==c.nodeType||(i=a+r),c!==o||0!==n&&3!==c.nodeType||(l=a+n),3===c.nodeType&&(a+=c.nodeValue.length),null!==(d=c.firstChild);)f=c,c=d;for(;;){if(c===e)break t;if(f===t&&++u===r&&(i=a),f===o&&++s===n&&(l=a),null!==(d=c.nextSibling))break;f=(c=f).parentNode}c=d}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),En=!1,Mi=r;null!==Mi;){o=!1;var l=void 0;try{Fi()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(Mi=r;null!==Mi;){o=!1,l=void 0;try{Li()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(zn(hr),hr=null,En=!!mr,mr=null,e.current=t,Mi=r;null!==Mi;){o=!1,l=void 0;try{Wi(e,n)}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}if(null!==r&&null!==Ri){var u=function(e,t){Ui=Di=Ri=null;var n=rl;rl=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;pi(Io,To,a),pi(To,Mo,a)}catch(e){r=!0,o=e}r&&qi(t,o)}t=t.nextEffect}while(null!==t);rl=n,0!==(n=e.expirationTime)&&wl(e,n),sl||rl||Cl(1073741823,!1)}.bind(null,e,r);Di=a.unstable_runWithPriority(a.unstable_NormalPriority,function(){return xr(u)}),Ui=u}Ti=Ii=!1,"function"==typeof Fr&&Fr(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Ai=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Hi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ci=e;e:{var a=t,l=Pi,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ir(t.type)&&Rr();break;case 3:ko(),Dr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==a&&null!==a.child||(ba(t),t.effectTag&=-3),li(t);break;case 5:So(t);var s=_o(xo.current);if(l=t.type,null!==a&&null!=t.stateNode)ui(a,t,l,u,s),a.ref!==t.ref&&(t.effectTag|=128);else if(u){var c=_o(bo.current);if(ba(t)){a=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=s;switch(a[I]=u,a[R]=d,l=void 0,s=f){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":xt(a,d),Sn("invalid",a),dr(p,"onChange");break;case"select":a._wrapperState={wasMultiple:!!d.multiple},Sn("invalid",a),dr(p,"onChange");break;case"textarea":Yn(a,d),Sn("invalid",a),dr(p,"onChange")}for(l in cr(s,d),f=null,d)d.hasOwnProperty(l)&&(c=d[l],"children"===l?"string"==typeof c?a.textContent!==c&&(f=["children",c]):"number"==typeof c&&a.textContent!==""+c&&(f=["children",""+c]):g.hasOwnProperty(l)&&null!=c&&dr(p,l));switch(s){case"input":Ve(a),kt(a,d,!0);break;case"textarea":Ve(a),Gn(a);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(a.onclick=pr)}l=f,u.updateQueue=l,(u=null!==l)&&ai(t)}else{d=t,p=l,a=u,f=9===s.nodeType?s:s.ownerDocument,c===Zn.html&&(c=er(p)),c===Zn.html?"script"===p?((a=f.createElement("div")).innerHTML="<script><\/script>",f=a.removeChild(a.firstChild)):"string"==typeof a.is?f=f.createElement(p,{is:a.is}):(f=f.createElement(p),"select"===p&&(p=f,a.multiple?p.multiple=!0:a.size&&(p.size=a.size))):f=f.createElementNS(c,p),(a=f)[I]=d,a[R]=u,ii(a,t,!1,!1),p=a;var m=s,h=fr(f=l,d=u);switch(f){case"iframe":case"object":Sn("load",p),s=d;break;case"video":case"audio":for(s=0;s<te.length;s++)Sn(te[s],p);s=d;break;case"source":Sn("error",p),s=d;break;case"img":case"image":case"link":Sn("error",p),Sn("load",p),s=d;break;case"form":Sn("reset",p),Sn("submit",p),s=d;break;case"details":Sn("toggle",p),s=d;break;case"input":xt(p,d),s=gt(p,d),Sn("invalid",p),dr(m,"onChange");break;case"option":s=qn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},s=o({},d,{value:void 0}),Sn("invalid",p),dr(m,"onChange");break;case"textarea":Yn(p,d),s=Kn(p,d),Sn("invalid",p),dr(m,"onChange");break;default:s=d}cr(f,s),c=void 0;var v=f,y=p,b=s;for(c in b)if(b.hasOwnProperty(c)){var x=b[c];"style"===c?ur(y,x):"dangerouslySetInnerHTML"===c?null!=(x=x?x.__html:void 0)&&rr(y,x):"children"===c?"string"==typeof x?("textarea"!==v||""!==x)&&or(y,x):"number"==typeof x&&or(y,""+x):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(g.hasOwnProperty(c)?null!=x&&dr(m,c):null!=x&&yt(y,c,x,h))}switch(f){case"input":Ve(p),kt(p,d,!1);break;case"textarea":Ve(p),Gn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+bt(d.value));break;case"select":(s=p).multiple=!!d.multiple,null!=(p=d.value)?Qn(s,!!d.multiple,p,!1):null!=d.defaultValue&&Qn(s,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof s.onClick&&(p.onclick=pr)}(u=vr(l,u))&&ai(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?si(a,t,a.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&i("166")),a=_o(xo.current),_o(bo.current),ba(t)?(l=(u=t).stateNode,a=u.memoizedProps,l[I]=u,(u=l.nodeValue!==a)&&ai(t)):(l=t,(u=(9===a.nodeType?a:a.ownerDocument).createTextNode(u))[I]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ci=t;break e}u=null!==u,l=null!==a&&null!==a.memoizedState,null!==a&&!u&&l&&(null!==(a=a.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=a,a.nextEffect=s):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:ko(),li(t);break;case 10:La(t);break;case 9:case 14:break;case 17:Ir(t.type)&&Rr();break;case 18:break;default:i("156")}Ci=null}if(t=e,1===Pi||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(a=l.expirationTime)>u&&(u=a),(s=l.childExpirationTime)>u&&(u=s),l=l.sibling;t.childExpirationTime=u}if(null!==Ci)return Ci;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=wi(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function $i(e){var t=Ia(e.alternate,e,Pi);return e.memoizedProps=e.pendingProps,null===t&&(t=Hi(e)),Ei.current=null,t}function Ji(e,t){Ti&&i("243"),Vi(),Ti=!0;var n=ki.current;ki.current=ua;var r=e.nextExpirationTimeToWorkOn;r===Pi&&e===Oi&&null!==Ci||(zi(),Pi=r,Ci=Jr((Oi=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Ci&&!Sl();)Ci=$i(Ci);else for(;null!==Ci;)Ci=$i(Ci)}catch(t){if(Aa=Ua=Da=null,Xo(),null===Ci)o=!0,jl(t);else{null===Ci&&i("271");var a=Ci,l=a.return;if(null!==l){e:{var u=e,s=l,c=a,f=t;if(l=Pi,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=s;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=s;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(s=f.updateQueue)?((s=new Set).add(d),f.updateQueue=s):s.add(d),0==(1&f.mode)){f.effectTag|=64,c.effectTag&=-1957,1===c.tag&&(null===c.alternate?c.tag=17:((l=Ka(1073741823)).tag=Ha,Xa(c,l))),c.expirationTime=1073741823;break e}s=l;var v=(c=u).pingCache;null===v?(v=c.pingCache=new gi,h=new Set,v.set(d,h)):void 0===(h=v.get(d))&&(h=new Set,v.set(d,h)),h.has(s)||(h.add(s),c=Ki.bind(null,c,d,s),d.then(c,c)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-eo(u,l))-5e3),u=m+p),0<=u&&Ni<u&&(Ni=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(c))}ji=!0,f=oi(f,c),u=s;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Ga(u,l=xi(u,f,l));break e;case 1:if(p=f,m=u.type,c=u.stateNode,0==(64&u.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==c&&"function"==typeof c.componentDidCatch&&(null===Ai||!Ai.has(c)))){u.effectTag|=2048,u.expirationTime=l,Ga(u,l=_i(u,p,l));break e}}u=u.return}while(null!==u)}Ci=Hi(a);continue}o=!0,jl(t)}}break}if(Ti=!1,ki.current=n,Aa=Ua=Da=null,Xo(),o)Oi=null,e.finishedWork=null;else if(null!==Ci)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&i("281"),Oi=null,ji){if(o=e.latestPendingTime,a=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==a&&a<r||0!==l&&l<r)return Zr(e,r),void xl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xl(e,n,r,t,-1)}t&&-1!==Ni?(Zr(e,r),(t=10*(1073741822-eo(e,r)))<Ni&&(Ni=t),t=10*(1073741822-_l()),t=Ni-t,xl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function qi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ai||!Ai.has(r)))return Xa(n,e=_i(n,e=oi(t,e),1073741823)),void Xi(n,1073741823);break;case 3:return Xa(n,e=xi(n,e=oi(t,e),1073741823)),void Xi(n,1073741823)}n=n.return}3===e.tag&&(Xa(e,n=xi(e,n=oi(t,e),1073741823)),Xi(e,1073741823))}function Qi(e,t){var n=a.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ti&&!Ii)r=Pi;else{switch(n){case a.unstable_ImmediatePriority:r=1073741823;break;case a.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case a.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case a.unstable_LowPriority:case a.unstable_IdlePriority:r=1;break;default:i("313")}null!==Oi&&r===Pi&&--r}return n===a.unstable_UserBlockingPriority&&(0===il||r<il)&&(il=r),r}function Ki(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oi&&Pi===n?Oi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),to(n,e),0!==(n=e.expirationTime)&&wl(e,n)))}function Yi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Xi(e,t){null!==(e=Yi(e,t))&&(!Ti&&0!==Pi&&t>Pi&&zi(),Gr(e,t),Ti&&!Ii&&Oi===e||wl(e,e.expirationTime),vl>hl&&(vl=0,i("185")))}function Gi(e,t,n,r,o){return a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var Zi=null,el=null,tl=0,nl=void 0,rl=!1,ol=null,al=0,il=0,ll=!1,ul=null,sl=!1,cl=!1,fl=null,dl=a.unstable_now(),pl=1073741822-(dl/10|0),ml=pl,hl=50,vl=0,yl=null;function bl(){pl=1073741822-((a.unstable_now()-dl)/10|0)}function gl(e,t){if(0!==tl){if(t<tl)return;null!==nl&&a.unstable_cancelCallback(nl)}tl=t,e=a.unstable_now()-dl,nl=a.unstable_scheduleCallback(Tl,{timeout:10*(1073741822-t)-e})}function xl(e,t,n,r,o){e.expirationTime=r,0!==o||Sl()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),ml=pl,Ol(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function _l(){return rl?ml:(kl(),0!==al&&1!==al||(bl(),ml=pl),ml)}function wl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===el?(Zi=el=e,e.nextScheduledRoot=e):(el=el.nextScheduledRoot=e).nextScheduledRoot=Zi):t>e.expirationTime&&(e.expirationTime=t),rl||(sl?cl&&(ol=e,al=1073741823,Pl(e,1073741823,!1)):1073741823===t?Cl(1073741823,!1):gl(e,t))}function kl(){var e=0,t=null;if(null!==el)for(var n=el,r=Zi;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===el)&&i("244"),r===r.nextScheduledRoot){Zi=el=r.nextScheduledRoot=null;break}if(r===Zi)Zi=o=r.nextScheduledRoot,el.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===el){(el=n).nextScheduledRoot=Zi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===el)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}ol=t,al=e}var El=!1;function Sl(){return!!El||!!a.unstable_shouldYield()&&(El=!0)}function Tl(){try{if(!Sl()&&null!==Zi){bl();var e=Zi;do{var t=e.expirationTime;0!==t&&pl<=t&&(e.nextExpirationTimeToWorkOn=pl),e=e.nextScheduledRoot}while(e!==Zi)}Cl(0,!0)}finally{El=!1}}function Cl(e,t){if(kl(),t)for(bl(),ml=pl;null!==ol&&0!==al&&e<=al&&!(El&&pl>al);)Pl(ol,al,pl>al),kl(),bl(),ml=pl;else for(;null!==ol&&0!==al&&e<=al;)Pl(ol,al,!1),kl();if(t&&(tl=0,nl=null),0!==al&&gl(ol,al),vl=0,yl=null,null!==fl)for(e=fl,fl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ll||(ll=!0,ul=e)}}if(ll)throw e=ul,ul=null,ll=!1,e}function Ol(e,t){rl&&i("253"),ol=e,al=t,Pl(e,t,!1),Cl(1073741823,!1)}function Pl(e,t,n){if(rl&&i("245"),rl=!0,n){var r=e.finishedWork;null!==r?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&(Sl()?e.finishedWork=r:Nl(e,r,t)))}else null!==(r=e.finishedWork)?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&Nl(e,r,t));rl=!1}function Nl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===fl?fl=[r]:fl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===yl?vl++:(yl=e,vl=0),a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){Bi(e,t)})}function jl(e){null===ol&&i("246"),ol.expirationTime=0,ll||(ll=!0,ul=e)}function Ml(e,t){var n=sl;sl=!0;try{return e(t)}finally{(sl=n)||rl||Cl(1073741823,!1)}}function Il(e,t){if(sl&&!cl){cl=!0;try{return e(t)}finally{cl=!1}}return e(t)}function Rl(e,t,n){sl||rl||0===il||(Cl(il,!1),il=0);var r=sl;sl=!0;try{return a.unstable_runWithPriority(a.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sl=r)||rl||Cl(1073741823,!1)}}function Dl(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Ir(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);i("171"),l=void 0}if(1===n.tag){var u=n.type;if(Ir(u)){n=Ar(n,u,l);break e}}n=l}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Ka(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Vi(),Xa(a,o),Xi(a,r),r}function Ul(e,t,n,r){var o=t.current;return Dl(e,t,n,o=Qi(_l(),o),r)}function Al(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function zl(e){var t=1073741822-25*(1+((1073741822-_l()+500)/25|0));t>=Si&&(t=Si-1),this._expirationTime=Si=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ll(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Fl(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vl(e,t,n,r,o){var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=Al(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Fl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=Al(a._internalRoot);l.call(e)}}Il(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return Al(a._internalRoot)}function Bl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wl(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Qe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Te=function(e,t,n){switch(t){case"input":if(wt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=z(r);o||i("90"),Be(r),wt(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&Qn(e,!!n.multiple,t,!1)}},zl.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ll;return Dl(e,t,null,n,r._onCommit),r},zl.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},zl.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ol(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},zl.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ll.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ll.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},Fl.prototype.render=function(e,t){var n=this._internalRoot,r=new Ll;return null!==(t=void 0===t?null:t)&&r.then(t),Ul(e,n,null,r._onCommit),r},Fl.prototype.unmount=function(e){var t=this._internalRoot,n=new Ll;return null!==(e=void 0===e?null:e)&&n.then(e),Ul(null,t,null,n._onCommit),n},Fl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ll;return null!==(n=void 0===n?null:n)&&o.then(n),Ul(t,r,e,o._onCommit),o},Fl.prototype.createBatch=function(){var e=new zl(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Me=Ml,Ie=Rl,Re=function(){rl||0===il||(Cl(il,!1),il=0)};var Hl,$l,Jl={createPortal:Bl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Wl(t)||i("200"),Vl(null,e,t,!0,n)},render:function(e,t,n){return Wl(t)||i("200"),Vl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Wl(n)||i("200"),(null==e||void 0===e._reactInternalFiber)&&i("38"),Vl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wl(e)||i("40"),!!e._reactRootContainer&&(Il(function(){Vl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Bl.apply(void 0,arguments)},unstable_batchedUpdates:Ml,unstable_interactiveUpdates:Rl,flushSync:function(e,t){rl&&i("187");var n=sl;sl=!0;try{return Gi(e,t)}finally{sl=n,Cl(1073741823,!1)}},unstable_createRoot:function(e,t){return Wl(e)||i("299","unstable_createRoot"),new Fl(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sl;sl=!0;try{Gi(e)}finally{(sl=t)||rl||Cl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[U,A,z,P.injectEventPluginsByName,b,H,function(e){T(e,B)},Ne,je,On,j]}};$l=(Hl={findFiberByHostInstance:D,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Fr=Vr(function(e){return t.onCommitFiberRoot(n,e)}),Wr=Vr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}}(o({},Hl,{overrideProps:null,currentDispatcherRef:He.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return $l?$l(e):null}}));var ql={default:Jl},Ql=ql&&Jl||ql;e.exports=Ql.default||Ql},function(e,t,n){"use strict";e.exports=n(18)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,l=!1,u=!1;function s(){if(!l){var e=n.expirationTime;u?k():u=!0,w(d,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,l=i;o=e,i=t;try{var u=r()}finally{o=a,i=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,s()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===a&&null!==n&&1===n.priorityLevel){l=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?s():u=!1}}}function d(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{c()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{c()}while(null!==n&&!E())}finally{l=!1,r=o,null!==n?s():u=!1,f()}}var p,m,h=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,b="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,g="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function x(e){p=b(function(t){y(m),e(t)}),m=v(function(){g(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var _=performance;t.unstable_now=function(){return _.now()}}else t.unstable_now=function(){return h.now()};var w,k,E,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var T=S._schedMock;w=T[0],k=T[1],E=T[2],t.unstable_now=T[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var C=null,O=function(e){if(null!==C)try{C(e)}finally{C=null}};w=function(e){null!==C?setTimeout(w,0,e):(C=e,setTimeout(O,0,!1))},k=function(){C=null},E=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof b&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var P=null,N=!1,j=-1,M=!1,I=!1,R=0,D=33,U=33;E=function(){return R<=t.unstable_now()};var A=new MessageChannel,z=A.port2;A.port1.onmessage=function(){N=!1;var e=P,n=j;P=null,j=-1;var r=t.unstable_now(),o=!1;if(0>=R-r){if(!(-1!==n&&n<=r))return M||(M=!0,x(L)),P=e,void(j=n);o=!0}if(null!==e){I=!0;try{e(o)}finally{I=!1}}};var L=function(e){if(null!==P){x(L);var t=e-R+U;t<U&&D<U?(8>t&&(t=8),U=t<D?D:t):D=t,R=e+U,N||(N=!0,z.postMessage(void 0))}else M=!1};w=function(e,t){P=e,j=t,I||0>t?z.postMessage(void 0):M||(M=!0,x(L))},k=function(){P=null,N=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,i=a;o=n,a=t.unstable_now();try{return e()}finally{o=r,a=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,s();else{i=null;var l=n;do{if(l.expirationTime>r){i=l;break}l=l.next}while(l!==n);null===i?i=n:i===n&&(n=e,s()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||E())},t.unstable_continueExecution=function(){null!==n&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(19))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,'body { \n    color: #d9d9d9;\n    font-family: Arial, sans-serif, Georgia, serif;\n}\n\nul {\n    border: 1px #404040 solid;\n}\n\nli , label, p {\n    font-size: 11px;\n}\n\nh4, h5, h6 {\n    border-bottom: 1px solid #333333;\n}\n\ninput, textarea { \n    font-size: 11px;\n    background: #2b2b2b;\n    color: #d9d9d9;\n    opacity: 0.75;\n    vertical-align: bottom;\n}\n\ninput[type="text"] {\n    -webkit-appearance: textarea;\n}\n\nul label input {\n    width: 10px;\n}\n\nul, li {\n    padding-left: 5px;\n    margin-top: 0px;\n    margin-bottom: 0px;\n}\n\nbutton {\n    color: rgba(255,255,255,0.5);\n    border-color: rgba(0,0,0,0.9);\n    border-width: 1px;\n    padding: 7px;\n    background-color: #343a40;\n    margin-left: 4px;\n}\n\nbutton i{\n    padding-right:4px;\n}\n\nbutton:hover {\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\nul,li, ul label {\n    color: rgba(255,255,255,0.5);\n}\n\nul label:hover, li:hover, .content:hover{\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\n#index{\n    margin:-4px;\n}',""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=y(o);n(6);var i=y(n(23)),l=y(n(35)),u=y(n(38)),s=y(n(42)),c=y(n(62)),f=y(n(65)),d=y(n(68)),p=y(n(87)),m=n(10),h=n(12),v=n(3);function y(e){return e&&e.__esModule?e:{default:e}}var b=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:(0,v.readData)("ui-editor")||[],components:[],selectedIndex:-1,element:{name:"",markup:"",style:"",state:"{ }",events:[]}},n.updateConfig=m.updateConfig.bind(n),n.updateEvent=m.updateEvent.bind(n),n.saveElement=m.saveElement.bind(n),n.updateselectedIndex=m.updateselectedIndex.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updatePreview",value:function(e){this.setState({previewComponent:e})}},{key:"updateStyles",value:function(){this.setState({element:this.state.elements[this.state.selectedIndex]})}},{key:"render",value:function(){var e=((0,v.readData)("ui-editor")||[])[this.state.selectedIndex]||this.state.element,t=(0,h.getNodeTree)(e,e.markup,e.style,JSON.parse(e.state),e.events);try{return a.default.createElement("div",null,a.default.createElement(l.default,null,a.default.createElement(i.default,{elements:this.state.elements,onSelection:this.updateselectedIndex,selectedIndex:this.state.selectedIndex})),a.default.createElement(l.default,null,a.default.createElement(s.default,{key:this.state.selectedIndex,element:e,elements:this.state.elements,onEventsUpdate:this.updateEvent,onConfigUpdate:this.updateConfig})),a.default.createElement(l.default,null,a.default.createElement(u.default,{key:Math.ceil(1e3*Math.random()),element:e,name:e.name,markup:e.markup,style:e.style,state:e.state,onSave:this.saveElement})),a.default.createElement(l.default,null,a.default.createElement(f.default,{component:e})),a.default.createElement(l.default,null,a.default.createElement(p.default,{node:t})),a.default.createElement(l.default,null,a.default.createElement(d.default,{key:Math.ceil(1e3*Math.random()),component:e,onEdit:this.updateStyles.bind(this)})),a.default.createElement(l.default,null,a.default.createElement(c.default,null)))}catch(e){return console.log(e),a.default.createElement(l.default,null,a.default.createElement(c.default,null))}}}]),t}();t.default=b},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=f(a);n(24);var l=f(n(26)),u=n(10),s=n(34),c=n(3);function f(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:n.props.elements,selectedIndex:0},n.onDelete=u.onDelete.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"createVariant",value:function(e){var t=JSON.parse(JSON.stringify(e));return t.name="Variant"+t.name,t.markup=t.markup.replace(/>(.*?)</g,">{state.variant}<"),"string"==typeof t.state?(t.state=JSON.parse(t.state),t.state.variant="text"):"object"===r(t.state)?t.state.variant="text":t.state={},t.state.variant="text",t.state=JSON.stringify(t.state),t}},{key:"generateVariant",value:function(e){var t=this.state.elements[e],n=this.createVariant(t),r=this.state.elements;r.push(n),this.setState({elements:r}),(0,c.writeData)("ui-editor",r)}},{key:"render",value:function(){var e=this,t=this.props.elements.map(function(t,n){return i.default.createElement(l.default,{key:n,index:n,selectedIndex:e.props.selectedIndex,element:t,onSelectionChange:e.props.onSelection,onExport:s.onExport.bind(e),onDelete:e.onDelete,onGenerateVariant:e.generateVariant.bind(e)})});return i.default.createElement("div",{className:"elements"},i.default.createElement("div",{className:"container elements-tab"},i.default.createElement("div",{className:"title"},"Components"),i.default.createElement("ul",null,t)))}}]),t}();t.default=d},function(e,t,n){var r=n(25);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".override {\n    line-height: 0%;\n}\n\ntextarea {\n    height: 70px;\n    width: 450px;\n}\n\n.elements{\n    position: fixed;\n}\n\n.title{\n    margin-top: 15px;\n    margin-bottom: 11px;\n    color: rgba(255,255,255,0.5);\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}\n\n.elements-tab {\n    left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=n(27);n(28);l(n(7));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"generateVariant",value:function(){this.props.onGenerateVariant(this.props.selectedIndex)}},{key:"render",value:function(){return a.default.createElement("div",{className:"background",draggable:"true",id:this.props.element.name,onDragStart:i.handleDrag.bind(this)},a.default.createElement("li",{className:this.props.index===this.props.selectedIndex?"selected component":"component",onClick:i.selectionChanged.bind(this),index:this.props.index},a.default.createElement("span",{className:"componentName"},this.props.element.name),a.default.createElement("span",null,a.default.createElement("button",{index:this.props.index,onClick:this.generateVariant.bind(this)},a.default.createElement("i",{className:"fas fa-file-export"}),"Generate Variant"),a.default.createElement("button",{index:this.props.index,onClick:this.props.onExport},a.default.createElement("i",{className:"fas fa-file-export"}),"Export"),a.default.createElement("button",{index:this.props.index,onClick:this.props.onDelete},a.default.createElement("i",{className:"fa fa-trash"}),"Delete"))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectionChanged=function(e){this.props.onSelectionChange(e)},t.handleDrag=function(e){e.dataTransfer.setData("component-name",event.target.getAttribute("id"))}},function(e,t,n){var r=n(29);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".selected, .green {\n    border: 1px solid green;\n    background: rgb(43, 43, 43);\n}\n\n.background {\n    background: rgb(64, 64, 64);\n    border-bottom: 1px solid #333333;\n}\n\n.component {\n    display:flex;\n    justify-content: space-between;\n}\n\n.component .componentName{\n    padding:7px;\n}\n\n.thumbnail {\n    width: 50px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.codeModifier=function(e,t){return"\n                        var state = JSON.parse(JSON.stringify(this.state))\n                        "+e+"\n                        this.setState(state);\n                        window.saveVariants("+window.selectedcomponentname+","+t.name+",state, e)\n"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getStartTags=function(e){return e.split(">").filter(function(e){return!e.includes("/")}).filter(Boolean).map(function(e){return e+">"})}},function(e,t,n){var r=n(33);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".box {\n    margin: 5px;\n    border:1px solid black;\n    padding:5px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.onExport=function(){var e=(0,r.getNestedComponents)(this.state.elements[this.props.selectedIndex]);console.log(e.map(o.getComponentString).join(""))};var r=n(4),o=n(9)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(36);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=JSON.parse(localStorage.getItem("ui-editor-settings-draggable-component-"+n.props.children.type.name))||{style:{position:"fixed",top:"30px",left:"200px"},minimised:!1},n.state.draggable="false",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"moveDiv",value:function(e){var t=this;if("move"===e.target.id){var n=JSON.parse(JSON.stringify(this.state));n.style.top=e.pageY+"px",n.style.left=e.pageX+"px",this.setState({style:n.style},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}}},{key:"toggleMinimiseMaximise",value:function(e){var t=this;this.setState({minimised:!this.state.minimised},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}},{key:"onMouseEnter",value:function(){this.setState({draggable:"true"})}},{key:"onMouseLeave",value:function(){this.setState({draggable:"false"})}},{key:"render",value:function(){return i.default.createElement("div",{draggable:this.state.draggable,id:"move",onDragEnd:this.moveDiv.bind(this),style:this.state.style},i.default.createElement("span",{title:"Move",className:"move-handle",onMouseDown:this.onMouseEnter.bind(this),onMouseUp:this.onMouseLeave.bind(this)},i.default.createElement("i",{className:"fa fa-arrows-alt fa-xs"})),this.state.minimised?i.default.createElement("span",{title:"Minimise",className:"maximise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-maximize fa-xs"})):i.default.createElement("span",{title:"Minimise",className:"minimise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-minimize fa-xs"})),this.state.minimised?i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},this.props.children.type.name)):this.props.children)}}]),t}();t.default=l},function(e,t,n){var r=n(37);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"#move > span{  \n    border: 1px solid black;\n    color: black;\n}\n\n#move .move-handle{\n    cursor: move;\n}\n\n#move .move-handle,\n#move .minimise-handle,\n#move .maximise-handle {\n    padding-left: 2px;\n    padding-right: 2px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(39);var l=n(41),u=n(3);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=(0,u.readComponent)(n.props.name);return n.state={name:r?r.name:"",markup:r?r.markup:"",state:r?r.state:"",style:r?r.style:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"publishElement",value:function(){this.props.onSave({name:this.state.name,markup:this.state.markup,style:this.state.style,state:this.state.state})}},{key:"render",value:function(){var e=this.state.name,t=this.state.markup,n=this.state.style,r=this.state.state;return i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},"Editor"),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Name"),i.default.createElement("input",{type:"text",placeholder:"Enter element name",value:e,onChange:l.updateName.bind(this),id:"elementName"}),i.default.createElement("button",{onClick:this.publishElement.bind(this),id:"save"},i.default.createElement("i",{className:"fas fa-save"}),"Save")),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Markup"),i.default.createElement("textarea",{value:t,onChange:l.updateMarkup.bind(this),id:"elementMarkup",title:"ID is mandatory for events"})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component CSS"),i.default.createElement("textarea",{value:n,onChange:l.updateStyle.bind(this)})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component State"),i.default.createElement("textarea",{value:r,onChange:l.updateState.bind(this),id:"elementState"})))}}]),t}();t.default=s},function(e,t,n){var r=n(40);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".hidden{\n    display: none;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateName=function(e){this.setState({name:e.currentTarget.value})},t.updateMarkup=function(e){this.setState({markup:e.currentTarget.value})},t.updateStyle=function(e){this.setState({style:e.currentTarget.value})},t.updateState=function(e){this.setState({state:e.currentTarget.value})},t.getPropertyContainingProps=function(e){var t=[],n=void 0;try{n=JSON.parse(e.state)}catch(e){console.error("Error: Child state is an invalid json, try an online validator on below string"),console.log(child.state)}for(var r in n)n[r].includes("prop")&&t.push(r);return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=p(o),i=p(n(43)),l=p(n(46)),u=p(n(47)),s=p(n(58));n(59);var c=n(61),f=n(12),d=n(3);function p(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n.state.selectedTag="",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props.element;if(0==this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,'Looks like you do not have any Web component created. Type some "html" on the right "Editor" tab'));if(void 0===t.name&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,"Looks like you have not selected any component. Click on any of the component in the left pane."));var n=(0,f.getNodeTree)(t,t.markup,t.style,JSON.parse(t.state),t.events);if(void 0!==n.error)return(0,s.default)(n.error);if(void 0===n.result&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"));var r=this.state.selectedTag||"",o=void 0,p=void 0;if(r.includes("child-component-")){var m=(0,d.readData)("ui-editor"),h=r.split("child-component-")[1],v=m.find(function(e){return e.name===h}).events.filter(function(e){return!0===e.publishable}).map(function(e){return e.publishName}),y=t.events.map(function(t,n){return a.default.createElement(u.default,{key:n,index:n,event:t,selectedTagID:r,eventNames:v,onSave:c.updateEvent.bind(e),deleteEvent:c.deleteEvent.bind(e)})});o=r?y.filter(function(e){return r.includes(e.props.event.id)}):null,p=a.default.createElement(i.default,{onChange:c.updateConfiguration.bind(this),childName:h,parent:t})}else{var b=t.events.map(function(t,n){return a.default.createElement(u.default,{key:n,index:n,event:t,selectedTagID:r,eventNames:[],onSave:c.updateEvent.bind(e),deleteEvent:c.deleteEvent.bind(e)})});o=r?b.filter(function(e){return r.includes(e.props.event.id)}):null}return a.default.createElement("div",null,a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("div",{className:"tags"},a.default.createElement(l.default,{node:n.result,onSelectedTagChanged:c.selectedTagChanged.bind(this)})),p,a.default.createElement("div",{className:"title"},"Events"),a.default.createElement("div",null,a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"Existing",a.default.createElement("div",null,o))),a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"New",a.default.createElement("div",null,a.default.createElement(u.default,{key:t.events.length,eventNames:[],selectedTagID:r,onSave:c.updateEvent.bind(this)}))))))))}}]),t}();t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(44);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=JSON.parse(n.props.parent.config)[n.props.childName]||{overideState:!1};return n.state={override:r.overideState},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"toggelOverride",value:function(){this.setState({override:!this.state.override}),this.props.onChange({override:!this.state.override,childName:this.props.childName,parentName:this.props.parent.name})}},{key:"render",value:function(){return i.default.createElement("div",{className:"option-group"},i.default.createElement("p",{className:"option-group-label"},i.default.createElement("span",{className:"title"},"Child Configurations"),i.default.createElement("span",{className:"panel expanded"})),i.default.createElement("div",{className:"content"},i.default.createElement("div",{className:"option"},i.default.createElement("label",null,"Override child state"),i.default.createElement("input",{type:"checkbox",onChange:this.toggelOverride.bind(this),checked:this.state.override?"checked":""}))))}}]),t}();t.default=l},function(e,t,n){var r=n(45);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.configurator {\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r};var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this,n=this.props.node;if(!n)return l.default.createElement("span",null,"null");if("string"==typeof n)return l.default.createElement("li",null,n);var r=n.props.id?"-"+n.props.id:"";if(n.props&&Array.isArray(n.props.children)){var a=n.props.children.map(function(n,r){return l.default.createElement(t,{key:r,node:n,onSelectedTagChanged:e.props.onSelectedTagChanged})});return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:n.type+r}),n.type+r),a)}if("object"===o(n.props.children)){var i=n.props.children;return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:n.type+r}),n.type+r),l.default.createElement(t,{key:index,node:i,onSelectedTagChanged:this.props.onSelectedTagChanged}))}return"function"==typeof n.type?l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:"child-component-"+n.type.name,onChange:this.props.onSelectedTagChanged}),n.type.name)):l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:n.type+r,onChange:this.props.onSelectedTagChanged}),n.type+r))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=s(o);n(48);var i=s(n(50)),l=n(56),u=n(57);function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={name:n.props.event?n.props.event.name:"",reducer:n.props.event?n.props.event.reducer:"",publishable:n.props.event?n.props.event.publishable:"",publishName:n.props.event?n.props.event.publishName:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){if(void 0===this.props.selectedTagID)return(0,i.default)();var e=this.state.publishable?a.default.createElement("input",{type:"text",onChange:l.updatePublishName.bind(this),value:this.state.publishName,placeholder:"Enter event publish name for other components to subscribe to"}):null,t=this.props.eventNames.map(function(e){return a.default.createElement("option",{value:e})});return a.default.createElement("div",{className:"event"},a.default.createElement("input",{list:"browsers",type:"text",onChange:l.updateEventName.bind(this),value:this.state.name,placeholder:"Enter event name",title:"Event Name"}),a.default.createElement("datalist",{id:"browsers"},t),a.default.createElement("br",null),a.default.createElement("textarea",{onChange:l.updateReducer.bind(this),value:this.state.reducer,placeholder:"Enter state reducer",title:"Reducer"}),a.default.createElement("div",null,a.default.createElement("label",null,a.default.createElement("input",{type:"checkbox",onChange:l.updateEventType.bind(this),checked:this.state.publishable?"checked":""}),"Publishable"),e,a.default.createElement("button",{onClick:u.publishEvent.bind(this),id:"saveEvent"},a.default.createElement("i",{className:"fas fa-save"}),"Save"),a.default.createElement("button",{onClick:u.deleteEvent.bind(this),id:"deleteEvent"},a.default.createElement("i",{className:"fas fa-trash"}),"Delete")))}}]),t}();t.default=c},function(e,t,n){var r=n(49);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.event input {\n    margin-left:0px;\n}\n\n.event textarea {\n    margin-top: 8px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(11),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(){return React.createElement(a.default,{messages:[{type:"info",text:"#1 INFO: Select any element in the left most pane(editor pane) to see its content"},{type:"info",text:"#2 INFO: Click on 'Add' to add an component"}]})}},function(e,t,n){var r=n(52);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n    bottom: 50px;\n}\n\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(54);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){var e=this.props.message;return"error"===e.type||"info"===e.type?i.default.createElement("div",{className:e.type},i.default.createElement("code",null,e.text)):(console.error(e.type+" is unidentified message type for <MessagesComponent/>. Please use either 'error' or 'info' only. If you require a different type, raise an issue, send a PR"),i.default.createElement("div",{className:"console"},i.default.createElement("div",{className:"eerror"},i.default.createElement("code",null,"error : unidentified message type. Please use either error/ info only"))))}}]),t}();t.default=l},function(e,t,n){var r=n(55);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";var r;function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){this.setState({publishable:e.currentTarget.checked})}e.exports=(o(r={updateEventName:function(e){this.setState({name:e.target.value})},updateEventType:a,updatePublishName:function(e){this.setState({publishName:e.target.value})}},"updateEventType",a),o(r,"updateReducer",function(e){this.setState({reducer:e.target.value})}),r)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.publishEvent=function(){this.props.onSave({name:this.state.name,reducer:this.state.reducer,index:this.props.index,publishable:this.state.publishable,publishName:this.state.publishName})},t.deleteEvent=function(){this.props.deleteEvent(this.props.index)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(11),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){var t=[{type:"error",text:"ERROR : "+e+"developer log: look in console related to eval"}];return React.createElement(a.default,{messages:t})}},function(e,t,n){var r=n(60);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".events {\n    border:1px solid black;\n    padding: 5px;\n}\n\n.error {\n    color: red;\n    position: fixed;\n    right: 150px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));e.id=this.state.selectedTag.split("-")[1],void 0===e.index?t.events.push(e):t.events[e.index]=e;this.props.onEventsUpdate(t.events)},t.selectedTagChanged=function(e){this.setState({selectedTag:e.currentTarget.value})},t.deleteEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));t.events.splice(e,1),this.props.onEventsUpdate(t.events)},t.updateConfiguration=function(e){this.props.onConfigUpdate(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(3);n(63);var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"refreshToPrevious",value:function(){(0,l.popHistory)()}},{key:"render",value:function(){return i.default.createElement("div",{className:"container preview"},i.default.createElement("div",{className:"title"},"History"),i.default.createElement("div",null,i.default.createElement("button",{onClick:this.refreshToPrevious.bind(this)},"Go back")))}}]),t}();t.default=u},function(e,t,n){var r=n(64);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".container{\n    border: 1px solid black;\n    padding: 5px;\n    box-shadow: 0px 8px 26px -8px black;\n    background: #2C3134;\n}\n",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o);n(66);var i=l(n(7));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.component.id*~~(10*Math.random());return a.default.createElement("div",{className:"container preview"},a.default.createElement("div",{className:"title"},"Preview"),a.default.createElement(i.default,{key:e,component:this.props.component}))}}]),t}();t.default=u},function(e,t,n){var r=n(67);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".container{\n    border: 1px solid black;\n    padding: 5px;\n    box-shadow: 0px 8px 26px -8px black;\n    background: #2C3134;\n}\n",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=s(o),i=s(n(69)),l=n(84),u=n(3);function s(e){return e&&e.__esModule?e:{default:e}}n(85);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.state=Object.assign({},n.props);var r=(0,u.readComponent)(n.state.component.name);return n.state.rules=(0,l.getObjectFormat)(r?r.style:""),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"addRule",value:function(){var e=Array.from(this.state.rules);e.unshift({selector:"newClass",declarations:[{property:"newProperty",value:""}]}),this.setState({rules:e})}},{key:"ruleUpdate",value:function(e,t){e.selector||(e=void 0);var n=this.state.rules;n[t]=e;var r=(0,u.readData)("ui-editor");(0,u.readComponent)(this.state.component.name).style=(0,l.convertToStyleString)(n.filter(Boolean)),(0,u.writeData)("ui-editor",r),this.props.onEdit()}},{key:"render",value:function(){var e=this,t=this.state.rules.map(function(t,n){return a.default.createElement(i.default,{key:Math.ceil(1e3*Math.random()),index:n,rule:t,onUpdate:e.ruleUpdate.bind(e)})});return a.default.createElement("div",{className:"container"},a.default.createElement("div",{className:"title"},"StyleExplorer",a.default.createElement("button",{onClick:this.addRule.bind(this)},"+")),t)}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(70);var i=u(n(72)),l=u(n(75));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props.rule),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updateSelector",value:function(e){this.props.onUpdate({selector:e,declarations:this.state.declarations},this.props.index)}},{key:"updateDeclarations",value:function(e){this.props.onUpdate({selector:this.state.selector,declarations:e},this.props.index)}},{key:"render",value:function(){return a.default.createElement("div",{className:"rules container"},a.default.createElement(i.default,{name:this.state.selector,key:Math.ceil(1e3*Math.random()),onEdit:this.updateSelector.bind(this)})," {",a.default.createElement(l.default,{declarations:this.state.declarations,key:Math.ceil(1e3*Math.random()),onEdit:this.updateDeclarations.bind(this)}),"}")}}]),t}();t.default=s},function(e,t,n){var r=n(71);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".rules {\n    font-size: 11px;\n}\n\n.rules input {\n    border: 0px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(73);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({name:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.name!==this.state.name&&this.props.onEdit(this.state.name)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){var e=this.state.name.includes("newClass")?"autoFocus":"";return i.default.createElement("input",{type:"text",value:this.state.name,autoFocus:e,onBlur:this.valueChanged.bind(this),onFocus:this.selectText.bind(this),onChange:this.updateSelector.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(74);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(76);var i=u(n(78)),l=u(n(81));function u(e){return e&&e.__esModule?e:{default:e}}function s(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"addNewDeclaration",value:function(e){var t=this.state.declarations;e+=1,this.setState({declarations:[].concat(s(t.slice(0,e)),[{property:"addProperty",value:""}],s(t.slice(e,t.length)))})}},{key:"onEdit",value:function(e,t,n){var r=this.state.declarations;r[n].property=t,this.setState({declarations:r}),r[n].value&&this.props.onEdit(r)}},{key:"onValueEdit",value:function(e,t,n){var r=this.state.declarations;r[n].value=t,this.setState({declarations:r}),this.props.onEdit(r)}},{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"declaration"},this.state.declarations.map(function(t,n){return a.default.createElement("div",{key:n},a.default.createElement(i.default,{index:n,key:Math.ceil(1e3*Math.random()),value:t.property,onEdit:e.onEdit.bind(e)}),":",a.default.createElement(l.default,{key:Math.ceil(1e3*Math.random()),index:n,value:t.value,onNewdeclaration:e.addNewDeclaration.bind(e),onEdit:e.onValueEdit.bind(e)}))}))}}]),t}();t.default=c},function(e,t,n){var r=n(77);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".declaration{\n    padding-left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(79);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({value:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.value!==this.state.value&&this.props.onEdit(this.props.value,this.state.value,this.props.index)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){var e=this.state.value.includes("addProperty")?"autoFocus":"";return i.default.createElement("input",{type:"text",value:this.state.value,autoFocus:e,onBlur:this.valueChanged.bind(this),onFocus:this.selectText.bind(this),onChange:this.updateSelector.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(80);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(82);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({value:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.name!==this.state.value&&this.props.onEdit(this.props.value,this.state.value,this.props.index)}},{key:"addNew",value:function(e){"Enter"==e.key&&this.props.onNewdeclaration(this.props.index)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){return i.default.createElement("input",{type:"text",value:this.state.value,onBlur:this.valueChanged.bind(this),onChange:this.updateSelector.bind(this),onFocus:this.selectText.bind(this),onKeyPress:this.addNew.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(83);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";function r(e){return'"'+e.split(":")[0].trim()+'":"'+e.split(":")[1].trim()+'"'}function o(e){var t=e.split("{")[0].trim(),n="{"+e.split("{")[1].split("}")[0].split(";").map(function(e){return e.trim()}).filter(Boolean).map(r).join(",")+"}",o=JSON.parse(n);return e={selector:t,declarations:Object.keys(o).map(function(e){return{property:e,value:o[e]}})}}function a(e){return e.selector+" {"+e.declarations.map(function(e){return e.property+":"+e.value+";"}).join("")+"}"}Object.defineProperty(t,"__esModule",{value:!0}),t.getObjectFormat=function(e){if(!e||0==e.length)return[];return e.split("}").filter(Boolean).map(function(e){return e+"}"}).map(o)},t.convertToStyleString=function(e){return e.map(a).join("")}},function(e,t,n){var r=n(86);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=l(n(88));function l(e){return e&&e.__esModule?e:{default:e}}n(90);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.node.result;return void 0===e||void 0!==this.props.node.error?a.default.createElement("div",null):a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"TagExplorer"),a.default.createElement("ul",{className:"tags"},a.default.createElement(i.default,{node:e})))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r},u=n(89);var s=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this.props.node,n=Object.assign({},e.props);if(delete n.children,n=(0,u.convertJSONtoHTMLAttributes)(n),!e||"string"==typeof e)return l.default.createElement("span",null,"null");if("string"==typeof e.props.children){var r=e.props.children;return l.default.createElement("li",null,"<"+e.type+" "+n+">"+r+"</"+e.type+">")}if(e.props&&Array.isArray(e.props.children)){var a=e.props.children.map(function(e,n){return l.default.createElement(t,{key:n,node:e})});return l.default.createElement("li",null,"<"+e.type+" "+n+">",a,"</"+e.type+">")}if("object"===o(e.props.children)){var i=e.props.children;return l.default.createElement("li",null,"<"+e.type+" "+n+">",l.default.createElement(t,{key:index,node:i}),"</"+e.type+">")}return"function"==typeof e.type?l.default.createElement("li",null,"<"+e.type.name+"/>"):"object"===o(e.type)?l.default.createElement("li",null,"<"+e.type.id+">","</"+e.type.id+">"):l.default.createElement("li",null,"<"+e.type+" "+n+">",e.type,"</"+e.type+">")}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertJSONtoHTMLAttributes=function(e){var t=JSON.stringify(e);if(Object.keys(e).forEach(function(t){return e[t]="'"+e[t]+"'"}),t.length>2){return JSON.stringify(e).split('"').map(function(e){if(!e.includes("{")&&!e.includes("}"))return":"===e?"=":","===e?" ":e}).filter(Boolean).join("")}return""}},function(e,t,n){var r=n(91);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".tags {\n    font-size: 11px;\n}\n\n.tags li {\n    padding-left:10px;\n}",""])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvbG9jYWxTdG9yYWdlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvbmVzdGVkQ29tcG9uZW50U2V0dXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0luZGV4L2luZGV4LmNzcz9kMGQ3Iiwid2VicGFjazovLy8uL3NyYy9EeW5hbWljQ29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvanN4VHJhbnNwaWxlci9jcmVhdGUtc3R5bGVzaGVldC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2NvbnZlcnQtdG8tcmVhY3QtY29tcG9uZW50LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50cy9SZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlc0NvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2dldC1ub2RlLXRyZWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvSW5kZXgvaW5kZXguY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1Rvb2wvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50cy9TdHlsZS5jc3M/MGIwOCIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudHMvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3M/NjFhMyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9jb2RlTW9kaWZpZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9nZXQtc3RhcnQtdGFncy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRHluYW1pY0NvbXBvbmVudC9zdHlsZS5jc3M/ZWQ3YiIsIndlYnBhY2s6Ly8vLi9zcmMvRHluYW1pY0NvbXBvbmVudC9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRHJhZ2dhYmxlQ29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9EcmFnZ2FibGVDb21wb25lbnQvc3R5bGUuY3NzPzA4MmMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0RyYWdnYWJsZUNvbXBvbmVudC9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VkaXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWRpdG9yL1N0eWxlLmNzcz8xYmZjIiwid2VicGFjazovLy8uL3NyYy9FZGl0b3IvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FZGl0b3IvUmVkdWNlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9Db25maWd1cmF0b3IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NvbmZpZ3VyYXRvci9TdHlsZS5jc3M/ZGQ1NiIsIndlYnBhY2s6Ly8vLi9zcmMvQ29uZmlndXJhdG9yL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvTm9kZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudC9TdHlsZS5jc3M/ZjMxMyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FdmVudC9NZXNzYWdlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZXNDb21wb25lbnQvc3R5bGUuY3NzPzhmN2UiLCJ3ZWJwYWNrOi8vLy4vc3JjL01lc3NhZ2VzQ29tcG9uZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZUNvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZUNvbXBvbmVudC9zdHlsZS5jc3M/NDc2OCIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZUNvbXBvbmVudC9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L1JlZHVjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL01lc3NhZ2VzLmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudHMvU3R5bGUuY3NzPzc5NzEiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50cy9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50cy9SZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9IaXN0b3J5L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9IaXN0b3J5L3N0eWxlLmNzcz8wYjIxIiwid2VicGFjazovLy8uL3NyYy9IaXN0b3J5L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvUHJldmlldy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvUHJldmlldy9zdHlsZS5jc3M/NmQ0OCIsIndlYnBhY2s6Ly8vLi9zcmMvUHJldmlldy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL1N0eWxlLmNzcz8zYjk3Iiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvU2VsZWN0b3IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9TZWxlY3Rvci9TdHlsZS5jc3M/YmI4NSIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL1NlbGVjdG9yL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vU3R5bGUuY3NzPzJjZTYiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9Qcm9wZXJ0eS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1Byb3BlcnR5L1N0eWxlLmNzcz85NTgzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vUHJvcGVydHkvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vVmFsdWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9WYWx1ZS9TdHlsZS5jc3M/YjEyZCIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1ZhbHVlL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci91dGlsLmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1N0eWxlLmNzcz9mOTJhIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvVGFnRXhwbG9yZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1RhZ0V4cGxvcmVyL1RhZ3MuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9jb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1RhZ0V4cGxvcmVyL1N0eWxlLmNzcz9hYzQ0Iiwid2VicGFjazovLy8uL3NyYy9UYWdFeHBsb3Jlci9TdHlsZS5jc3MiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiaWQiLCJwdXNoIiwiZm4iLCJtZW1vIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZXRFbGVtZW50IiwidGFyZ2V0IiwicGFyZW50Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwib3B0aW9ucyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsIkVycm9yIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsIm5leHRTaWJsaW5nIiwiaW5zZXJ0QmVmb3JlIiwiYXBwZW5kQ2hpbGQiLCJmaXJzdENoaWxkIiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ1bmRlZmluZWQiLCJhdHRycyIsInR5cGUiLCJub25jZSIsIm5jIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsImVsIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJvYmoiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJ0cmFuc2Zvcm0iLCJkZWZhdWx0Iiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwibGluayIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsImluZGV4IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJwb3BIaXN0b3J5IiwiZWRpdG9ySGlzdG9yeSIsInJlYWREYXRhIiwibGFzdEl0ZW0iLCJwb3AiLCJ3cml0ZURhdGEiLCJyZWFkQ29tcG9uZW50IiwiY29tcG9uZW50TmFtZSIsImNvbXBvbmVudHMiLCJmaW5kIiwiY29tcG9uZW50Iiwid3JpdGVDb21wb25lbnQiLCJpZE1hcmt1cE1vZGlmaWVkIiwiQXJyYXkiLCJpc0FycmF5IiwiZmluZEluZGV4IiwiY29tcCIsIm1hcmt1cCIsImlkTWFya3VwIiwiX2dldFN0YXJ0VGFncyIsImdldFN0YXJ0VGFncyIsImlkVGFnc0NvdW50Iiwic3RyaW5nIiwid29yZCIsInNwbGl0IiwicmVwbGFjZSIsIm5vSWRNYXJrdXAiLCJub1B1c2giLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwicHVzaEhpc3RvcnkiLCJJZE1hcmt1cCIsInN0YXJ0VGFncyIsImlkVGFncyIsInRhZyIsInN0YXJ0VGFnIiwicGFyc2UiLCJnZXRJdGVtIiwiY2hlY2tOZXN0ZWRDb21wb25lbnRzIiwic2F2ZUNvbXBvbmVudHNUb1dpbmRvdyIsIm5lc3RlZENvbXBvbmVudHMiLCJzYXZlVG9XaW5kb3ciLCJnZXROZXN0ZWRDb21wb25lbnRzIiwiX2xvY2FsU3RvcmFnZSIsImNoaWxkcmVuIiwiaW5jbHVkZXMiLCJncmFuZEtpZHMiLCJmbGF0IiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiZ2V0Q2hpbGRDb21wb25lbnRzIiwiX2NvbnZlcnRUb1JlYWN0Q29tcG9uZW50IiwiX2NyZWF0ZVN0eWxlc2hlZXQiLCJjcmVhdGVTdHlsZXNoZWV0IiwiY3JlYXRlQ29tcG9uZW50IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJ2YWwiLCJUeXBlRXJyb3IiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsImhtciIsImxvY2FscyIsIl9yZWFjdCIsIl9uZXN0ZWRDb21wb25lbnRTZXR1cCIsIkR5bmFtaWNDb21wb25lbnQiLCJwcm9wcyIsIl9jbGFzc0NhbGxDaGVjayIsIl90aGlzIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJfX3Byb3RvX18iLCJnZXRQcm90b3R5cGVPZiIsInN0YXRlIiwiQ29tcG9uZW50IiwicHJldmlvdXNUYXJnZXQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2xhc3NMaXN0IiwiYWRkIiwicHJldmVudERlZmF1bHQiLCJjaGlsZCIsImRhdGFUcmFuc2ZlciIsImdldERhdGEiLCJ1dWlkIiwiZ2V0QXR0cmlidXRlIiwic2V0U3RhdGUiLCJfcmVhY3QyIiwib25Ecm9wIiwib25EcmFnT3ZlciIsIlJlYWN0IiwidG9EZWxldGUiLCJkeW5hbWljU3R5bGUiLCJpbm5lckhUTUwiLCJib2R5IiwiX2NvZGVNb2RpZmllciIsImdldENvbXBvbmVudFN0cmluZyIsImNvbnZlcnRUb1JlYWN0Y29tcG9uZW50IiwiY29tcG9uZW50U3RyaW5nIiwiZHJhZy1kcm9wLWZlYXR1cmUiLCJldmFsIiwiQmFiZWwiLCJwcmVzZXRzIiwicGx1Z2lucyIsImNvZGUiLCJldmVudHMiLCJldmVudCIsInN0YXRlT3ZlcmlkZU1hcmt1cCIsImNvbmZpZyIsImNoaWxkTmFtZSIsIm92ZXJpZGVTdGF0ZSIsImdldFN0YXRlZE1hcmt1cCIsImNoaWxkQ29tcG9uZW50cyIsInB1Ymxpc2hhYmxlRXZlbnRzIiwicHVibGlzaGFibGUiLCJldmVudFVzZWRJblBhcmVudCIsInB1Ymxpc2hhYmxlRXZlbnQiLCJwdWJsaXNoTmFtZSIsImZ1bmN0aW9uRGVmIiwiY29kZU1vZGlmaWVyIiwicmVkdWNlciIsImdldENvbXBvbmVudEV2ZW50ZWRNYXJrdXAiLCJnZXRDb21wb25lbnROYW1lSW5NYXJrdXAiLCJjb21wb25lbnRSZWR1Y2VycyIsImZ1bmN0aW9uTmFtZSIsIlJlYWN0Q29tcG9uZW50IiwidXBkYXRlc2VsZWN0ZWRJbmRleCIsImN1cnJlbnRUYXJnZXQiLCJpbm5lclRleHQiLCJzZWxlY3RlZENvbXBvbmVudCIsImVsZW1lbnRzIiwic2VsZWN0ZWRJbmRleCIsInNlbGVjdGVkY29tcG9uZW50bmFtZSIsInNhdmVFbGVtZW50IiwiZWxlbWVudCIsImVsZW1lbnRFeGlzdCIsImVsZW1lbnRVbmRlckVkaXQiLCJuZXdFbGVtZW50IiwiTWF0aCIsImNlaWwiLCJyYW5kb20iLCJ1cGRhdGVFdmVudCIsIm5ld0VsZW1lbnRzIiwib25EZWxldGUiLCJwYXJlbnRFbGVtZW50IiwidXBkYXRlQ29uZmlnIiwicGFyZW50TmFtZSIsIm92ZXJyaWRlIiwiTWVzc2FnZXNDb21wb25lbnQiLCJtZXNzYWdlcyIsImNsYXNzTmFtZSIsIm1lc3NhZ2UiLCJfTWVzc2FnZUNvbXBvbmVudDIiLCJnZXROb2RlVHJlZSIsImpzeCIsImVycm9yIiwiX2RlZmluZVByb3BlcnR5Iiwic2F2ZVZhcmlhbnRzIiwidmFyaWFudHMiLCJTZXQiLCJzb3VyY2VDb21wb25lbnQiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VzdGF0ZSIsIm5ld1N0YXRlIiwiSW5kZXgiLCJfVG9vbDIiLCJSZWFjdERPTSIsInJlbmRlciIsImdldEVsZW1lbnRCeUlkIiwiayIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJhYSIsImJhIiwiQSIsIml0ZXJhdG9yIiwiQiIsImEiLCJiIiwiZyIsImgiLCJmIiwiZnJhbWVzVG9Qb3AiLCJjYSIsIkMiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRCIsIkUiLCJjb250ZXh0IiwidXBkYXRlciIsIkYiLCJHIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiSCIsImNvbnN0cnVjdG9yIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJJIiwiY3VycmVudCIsIkoiLCJLIiwiTCIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImRlZmF1bHRQcm9wcyIsIiQkdHlwZW9mIiwiX293bmVyIiwiTiIsIk8iLCJQIiwiUSIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlIiLCJVIiwiUyIsIlQiLCJuZXh0IiwiZG9uZSIsIj0iLCI6IiwiZXNjYXBlIiwiZWEiLCJmYSIsIlYiLCJkYSIsIlciLCJYIiwiQ2hpbGRyZW4iLCJ0b0FycmF5Iiwib25seSIsImNyZWF0ZVJlZiIsIlB1cmVDb21wb25lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsIl9jb250ZXh0IiwiZm9yd2FyZFJlZiIsImxhenkiLCJfY3RvciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwiY29tcGFyZSIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlRmFjdG9yeSIsImlzVmFsaWRFbGVtZW50IiwidmVyc2lvbiIsInVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlIiwidW5zdGFibGVfUHJvZmlsZXIiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJSZWFjdEN1cnJlbnRPd25lciIsIlkiLCJaIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJjb25zb2xlIiwiaGEiLCJpYSIsIm9uRXJyb3IiLCJqYSIsInNsaWNlIiwibGEiLCJtYSIsIm5hIiwib2EiLCJleHRyYWN0RXZlbnRzIiwiZXZlbnRUeXBlcyIsInBhIiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJxYSIsInJlZ2lzdHJhdGlvbk5hbWUiLCJyYSIsInNhIiwiZGVwZW5kZW5jaWVzIiwidGEiLCJ1YSIsInZhIiwid2EiLCJrYSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiX2Rpc3BhdGNoTGlzdGVuZXJzIiwiX2Rpc3BhdGNoSW5zdGFuY2VzIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJpc1BlcnNpc3RlbnQiLCJyZWxlYXNlIiwiQmEiLCJpbmplY3RFdmVudFBsdWdpbk9yZGVyIiwiaW5qZWN0RXZlbnRQbHVnaW5zQnlOYW1lIiwiQ2EiLCJzdGF0ZU5vZGUiLCJkaXNhYmxlZCIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiS2EiLCJMYSIsInJldHVybiIsIk1hIiwiZGlzcGF0Y2hDb25maWciLCJOYSIsIl90YXJnZXRJbnN0IiwiT2EiLCJQYSIsIlFhIiwiUmEiLCJTYSIsInRvTG93ZXJDYXNlIiwiVGEiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJVYSIsIlZhIiwiV2EiLCJhbmltYXRpb24iLCJ0cmFuc2l0aW9uIiwiWGEiLCJZYSIsIlphIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJkYiIsImViIiwidGV4dENvbnRlbnQiLCJmYiIsImdiIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmV0dXJuVmFsdWUiLCJpYiIsImV2ZW50UG9vbCIsImpiIiwiZGVzdHJ1Y3RvciIsImhiIiwiZ2V0UG9vbGVkIiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJrYiIsImRhdGEiLCJsYiIsIm1iIiwibmIiLCJvYiIsImRvY3VtZW50TW9kZSIsInBiIiwicWIiLCJyYiIsInNiIiwiYmVmb3JlSW5wdXQiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJjb21wb3NpdGlvbkVuZCIsImNvbXBvc2l0aW9uU3RhcnQiLCJjb21wb3NpdGlvblVwZGF0ZSIsInRiIiwidWIiLCJrZXlDb2RlIiwidmIiLCJkZXRhaWwiLCJ3YiIsInpiIiwibG9jYWxlIiwid2hpY2giLCJ4YiIsImN0cmxLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiY2hhciIsInliIiwiQWIiLCJCYiIsIkNiIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJkYXRldGltZS1sb2NhbCIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwiTWIiLCJub2RlTmFtZSIsIk5iIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwibm9kZVR5cGUiLCJPYiIsIlBiIiwiUmIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwic2V0IiwiY29uZmlndXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlFiIiwiU2IiLCJjaGVja2VkIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJjYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImRpc3BsYXlOYW1lIiwiamMiLCJfZGVidWdPd25lciIsIl9kZWJ1Z1NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsImtjIiwibGMiLCJtYyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJyYyIsInNjIiwidG9VcHBlckNhc2UiLCJ0YyIsInBjIiwiaXNOYU4iLCJxYyIsInRlc3QiLCJvYyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwidWMiLCJ2YyIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwid2MiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwieGMiLCJ5YyIsInpjIiwiQWMiLCJvd25lckRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsIkJjIiwiY2hhbmdlIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsImRldGFjaEV2ZW50IiwiS2MiLCJMYyIsImF0dGFjaEV2ZW50IiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiUWMiLCJ2aWV3IiwiUmMiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiU2MiLCJnZXRNb2RpZmllclN0YXRlIiwiVGMiLCJVYyIsIlZjIiwiV2MiLCJYYyIsIlljIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJaYyIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIiRjIiwibW91c2VFbnRlciIsIm1vdXNlTGVhdmUiLCJwb2ludGVyRW50ZXIiLCJwb2ludGVyTGVhdmUiLCJhZCIsImRlZmF1bHRWaWV3IiwicGFyZW50V2luZG93IiwiYWx0ZXJuYXRlIiwiYmQiLCJjZCIsImRkIiwiZWQiLCJlZmZlY3RUYWciLCJmZCIsImhkIiwic2libGluZyIsImdkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsImpkIiwiY2xpcGJvYXJkRGF0YSIsImtkIiwibGQiLCJjaGFyQ29kZSIsIm1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIm5kIiwiOCIsIjkiLCIxMiIsIjEzIiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjI3IiwiMzIiLCIzMyIsIjM0IiwiMzUiLCIzNiIsIjM3IiwiMzgiLCIzOSIsIjQwIiwiNDUiLCI0NiIsIjExMiIsIjExMyIsIjExNCIsIjExNSIsIjExNiIsIjExNyIsIjExOCIsIjExOSIsIjEyMCIsIjEyMSIsIjEyMiIsIjEyMyIsIjE0NCIsIjE0NSIsIjIyNCIsIm9kIiwibG9jYXRpb24iLCJyZXBlYXQiLCJwZCIsInFkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsInJkIiwic2QiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsInRkIiwidWQiLCJ2ZCIsIndkIiwiaXNJbnRlcmFjdGl2ZSIsInhkIiwiaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlIiwieWQiLCJ6ZCIsIkFkIiwidGFyZ2V0SW5zdCIsImFuY2VzdG9ycyIsImNvbnRhaW5lckluZm8iLCJ0b3BMZXZlbFR5cGUiLCJCZCIsIkNkIiwiRGQiLCJhZGRFdmVudExpc3RlbmVyIiwiRWQiLCJGZCIsIkdkIiwiSGQiLCJJZCIsIkpkIiwiS2QiLCJMZCIsIm5vZGUiLCJvZmZzZXQiLCJOZCIsImNvbnRlbnRXaW5kb3ciLCJPZCIsImNvbnRlbnRFZGl0YWJsZSIsIlFkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIk1kIiwiY29udGFpbnMiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImRvY3VtZW50RWxlbWVudCIsInN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJtaW4iLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIlJkIiwiU2QiLCJzZWxlY3QiLCJUZCIsIlVkIiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJvblNlbGVjdCIsIiRkIiwiWmQiLCJhZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiYmUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNlIiwiZGUiLCJlZSIsIlNpbXBsZUV2ZW50UGx1Z2luIiwiRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIiwiQ2hhbmdlRXZlbnRQbHVnaW4iLCJTZWxlY3RFdmVudFBsdWdpbiIsIkJlZm9yZUlucHV0RXZlbnRQbHVnaW4iLCJmZSIsImh0bWwiLCJtYXRobWwiLCJzdmciLCJnZSIsImhlIiwiaWUiLCJqZSIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJuYW1lc3BhY2VVUkkiLCJrZSIsImxhc3RDaGlsZCIsIm5vZGVWYWx1ZSIsImxlIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJib3JkZXJJbWFnZU91dHNldCIsImJvcmRlckltYWdlU2xpY2UiLCJib3JkZXJJbWFnZVdpZHRoIiwiYm94RmxleCIsImJveEZsZXhHcm91cCIsImJveE9yZGluYWxHcm91cCIsImNvbHVtbkNvdW50IiwiY29sdW1ucyIsImZsZXgiLCJmbGV4R3JvdyIsImZsZXhQb3NpdGl2ZSIsImZsZXhTaHJpbmsiLCJmbGV4TmVnYXRpdmUiLCJmbGV4T3JkZXIiLCJncmlkQXJlYSIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJtZSIsIm5lIiwidHJpbSIsIm9lIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJzdWJzdHJpbmciLCJwZSIsIm1lbnVpdGVtIiwiYXJlYSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJxZSIsInJlIiwiaXMiLCJzZSIsImJsdXIiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsImF1dG9Gb2N1cyIsInhlIiwiX19odG1sIiwieWUiLCJzZXRUaW1lb3V0IiwiemUiLCJjbGVhclRpbWVvdXQiLCJBZSIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJCZSIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiRGUiLCJFZSIsIkZlIiwiR2UiLCJIZSIsIkllIiwiSmUiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJjaGlsZENvbnRleHRUeXBlcyIsIktlIiwiTGUiLCJNZSIsIk5lIiwiZ2V0Q2hpbGRDb250ZXh0IiwiT2UiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVWUiLCJlbGVtZW50VHlwZSIsInBlbmRpbmdQcm9wcyIsImNvbnRleHREZXBlbmRlbmNpZXMiLCJtZW1vaXplZFN0YXRlIiwidXBkYXRlUXVldWUiLCJtZW1vaXplZFByb3BzIiwibGFzdEVmZmVjdCIsImZpcnN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImNoaWxkRXhwaXJhdGlvblRpbWUiLCJleHBpcmF0aW9uVGltZSIsIlZlIiwiWGUiLCJZZSIsIlplIiwiJGUiLCJhZiIsImJmIiwicGVuZGluZ0NoaWxkcmVuIiwiaW1wbGVtZW50YXRpb24iLCJjZiIsImRpZEVycm9yIiwiZWFybGllc3RQZW5kaW5nVGltZSIsImxhdGVzdFBlbmRpbmdUaW1lIiwiZGYiLCJmZiIsImxhdGVzdFBpbmdlZFRpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwiZ2YiLCJuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbiIsImpmIiwia2YiLCJiYXNlU3RhdGUiLCJ0ZiIsIl9yZWFjdEludGVybmFsRmliZXIiLCJsZiIsIm5mIiwibWYiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwidWYiLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJ2ZiIsImNvbnRleHRUeXBlIiwid2YiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJ4ZiIsInlmIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJ6ZiIsIkFmIiwiX3N0cmluZ1JlZiIsIkJmIiwiQ2YiLCJNYXAiLCJkZWxldGUiLCJEZiIsIkVmIiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJKZiIsInRhZ05hbWUiLCJLZiIsIkxmIiwiTWYiLCJOZiIsIk9mIiwiUGYiLCJRZiIsIlJmIiwiU2YiLCJUZiIsIlVmIiwiVmYiLCJXZiIsIlhmIiwiWWYiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJlZyIsImZnIiwiZ2ciLCJoZyIsImlnIiwiamciLCJrZyIsImxnIiwibWciLCJxdWV1ZSIsImJhc2VVcGRhdGUiLCJuZyIsIm9nIiwicGciLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJxZyIsImxhc3QiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJyZyIsImRlc3Ryb3kiLCJkZXBzIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInJlYWRDb250ZXh0IiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsIkNnIiwiRGciLCJFZyIsIkZnIiwiR2ciLCJIZyIsIklnIiwiSmciLCJLZyIsIkxnIiwiTWciLCJOZyIsIk9nIiwiUGciLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJRZyIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsIlJnIiwicGVuZGluZ0NvbnRleHQiLCJTZyIsInRpbWVkT3V0QXQiLCJmYWxsYmFjayIsIlRnIiwiVWciLCJ0aGVuIiwiaGYiLCJXZSIsImh5ZHJhdGUiLCJoaWRkZW4iLCJmaXJzdCIsIm9ic2VydmVkQml0cyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsImNoIiwiZGgiLCJlaCIsImZoIiwiZ2giLCJoaCIsImloIiwiamgiLCJzdGFjayIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJvbkNsaWNrIiwib25jbGljayIsInBoIiwiV2Vha1NldCIsInFoIiwicmgiLCJzaCIsInRoIiwidmgiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIndoIiwieGgiLCJ5aCIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJ6aCIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJDZSIsImRpc3BsYXkiLCJ1aCIsImhpIiwiWGgiLCJoYXMiLCJCaCIsIldlYWtNYXAiLCJDaCIsIkRoIiwiRWgiLCJjb21wb25lbnREaWRDYXRjaCIsIkZoIiwiY29tcG9uZW50U3RhY2siLCJHaCIsIkhoIiwiSWgiLCJKaCIsIktoIiwiTGgiLCJNaCIsIk5oIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwiVWgiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlZoIiwiWmgiLCJwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWUiLCJlZiIsIlBkIiwiWWgiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJ1bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSIsImZpbmlzaGVkV29yayIsIiRoIiwiYWkiLCJzaXplIiwiY3JlYXRlRWxlbWVudE5TIiwiYmkiLCJjaSIsImRpIiwibWF4RHVyYXRpb24iLCJwaW5nQ2FjaGUiLCJlaSIsImZpIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJnaSIsImlpIiwiamkiLCJraSIsImxpIiwibWkiLCJuaSIsIm9pIiwicGkiLCJxaSIsInJpIiwic2kiLCJ0aSIsInVuc3RhYmxlX25vdyIsInVpIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsInRpbWVvdXQiLCJ0aW1lb3V0SGFuZGxlIiwiQmkiLCJDaSIsIm5leHRTY2hlZHVsZWRSb290IiwiRGkiLCJFaSIsInVuc3RhYmxlX3Nob3VsZFlpZWxkIiwiX29uQ29tcGxldGUiLCJGaSIsImZpcnN0QmF0Y2giLCJfZXhwaXJhdGlvblRpbWUiLCJfZGVmZXIiLCJHaSIsIkhpIiwiSWkiLCJKaSIsIktpIiwiTGkiLCJOaSIsIl9yb290IiwiX2NhbGxiYWNrcyIsIl9uZXh0IiwiX2hhc0NoaWxkcmVuIiwiX2RpZENvbXBsZXRlIiwiX2NoaWxkcmVuIiwiT2kiLCJfZGlkQ29tbWl0IiwiX29uQ29tbWl0IiwiUGkiLCJfaW50ZXJuYWxSb290IiwiUWkiLCJTaSIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIlJpIiwiVGkiLCJNaSIsImZvcm0iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJWaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9pbnRlcmFjdGl2ZVVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9jcmVhdGVSb290IiwidW5zdGFibGVfZmx1c2hDb250cm9sbGVkIiwiRXZlbnRzIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0Iiwib25Db21taXRGaWJlclJvb3QiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsIlRlIiwib3ZlcnJpZGVQcm9wcyIsImN1cnJlbnREaXNwYXRjaGVyUmVmIiwiZmluZEhvc3RJbnN0YW5jZUJ5RmliZXIiLCJXaSIsIlhpIiwiZ2xvYmFsIiwicHJldmlvdXMiLCJwcmlvcml0eUxldmVsIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJwZXJmb3JtYW5jZSIsIl9zY2hlZE1vY2siLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX25leHQiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGUiLCJGdW5jdGlvbiIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJmdWxsTWF0Y2giLCJvcmlnVXJsIiwibmV3VXJsIiwidW5xdW90ZWRPcmlnVXJsIiwiJDEiLCJfUmVkdWNlciIsIl9nZXROb2RlVHJlZSIsIlRvb2wiLCJwcmV2aWV3Q29tcG9uZW50Iiwic2VsZWN0ZWRFbGVtZW50Iiwibm9kZVRyZWUiLCJfRHJhZ2dhYmxlQ29tcG9uZW50MiIsIl9FbGVtZW50czIiLCJvblNlbGVjdGlvbiIsIl9FdmVudHMyIiwib25FdmVudHNVcGRhdGUiLCJvbkNvbmZpZ1VwZGF0ZSIsIl9FZGl0b3IyIiwib25TYXZlIiwiX1ByZXZpZXcyIiwiX1RhZ0V4cGxvcmVyMiIsIl9TdHlsZUV4cGxvcmVyMiIsIm9uRWRpdCIsInVwZGF0ZVN0eWxlcyIsIl9IaXN0b3J5MiIsImxvZyIsIl9FdmVudHMiLCJDb21wb25lbnRzIiwidmFyaWFudCIsIl90eXBlb2YiLCJjdXJyZW50Q29tcG9uZW50IiwiY3JlYXRlVmFyaWFudCIsIl90aGlzMiIsImVsZW1lbnRMaXN0IiwiX0VsZW1lbnQyIiwib25TZWxlY3Rpb25DaGFuZ2UiLCJvbkV4cG9ydCIsIm9uR2VuZXJhdGVWYXJpYW50IiwiZ2VuZXJhdGVWYXJpYW50IiwiRWxlbWVudCIsImRyYWdnYWJsZSIsIm9uRHJhZ1N0YXJ0IiwiaGFuZGxlRHJhZyIsInNlbGVjdGlvbkNoYW5nZWQiLCJzZXREYXRhIiwiRHJhZ2dhYmxlQ29tcG9uZW50IiwicG9zaXRpb24iLCJtaW5pbWlzZWQiLCJfdGhpczMiLCJvbkRyYWdFbmQiLCJtb3ZlRGl2IiwidGl0bGUiLCJvbk1vdXNlRG93biIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VVcCIsIm9uTW91c2VMZWF2ZSIsInRvZ2dsZU1pbmltaXNlTWF4aW1pc2UiLCJFZGl0b3IiLCJwbGFjZWhvbGRlciIsIm9uQ2hhbmdlIiwidXBkYXRlTmFtZSIsInB1Ymxpc2hFbGVtZW50IiwidXBkYXRlTWFya3VwIiwidXBkYXRlU3R5bGUiLCJ1cGRhdGVTdGF0ZSIsImdldFByb3BlcnR5Q29udGFpbmluZ1Byb3BzIiwic2VsZWN0ZWRUYWciLCJfTWVzc2FnZXMyIiwiZXZlbnRzT2ZTZWxlY3RlZFRhZyIsImNvbmZpZ3VyYXRvciIsImNoaWxkQ29tcG9uZW50TmFtZSIsImV2ZW50TmFtZXMiLCJfRXZlbnQyIiwic2VsZWN0ZWRUYWdJRCIsImRlbGV0ZUV2ZW50IiwiX0NvbmZpZ3VyYXRvcjIiLCJ1cGRhdGVDb25maWd1cmF0aW9uIiwiX05vZGVzMiIsIm9uU2VsZWN0ZWRUYWdDaGFuZ2VkIiwic2VsZWN0ZWRUYWdDaGFuZ2VkIiwiQ29uZmlndXJhdG9yIiwidG9nZ2VsT3ZlcnJpZGUiLCJOb2RlcyIsIkV2ZW50IiwidXBkYXRlUHVibGlzaE5hbWUiLCJldmVudE5hbWUiLCJ1cGRhdGVFdmVudE5hbWUiLCJ1cGRhdGVSZWR1Y2VyIiwidXBkYXRlRXZlbnRUeXBlIiwicHVibGlzaEV2ZW50IiwiX01lc3NhZ2VzQ29tcG9uZW50IiwiX01lc3NhZ2VzQ29tcG9uZW50MiIsIk1lc3NhZ2VDb21wb25lbnQiLCJfbW9kdWxlJGV4cG9ydHMiLCJIaXN0b3J5IiwicmVmcmVzaFRvUHJldmlvdXMiLCJQcmV2aWV3IiwicmFuZG9tS2V5IiwiX0R5bmFtaWNDb21wb25lbnQyIiwiX3V0aWwiLCJTdHlsZUV4cGxvcmVyIiwicnVsZXMiLCJnZXRPYmplY3RGb3JtYXQiLCJuZXdSdWxlcyIsInVuc2hpZnQiLCJzZWxlY3RvciIsImRlY2xhcmF0aW9ucyIsInJ1bGUiLCJjb252ZXJ0VG9TdHlsZVN0cmluZyIsIl9SdWxlMiIsIm9uVXBkYXRlIiwicnVsZVVwZGF0ZSIsImFkZFJ1bGUiLCJSdWxlIiwiX1NlbGVjdG9yMiIsInVwZGF0ZVNlbGVjdG9yIiwiX0RlY2xhcmF0aW9uMiIsInVwZGF0ZURlY2xhcmF0aW9ucyIsIlNlbGVjdG9yIiwib25CbHVyIiwidmFsdWVDaGFuZ2VkIiwib25Gb2N1cyIsInNlbGVjdFRleHQiLCJEZWNsYXJhdGlvbiIsInByZXZpb3VzVmFsdWUiLCJjdXJyZW50VmFsdWUiLCJkZWNsYXJhdGlvbiIsIl9Qcm9wZXJ0eTIiLCJfVmFsdWUyIiwib25OZXdkZWNsYXJhdGlvbiIsImFkZE5ld0RlY2xhcmF0aW9uIiwib25WYWx1ZUVkaXQiLCJQcm9wZXJ0eSIsIlZhbHVlIiwib25LZXlQcmVzcyIsImFkZE5ldyIsImNvbnZlcnRUb1N0cmluZyIsImNvbnZlcnRUb09iamVjdCIsInByb3BlcnRpZXMiLCJydWxlVG9TdHJpbmciLCJUYWdFeHBsb3JlciIsIl9UYWdzMiIsIl9jb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMiLCJUYWdzIiwiY29udmVydEpTT050b0hUTUxBdHRyaWJ1dGVzIiwicHJvcCJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFT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S252QixLQUFLNUQsR0FGcEIsS0FPSnlNLEVBQUEvSCxRQUFBakIsY0FBQSxjQUNTc3ZCLEVBQUtudkIsS0FEZCxJQUNzQjBILEVBRHRCLElBRVN5bkIsRUFBS252QixLQUZkLEtBR1VtdkIsRUFBS252QixLQUhmLFMsZUFVRys2QyxHLGdGQ2hGQ0MsNEJBQVQsU0FBcUN0ekMsR0FDeEMsSUFBSXhELEVBQVMxSSxLQUFLQyxVQUFVaU0sR0FHNUIsR0FGQXJPLE9BQU9pSCxLQUFLb0gsR0FBT25ILFFBQVEsU0FBQTA2QyxHQUFBLE9BQU12ekMsRUFBTXV6QyxHQUFOLElBQWdCdnpDLEVBQU11ekMsR0FBdEIsTUFFOUIvMkMsRUFBTy9ILE9BQU8sRUFBRSxDQWNmLE9BYldYLEtBQUtDLFVBQVVpTSxHQUFPdEQsTUFBTSxLQUFLckosSUFBSSxTQUFBQyxHQUM1QyxJQUFHQSxFQUFLeUssU0FBUyxPQUFRekssRUFBS3lLLFNBQVMsS0FHdkMsTUFBVSxNQUFQekssRUFDUSxJQUVELE1BQVBBLEVBQ1EsSUFFSkEsSUFDUndILE9BQU9DLFNBRUUxRyxLQUFLLElBRXJCLE1BQU8sSyxnQkNwQlgsSUFBSWQsRUFBVTFDLEVBQVEsSUFFQSxpQkFBWjBDLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUk4QyxFQUFVLENBQUNzSixLQUFNLEVBRXJCeEcsZUFQSUEsRUFRSmhDLGdCQUFxQmlCLEdBRVJ2SCxFQUFRLEVBQVJBLENBQTZEMEMsRUFBUzhDLEdBRWhGOUMsRUFBUXFNLFNBQVE1TyxFQUFPRCxRQUFVd0MsRUFBUXFNLFMsaUJDakJsQzVPLEVBQU9ELFFBQVVGLEVBQVEsRUFBUkEsRUFBNkQsSUFFaEY4RCxLQUFLLENBQUMzRCxFQUFPQyxFQUFJLDRFQUE2RSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEzKTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuICdAbWVkaWEgJyArIGl0ZW1bMl0gKyAneycgKyBjb250ZW50ICsgJ30nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAoaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9ICcoJyArIGl0ZW1bMl0gKyAnKSBhbmQgKCcgKyBtZWRpYVF1ZXJ5ICsgJyknO1xuICAgICAgICB9XG5cbiAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gJy8qIyBzb3VyY2VVUkw9JyArIGNzc01hcHBpbmcuc291cmNlUm9vdCArIHNvdXJjZSArICcgKi8nO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn0gLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuXG5cbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpO1xuICB2YXIgZGF0YSA9ICdzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwnICsgYmFzZTY0O1xuICByZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufSIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEF0LmJlZm9yZSwgdGFyZ2V0KTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRpZihvcHRpb25zLmF0dHJzLm5vbmNlID09PSB1bmRlZmluZWQpIHtcblx0XHR2YXIgbm9uY2UgPSBnZXROb25jZSgpO1xuXHRcdGlmIChub25jZSkge1xuXHRcdFx0b3B0aW9ucy5hdHRycy5ub25jZSA9IG5vbmNlO1xuXHRcdH1cblx0fVxuXG5cdGFkZEF0dHJzKHN0eWxlLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIHN0eWxlKTtcblxuXHRyZXR1cm4gc3R5bGU7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpbmtFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblx0b3B0aW9ucy5hdHRycy5yZWwgPSBcInN0eWxlc2hlZXRcIjtcblxuXHRhZGRBdHRycyhsaW5rLCBvcHRpb25zLmF0dHJzKTtcblx0aW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMsIGxpbmspO1xuXG5cdHJldHVybiBsaW5rO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRycyAoZWwsIGF0dHJzKSB7XG5cdE9iamVjdC5rZXlzKGF0dHJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcblx0XHRlbC5zZXRBdHRyaWJ1dGUoa2V5LCBhdHRyc1trZXldKTtcblx0fSk7XG59XG5cbmZ1bmN0aW9uIGdldE5vbmNlKCkge1xuXHRpZiAodHlwZW9mIF9fd2VicGFja19ub25jZV9fID09PSAndW5kZWZpbmVkJykge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0cmV0dXJuIF9fd2VicGFja19ub25jZV9fO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IHR5cGVvZiBvcHRpb25zLnRyYW5zZm9ybSA9PT0gJ2Z1bmN0aW9uJ1xuXHRcdCA/IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpIFxuXHRcdCA6IG9wdGlvbnMudHJhbnNmb3JtLmRlZmF1bHQob2JqLmNzcyk7XG5cblx0ICAgIGlmIChyZXN1bHQpIHtcblx0ICAgIFx0Ly8gSWYgdHJhbnNmb3JtIHJldHVybnMgYSB2YWx1ZSwgdXNlIHRoYXQgaW5zdGVhZCBvZiB0aGUgb3JpZ2luYWwgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBydW5uaW5nIHJ1bnRpbWUgdHJhbnNmb3JtYXRpb25zIG9uIHRoZSBjc3MuXG5cdCAgICBcdG9iai5jc3MgPSByZXN1bHQ7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQvLyBJZiB0aGUgdHJhbnNmb3JtIGZ1bmN0aW9uIHJldHVybnMgYSBmYWxzeSB2YWx1ZSwgZG9uJ3QgYWRkIHRoaXMgY3NzLlxuXHQgICAgXHQvLyBUaGlzIGFsbG93cyBjb25kaXRpb25hbCBsb2FkaW5nIG9mIGNzc1xuXHQgICAgXHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdCAgICBcdFx0Ly8gbm9vcFxuXHQgICAgXHR9O1xuXHQgICAgfVxuXHR9XG5cblx0aWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG5cdFx0dmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG5cblx0XHRzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcblxuXHRcdHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuXHRcdHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG5cblx0fSBlbHNlIGlmIChcblx0XHRvYmouc291cmNlTWFwICYmXG5cdFx0dHlwZW9mIFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgQmxvYiA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIlxuXHQpIHtcblx0XHRzdHlsZSA9IGNyZWF0ZUxpbmtFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IHVwZGF0ZUxpbmsuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblxuXHRcdFx0aWYoc3R5bGUuaHJlZikgVVJMLnJldm9rZU9iamVjdFVSTChzdHlsZS5ocmVmKTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdHN0eWxlID0gY3JlYXRlU3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuXHRcdHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSk7XG5cdFx0cmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0cmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcblx0XHR9O1xuXHR9XG5cblx0dXBkYXRlKG9iaik7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlIChuZXdPYmopIHtcblx0XHRpZiAobmV3T2JqKSB7XG5cdFx0XHRpZiAoXG5cdFx0XHRcdG5ld09iai5jc3MgPT09IG9iai5jc3MgJiZcblx0XHRcdFx0bmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiZcblx0XHRcdFx0bmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcFxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0dXBkYXRlKG9iaiA9IG5ld09iaik7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlbW92ZSgpO1xuXHRcdH1cblx0fTtcbn1cblxudmFyIHJlcGxhY2VUZXh0ID0gKGZ1bmN0aW9uICgpIHtcblx0dmFyIHRleHRTdG9yZSA9IFtdO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG5cdFx0dGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuXG5cdFx0cmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG5cdH07XG59KSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnIChzdHlsZSwgaW5kZXgsIHJlbW92ZSwgb2JqKSB7XG5cdHZhciBjc3MgPSByZW1vdmUgPyBcIlwiIDogb2JqLmNzcztcblxuXHRpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuXHR9IGVsc2Uge1xuXHRcdHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcblx0XHR2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cblx0XHRpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcblxuXHRcdGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuXHRcdFx0c3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcgKHN0eWxlLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBtZWRpYSA9IG9iai5tZWRpYTtcblxuXHRpZihtZWRpYSkge1xuXHRcdHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKVxuXHR9XG5cblx0aWYoc3R5bGUuc3R5bGVTaGVldCkge1xuXHRcdHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcblx0fSBlbHNlIHtcblx0XHR3aGlsZShzdHlsZS5maXJzdENoaWxkKSB7XG5cdFx0XHRzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcblx0XHR9XG5cblx0XHRzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcblx0fVxufVxuXG5mdW5jdGlvbiB1cGRhdGVMaW5rIChsaW5rLCBvcHRpb25zLCBvYmopIHtcblx0dmFyIGNzcyA9IG9iai5jc3M7XG5cdHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG5cdC8qXG5cdFx0SWYgY29udmVydFRvQWJzb2x1dGVVcmxzIGlzbid0IGRlZmluZWQsIGJ1dCBzb3VyY2VtYXBzIGFyZSBlbmFibGVkXG5cdFx0YW5kIHRoZXJlIGlzIG5vIHB1YmxpY1BhdGggZGVmaW5lZCB0aGVuIGxldHMgdHVybiBjb252ZXJ0VG9BYnNvbHV0ZVVybHNcblx0XHRvbiBieSBkZWZhdWx0LiAgT3RoZXJ3aXNlIGRlZmF1bHQgdG8gdGhlIGNvbnZlcnRUb0Fic29sdXRlVXJscyBvcHRpb25cblx0XHRkaXJlY3RseVxuXHQqL1xuXHR2YXIgYXV0b0ZpeFVybHMgPSBvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyA9PT0gdW5kZWZpbmVkICYmIHNvdXJjZU1hcDtcblxuXHRpZiAob3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgfHwgYXV0b0ZpeFVybHMpIHtcblx0XHRjc3MgPSBmaXhVcmxzKGNzcyk7XG5cdH1cblxuXHRpZiAoc291cmNlTWFwKSB7XG5cdFx0Ly8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMjY2MDM4NzVcblx0XHRjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiICsgYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSArIFwiICovXCI7XG5cdH1cblxuXHR2YXIgYmxvYiA9IG5ldyBCbG9iKFtjc3NdLCB7IHR5cGU6IFwidGV4dC9jc3NcIiB9KTtcblxuXHR2YXIgb2xkU3JjID0gbGluay5ocmVmO1xuXG5cdGxpbmsuaHJlZiA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7XG5cblx0aWYob2xkU3JjKSBVUkwucmV2b2tlT2JqZWN0VVJMKG9sZFNyYyk7XG59XG4iLCJpbXBvcnQge2dldFN0YXJ0VGFnc30gZnJvbSBcIi4uL2dldC1zdGFydC10YWdzXCI7XG5cbmZ1bmN0aW9uIHB1c2hIaXN0b3J5KGNvbXBvbmVudHMpe1xuICAgIHdpbmRvdy5lZGl0b3JIaXN0b3J5ID0gcmVhZERhdGEoXCJ1aS1lZGl0b3ItaGlzdG9yeVwiKTtcbiAgICBlZGl0b3JIaXN0b3J5LnB1c2goY29tcG9uZW50cyk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ1aS1lZGl0b3ItaGlzdG9yeVwiLEpTT04uc3RyaW5naWZ5KGVkaXRvckhpc3RvcnkpICk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3BIaXN0b3J5KCl7XG4gICAgXG4gICAgbGV0IGVkaXRvckhpc3RvcnkgPSByZWFkRGF0YShcInVpLWVkaXRvci1oaXN0b3J5XCIpO1xuICAgIGlmKCFlZGl0b3JIaXN0b3J5KXtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCBsYXN0SXRlbSA9IGVkaXRvckhpc3RvcnkucG9wKCk7XG4gICAgXG4gICAgd3JpdGVEYXRhKFwidWktZWRpdG9yLWhpc3RvcnlcIiwgZWRpdG9ySGlzdG9yeSwgdHJ1ZSk7XG5cbiAgICB3cml0ZURhdGEoXCJ1aS1lZGl0b3JcIiwgbGFzdEl0ZW0sIHRydWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVEYXRhKGtleSwgY29tcG9uZW50cywgbm9QdXNoKXtcbiAgICBcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIEpTT04uc3RyaW5naWZ5KGNvbXBvbmVudHMpKTtcbiAgICBpZighbm9QdXNoKXtcbiAgICAgICAgcHVzaEhpc3RvcnkoY29tcG9uZW50cyk7XG4gICAgfVxufVxuXG4vLyBwdXRzIHV1aWQgdG8gc3RhcnQgdGFncyBvZiB0aGUgY29tcG9uZW50LlxuZnVuY3Rpb24gSWRNYXJrdXAgKGNvbXBvbmVudCkge1xuICAgIC8vIDEuR2V0IGFsbCBzdGFydCB0YWdzLlxuICAgIGxldCBzdGFydFRhZ3MgPSBnZXRTdGFydFRhZ3MoY29tcG9uZW50Lm1hcmt1cCk7XG5cbiAgICAvLyAyLlNhdmUgaXQgYXMgbmV3IHByb3BlcnR5LlxuICAgIGNvbXBvbmVudC5pZE1hcmt1cCA9IGNvbXBvbmVudC5tYXJrdXA7XG5cbiAgICAvLyAzLmdldCBpZCB0YWdzXG4gICAgbGV0IGlkVGFncyA9IHN0YXJ0VGFncy5tYXAoKHRhZywgaW5kZXgpPT57XG4gICAgICAgIHJldHVybiB0YWcucmVwbGFjZShcIj5cIixgIGRhdGEtdXVpZD1cIiR7aW5kZXh9XCI+YClcbiAgICB9KVxuXG4gICAgLy8gNC5yZXBsYWNlIHRoZSBzdGFydHRhZyB3aXRoIGlkVGFnXG4gICAgc3RhcnRUYWdzLmZvckVhY2goKHN0YXJ0VGFnLCBpbmRleCk9PntcbiAgICAgICAgY29tcG9uZW50LmlkTWFya3VwID0gY29tcG9uZW50LmlkTWFya3VwLnJlcGxhY2Uoc3RhcnRUYWcsIGlkVGFnc1tpbmRleF0pXG4gICAgfSlcbn1cblxuZnVuY3Rpb24gY291bnQoc3RyaW5nLCB3b3JkKSB7XG4gICAgcmV0dXJuIHN0cmluZy5zcGxpdCh3b3JkKS5sZW5ndGggLSAxO1xuIH1cblxuZnVuY3Rpb24gbm9JZE1hcmt1cCAoaWRNYXJrdXApIHtcbiAgICAvLzEuIEdldCBhbGwgc3RhcnQgdGFncy5cbiAgICBsZXQgc3RhcnRUYWdzID0gZ2V0U3RhcnRUYWdzKGlkTWFya3VwKTtcblxuICAgIC8vMi4gZ2V0IGlkIHRhZ3MuXG4gICAgbGV0IGlkVGFnc0NvdW50ID0gY291bnQoaWRNYXJrdXAsXCJkYXRhLXV1aWRcIik7XG5cbiAgICAvLzMuIHJlbW92ZSB1dWlkc1xuICAgIGZvcih2YXIgaT0wO2k8aWRUYWdzQ291bnQ7aSsrKXtcbiAgICAgICAgaWRNYXJrdXAgPSBpZE1hcmt1cC5yZXBsYWNlKGAgZGF0YS11dWlkPVwiJHtpfVwiYCwgXCJcIilcbiAgICB9XG5cbiAgICByZXR1cm4gaWRNYXJrdXA7XG59XG5cbi8vIElmIGVtcHR5LCByZXR1cm4gZW1wdHkgYXJyYXkuXG5cbmV4cG9ydCBmdW5jdGlvbiByZWFkRGF0YShrZXkpe1xuXG4gICAgbGV0IGNvbXBvbmVudHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSkpO1xuXG4gICAgaWYoY29tcG9uZW50cy5sZW5ndGggKXtcblxuICAgICAgICBpZihrZXk9PT1cInVpLWVkaXRvclwiKXtcbiAgICAgICAgICAgIC8vIFNldHMgcHJvcGVydHkgaW4gY29tcG9uZW50cyB3aXRoIG1hcmt1cCBjb250YWluaW5nIHV1aWQuIFxuICAgICAgICAgICAgLy8gVGhpcyBoZWxwcyB0byBmaW5kIHBhcmVtdCAsIGNoaWxkLCBzaWJibGluZ3MgZm9yIGRyYW4gYW5kIGRyb3BcbiAgICAgICAgICAgIGNvbXBvbmVudHMuZm9yRWFjaChJZE1hcmt1cClcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjb21wb25lbnRzO1xuICAgIH1cblxuICAgIHJldHVybiBbXTtcblxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZENvbXBvbmVudChjb21wb25lbnROYW1lKXtcbiAgICBsZXQgY29tcG9uZW50cyA9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuICAgIGlmKCFjb21wb25lbnRzKXtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBvbmVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09Y29tcG9uZW50TmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZUNvbXBvbmVudChjb21wb25lbnQsIGlkTWFya3VwTW9kaWZpZWQpIHtcbiAgICAvLyBJZiBvbmx5IG9uZSBjb21wb25lbnQgaXMgcGFzc2VkXG4gICAgaWYoIUFycmF5LmlzQXJyYXkoY29tcG9uZW50KSAmJiBjb21wb25lbnQubmFtZSl7XG4gICAgICAgIGxldCBjb21wb25lbnRzID0gcmVhZERhdGEoIFwidWktZWRpdG9yXCIpO1xuICAgICAgICBsZXQgaW5kZXggPSBjb21wb25lbnRzLmZpbmRJbmRleChjb21wPT5jb21wLm5hbWUgPT09IGNvbXBvbmVudC5uYW1lKTtcbiAgICAgICAgaWYoaWRNYXJrdXBNb2RpZmllZCl7XG4gICAgICAgICAgICBkZWJ1Z2dlcjtcbiAgICAgICAgICAgIGNvbXBvbmVudC5tYXJrdXAgPSBub0lkTWFya3VwKGNvbXBvbmVudC5pZE1hcmt1cCk7XG4gICAgICAgIH1cbiAgICAgICAgY29tcG9uZW50c1tpbmRleF0gPSBjb21wb25lbnQ7XG4gICAgICAgIHdyaXRlRGF0YShcInVpLWVkaXRvclwiLCBjb21wb25lbnRzKTtcbiAgICB9XG59IiwiLy8gRGVwZW5kZW5jaWVzLlxuXG5pbXBvcnQge2NyZWF0ZUNvbXBvbmVudH0gZnJvbSBcIi4uL2NvbnZlcnQtdG8tcmVhY3QtY29tcG9uZW50XCI7XG5pbXBvcnQge2NyZWF0ZVN0eWxlc2hlZXR9IGZyb20gXCIuLi9qc3hUcmFuc3BpbGVyL2NyZWF0ZS1zdHlsZXNoZWV0XCI7XG5pbXBvcnQge3JlYWREYXRhfSBmcm9tIFwiLi4vbG9jYWxTdG9yYWdlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja05lc3RlZENvbXBvbmVudHMoIG1hcmt1cCkge1xuXG4gICAgdmFyIGNvbXBvbmVudHMgPSByZWFkRGF0YShcInVpLWVkaXRvclwiKTtcblxuICAgIHJldHVybiBjb21wb25lbnRzLmZpbHRlcihjb21wb25lbnQ9PiBtYXJrdXAuaW5jbHVkZXMoY29tcG9uZW50Lm5hbWUpKS5sZW5ndGggPjA7XG59XG5cbi8qKiBUYWtlcyBhIGNvbXBvbmVudCBhbmQgY29udmVydHMgaXQgYXMgYSByZWFjdCBjb21wb25lbnQgKi9cbmZ1bmN0aW9uIHNhdmVUb1dpbmRvdyggY29tcG9uZW50ICkge1xuICAgIGNyZWF0ZVN0eWxlc2hlZXQoY29tcG9uZW50LnN0eWxlLCBjb21wb25lbnQubmFtZSlcbiAgICB3aW5kb3dbY29tcG9uZW50Lm5hbWVdID0gY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudCk7XG59XG5cbi8qKiBUYWtlcyBjb21wb25lbnRzIGFuZCBzYXZlcyB0aGVtIHRvIHdpbmRvdyBhcyByZWFjdCBPYmplY3QgKi9cbmV4cG9ydCBmdW5jdGlvbiBzYXZlQ29tcG9uZW50c1RvV2luZG93KCBuZXN0ZWRDb21wb25lbnRzKXtcbiAgICAvLyBUcmFuc3BpbGUgdGhlbSBhbmQgbWFrZSB0aGVtIGdsb2JhbC5cbiAgICBuZXN0ZWRDb21wb25lbnRzLmZvckVhY2goc2F2ZVRvV2luZG93KTtcbn1cblxuLyoqIFRha2VzIG1hcmt1cCBhbmQgcmV0dXJucyBjaGlsZHJlbiBjb21wb25lbnQgb2JqZWN0cy4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXROZXN0ZWRDb21wb25lbnRzIChwYXJlbnQpIHtcbiAgICAvLyBTaG91bGQgYmUgYWJsZSB0byBkZXRlY3QgbmVzdGVkIGNvbXBvbmVudC5cblxuICAgIGxldCBjb21wb25lbnRzPSByZWFkRGF0YShcInVpLWVkaXRvclwiKTtcbiAgICBsZXQgbmVzdGVkQ29tcG9uZW50cyA9IFtwYXJlbnRdO1xuICAgIGlmKGNoZWNrTmVzdGVkQ29tcG9uZW50cyhwYXJlbnQubWFya3VwKSl7XG4gICAgICAgIC8vIGZpbmQgYWxsIHRoZSBuZXN0ZWQgY29tcG9uZW50cyBmcm9tIHRoZSBtYXJrdXAgYW5kIHB1c2ggaXQgdG8gbmVzdGVkQ29tcG9uZW50cy5cbiAgICAgICAgbGV0IGNoaWxkcmVuID0gY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50PT4gcGFyZW50Lm1hcmt1cC5pbmNsdWRlcyhjb21wb25lbnQubmFtZSkpO1xuICAgICAgICAvLyBGaW5kIGdyYW5kIGtpZHMuXG4gICAgICAgIGxldCBncmFuZEtpZHMgPSBjaGlsZHJlbi5tYXAoZ2V0TmVzdGVkQ29tcG9uZW50cykuZmxhdCgzKVxuICAgICAgICBuZXN0ZWRDb21wb25lbnRzLnB1c2goLi4uZ3JhbmRLaWRzKVxuICAgIH1cbiAgICByZXR1cm4gbmVzdGVkQ29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50PT5jb21wb25lbnQgJiYgY29tcG9uZW50Lm1hcmt1cCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDaGlsZENvbXBvbmVudHMgKG1hcmt1cCl7XG4gICAgbGV0IGNvbXBvbmVudHM9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuICAgIHJldHVybiBjb21wb25lbnRzLmZpbHRlcihjb21wb25lbnQ9PiBtYXJrdXAuaW5jbHVkZXMoY29tcG9uZW50Lm5hbWUpKTtcbn0iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7Y3JlYXRlU3R5bGVzaGVldH0gZnJvbSBcIi4uL3V0aWxpdGllcy9qc3hUcmFuc3BpbGVyL2NyZWF0ZS1zdHlsZXNoZWV0XCI7XG5cbmltcG9ydCB7wqBnZXROZXN0ZWRDb21wb25lbnRzLCBzYXZlQ29tcG9uZW50c1RvV2luZG93IH0gZnJvbSBcIi4uL3V0aWxpdGllcy9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuaW1wb3J0IHsgd3JpdGVDb21wb25lbnQgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNsYXNzIER5bmFtaWNDb21wb25lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGNvbXBvbmVudDogdGhpcy5wcm9wcy5jb21wb25lbnRcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY3JlYXRlU3R5bGVzaGVldCh0aGlzLnN0YXRlLmNvbXBvbmVudC5zdHlsZSk7XG4gICAgfVxuXG4gICAgcHJldmVudERlZmF1bHQoZSl7XG4gICAgICAgIGxldCBwcmV2aW91c1RhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZHJvcHRhcmdldC5ncmVlblwiKTtcbiAgICAgICAgaWYocHJldmlvdXNUYXJnZXRbMF0pe1xuICAgICAgICAgICAgcHJldmlvdXNUYXJnZXRbMF0uY2xhc3NMaXN0LnJlbW92ZShcImRyb3B0YXJnZXRcIilcbiAgICAgICAgICAgIHByZXZpb3VzVGFyZ2V0WzBdLmNsYXNzTGlzdC5yZW1vdmUoXCJncmVlblwiKVxuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgZS50YXJnZXQuY2xhc3NMaXN0LmFkZChcImRyb3B0YXJnZXRcIik7XG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJncmVlblwiKTtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIG9uRHJvcChlKXtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgY2hpbGQgPSBlLmRhdGFUcmFuc2Zlci5nZXREYXRhKFwiY29tcG9uZW50LW5hbWVcIik7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiAxLiBGZXRjaCB0aGUgdXVpZCBvZiB0aGUgZHJvcCB0YXJnZXQuXG4gICAgICAgICAqIDIuIFJlcGxhY2UgdGhlIGNoaWxkIGNvbXBvbmVudCBuYW1lIG5leHQgdG8gdGhlIHV1aWQgdGFnIG9mIHRoZSBwYXJlbnQuaWRNYXJrdXAuXG4gICAgICAgICAqL1xuICAgICAgICB2YXIgdXVpZCA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtdXVpZFwiKTtcbiAgICAgICAgdmFyIHBhcmVudCA9IHRoaXMuc3RhdGUuY29tcG9uZW50O1xuICAgICAgICBwYXJlbnQuaWRNYXJrdXAgPSBwYXJlbnQuaWRNYXJrdXAucmVwbGFjZShgXCIke3V1aWR9XCI+YCxgXCIke3V1aWR9XCI+PCR7Y2hpbGR9Lz5gKVxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBiZWZvcmUgd3JpdGUsIGZldGNoIGlkTWFrcnVwIHdpdGggY2hpbGQgY29tcG9uZW50cyBpbnRvIGNvbXBvbmVudC5tYXJrdWpwLlxuICAgICAgICAgKi9cbiAgICAgICAgd3JpdGVDb21wb25lbnQocGFyZW50LCB0cnVlKTtcbiAgICAgICAgLy8gNS4gVHJpZ2dlciByZWxvYWQuXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgY29tcG9uZW50OiBwYXJlbnRcbiAgICAgICAgfSlcbiAgICB9XG5cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBpZih0aGlzLnN0YXRlLmNvbXBvbmVudC5uYW1lPT09XCJcIil7XG4gICAgICAgICAgICByZXR1cm4gKDxkaXY+Tm90aGluZyBjcmVhdGVkLjwvZGl2PilcbiAgICAgICAgfVxuICAgICAgICBsZXQgbmVzdGVkQ29tcG9uZW50cyA9IGdldE5lc3RlZENvbXBvbmVudHModGhpcy5zdGF0ZS5jb21wb25lbnQpO1xuICAgICAgICBpZiAobmVzdGVkQ29tcG9uZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBzYXZlQ29tcG9uZW50c1RvV2luZG93KG5lc3RlZENvbXBvbmVudHMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYoIXdpbmRvd1t0aGlzLnN0YXRlLmNvbXBvbmVudC5uYW1lXSl7XG4gICAgICAgICAgICByZXR1cm4gKDxkaXY+Q29tcG9uZW50IG5vdCByZW5kZXJlZDwvZGl2PilcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgb25Ecm9wPXt0aGlzLm9uRHJvcC5iaW5kKHRoaXMpfSBvbkRyYWdPdmVyPXt0aGlzLnByZXZlbnREZWZhdWx0LmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgIHtSZWFjdC5jcmVhdGVFbGVtZW50KHdpbmRvd1t0aGlzLnN0YXRlLmNvbXBvbmVudC5uYW1lXSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgRHluYW1pY0NvbXBvbmVudDsiLCIvLyBJbXBsZW1lbnQgc3R5bGVzaGVldCBjbGVhbnVwXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdHlsZXNoZWV0KHN0eWxlLCBuYW1lKSB7XG5cbiAgICBsZXQgdG9EZWxldGUgPSBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWNvbXBvbmVudC1uYW1lPSdQYXJlbnRDb21wb25lbnQnXVwiKV07XG4gICAgdG9EZWxldGUuZm9yRWFjaChpdGVtPT57XG4gICAgICAgIGl0ZW0ucmVtb3ZlKClcbiAgICB9KVxuICAgIHZhciBkeW5hbWljU3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIGR5bmFtaWNTdHlsZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWNvbXBvbmVudC1uYW1lXCIsIG5hbWUpO1xuICAgIGR5bmFtaWNTdHlsZS50eXBlID0gJ3RleHQvY3NzJztcbiAgICBkeW5hbWljU3R5bGUuaW5uZXJIVE1MID0gc3R5bGU7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkeW5hbWljU3R5bGUpXG59IiwiaW1wb3J0IHsgY29kZU1vZGlmaWVyIH0gZnJvbSBcIi4vY29kZU1vZGlmaWVyXCI7XG5pbXBvcnQgeyBnZXRDaGlsZENvbXBvbmVudHMgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL25lc3RlZENvbXBvbmVudFNldHVwXCI7XG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudFN0cmluZyhjb21wb25lbnQsIG9wdGlvbnMpe1xuXG4gICAgaWYoIWNvbXBvbmVudC5pZE1hcmt1cFszXSl7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnZlcnRUb1JlYWN0Y29tcG9uZW50KGNvbXBvbmVudCwgb3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXBvbmVudChjb21wb25lbnQpe1xuICAgIGxldCBjb21wb25lbnRTdHJpbmcgPSBnZXRDb21wb25lbnRTdHJpbmcoY29tcG9uZW50LCB7XCJkcmFnLWRyb3AtZmVhdHVyZVwiOnRydWV9KTtcbiAgICAvLyBldmFsIGRvZXMgbm90IGV2YWx1YXRlIGNsYXNzIGlmIG5vdCBleGNsb3NlZCBpbiBwYXJhbnRoZXNpcy5cbiAgICByZXR1cm4gZXZhbChCYWJlbC50cmFuc2Zvcm0oY29tcG9uZW50U3RyaW5nLCB7IHByZXNldHM6IFsncmVhY3QnXSwgcGx1Z2luczogW1widHJhbnNmb3JtLWVzMjAxNS1jbGFzc2VzXCJdICB9KS5jb2RlKVxufVxuXG5cbi8vIEVsZW1lbnRzIHRvICByZWFjdCBjb21wb25lbnQuXG5mdW5jdGlvbiBjb252ZXJ0VG9SZWFjdGNvbXBvbmVudCAoY29tcG9uZW50LCBvcHRpb25zKXtcblxuICAgIC8qKlxuICAgICAqIDEuIGlmIG9wdGlvbnMuZHJhZy1kcm9wLWZlYXR1cmUgPSB0cnVlLCB1c2UgaWRNYXJrdXAgYXMgcHJvcGVydHlcbiAgICAgKi9cblxuICAgIGxldCBtYXJrdXAgPSBcIm1hcmt1cFwiO1xuICAgIGlmKG9wdGlvbnMgJiYgb3B0aW9uc1tcImRyYWctZHJvcC1mZWF0dXJlXCJdKXtcbiAgICAgICAgbWFya3VwID0gXCJpZE1hcmt1cFwiXG4gICAgfVxuICAgIGNvbXBvbmVudC5ldmVudHMuZm9yRWFjaChldmVudD0+e1xuICAgICAgICBldmVudC5pZCA9IGV2ZW50LmlkLnJlcGxhY2UoXCItXCIsXCJcIik7XG4gICAgfSlcblxuICAgIGxldCBnZXRDb21wb25lbnROYW1lSW5NYXJrdXA9IChjb21wb25lbnQpPT57XG4gICAgICAgIHJldHVybiBjb21wb25lbnRbbWFya3VwXS5yZXBsYWNlKFwiPlwiLGAgZGF0YS1uYW1lPScke2NvbXBvbmVudC5uYW1lfSc+YClcbiAgICB9XG5cbiAgICBsZXQgZ2V0Q29tcG9uZW50RXZlbnRlZE1hcmt1cCA9IChtYXJrdXAsIGV2ZW50cyk9PntcbiAgICAgICAgZXZlbnRzLmZvckVhY2goZXZlbnQ9PntcbiAgICAgICAgICAgIGxldCBpZCA9IGBpZD1cIiR7ZXZlbnQuaWR9XCJgO1xuICAgICAgICAgICAgbWFya3VwID0gbWFya3VwLnJlcGxhY2UoaWQsIGAke2lkfSAke2V2ZW50Lm5hbWV9PXt0aGlzLiR7ZXZlbnQuaWQrZXZlbnQubmFtZX0uYmluZCh0aGlzKX1gKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gVGhpcyB3YXMgYSBlYXN5IHRvIHRoaW5rIGJ1dCBoYXJkIHRvIHdyaXRlIGEgcmVhZGFibGUgY29kZS4gSSBrbm93IGNvbW1lbnRzIHdvbnQgaGVscC5cbiAgICAgICAgbGV0IGNoaWxkQ29tcG9uZW50cyA9IGdldENoaWxkQ29tcG9uZW50cyhtYXJrdXApO1xuICAgICAgICBpZihjaGlsZENvbXBvbmVudHMubGVuZ3RoPjApe1xuICAgICAgICAgICAgLy8gRm9yIGVhY2ggb2YgY2hpbGQgY29tcG9uZW50c1xuICAgICAgICAgICAgY2hpbGRDb21wb25lbnRzLmZvckVhY2goY2hpbGQ9PntcblxuICAgICAgICAgICAgICAgIC8vIEZyb20gZWFjaCBvZiBjaGlsZCBldmVudHMgZmlsdGVyIHRoZSBwdWJsaXNoYWJsZSBldmVudHMuXG4gICAgICAgICAgICAgICAgbGV0IHB1Ymxpc2hhYmxlRXZlbnRzID0gY2hpbGQuZXZlbnRzLmZpbHRlcihldmVudD0+ZXZlbnQucHVibGlzaGFibGU9PT10cnVlKTtcbiAgICAgICAgICAgICAgICAvLyBGaWx0ZXIgcHVibGlzaGFibGUgY2hpbGQgZXZlbnRzIHRoYXQgYXJlIGluIHBhcmVudC5cbiAgICAgICAgICAgICAgICAvLyBGb3IgZWFjaCBvZiBwdWJsaXNoYWJsZSBldmVudHNcbiAgICAgICAgICAgICAgICAvLyBGaW5kIHdoaWNoIGlzIHByZXNlbnQgaW4gdGhpcyBjb21wb25lbnQuZXZlbnRzLm5hbWVcbiAgICAgICAgICAgICAgICBpZihwdWJsaXNoYWJsZUV2ZW50cy5sZW5ndGghPTApe1xuXG4gICAgICAgICAgICAgICAgICAgIGxldCBldmVudFVzZWRJblBhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgcHVibGlzaGFibGVFdmVudHMuZm9yRWFjaChwdWJsaXNoYWJsZUV2ZW50PT57XG4gICAgICAgICAgICAgICAgICAgICAgICBldmVudFVzZWRJblBhcmVudCA9IGNvbXBvbmVudC5ldmVudHMuZmluZChldmVudD0+ZXZlbnQubmFtZT09PXB1Ymxpc2hhYmxlRXZlbnQucHVibGlzaE5hbWUpXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIGxldCBmdW5jdGlvbkRlZiA9IGNvZGVNb2RpZmllcihldmVudFVzZWRJblBhcmVudC5yZWR1Y2VyLCBjb21wb25lbnQpO1xuICAgIFxuICAgICAgICAgICAgICAgICAgICBsZXQgcHJvcHMgPSBldmVudFVzZWRJblBhcmVudC5uYW1lKyc9Jytge2Z1bmN0aW9uKGUpeyR7ZnVuY3Rpb25EZWZ9fS5iaW5kKHRoaXMpfWBcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhlbiBkbyBpZE1hcmt1cC5yZXBsYWNlXG4gICAgICAgICAgICAgICAgICAgIG1hcmt1cCA9IGNvbXBvbmVudFttYXJrdXBdLnJlcGxhY2UoY2hpbGQubmFtZSwgY2hpbGQubmFtZStcIiBcIitwcm9wcyk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgcmV0dXJuIG1hcmt1cC5zcGxpdChcIntzdGF0ZS5cIikuam9pbihcInt0aGlzLnN0YXRlLlwiKTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICByZXR1cm4gbWFya3VwLnNwbGl0KFwie3N0YXRlLlwiKS5qb2luKFwie3RoaXMuc3RhdGUuXCIpXG4gICAgfVxuXG4gICAgLy8gY2hlY2tzIGlmIHN0YXRlIG92ZXJyaWRlIGlzIG9uLiB0aGVuIGFkZHMgc3RhdGUgcHJvcCB0byBjaGlsZCBcbiAgICBsZXQgZ2V0U3RhdGVkTWFya3VwID0gKG1hcmt1cCk9PntcbiAgICAgICAgLy8gZm9yIGFsbCB0aGUgY29uZmlnLlxuICAgICAgICAvLyBmaWx0ZXIgY2hpbGQgd2l0aCBvdmVyaWRlIHN0YXRlIGlzIHRydWVcbiAgICAgICAgbGV0IGNvbmZpZyA9IEpTT04ucGFyc2UoY29tcG9uZW50LmNvbmZpZyk7XG4gICAgICAgIGxldCBjaGlsZHJlbkNvbmZpZyA9IE9iamVjdC5rZXlzKGNvbmZpZyk7XG4gICAgICAgIGNoaWxkcmVuQ29uZmlnLmZvckVhY2goY2hpbGROYW1lPT57XG4gICAgICAgICAgICBpZihjb25maWdbY2hpbGROYW1lXS5vdmVyaWRlU3RhdGUpe1xuICAgICAgICAgICAgICAgIG1hcmt1cCA9IG1hcmt1cC5yZXBsYWNlKGNoaWxkTmFtZSwgY2hpbGROYW1lK2Agc3RhdGU9e3RoaXMuc3RhdGUuJHtjaGlsZE5hbWV9fWApXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBtYXJrdXA7XG4gICAgfVxuXG4gICAgbGV0IGdldENvbXBvbmVudFJlZHVjZXJzID0gKGV2ZW50cykgPT4ge1xuICAgICAgICByZXR1cm4gZXZlbnRzLm1hcChldmVudD0+e1xuICAgICAgICAgICAgbGV0IGZ1bmN0aW9uTmFtZSA9IGV2ZW50LmlkK2V2ZW50Lm5hbWU7XG4gICAgICAgICAgICBsZXQgZnVuY3Rpb25EZWYgPSBjb2RlTW9kaWZpZXIoZXZlbnQucmVkdWNlciwgY29tcG9uZW50KTtcblxuICAgICAgICAgICAgaWYoZXZlbnQucHVibGlzaGFibGU9PT10cnVlKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgICAgICAgICAke2Z1bmN0aW9uTmFtZX0gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR7ZnVuY3Rpb25EZWZ9XG4gICAgICAgICAgICAgICAgICAgICAgICBlLnN0YXRlID0gc3RhdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWJ1Z2dlcjsoMSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuJHtldmVudC5wdWJsaXNoTmFtZX0/IHRoaXMucHJvcHMuJHtldmVudC5wdWJsaXNoTmFtZX0oZSk6bnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYFxuICAgICAgICAgICAgICAgICAgICAke2Z1bmN0aW9uTmFtZX0gKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICR7ZnVuY3Rpb25EZWZ9XG4gICAgICAgICAgICAgICAgICAgIH1gXG4gICAgICAgIH0pLmpvaW4oXCJcXG5cIilcbiAgICB9XG4gICAgXG4gICAgbGV0IGNvbXBvbmVudE5hbWVkTWFrcnVwID0gZ2V0Q29tcG9uZW50TmFtZUluTWFya3VwKGNvbXBvbmVudCk7XG4gICAgbGV0IGNvbXBvbmVudEV2ZW50ZWRNYXJrdXAgPSBnZXRDb21wb25lbnRFdmVudGVkTWFya3VwKGNvbXBvbmVudE5hbWVkTWFrcnVwLCBjb21wb25lbnQuZXZlbnRzKVxuICAgIGxldCBzdGF0ZU92ZXJpZGVNYXJrdXAgPSBnZXRTdGF0ZWRNYXJrdXAoY29tcG9uZW50RXZlbnRlZE1hcmt1cClcbiAgICBsZXQgY29tcG9uZW50UmVkdWNlcnMgPSBnZXRDb21wb25lbnRSZWR1Y2Vycyhjb21wb25lbnQuZXZlbnRzKVxuICAgIGxldCBjb21wb25lbnROYW1lID0gY29tcG9uZW50Lm5hbWUuc3BsaXQoXCIgXCIpLmpvaW4oXCJcIilcbiAgICBsZXQgY29tcG9uZW50U3RhdGUgPSBjb21wb25lbnQuc3RhdGVcbiAgICBsZXQgUmVhY3RDb21wb25lbnQgPSBcbiAgICBgKFxuICAgIGNsYXNzICR7Y29tcG9uZW50TmFtZX0gZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIFxuICAgICAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMucHJvcHMuc3RhdGUgfHwgJHtjb21wb25lbnRTdGF0ZX07XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgJHtjb21wb25lbnRSZWR1Y2Vyc31cbiAgICBcbiAgICAgICAgcmVuZGVyKCkge1xuICAgIFxuICAgICAgICAgICAgcmV0dXJuICgke3N0YXRlT3ZlcmlkZU1hcmt1cH0pXG4gICAgICAgIH1cbiAgICB9KVxuICAgIGBcbiAgICByZXR1cm4gUmVhY3RDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZUNvbXBvbmVudCxcbiAgICBnZXRDb21wb25lbnRTdHJpbmdcbn0iLCIvLyBEZXBlbmRlbmNpZXMuXG5cbmltcG9ydCB7d3JpdGVEYXRhfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVzZWxlY3RlZEluZGV4IChlKSB7XG4gICAgbGV0IGNvbXBvbmVudE5hbWUgPSBlLmN1cnJlbnRUYXJnZXQuaW5uZXJUZXh0LnNwbGl0KFwiXFxuXCIpWzBdO1xuICAgIC8vIEZpbmQgdGhlIGVsZW1lbnQgZnJvbSBzdGF0ZSB0aGF0IG1hdGNoZXMgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCBlbGVtZW50LlxuICAgIGxldCBzZWxlY3RlZENvbXBvbmVudCA9IHRoaXMuc3RhdGUuZWxlbWVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09Y29tcG9uZW50TmFtZSk7XG4gICAgbGV0IHNlbGVjdGVkSW5kZXggPSB0aGlzLnN0YXRlLmVsZW1lbnRzLmZpbmRJbmRleChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09Y29tcG9uZW50TmFtZSk7XG5cbiAgICB3aW5kb3cuc2VsZWN0ZWRjb21wb25lbnRuYW1lID0gc2VsZWN0ZWRDb21wb25lbnQubmFtZTtcbiAgICAvLyBVcGRhdGUgdGhlIHN0YXRlIHdpdGggc2VsZWN0ZWRFbGVtZW50LlxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzZWxlY3RlZEluZGV4LFxuICAgICAgICBuYW1lOiBzZWxlY3RlZENvbXBvbmVudC5uYW1lLFxuICAgICAgICBtYXJrdXA6IHNlbGVjdGVkQ29tcG9uZW50Lm1hcmt1cFxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzYXZlRWxlbWVudCAoZWxlbWVudCkge1xuICAgIFxuICAgIGxldCBjb21wb25lbnRzID0gQXJyYXkuZnJvbSh0aGlzLnN0YXRlLmVsZW1lbnRzKTtcbiAgICBcbiAgICAvLyBDaGVjayBpZiBlbGVtZW50IGV4aXN0LlxuICAgIGxldCBlbGVtZW50RXhpc3QgPSBjb21wb25lbnRzLmZpbmQoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWVsZW1lbnQubmFtZSk7XG4gICAgbGV0IHNlbGVjdGVkSW5kZXggPSB0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXg7XG5cbiAgICBpZihlbGVtZW50RXhpc3Qpe1xuICAgICAgICAvLyBGaW5kIHRoZSBlbGVtZW50LlxuICAgICAgICBsZXQgZWxlbWVudFVuZGVyRWRpdCA9IGNvbXBvbmVudHNbdGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4XTtcblxuICAgICAgICAvLyBNZXJnZS5cbiAgICAgICAgZWxlbWVudFVuZGVyRWRpdCA9IE9iamVjdC5hc3NpZ24oZWxlbWVudFVuZGVyRWRpdCwgZWxlbWVudClcblxuICAgICAgICAvLyBQdXNoIGl0IHRvIG9yaWdpbmFsIGxpc3QuXG4gICAgICAgIGNvbXBvbmVudHNbdGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4XSA9IGVsZW1lbnRVbmRlckVkaXQ7XG4gICAgfVxuXG4gICAgZWxzZSB7XG4gICAgICAgIGxldCBuZXdFbGVtZW50ID0ge1xuICAgICAgICAgICAgbmFtZTogZWxlbWVudC5uYW1lLFxuICAgICAgICAgICAgbWFya3VwOiBlbGVtZW50Lm1hcmt1cCxcbiAgICAgICAgICAgIGV2ZW50czogW10sXG4gICAgICAgICAgICBzdGF0ZTogZWxlbWVudC5zdGF0ZSB8fCBcInt9XCIsXG4gICAgICAgICAgICBzdHlsZTogZWxlbWVudC5zdHlsZSxcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXSxcbiAgICAgICAgICAgIGlkOiBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSoxMDAwKSxcbiAgICAgICAgICAgIGNvbmZpZzpcInt9XCJcbiAgICAgICAgfTtcblxuICAgICAgICBzZWxlY3RlZEluZGV4ID0gY29tcG9uZW50cy5sZW5ndGgtMTtcbiAgICAgICAgY29tcG9uZW50cy5wdXNoKG5ld0VsZW1lbnQpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBlbGVtZW50czogY29tcG9uZW50cyxcbiAgICAgICAgZWxlbWVudDoge1xuICAgICAgICAgICAgbmFtZTogZWxlbWVudC5uYW1lLFxuICAgICAgICAgICAgbWFya3VwOiBlbGVtZW50Lm1hcmt1cCxcbiAgICAgICAgICAgIHN0eWxlOiBlbGVtZW50LnN0eWxlLFxuICAgICAgICAgICAgc3RhdGU6IGVsZW1lbnQuc3RhdGUsXG4gICAgICAgICAgICBldmVudHM6IGVsZW1lbnQuZXZlbnRzIHx8IFtdXG4gICAgICAgIH0sXG4gICAgICAgIHNlbGVjdGVkSW5kZXg6IHNlbGVjdGVkSW5kZXhcbiAgICB9KTtcblxuICAgIHdyaXRlRGF0YShcInVpLWVkaXRvclwiLCBjb21wb25lbnRzKVxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFdmVudCAoZXZlbnRzKSB7XG4gICAgLy8gQ3JlYXRlIG5ldyBzdGF0ZS5cbiAgICBsZXQgbmV3RWxlbWVudHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKS5lbGVtZW50cztcblxuICAgIG5ld0VsZW1lbnRzW3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleF0uZXZlbnRzID0gZXZlbnRzO1xuXG4gICAgLy8gU2V0IHN0YXRlIHRvIHRoZSBuZXcgc3RhdGUuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBuZXdFbGVtZW50c1xuICAgIH0pO1xuXG4gICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsIG5ld0VsZW1lbnRzKVxuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkRlbGV0ZShldmVudCkge1xuICAgIGxldCBjb21wb25lbnROYW1lID0gZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5pbm5lclRleHQuc3BsaXQoXCJcXG5cIilbMF07XG5cbiAgICBpZih0aGlzLnN0YXRlLmVsZW1lbnRzLmZpbmQoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWNvbXBvbmVudE5hbWUpLmxlbmd0aDwxKXtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBHZXQgYWxsIHRoZSBlbGVtZW50c1xuICAgIGxldCBlbGVtZW50cyA9IEFycmF5LmZyb20odGhpcy5zdGF0ZS5lbGVtZW50cyk7XG4gICAgXG4gICAgLy8gRmluZCB0aGUgaW5kZXggb2YgZWxlbWVudCB0byBiZSBkZWxldGVkLlxuICAgIGxldCBpbmRleCA9IGVsZW1lbnRzLmZpbmRJbmRleChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09Y29tcG9uZW50TmFtZSlcblxuICAgIC8vIFJlbW92ZSB0aGUgZWxlbWVudCBmcm9tIHRoZSBsaXN0XG4gICAgZWxlbWVudHMuc3BsaWNlKGluZGV4LDEpO1xuXG4gICAgLy8gVXBkYXRlIHRoZSBzdGF0ZSB3aXRoIG5ldyBlbGVtZW50cy5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZWxlbWVudHM6IGVsZW1lbnRzXG4gICAgfSlcblxuICAgIC8vIFBlcnNpc3QgdGhlIGNoYW5nZXMuXG4gICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsIGVsZW1lbnRzKVxuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVDb25maWcoY29uZmlnKXtcbiAgICBcbiAgICBsZXQgbmV3RWxlbWVudHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKS5lbGVtZW50cztcbiAgICBcbiAgICBsZXQgcGFyZW50ID0gbmV3RWxlbWVudHMuZmluZChlbGVtZW50PT5lbGVtZW50Lm5hbWU9PT1jb25maWcucGFyZW50TmFtZSk7XG4gICAgbGV0IGNoaWxkID0gbmV3RWxlbWVudHMuZmluZChlbGVtZW50PT5lbGVtZW50Lm5hbWU9PT1jb25maWcuY2hpbGROYW1lKTtcblxuICAgIHBhcmVudC5zdGF0ZSA9IEpTT04ucGFyc2UocGFyZW50LnN0YXRlKTtcblxuICAgIGlmKHBhcmVudC5jb25maWcgPT09IHVuZGVmaW5lZCl7XG4gICAgICAgIHBhcmVudC5jb25maWcgPSB7fTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHBhcmVudC5jb25maWcgPSBKU09OLnBhcnNlKHBhcmVudC5jb25maWcpO1xuICAgIH1cbiAgICBwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdID0gcGFyZW50LmNvbmZpZ1tjaGlsZC5uYW1lXSB8fCB7fVxuICAgIHBhcmVudC5jb25maWdbY2hpbGQubmFtZV0ub3ZlcmlkZVN0YXRlID0gY29uZmlnLm92ZXJyaWRlXG4gICAgXG4gICAgaWYocGFyZW50LmNvbmZpZ1tjaGlsZC5uYW1lXS5vdmVyaWRlU3RhdGUpIHsgICAgXG4gICAgICAgIHBhcmVudC5zdGF0ZVtjaGlsZC5uYW1lXSA9IEpTT04ucGFyc2UoY2hpbGQuc3RhdGUpO1xuICAgIH0gXG4gICAgZWxzZSB7XG4gICAgICAgIGRlbGV0ZSBwYXJlbnQuc3RhdGVbY2hpbGQubmFtZV07XG4gICAgICAgIGRlbGV0ZSBwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdO1xuICAgIH1cblxuXG4gICAgcGFyZW50LnN0YXRlID0gSlNPTi5zdHJpbmdpZnkocGFyZW50LnN0YXRlKVxuICAgIHBhcmVudC5jb25maWcgPSBKU09OLnN0cmluZ2lmeShwYXJlbnQuY29uZmlnKVxuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBuZXdFbGVtZW50c1xuICAgIH0pXG5cbiAgICB3cml0ZURhdGEoXCJ1aS1lZGl0b3JcIiwgbmV3RWxlbWVudHMpXG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmltcG9ydCBNZXNzYWdlQ29tcG9uZW50IGZyb20gXCIuLi9NZXNzYWdlQ29tcG9uZW50XCI7XG5cbmNsYXNzIE1lc3NhZ2VzQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBtZXNzYWdlcyA9IHRoaXMucHJvcHMubWVzc2FnZXM7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29uc29sZVwiPlxuICAgICAgICAgICAgICAgICAgICB7bWVzc2FnZXMubWFwKChtZXNzYWdlLGluZGV4KT0+PE1lc3NhZ2VDb21wb25lbnQga2V5PXtpbmRleH0gbWVzc2FnZT17bWVzc2FnZX0vPil9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VzQ29tcG9uZW50OyIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHvCoHNhdmVDb21wb25lbnRzVG9XaW5kb3csIGdldE5lc3RlZENvbXBvbmVudHMgfSBmcm9tIFwiLi9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuaW1wb3J0IHsgcmVhZERhdGEsIHdyaXRlRGF0YSB9IGZyb20gXCIuL2xvY2FsU3RvcmFnZVwiO1xuXG5cbi8vIFdoeT8gQmVjYXVzZSBpbXBvcnRpbmcgUmVhY3QgYXMgdmFyaWFibGUgYXQgbGluZSMyIHdpbGwgYmUgYWx0ZXJ0ZWQgYnkgYmFiZWwuIEtlZXAgaXQgYXMgYSBwcm9wZXJ0eSwgYmFiZWwgd2lsbCBpZ25vcmUgaXQuXG53aW5kb3cuUmVhY3QgPSBSZWFjdDtcbndpbmRvdy5Db21wb25lbnQgPSBSZWFjdC5Db21wb25lbnQ7XG53aW5kb3cuc2F2ZVZhcmlhbnRzID0gZnVuY3Rpb24gKHNvdXJjZSwgdGFyZ2V0LCBzdGF0ZSwgZXZlbnQpIHtcblxuICAgIGRlYnVnZ2VyO1xuICAgIHZhciBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG5cbiAgICBpZihzb3VyY2U9PT10YXJnZXQpe1xuICAgICAgICB2YXIgY29tcG9uZW50ID0gY29tcG9uZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWUgPT09IHNvdXJjZS5uYW1lKTtcbiAgICAgICAgY29tcG9uZW50LnZhcmlhbnRzID0gY29tcG9uZW50LnZhcmlhbnRzIHx8IFtjb21wb25lbnQuc3RhdGVdO1xuICAgICAgICBjb21wb25lbnQudmFyaWFudHMucHVzaChzdGF0ZSk7XG4gICAgICAgIGNvbXBvbmVudC52YXJpYW50cyA9IFsuLi5uZXcgU2V0KGNvbXBvbmVudC52YXJpYW50cy5tYXAoSlNPTi5zdHJpbmdpZnkpKV0ubWFwKEpTT04ucGFyc2UpLmZpbHRlcihCb29sZWFuKTtcbiAgICAgICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsY29tcG9uZW50cyk7XG4gICAgfVxuICAgIGVsc2V7XG5cblxuICAgICAgICAvLyBzb3VyY2UgaXMgdGhlIHBhcmVudCBhbmQgdGFyZ2V0IGlzIHRoZSBjaGlsZC5cbiAgICAgICAgLy8gQWN0dWFsIGZpeFxuICAgICAgICAvLyAxLiBmaW5kIHBhcmVudCB0aGF0IGhhcyBzdGF0ZVt0YXJnZXRdICE9PSB1bmRlZmluZWRcblxuICAgICAgICB2YXIgc291cmNlQ29tcG9uZW50ID0gY29tcG9uZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWUgPT09IHNvdXJjZS5uYW1lKTtcbiAgICAgICAgdmFyIHRhcmdldENvbXBvbmVudCA9IGNvbXBvbmVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lID09PSB0YXJnZXQubmFtZSk7XG5cblxuICAgICAgICAvLyB0ZW1wb3JhcnlGaXhcblxuICAgICAgICBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgPSBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgfHwgW0pTT04ucGFyc2Uoc291cmNlQ29tcG9uZW50LnN0YXRlKV07XG5cbiAgICAgICAgbGV0IHNvdXJjZXN0YXRlID0gSlNPTi5wYXJzZShzb3VyY2VDb21wb25lbnQuc3RhdGUpO1xuXG4gICAgICAgIGxldCBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICBuZXdTdGF0ZVt0YXJnZXRDb21wb25lbnQubmFtZV0gPSBzdGF0ZTtcblxuICAgICAgICBzb3VyY2VzdGF0ZSA9IE9iamVjdC5hc3NpZ24oc291cmNlc3RhdGUsbmV3U3RhdGUpXG5cbiAgICAgICAgc291cmNlQ29tcG9uZW50LnZhcmlhbnRzLnB1c2goc291cmNlc3RhdGUpO1xuICAgICAgICBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgPSBbLi4ubmV3IFNldChzb3VyY2VDb21wb25lbnQudmFyaWFudHMubWFwKEpTT04uc3RyaW5naWZ5KSldLm1hcChKU09OLnBhcnNlKS5maWx0ZXIoQm9vbGVhbik7XG4gICAgICAgIHdyaXRlRGF0YShcInVpLWVkaXRvclwiLGNvbXBvbmVudHMpXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Tm9kZVRyZWUoZWxlbWVudCwganN4LCBzdHlsZSwgc3RhdGUsIGV2ZW50cykge1xuICAgIFxuICAgIGxldCByZXN1bHQsIGVycm9yO1xuICAgIHRyeXtcbiAgICAgICAgbGV0IG5lc3RlZENvbXBvbmVudHMgPSBnZXROZXN0ZWRDb21wb25lbnRzKGVsZW1lbnQpO1xuICAgICAgICBpZiAobmVzdGVkQ29tcG9uZW50cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBzYXZlQ29tcG9uZW50c1RvV2luZG93KG5lc3RlZENvbXBvbmVudHMpO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IGV2YWwoQmFiZWwudHJhbnNmb3JtKGpzeCwgeyBwcmVzZXRzOiBbJ3JlYWN0J10gfSkuY29kZSlcbiAgICB9IGNhdGNoKGUpe1xuICAgICAgICBlcnJvciA9IGU7XG4gICAgfVxuICAgIGZpbmFsbHl7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlcnJvcjogZXJyb3IsXG4gICAgICAgICAgICByZXN1bHQsIHJlc3VsdFxuICAgICAgICB9O1xuICAgIH1cbn0iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZWFjdERPTSBmcm9tIFwicmVhY3QtZG9tXCI7XG5cbi8vIERlcGVuZGVuY2llcy5cbmltcG9ydCBcIi4vSW5kZXgvaW5kZXguY3NzXCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBUb29sIGZyb20gXCIuL1Rvb2xcIjtcblxuXG5jbGFzcyBJbmRleCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuXG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPFRvb2wgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuUmVhY3RET00ucmVuZGVyKDxJbmRleCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJpbmRleFwiKSk7IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEseT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix6PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGFhPW4/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxiYT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIGNhKGEsYixkLGMsZSxnLGgsZil7aWYoIWEpe2E9dm9pZCAwO2lmKHZvaWQgMD09PWIpYT1FcnJvcihcIk1pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCIpO2Vsc2V7dmFyIGw9W2QsYyxlLGcsaCxmXSxtPTA7YT1FcnJvcihiLnJlcGxhY2UoLyVzL2csZnVuY3Rpb24oKXtyZXR1cm4gbFttKytdfSkpO2EubmFtZT1cIkludmFyaWFudCBWaW9sYXRpb25cIn1hLmZyYW1lc1RvUG9wPTE7dGhyb3cgYTt9fVxuZnVuY3Rpb24gQihhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGQ9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWQrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO2NhKCExLFwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0ICVzIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4gXCIsZCl9dmFyIEM9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEQ9e307XG5mdW5jdGlvbiBFKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtFLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/QihcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZCl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1kfHxDfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO2soSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST17Y3VycmVudDpudWxsfSxKPXtjdXJyZW50Om51bGx9LEs9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixkKXt2YXIgYz12b2lkIDAsZT17fSxnPW51bGwsaD1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihoPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZillLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGYpe2Zvcih2YXIgbD1BcnJheShmKSxtPTA7bTxmO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZVtjXSYmKGVbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBkYShhLGIpe3JldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixkLGMpe2lmKFAubGVuZ3RoKXt2YXIgZT1QLnBvcCgpO2UucmVzdWx0PWE7ZS5rZXlQcmVmaXg9YjtlLmZ1bmM9ZDtlLmNvbnRleHQ9YztlLmNvdW50PTA7cmV0dXJuIGV9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZCxjb250ZXh0OmMsY291bnQ6MH19XG5mdW5jdGlvbiBSKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+UC5sZW5ndGgmJlAucHVzaChhKX1cbmZ1bmN0aW9uIFMoYSxiLGQsYyl7dmFyIGU9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWV8fFwiYm9vbGVhblwiPT09ZSlhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChlKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHA6Y2FzZSBxOmc9ITB9fWlmKGcpcmV0dXJuIGQoYyxhLFwiXCI9PT1iP1wiLlwiK1QoYSwwKTpiKSwxO2c9MDtiPVwiXCI9PT1iP1wiLlwiOmIrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGg9MDtoPGEubGVuZ3RoO2grKyl7ZT1hW2hdO3ZhciBmPWIrVChlLGgpO2crPVMoZSxmLGQsYyl9ZWxzZSBpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhP2Y9bnVsbDooZj1BJiZhW0FdfHxhW1wiQEBpdGVyYXRvclwiXSxmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBmP2Y6bnVsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGYpZm9yKGE9Zi5jYWxsKGEpLGg9XG4wOyEoZT1hLm5leHQoKSkuZG9uZTspZT1lLnZhbHVlLGY9YitUKGUsaCsrKSxnKz1TKGUsZixkLGMpO2Vsc2VcIm9iamVjdFwiPT09ZSYmKGQ9XCJcIithLEIoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1kP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmQsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFUoYSxiLGQpe3JldHVybiBudWxsPT1hPzA6UyhhLFwiXCIsYixkKX1mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBlYShhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBmYShhLGIsZCl7dmFyIGM9YS5yZXN1bHQsZT1hLmtleVByZWZpeDthPWEuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyk7QXJyYXkuaXNBcnJheShhKT9WKGEsYyxkLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk6bnVsbCE9YSYmKE4oYSkmJihhPWRhKGEsZSsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTyxcIiQmL1wiKStcIi9cIikrZCkpLGMucHVzaChhKSl9ZnVuY3Rpb24gVihhLGIsZCxjLGUpe3ZhciBnPVwiXCI7bnVsbCE9ZCYmKGc9KFwiXCIrZCkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKTtiPVEoYixnLGMsZSk7VShhLGZhLGIpO1IoYil9ZnVuY3Rpb24gVygpe3ZhciBhPUkuY3VycmVudDtudWxsPT09YT9CKFwiMzIxXCIpOnZvaWQgMDtyZXR1cm4gYX1cbnZhciBYPXtDaGlsZHJlbjp7bWFwOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBjPVtdO1YoYSxjLG51bGwsYixkKTtyZXR1cm4gY30sZm9yRWFjaDpmdW5jdGlvbihhLGIsZCl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVEobnVsbCxudWxsLGIsZCk7VShhLGVhLGIpO1IoYil9LGNvdW50OmZ1bmN0aW9uKGEpe3JldHVybiBVKGEsZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0sbnVsbCl9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7dmFyIGI9W107VihhLGIsbnVsbCxmdW5jdGlvbihhKXtyZXR1cm4gYX0pO3JldHVybiBifSxvbmx5OmZ1bmN0aW9uKGEpe04oYSk/dm9pZCAwOkIoXCIxNDNcIik7cmV0dXJuIGF9fSxjcmVhdGVSZWY6ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX0sQ29tcG9uZW50OkUsUHVyZUNvbXBvbmVudDpHLGNyZWF0ZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXt2b2lkIDA9PT1iJiYoYj1udWxsKTthPXskJHR5cGVvZjp3LF9jYWxjdWxhdGVDaGFuZ2VkQml0czpiLFxuX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9LGZvcndhcmRSZWY6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnkscmVuZGVyOmF9fSxsYXp5OmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpiYSxfY3RvcjphLF9zdGF0dXM6LTEsX3Jlc3VsdDpudWxsfX0sbWVtbzpmdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjphYSx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19LHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDYWxsYmFjayhhLGIpfSx1c2VDb250ZXh0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VDb250ZXh0KGEsYil9LHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlRWZmZWN0KGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxcbmIsZCl7cmV0dXJuIFcoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixkKX0sdXNlRGVidWdWYWx1ZTpmdW5jdGlvbigpe30sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VMYXlvdXRFZmZlY3QoYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3JldHVybiBXKCkudXNlTWVtbyhhLGIpfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixkKXtyZXR1cm4gVygpLnVzZVJlZHVjZXIoYSxiLGQpfSx1c2VSZWY6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VSZWYoYSl9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3JldHVybiBXKCkudXNlU3RhdGUoYSl9LEZyYWdtZW50OnIsU3RyaWN0TW9kZTp0LFN1c3BlbnNlOnosY3JlYXRlRWxlbWVudDpNLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZCl7bnVsbD09PWF8fHZvaWQgMD09PWE/QihcIjI2N1wiLGEpOnZvaWQgMDt2YXIgYz12b2lkIDAsZT1rKHt9LGEucHJvcHMpLGc9YS5rZXksaD1hLnJlZixmPWEuX293bmVyO2lmKG51bGwhPVxuYil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSk7dmFyIGw9dm9pZCAwO2EudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyYmKGw9YS50eXBlLmRlZmF1bHRQcm9wcyk7Zm9yKGMgaW4gYilLLmNhbGwoYixjKSYmIUwuaGFzT3duUHJvcGVydHkoYykmJihlW2NdPXZvaWQgMD09PWJbY10mJnZvaWQgMCE9PWw/bFtjXTpiW2NdKX1jPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09YyllLmNoaWxkcmVuPWQ7ZWxzZSBpZigxPGMpe2w9QXJyYXkoYyk7Zm9yKHZhciBtPTA7bTxjO20rKylsW21dPWFyZ3VtZW50c1ttKzJdO2UuY2hpbGRyZW49bH1yZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEudHlwZSxrZXk6ZyxyZWY6aCxwcm9wczplLF9vd25lcjpmfX0sY3JlYXRlRmFjdG9yeTpmdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn0saXNWYWxpZEVsZW1lbnQ6Tix2ZXJzaW9uOlwiMTYuOC42XCIsXG51bnN0YWJsZV9Db25jdXJyZW50TW9kZTp4LHVuc3RhYmxlX1Byb2ZpbGVyOnUsX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ6e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6SSxSZWFjdEN1cnJlbnRPd25lcjpKLGFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0fHxaO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi44LjZcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbj1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gYmEoYSxiLGMsZCxlLGYsZyxoKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bYyxkLGUsZixnLGhdLGs9MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW2srK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiB4KGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsYz1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsZD0wO2Q8YjtkKyspYys9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbZCsxXSk7YmEoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixjKX1hYT92b2lkIDA6eChcIjIyN1wiKTtmdW5jdGlvbiBjYShhLGIsYyxkLGUsZixnLGgsbCl7dmFyIGs9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsayl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX1cbnZhciBkYT0hMSxlYT1udWxsLGZhPSExLGhhPW51bGwsaWE9e29uRXJyb3I6ZnVuY3Rpb24oYSl7ZGE9ITA7ZWE9YX19O2Z1bmN0aW9uIGphKGEsYixjLGQsZSxmLGcsaCxsKXtkYT0hMTtlYT1udWxsO2NhLmFwcGx5KGlhLGFyZ3VtZW50cyl9ZnVuY3Rpb24ga2EoYSxiLGMsZCxlLGYsZyxoLGwpe2phLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihkYSl7aWYoZGEpe3ZhciBrPWVhO2RhPSExO2VhPW51bGx9ZWxzZSB4KFwiMTk4XCIpLGs9dm9pZCAwO2ZhfHwoZmE9ITAsaGE9ayl9fXZhciBsYT1udWxsLG1hPXt9O1xuZnVuY3Rpb24gbmEoKXtpZihsYSlmb3IodmFyIGEgaW4gbWEpe3ZhciBiPW1hW2FdLGM9bGEuaW5kZXhPZihhKTstMTxjP3ZvaWQgMDp4KFwiOTZcIixhKTtpZighb2FbY10pe2IuZXh0cmFjdEV2ZW50cz92b2lkIDA6eChcIjk3XCIsYSk7b2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtwYS5oYXNPd25Qcm9wZXJ0eShoKT94KFwiOTlcIixoKTp2b2lkIDA7cGFbaF09Zjt2YXIgbD1mLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzO2lmKGwpe2ZvcihlIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShlKSYmcWEobFtlXSxnLGgpO2U9ITB9ZWxzZSBmLnJlZ2lzdHJhdGlvbk5hbWU/KHFhKGYucmVnaXN0cmF0aW9uTmFtZSxnLGgpLGU9ITApOmU9ITE7ZT92b2lkIDA6eChcIjk4XCIsZCxhKX19fX1cbmZ1bmN0aW9uIHFhKGEsYixjKXtyYVthXT94KFwiMTAwXCIsYSk6dm9pZCAwO3JhW2FdPWI7c2FbYV09Yi5ldmVudFR5cGVzW2NdLmRlcGVuZGVuY2llc312YXIgb2E9W10scGE9e30scmE9e30sc2E9e30sdGE9bnVsbCx1YT1udWxsLHZhPW51bGw7ZnVuY3Rpb24gd2EoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PXZhKGMpO2thKGQsYix2b2lkIDAsYSk7YS5jdXJyZW50VGFyZ2V0PW51bGx9ZnVuY3Rpb24geGEoYSxiKXtudWxsPT1iP3goXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfVxuZnVuY3Rpb24geWEoYSxiLGMpe0FycmF5LmlzQXJyYXkoYSk/YS5mb3JFYWNoKGIsYyk6YSYmYi5jYWxsKGMsYSl9dmFyIHphPW51bGw7ZnVuY3Rpb24gQWEoYSl7aWYoYSl7dmFyIGI9YS5fZGlzcGF0Y2hMaXN0ZW5lcnMsYz1hLl9kaXNwYXRjaEluc3RhbmNlcztpZihBcnJheS5pc0FycmF5KGIpKWZvcih2YXIgZD0wO2Q8Yi5sZW5ndGgmJiFhLmlzUHJvcGFnYXRpb25TdG9wcGVkKCk7ZCsrKXdhKGEsYltkXSxjW2RdKTtlbHNlIGImJndhKGEsYixjKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1cbnZhciBCYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjpmdW5jdGlvbihhKXtsYT94KFwiMTAxXCIpOnZvaWQgMDtsYT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhKTtuYSgpfSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6ZnVuY3Rpb24oYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP3goXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfX07XG5mdW5jdGlvbiBDYShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKCFjKXJldHVybiBudWxsO3ZhciBkPXRhKGMpO2lmKCFkKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2MmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIyMzFcIixiLHR5cGVvZiBjKTp2b2lkIDA7XG5yZXR1cm4gY31mdW5jdGlvbiBEYShhKXtudWxsIT09YSYmKHphPXhhKHphLGEpKTthPXphO3phPW51bGw7aWYoYSYmKHlhKGEsQWEpLHphP3goXCI5NVwiKTp2b2lkIDAsZmEpKXRocm93IGE9aGEsZmE9ITEsaGE9bnVsbCxhO312YXIgRWE9TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMiksRmE9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitFYSxHYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0VhO2Z1bmN0aW9uIEhhKGEpe2lmKGFbRmFdKXJldHVybiBhW0ZhXTtmb3IoOyFhW0ZhXTspaWYoYS5wYXJlbnROb2RlKWE9YS5wYXJlbnROb2RlO2Vsc2UgcmV0dXJuIG51bGw7YT1hW0ZhXTtyZXR1cm4gNT09PWEudGFnfHw2PT09YS50YWc/YTpudWxsfWZ1bmN0aW9uIElhKGEpe2E9YVtGYV07cmV0dXJuIWF8fDUhPT1hLnRhZyYmNiE9PWEudGFnP251bGw6YX1cbmZ1bmN0aW9uIEphKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhLnN0YXRlTm9kZTt4KFwiMzNcIil9ZnVuY3Rpb24gS2EoYSl7cmV0dXJuIGFbR2FdfHxudWxsfWZ1bmN0aW9uIExhKGEpe2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9ZnVuY3Rpb24gTWEoYSxiLGMpe2lmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz14YShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz14YShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1cbmZ1bmN0aW9uIE5hKGEpe2lmKGEmJmEuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMpe2Zvcih2YXIgYj1hLl90YXJnZXRJbnN0LGM9W107YjspYy5wdXNoKGIpLGI9TGEoYik7Zm9yKGI9Yy5sZW5ndGg7MDxiLS07KU1hKGNbYl0sXCJjYXB0dXJlZFwiLGEpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspTWEoY1tiXSxcImJ1YmJsZWRcIixhKX19ZnVuY3Rpb24gT2EoYSxiLGMpe2EmJmMmJmMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmKGI9Q2EoYSxjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUpKSYmKGMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpKX1mdW5jdGlvbiBQYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJk9hKGEuX3RhcmdldEluc3QsbnVsbCxhKX1cbmZ1bmN0aW9uIFFhKGEpe3lhKGEsTmEpfXZhciBSYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHwhd2luZG93LmRvY3VtZW50fHwhd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO2Z1bmN0aW9uIFNhKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFRhPXthbmltYXRpb25lbmQ6U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246U2EoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpTYShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFVhPXt9LFZhPXt9O1xuUmEmJihWYT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBUYS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBUYS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBUYS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFdhKGEpe2lmKFVhW2FdKXJldHVybiBVYVthXTtpZighVGFbYV0pcmV0dXJuIGE7dmFyIGI9VGFbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gVmEpcmV0dXJuIFVhW2FdPWJbY107cmV0dXJuIGF9XG52YXIgWGE9V2EoXCJhbmltYXRpb25lbmRcIiksWWE9V2EoXCJhbmltYXRpb25pdGVyYXRpb25cIiksWmE9V2EoXCJhbmltYXRpb25zdGFydFwiKSwkYT1XYShcInRyYW5zaXRpb25lbmRcIiksYWI9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLGJiPW51bGwsY2I9bnVsbCxkYj1udWxsO1xuZnVuY3Rpb24gZWIoKXtpZihkYilyZXR1cm4gZGI7dmFyIGEsYj1jYixjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBkYj1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGZiKCl7cmV0dXJuITB9ZnVuY3Rpb24gZ2IoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHkoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2ZiOmdiO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Z2I7cmV0dXJuIHRoaXN9XG5uKHkucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9ZmIpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9ZmIpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9ZmJ9LGlzUGVyc2lzdGVudDpnYixkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1nYjt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO3kuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xueS5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtoYihjKTtyZXR1cm4gY307aGIoeSk7ZnVuY3Rpb24gaWIoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9ZnVuY3Rpb24gamIoYSl7YSBpbnN0YW5jZW9mIHRoaXM/dm9pZCAwOngoXCIyNzlcIik7YS5kZXN0cnVjdG9yKCk7MTA+dGhpcy5ldmVudFBvb2wubGVuZ3RoJiZ0aGlzLmV2ZW50UG9vbC5wdXNoKGEpfVxuZnVuY3Rpb24gaGIoYSl7YS5ldmVudFBvb2w9W107YS5nZXRQb29sZWQ9aWI7YS5yZWxlYXNlPWpifXZhciBrYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbGI9eS5leHRlbmQoe2RhdGE6bnVsbH0pLG1iPVs5LDEzLDI3LDMyXSxuYj1SYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csb2I9bnVsbDtSYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYob2I9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTtcbnZhciBwYj1SYSYmXCJUZXh0RXZlbnRcImluIHdpbmRvdyYmIW9iLHFiPVJhJiYoIW5ifHxvYiYmODxvYiYmMTE+PW9iKSxyYj1TdHJpbmcuZnJvbUNoYXJDb2RlKDMyKSxzYj17YmVmb3JlSW5wdXQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25CZWZvcmVJbnB1dFwiLGNhcHR1cmVkOlwib25CZWZvcmVJbnB1dENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXX0sY29tcG9zaXRpb25FbmQ6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvbkVuZFwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvbkVuZENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbmVuZCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25TdGFydDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRcIixcbmNhcHR1cmVkOlwib25Db21wb3NpdGlvblN0YXJ0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9LGNvbXBvc2l0aW9uVXBkYXRlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixjYXB0dXJlZDpcIm9uQ29tcG9zaXRpb25VcGRhdGVDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb251cGRhdGUga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBtb3VzZWRvd25cIi5zcGxpdChcIiBcIil9fSx0Yj0hMTtcbmZ1bmN0aW9uIHViKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJrZXl1cFwiOnJldHVybi0xIT09bWIuaW5kZXhPZihiLmtleUNvZGUpO2Nhc2UgXCJrZXlkb3duXCI6cmV0dXJuIDIyOSE9PWIua2V5Q29kZTtjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcImJsdXJcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiB2YihhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciB3Yj0hMTtmdW5jdGlvbiB4YihhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gdmIoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO3RiPSEwO3JldHVybiByYjtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1yYiYmdGI/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24geWIoYSxiKXtpZih3YilyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhbmImJnViKGEsYik/KGE9ZWIoKSxkYj1jYj1iYj1udWxsLHdiPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBxYiYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgemI9e2V2ZW50VHlwZXM6c2IsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKG5iKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9c2IuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9c2IuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPXNiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSB3Yj91YihhLGMpJiYoZT1zYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPXNiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHFiJiZcImtvXCIhPT1jLmxvY2FsZSYmKHdifHxlIT09c2IuY29tcG9zaXRpb25TdGFydD9lPT09c2IuY29tcG9zaXRpb25FbmQmJndiJiYoZj1lYigpKTooYmI9ZCxjYj1cInZhbHVlXCJpbiBiYj9iYi52YWx1ZTpiYi50ZXh0Q29udGVudCx3Yj1cbiEwKSksZT1rYi5nZXRQb29sZWQoZSxiLGMsZCksZj9lLmRhdGE9ZjooZj12YihjKSxudWxsIT09ZiYmKGUuZGF0YT1mKSksUWEoZSksZj1lKTpmPW51bGw7KGE9cGI/eGIoYSxjKTp5YihhLGMpKT8oYj1sYi5nZXRQb29sZWQoc2IuYmVmb3JlSW5wdXQsYixjLGQpLGIuZGF0YT1hLFFhKGIpKTpiPW51bGw7cmV0dXJuIG51bGw9PT1mP2I6bnVsbD09PWI/ZjpbZixiXX19LEFiPW51bGwsQmI9bnVsbCxDYj1udWxsO2Z1bmN0aW9uIERiKGEpe2lmKGE9dWEoYSkpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBBYj94KFwiMjgwXCIpOnZvaWQgMDt2YXIgYj10YShhLnN0YXRlTm9kZSk7QWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpfX1mdW5jdGlvbiBFYihhKXtCYj9DYj9DYi5wdXNoKGEpOkNiPVthXTpCYj1hfWZ1bmN0aW9uIEZiKCl7aWYoQmIpe3ZhciBhPUJiLGI9Q2I7Q2I9QmI9bnVsbDtEYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspRGIoYlthXSl9fVxuZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyl7cmV0dXJuIGEoYixjKX1mdW5jdGlvbiBJYigpe312YXIgSmI9ITE7ZnVuY3Rpb24gS2IoYSxiKXtpZihKYilyZXR1cm4gYShiKTtKYj0hMDt0cnl7cmV0dXJuIEdiKGEsYil9ZmluYWxseXtpZihKYj0hMSxudWxsIT09QmJ8fG51bGwhPT1DYilJYigpLEZiKCl9fXZhciBMYj17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBNYihhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIUxiW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbmZ1bmN0aW9uIE5iKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX1mdW5jdGlvbiBPYihhKXtpZighUmEpcmV0dXJuITE7YT1cIm9uXCIrYTt2YXIgYj1hIGluIGRvY3VtZW50O2J8fChiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYi5zZXRBdHRyaWJ1dGUoYSxcInJldHVybjtcIiksYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgYlthXSk7cmV0dXJuIGJ9ZnVuY3Rpb24gUGIoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIFFiKGEpe3ZhciBiPVBiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiBSYihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9UWIoYSkpfWZ1bmN0aW9uIFNiKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1QYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfXZhciBUYj1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtUYi5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtcbnZhciBVYj0vXiguKilbXFxcXFxcL10vLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixWYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLFdiPXo/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixYYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxZYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxaYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCwkYj16P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxhYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGJjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxjYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixkYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxlYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOlxuNjAxMTUsZmM9ej9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNixnYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gaGMoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPWdjJiZhW2djXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gaWMoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSBiYzpyZXR1cm5cIkNvbmN1cnJlbnRNb2RlXCI7Y2FzZSBYYjpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSBXYjpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgWmI6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2UgWWI6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBkYzpyZXR1cm5cIlN1c3BlbnNlXCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIGFjOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgJGI6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBjYzp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1xuXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgZWM6cmV0dXJuIGljKGEudHlwZSk7Y2FzZSBmYzppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIGljKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIGpjKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1pYyhhLnR5cGUpO2M9bnVsbDtkJiYoYz1pYyhkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFViLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG52YXIga2M9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGxjPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksbWM9e30sbmM9e307XG5mdW5jdGlvbiBvYyhhKXtpZihsYy5jYWxsKG5jLGEpKXJldHVybiEwO2lmKGxjLmNhbGwobWMsYSkpcmV0dXJuITE7aWYoa2MudGVzdChhKSlyZXR1cm4gbmNbYV09ITA7bWNbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gcGMoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBxYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxwYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEMoYSxiLGMsZCxlKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1ifXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMCwhMSxhLG51bGwpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEMoYiwxLCExLGFbMV0sbnVsbCl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMiwhMSxhLG51bGwpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDMsITAsYSxudWxsKX0pO1xuW1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsNCwhMSxhLG51bGwpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw2LCExLGEsbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciByYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLFxuc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJjLHNjKTtEW2JdPW5ldyBDKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7XG5mdW5jdGlvbiB0YyhhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChxYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/b2MoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIHVjKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB2YyhhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbih7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9XG5mdW5jdGlvbiB3YyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz11YyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIHhjKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmdGMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIHljKGEsYil7eGMoYSxiKTt2YXIgYz11YyhiLnZhbHVlKSxkPWIudHlwZTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1kKXtpZigwPT09YyYmXCJcIj09PWEudmFsdWV8fGEudmFsdWUhPWMpYS52YWx1ZT1cIlwiK2N9ZWxzZSBhLnZhbHVlIT09XCJcIitjJiYoYS52YWx1ZT1cIlwiK2MpO2Vsc2UgaWYoXCJzdWJtaXRcIj09PWR8fFwicmVzZXRcIj09PWQpe2EucmVtb3ZlQXR0cmlidXRlKFwidmFsdWVcIik7cmV0dXJufWIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKT96YyhhLGIudHlwZSxjKTpiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpJiZ6YyhhLGIudHlwZSx1YyhiLmRlZmF1bHRWYWx1ZSkpO251bGw9PWIuY2hlY2tlZCYmbnVsbCE9Yi5kZWZhdWx0Q2hlY2tlZCYmKGEuZGVmYXVsdENoZWNrZWQ9ISFiLmRlZmF1bHRDaGVja2VkKX1cbmZ1bmN0aW9uIEFjKGEsYixjKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpe3ZhciBkPWIudHlwZTtpZighKFwic3VibWl0XCIhPT1kJiZcInJlc2V0XCIhPT1kfHx2b2lkIDAhPT1iLnZhbHVlJiZudWxsIT09Yi52YWx1ZSkpcmV0dXJuO2I9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2N8fGI9PT1hLnZhbHVlfHwoYS52YWx1ZT1iKTthLmRlZmF1bHRWYWx1ZT1ifWM9YS5uYW1lO1wiXCIhPT1jJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIHpjKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX12YXIgQmM9e2NoYW5nZTp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNoYW5nZVwiLGNhcHR1cmVkOlwib25DaGFuZ2VDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY2hhbmdlIGNsaWNrIGZvY3VzIGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpfX07ZnVuY3Rpb24gQ2MoYSxiLGMpe2E9eS5nZXRQb29sZWQoQmMuY2hhbmdlLGEsYixjKTthLnR5cGU9XCJjaGFuZ2VcIjtFYihjKTtRYShhKTtyZXR1cm4gYX12YXIgRGM9bnVsbCxFYz1udWxsO2Z1bmN0aW9uIEZjKGEpe0RhKGEpfVxuZnVuY3Rpb24gR2MoYSl7dmFyIGI9SmEoYSk7aWYoU2IoYikpcmV0dXJuIGF9ZnVuY3Rpb24gSGMoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgSWM9ITE7UmEmJihJYz1PYihcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtmdW5jdGlvbiBKYygpe0RjJiYoRGMuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpLEVjPURjPW51bGwpfWZ1bmN0aW9uIEtjKGEpe1widmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZHYyhFYykmJihhPUNjKEVjLGEsTmIoYSkpLEtiKEZjLGEpKX1mdW5jdGlvbiBMYyhhLGIsYyl7XCJmb2N1c1wiPT09YT8oSmMoKSxEYz1iLEVjPWMsRGMuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsS2MpKTpcImJsdXJcIj09PWEmJkpjKCl9ZnVuY3Rpb24gTWMoYSl7aWYoXCJzZWxlY3Rpb25jaGFuZ2VcIj09PWF8fFwia2V5dXBcIj09PWF8fFwia2V5ZG93blwiPT09YSlyZXR1cm4gR2MoRWMpfVxuZnVuY3Rpb24gTmMoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBHYyhiKX1mdW5jdGlvbiBPYyhhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBHYyhiKX1cbnZhciBQYz17ZXZlbnRUeXBlczpCYyxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkljLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9KYShiKTp3aW5kb3csZj12b2lkIDAsZz12b2lkIDAsaD1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XCJzZWxlY3RcIj09PWh8fFwiaW5wdXRcIj09PWgmJlwiZmlsZVwiPT09ZS50eXBlP2Y9SGM6TWIoZSk/SWM/Zj1PYzooZj1NYyxnPUxjKTooaD1lLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09aC50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09ZS50eXBlfHxcInJhZGlvXCI9PT1lLnR5cGUpJiYoZj1OYyk7aWYoZiYmKGY9ZihhLGIpKSlyZXR1cm4gQ2MoZixjLGQpO2cmJmcoYSxlLGIpO1wiYmx1clwiPT09YSYmKGE9ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZ6YyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxRYz15LmV4dGVuZCh7dmlldzpudWxsLGRldGFpbDpudWxsfSksUmM9e0FsdDpcImFsdEtleVwiLFxuQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gU2MoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1SY1thXSk/ISFiW2FdOiExfWZ1bmN0aW9uIFRjKCl7cmV0dXJuIFNjfVxudmFyIFVjPTAsVmM9MCxXYz0hMSxYYz0hMSxZYz1RYy5leHRlbmQoe3NjcmVlblg6bnVsbCxzY3JlZW5ZOm51bGwsY2xpZW50WDpudWxsLGNsaWVudFk6bnVsbCxwYWdlWDpudWxsLHBhZ2VZOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsYnV0dG9uOm51bGwsYnV0dG9uczpudWxsLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIGEucmVsYXRlZFRhcmdldHx8KGEuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudCl9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFg7dmFyIGI9VWM7VWM9YS5zY3JlZW5YO3JldHVybiBXYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWC1iOjA6KFdjPSEwLDApfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFlcImluIGEpcmV0dXJuIGEubW92ZW1lbnRZO1xudmFyIGI9VmM7VmM9YS5zY3JlZW5ZO3JldHVybiBYYz9cIm1vdXNlbW92ZVwiPT09YS50eXBlP2Euc2NyZWVuWS1iOjA6KFhjPSEwLDApfX0pLFpjPVljLmV4dGVuZCh7cG9pbnRlcklkOm51bGwsd2lkdGg6bnVsbCxoZWlnaHQ6bnVsbCxwcmVzc3VyZTpudWxsLHRhbmdlbnRpYWxQcmVzc3VyZTpudWxsLHRpbHRYOm51bGwsdGlsdFk6bnVsbCx0d2lzdDpudWxsLHBvaW50ZXJUeXBlOm51bGwsaXNQcmltYXJ5Om51bGx9KSwkYz17bW91c2VFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VFbnRlclwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxtb3VzZUxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUxlYXZlXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LHBvaW50ZXJFbnRlcjp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckVudGVyXCIsZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfSxwb2ludGVyTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJMZWF2ZVwiLFxuZGVwZW5kZW5jaWVzOltcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdfX0sYWQ9e2V2ZW50VHlwZXM6JGMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSxmPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihlJiYoYy5yZWxhdGVkVGFyZ2V0fHxjLmZyb21FbGVtZW50KXx8IWYmJiFlKXJldHVybiBudWxsO2U9ZC53aW5kb3c9PT1kP2Q6KGU9ZC5vd25lckRvY3VtZW50KT9lLmRlZmF1bHRWaWV3fHxlLnBhcmVudFdpbmRvdzp3aW5kb3c7Zj8oZj1iLGI9KGI9Yy5yZWxhdGVkVGFyZ2V0fHxjLnRvRWxlbWVudCk/SGEoYik6bnVsbCk6Zj1udWxsO2lmKGY9PT1iKXJldHVybiBudWxsO3ZhciBnPXZvaWQgMCxoPXZvaWQgMCxsPXZvaWQgMCxrPXZvaWQgMDtpZihcIm1vdXNlb3V0XCI9PT1hfHxcIm1vdXNlb3ZlclwiPT09YSlnPVljLGg9JGMubW91c2VMZWF2ZSxsPSRjLm1vdXNlRW50ZXIsaz1cIm1vdXNlXCI7XG5lbHNlIGlmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSlnPVpjLGg9JGMucG9pbnRlckxlYXZlLGw9JGMucG9pbnRlckVudGVyLGs9XCJwb2ludGVyXCI7dmFyIG09bnVsbD09Zj9lOkphKGYpO2U9bnVsbD09Yj9lOkphKGIpO2E9Zy5nZXRQb29sZWQoaCxmLGMsZCk7YS50eXBlPWsrXCJsZWF2ZVwiO2EudGFyZ2V0PW07YS5yZWxhdGVkVGFyZ2V0PWU7Yz1nLmdldFBvb2xlZChsLGIsYyxkKTtjLnR5cGU9aytcImVudGVyXCI7Yy50YXJnZXQ9ZTtjLnJlbGF0ZWRUYXJnZXQ9bTtkPWI7aWYoZiYmZClhOntiPWY7ZT1kO2s9MDtmb3IoZz1iO2c7Zz1MYShnKSlrKys7Zz0wO2ZvcihsPWU7bDtsPUxhKGwpKWcrKztmb3IoOzA8ay1nOyliPUxhKGIpLGstLTtmb3IoOzA8Zy1rOyllPUxhKGUpLGctLTtmb3IoO2stLTspe2lmKGI9PT1lfHxiPT09ZS5hbHRlcm5hdGUpYnJlYWsgYTtiPUxhKGIpO2U9TGEoZSl9Yj1udWxsfWVsc2UgYj1udWxsO2U9Yjtmb3IoYj1bXTtmJiZmIT09ZTspe2s9XG5mLmFsdGVybmF0ZTtpZihudWxsIT09ayYmaz09PWUpYnJlYWs7Yi5wdXNoKGYpO2Y9TGEoZil9Zm9yKGY9W107ZCYmZCE9PWU7KXtrPWQuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztmLnB1c2goZCk7ZD1MYShkKX1mb3IoZD0wO2Q8Yi5sZW5ndGg7ZCsrKU9hKGJbZF0sXCJidWJibGVkXCIsYSk7Zm9yKGQ9Zi5sZW5ndGg7MDxkLS07KU9hKGZbZF0sXCJjYXB0dXJlZFwiLGMpO3JldHVyblthLGNdfX07ZnVuY3Rpb24gYmQoYSxiKXtyZXR1cm4gYT09PWImJigwIT09YXx8MS9hPT09MS9iKXx8YSE9PWEmJmIhPT1ifXZhciBjZD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuZnVuY3Rpb24gZGQoYSxiKXtpZihiZChhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspaWYoIWNkLmNhbGwoYixjW2RdKXx8IWJkKGFbY1tkXV0sYltjW2RdXSkpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gZWQoYSl7dmFyIGI9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7aWYoMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMTtmb3IoO2IucmV0dXJuOylpZihiPWIucmV0dXJuLDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDF9cmV0dXJuIDM9PT1iLnRhZz8yOjN9ZnVuY3Rpb24gZmQoYSl7MiE9PWVkKGEpP3goXCIxODhcIik6dm9pZCAwfVxuZnVuY3Rpb24gZ2QoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpcmV0dXJuIGI9ZWQoYSksMz09PWI/eChcIjE4OFwiKTp2b2lkIDAsMT09PWI/bnVsbDphO2Zvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybixmPWU/ZS5hbHRlcm5hdGU6bnVsbDtpZighZXx8IWYpYnJlYWs7aWYoZS5jaGlsZD09PWYuY2hpbGQpe2Zvcih2YXIgZz1lLmNoaWxkO2c7KXtpZihnPT09YylyZXR1cm4gZmQoZSksYTtpZihnPT09ZClyZXR1cm4gZmQoZSksYjtnPWcuc2libGluZ314KFwiMTg4XCIpfWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2c9ITE7Zm9yKHZhciBoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWc/XG52b2lkIDA6eChcIjE4OVwiKX19Yy5hbHRlcm5hdGUhPT1kP3goXCIxOTBcIik6dm9pZCAwfTMhPT1jLnRhZz94KFwiMTg4XCIpOnZvaWQgMDtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhkKGEpe2E9Z2QoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG52YXIgaWQ9eS5leHRlbmQoe2FuaW1hdGlvbk5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLGpkPXkuZXh0ZW5kKHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksa2Q9UWMuZXh0ZW5kKHtyZWxhdGVkVGFyZ2V0Om51bGx9KTtmdW5jdGlvbiBsZChhKXt2YXIgYj1hLmtleUNvZGU7XCJjaGFyQ29kZVwiaW4gYT8oYT1hLmNoYXJDb2RlLDA9PT1hJiYxMz09PWImJihhPTEzKSk6YT1iOzEwPT09YSYmKGE9MTMpO3JldHVybiAzMjw9YXx8MTM9PT1hP2E6MH1cbnZhciBtZD17RXNjOlwiRXNjYXBlXCIsU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sbmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsXG4xMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIiwxMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LG9kPVFjLmV4dGVuZCh7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1tZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1sZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/bmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxsb2NhdGlvbjpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxyZXBlYXQ6bnVsbCxsb2NhbGU6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP2xkKGEpOjB9LGtleUNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH0sd2hpY2g6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlP2xkKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSkscGQ9WWMuZXh0ZW5kKHtkYXRhVHJhbnNmZXI6bnVsbH0pLHFkPVFjLmV4dGVuZCh7dG91Y2hlczpudWxsLHRhcmdldFRvdWNoZXM6bnVsbCxjaGFuZ2VkVG91Y2hlczpudWxsLGFsdEtleTpudWxsLG1ldGFLZXk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxnZXRNb2RpZmllclN0YXRlOlRjfSkscmQ9eS5leHRlbmQoe3Byb3BlcnR5TmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksc2Q9WWMuZXh0ZW5kKHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW5cbmE/LWEud2hlZWxEZWx0YVg6MH0sZGVsdGFZOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFZXCJpbiBhP2EuZGVsdGFZOlwid2hlZWxEZWx0YVlcImluIGE/LWEud2hlZWxEZWx0YVk6XCJ3aGVlbERlbHRhXCJpbiBhPy1hLndoZWVsRGVsdGE6MH0sZGVsdGFaOm51bGwsZGVsdGFNb2RlOm51bGx9KSx0ZD1bW1wiYWJvcnRcIixcImFib3J0XCJdLFtYYSxcImFuaW1hdGlvbkVuZFwiXSxbWWEsXCJhbmltYXRpb25JdGVyYXRpb25cIl0sW1phLFwiYW5pbWF0aW9uU3RhcnRcIl0sW1wiY2FucGxheVwiLFwiY2FuUGxheVwiXSxbXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIl0sW1wiZHJhZ1wiLFwiZHJhZ1wiXSxbXCJkcmFnZW50ZXJcIixcImRyYWdFbnRlclwiXSxbXCJkcmFnZXhpdFwiLFwiZHJhZ0V4aXRcIl0sW1wiZHJhZ2xlYXZlXCIsXCJkcmFnTGVhdmVcIl0sW1wiZHJhZ292ZXJcIixcImRyYWdPdmVyXCJdLFtcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiXSxbXCJlbXB0aWVkXCIsXCJlbXB0aWVkXCJdLFtcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCJdLFxuW1wiZW5kZWRcIixcImVuZGVkXCJdLFtcImVycm9yXCIsXCJlcnJvclwiXSxbXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIl0sW1wibG9hZFwiLFwibG9hZFwiXSxbXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCJdLFtcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiXSxbXCJsb2Fkc3RhcnRcIixcImxvYWRTdGFydFwiXSxbXCJsb3N0cG9pbnRlcmNhcHR1cmVcIixcImxvc3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJtb3VzZW1vdmVcIixcIm1vdXNlTW92ZVwiXSxbXCJtb3VzZW91dFwiLFwibW91c2VPdXRcIl0sW1wibW91c2VvdmVyXCIsXCJtb3VzZU92ZXJcIl0sW1wicGxheWluZ1wiLFwicGxheWluZ1wiXSxbXCJwb2ludGVybW92ZVwiLFwicG9pbnRlck1vdmVcIl0sW1wicG9pbnRlcm91dFwiLFwicG9pbnRlck91dFwiXSxbXCJwb2ludGVyb3ZlclwiLFwicG9pbnRlck92ZXJcIl0sW1wicHJvZ3Jlc3NcIixcInByb2dyZXNzXCJdLFtcInNjcm9sbFwiLFwic2Nyb2xsXCJdLFtcInNlZWtpbmdcIixcInNlZWtpbmdcIl0sW1wic3RhbGxlZFwiLFwic3RhbGxlZFwiXSxcbltcInN1c3BlbmRcIixcInN1c3BlbmRcIl0sW1widGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiXSxbXCJ0b2dnbGVcIixcInRvZ2dsZVwiXSxbXCJ0b3VjaG1vdmVcIixcInRvdWNoTW92ZVwiXSxbJGEsXCJ0cmFuc2l0aW9uRW5kXCJdLFtcIndhaXRpbmdcIixcIndhaXRpbmdcIl0sW1wid2hlZWxcIixcIndoZWVsXCJdXSx1ZD17fSx2ZD17fTtmdW5jdGlvbiB3ZChhLGIpe3ZhciBjPWFbMF07YT1hWzFdO3ZhciBkPVwib25cIisoYVswXS50b1VwcGVyQ2FzZSgpK2Euc2xpY2UoMSkpO2I9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmQsY2FwdHVyZWQ6ZCtcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltjXSxpc0ludGVyYWN0aXZlOmJ9O3VkW2FdPWI7dmRbY109Yn1cbltbXCJibHVyXCIsXCJibHVyXCJdLFtcImNhbmNlbFwiLFwiY2FuY2VsXCJdLFtcImNsaWNrXCIsXCJjbGlja1wiXSxbXCJjbG9zZVwiLFwiY2xvc2VcIl0sW1wiY29udGV4dG1lbnVcIixcImNvbnRleHRNZW51XCJdLFtcImNvcHlcIixcImNvcHlcIl0sW1wiY3V0XCIsXCJjdXRcIl0sW1wiYXV4Y2xpY2tcIixcImF1eENsaWNrXCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFxuW1wicG9pbnRlcmRvd25cIixcInBvaW50ZXJEb3duXCJdLFtcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCEwKX0pO3RkLmZvckVhY2goZnVuY3Rpb24oYSl7d2QoYSwhMSl9KTtcbnZhciB4ZD17ZXZlbnRUeXBlczp1ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT12ZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9dmRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1sZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9b2Q7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPWtkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9WWM7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnBkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9cWQ7YnJlYWs7Y2FzZSBYYTpjYXNlIFlhOmNhc2UgWmE6YT1pZDticmVhaztjYXNlICRhOmE9cmQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9UWM7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT1zZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPWpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9WmM7YnJlYWs7ZGVmYXVsdDphPXl9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtRYShiKTtyZXR1cm4gYn19LHlkPXhkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbnpkPVtdO2Z1bmN0aW9uIEFkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdCxjPWI7ZG97aWYoIWMpe2EuYW5jZXN0b3JzLnB1c2goYyk7YnJlYWt9dmFyIGQ7Zm9yKGQ9YztkLnJldHVybjspZD1kLnJldHVybjtkPTMhPT1kLnRhZz9udWxsOmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoIWQpYnJlYWs7YS5hbmNlc3RvcnMucHVzaChjKTtjPUhhKGQpfXdoaWxlKGMpO2ZvcihjPTA7YzxhLmFuY2VzdG9ycy5sZW5ndGg7YysrKXtiPWEuYW5jZXN0b3JzW2NdO3ZhciBlPU5iKGEubmF0aXZlRXZlbnQpO2Q9YS50b3BMZXZlbFR5cGU7Zm9yKHZhciBmPWEubmF0aXZlRXZlbnQsZz1udWxsLGg9MDtoPG9hLmxlbmd0aDtoKyspe3ZhciBsPW9hW2hdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlKSkmJihnPXhhKGcsbCkpfURhKGcpfX12YXIgQmQ9ITA7XG5mdW5jdGlvbiBFKGEsYil7aWYoIWIpcmV0dXJuIG51bGw7dmFyIGM9KHlkKGEpP0NkOkRkKS5iaW5kKG51bGwsYSk7Yi5hZGRFdmVudExpc3RlbmVyKGEsYywhMSl9ZnVuY3Rpb24gRWQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBDZChhLGIpe0hiKERkLGEsYil9XG5mdW5jdGlvbiBEZChhLGIpe2lmKEJkKXt2YXIgYz1OYihiKTtjPUhhKGMpO251bGw9PT1jfHxcIm51bWJlclwiIT09dHlwZW9mIGMudGFnfHwyPT09ZWQoYyl8fChjPW51bGwpO2lmKHpkLmxlbmd0aCl7dmFyIGQ9emQucG9wKCk7ZC50b3BMZXZlbFR5cGU9YTtkLm5hdGl2ZUV2ZW50PWI7ZC50YXJnZXRJbnN0PWM7YT1kfWVsc2UgYT17dG9wTGV2ZWxUeXBlOmEsbmF0aXZlRXZlbnQ6Yix0YXJnZXRJbnN0OmMsYW5jZXN0b3JzOltdfTt0cnl7S2IoQWQsYSl9ZmluYWxseXthLnRvcExldmVsVHlwZT1udWxsLGEubmF0aXZlRXZlbnQ9bnVsbCxhLnRhcmdldEluc3Q9bnVsbCxhLmFuY2VzdG9ycy5sZW5ndGg9MCwxMD56ZC5sZW5ndGgmJnpkLnB1c2goYSl9fX12YXIgRmQ9e30sR2Q9MCxIZD1cIl9yZWFjdExpc3RlbmVyc0lEXCIrKFwiXCIrTWF0aC5yYW5kb20oKSkuc2xpY2UoMik7XG5mdW5jdGlvbiBJZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxIZCl8fChhW0hkXT1HZCsrLEZkW2FbSGRdXT17fSk7cmV0dXJuIEZkW2FbSGRdXX1mdW5jdGlvbiBKZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gS2QoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gTGQoYSxiKXt2YXIgYz1LZChhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1LZChjKX19ZnVuY3Rpb24gTWQoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9NZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBOZCgpe2Zvcih2YXIgYT13aW5kb3csYj1KZCgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1KZChhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBPZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gUGQoKXt2YXIgYT1OZCgpO2lmKE9kKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBiPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntiPShiPWEub3duZXJEb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgYz1iLmdldFNlbGVjdGlvbiYmYi5nZXRTZWxlY3Rpb24oKTtpZihjJiYwIT09Yy5yYW5nZUNvdW50KXtiPWMuYW5jaG9yTm9kZTt2YXIgZD1jLmFuY2hvck9mZnNldCxlPWMuZm9jdXNOb2RlO2M9Yy5mb2N1c09mZnNldDt0cnl7Yi5ub2RlVHlwZSxlLm5vZGVUeXBlfWNhdGNoKEEpe2I9bnVsbDticmVhayBhfXZhciBmPTAsZz0tMSxoPS0xLGw9MCxrPTAsbT1hLHA9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB0Ozspe20hPT1ifHwwIT09ZCYmMyE9PW0ubm9kZVR5cGV8fChnPWYrZCk7bSE9PWV8fDAhPT1jJiYzIT09bS5ub2RlVHlwZXx8KGg9ZitjKTszPT09bS5ub2RlVHlwZSYmKGYrPW0ubm9kZVZhbHVlLmxlbmd0aCk7XG5pZihudWxsPT09KHQ9bS5maXJzdENoaWxkKSlicmVhaztwPW07bT10fWZvcig7Oyl7aWYobT09PWEpYnJlYWsgYjtwPT09YiYmKytsPT09ZCYmKGc9Zik7cD09PWUmJisraz09PWMmJihoPWYpO2lmKG51bGwhPT0odD1tLm5leHRTaWJsaW5nKSlicmVhazttPXA7cD1tLnBhcmVudE5vZGV9bT10fWI9LTE9PT1nfHwtMT09PWg/bnVsbDp7c3RhcnQ6ZyxlbmQ6aH19ZWxzZSBiPW51bGx9Yj1ifHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBiPW51bGw7cmV0dXJue2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Yn19XG5mdW5jdGlvbiBRZChhKXt2YXIgYj1OZCgpLGM9YS5mb2N1c2VkRWxlbSxkPWEuc2VsZWN0aW9uUmFuZ2U7aWYoYiE9PWMmJmMmJmMub3duZXJEb2N1bWVudCYmTWQoYy5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCxjKSl7aWYobnVsbCE9PWQmJk9kKGMpKWlmKGI9ZC5zdGFydCxhPWQuZW5kLHZvaWQgMD09PWEmJihhPWIpLFwic2VsZWN0aW9uU3RhcnRcImluIGMpYy5zZWxlY3Rpb25TdGFydD1iLGMuc2VsZWN0aW9uRW5kPU1hdGgubWluKGEsYy52YWx1ZS5sZW5ndGgpO2Vsc2UgaWYoYT0oYj1jLm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93LGEuZ2V0U2VsZWN0aW9uKXthPWEuZ2V0U2VsZWN0aW9uKCk7dmFyIGU9Yy50ZXh0Q29udGVudC5sZW5ndGgsZj1NYXRoLm1pbihkLnN0YXJ0LGUpO2Q9dm9pZCAwPT09ZC5lbmQ/ZjpNYXRoLm1pbihkLmVuZCxlKTshYS5leHRlbmQmJmY+ZCYmKGU9ZCxkPWYsZj1lKTtlPUxkKGMsZik7dmFyIGc9TGQoYyxcbmQpO2UmJmcmJigxIT09YS5yYW5nZUNvdW50fHxhLmFuY2hvck5vZGUhPT1lLm5vZGV8fGEuYW5jaG9yT2Zmc2V0IT09ZS5vZmZzZXR8fGEuZm9jdXNOb2RlIT09Zy5ub2RlfHxhLmZvY3VzT2Zmc2V0IT09Zy5vZmZzZXQpJiYoYj1iLmNyZWF0ZVJhbmdlKCksYi5zZXRTdGFydChlLm5vZGUsZS5vZmZzZXQpLGEucmVtb3ZlQWxsUmFuZ2VzKCksZj5kPyhhLmFkZFJhbmdlKGIpLGEuZXh0ZW5kKGcubm9kZSxnLm9mZnNldCkpOihiLnNldEVuZChnLm5vZGUsZy5vZmZzZXQpLGEuYWRkUmFuZ2UoYikpKX1iPVtdO2ZvcihhPWM7YT1hLnBhcmVudE5vZGU7KTE9PT1hLm5vZGVUeXBlJiZiLnB1c2goe2VsZW1lbnQ6YSxsZWZ0OmEuc2Nyb2xsTGVmdCx0b3A6YS5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5mb2N1cyYmYy5mb2N1cygpO2ZvcihjPTA7YzxiLmxlbmd0aDtjKyspYT1iW2NdLGEuZWxlbWVudC5zY3JvbGxMZWZ0PWEubGVmdCxhLmVsZW1lbnQuc2Nyb2xsVG9wPWEudG9wfX1cbnZhciBSZD1SYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFNkPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxUZD1udWxsLFVkPW51bGwsVmQ9bnVsbCxXZD0hMTtcbmZ1bmN0aW9uIFhkKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoV2R8fG51bGw9PVRkfHxUZCE9PUpkKGMpKXJldHVybiBudWxsO2M9VGQ7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmT2QoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gVmQmJmRkKFZkLGMpP251bGw6KFZkPWMsYT15LmdldFBvb2xlZChTZC5zZWxlY3QsVWQsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1UZCxRYShhKSxhKX1cbnZhciBZZD17ZXZlbnRUeXBlczpTZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWQud2luZG93PT09ZD9kLmRvY3VtZW50Ojk9PT1kLm5vZGVUeXBlP2Q6ZC5vd25lckRvY3VtZW50LGY7aWYoIShmPSFlKSl7YTp7ZT1JZChlKTtmPXNhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKXt2YXIgaD1mW2ddO2lmKCFlLmhhc093blByb3BlcnR5KGgpfHwhZVtoXSl7ZT0hMTticmVhayBhfX1lPSEwfWY9IWV9aWYoZilyZXR1cm4gbnVsbDtlPWI/SmEoYik6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjppZihNYihlKXx8XCJ0cnVlXCI9PT1lLmNvbnRlbnRFZGl0YWJsZSlUZD1lLFVkPWIsVmQ9bnVsbDticmVhaztjYXNlIFwiYmx1clwiOlZkPVVkPVRkPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOldkPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpyZXR1cm4gV2Q9ITEsWGQoYyxkKTtjYXNlIFwic2VsZWN0aW9uY2hhbmdlXCI6aWYoUmQpYnJlYWs7XG5jYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOnJldHVybiBYZChjLGQpfXJldHVybiBudWxsfX07QmEuaW5qZWN0RXZlbnRQbHVnaW5PcmRlcihcIlJlc3BvbmRlckV2ZW50UGx1Z2luIFNpbXBsZUV2ZW50UGx1Z2luIEVudGVyTGVhdmVFdmVudFBsdWdpbiBDaGFuZ2VFdmVudFBsdWdpbiBTZWxlY3RFdmVudFBsdWdpbiBCZWZvcmVJbnB1dEV2ZW50UGx1Z2luXCIuc3BsaXQoXCIgXCIpKTt0YT1LYTt1YT1JYTt2YT1KYTtCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUoe1NpbXBsZUV2ZW50UGx1Z2luOnhkLEVudGVyTGVhdmVFdmVudFBsdWdpbjphZCxDaGFuZ2VFdmVudFBsdWdpbjpQYyxTZWxlY3RFdmVudFBsdWdpbjpZZCxCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnpifSk7ZnVuY3Rpb24gWmQoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiAkZChhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPVpkKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1mdW5jdGlvbiBhZShhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrdWMoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGJlKGEsYil7bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTD94KFwiOTFcIik6dm9pZCAwO3JldHVybiBuKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGNlKGEsYil7dmFyIGM9Yi52YWx1ZTtudWxsPT1jJiYoYz1iLmRlZmF1bHRWYWx1ZSxiPWIuY2hpbGRyZW4sbnVsbCE9YiYmKG51bGwhPWM/eChcIjkyXCIpOnZvaWQgMCxBcnJheS5pc0FycmF5KGIpJiYoMT49Yi5sZW5ndGg/dm9pZCAwOngoXCI5M1wiKSxiPWJbMF0pLGM9YiksbnVsbD09YyYmKGM9XCJcIikpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnVjKGMpfX1cbmZ1bmN0aW9uIGRlKGEsYil7dmFyIGM9dWMoYi52YWx1ZSksZD11YyhiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIGVlKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJihhLnZhbHVlPWIpfXZhciBmZT17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBnZShhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIGhlKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9nZShiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBpZT12b2lkIDAsamU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09ZmUuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7aWU9aWV8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7aWUuaW5uZXJIVE1MPVwiPHN2Zz5cIitiK1wiPC9zdmc+XCI7Zm9yKGI9aWUuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24ga2UoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBsZT17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxtZT1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMobGUpLmZvckVhY2goZnVuY3Rpb24oYSl7bWUuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtsZVtiXT1sZVthXX0pfSk7ZnVuY3Rpb24gbmUoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fGxlLmhhc093blByb3BlcnR5KGEpJiZsZVthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiBvZShhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1uZShjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBwZT1uKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gcWUoYSxiKXtiJiYocGVbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCIxMzdcIixhLFwiXCIpOnZvaWQgMCksbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmKG51bGwhPWIuY2hpbGRyZW4/eChcIjYwXCIpOnZvaWQgMCxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJlwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3ZvaWQgMDp4KFwiNjFcIikpLG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZT94KFwiNjJcIixcIlwiKTp2b2lkIDApfVxuZnVuY3Rpb24gcmUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fVxuZnVuY3Rpb24gc2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9SWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6RWQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkVkKFwiZm9jdXNcIixhKTtFZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6T2IoZSkmJkVkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFiLmluZGV4T2YoZSkmJkUoZSxhKX1jW2VdPSEwfX19ZnVuY3Rpb24gdGUoKXt9dmFyIHVlPW51bGwsdmU9bnVsbDtcbmZ1bmN0aW9uIHdlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1mdW5jdGlvbiB4ZShhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgeWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsemU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEFlPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxCZT1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrO1xuZnVuY3Rpb24gQ2UoYSxiLGMsZCxlKXthW0dhXT1lO1wiaW5wdXRcIj09PWMmJlwicmFkaW9cIj09PWUudHlwZSYmbnVsbCE9ZS5uYW1lJiZ4YyhhLGUpO3JlKGMsZCk7ZD1yZShjLGUpO2Zvcih2YXIgZj0wO2Y8Yi5sZW5ndGg7Zis9Mil7dmFyIGc9YltmXSxoPWJbZisxXTtcInN0eWxlXCI9PT1nP29lKGEsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9qZShhLGgpOlwiY2hpbGRyZW5cIj09PWc/a2UoYSxoKTp0YyhhLGcsaCxkKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6eWMoYSxlKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpkZShhLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxhLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFlLm11bHRpcGxlLGM9ZS52YWx1ZSxudWxsIT1jP2FlKGEsISFlLm11bHRpcGxlLGMsITEpOmIhPT0hIWUubXVsdGlwbGUmJihudWxsIT1lLmRlZmF1bHRWYWx1ZT9hZShhLCEhZS5tdWx0aXBsZSxlLmRlZmF1bHRWYWx1ZSxcbiEwKTphZShhLCEhZS5tdWx0aXBsZSxlLm11bHRpcGxlP1tdOlwiXCIsITEpKX19ZnVuY3Rpb24gRGUoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBFZShhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgRmU9W10sR2U9LTE7ZnVuY3Rpb24gRihhKXswPkdlfHwoYS5jdXJyZW50PUZlW0dlXSxGZVtHZV09bnVsbCxHZS0tKX1mdW5jdGlvbiBHKGEsYil7R2UrKztGZVtHZV09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBIZT17fSxIPXtjdXJyZW50OkhlfSxJPXtjdXJyZW50OiExfSxJZT1IZTtcbmZ1bmN0aW9uIEplKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gSGU7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gSihhKXthPWEuY2hpbGRDb250ZXh0VHlwZXM7cmV0dXJuIG51bGwhPT1hJiZ2b2lkIDAhPT1hfWZ1bmN0aW9uIEtlKGEpe0YoSSxhKTtGKEgsYSl9ZnVuY3Rpb24gTGUoYSl7RihJLGEpO0YoSCxhKX1cbmZ1bmN0aW9uIE1lKGEsYixjKXtILmN1cnJlbnQhPT1IZT94KFwiMTY4XCIpOnZvaWQgMDtHKEgsYixhKTtHKEksYyxhKX1mdW5jdGlvbiBOZShhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7YT1iLmNoaWxkQ29udGV4dFR5cGVzO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLmdldENoaWxkQ29udGV4dClyZXR1cm4gYztkPWQuZ2V0Q2hpbGRDb250ZXh0KCk7Zm9yKHZhciBlIGluIGQpZSBpbiBhP3ZvaWQgMDp4KFwiMTA4XCIsaWMoYil8fFwiVW5rbm93blwiLGUpO3JldHVybiBuKHt9LGMsZCl9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yj1iJiZiLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxIZTtJZT1ILmN1cnJlbnQ7RyhILGIsYSk7RyhJLEkuY3VycmVudCxhKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFBlKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtkP3ZvaWQgMDp4KFwiMTY5XCIpO2M/KGI9TmUoYSxiLEllKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWIsRihJLGEpLEYoSCxhKSxHKEgsYixhKSk6RihJLGEpO0coSSxjLGEpfXZhciBRZT1udWxsLFJlPW51bGw7ZnVuY3Rpb24gU2UoYSl7cmV0dXJuIGZ1bmN0aW9uKGIpe3RyeXtyZXR1cm4gYShiKX1jYXRjaChjKXt9fX1cbmZ1bmN0aW9uIFRlKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1FlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJSb290KGMsYSl9KTtSZT1TZShmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfSl9Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gVWUoYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmNvbnRleHREZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gSyhhLGIsYyxkKXtyZXR1cm4gbmV3IFVlKGEsYixjLGQpfVxuZnVuY3Rpb24gVmUoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBXZShhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gVmUoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWNjKXJldHVybiAxMTtpZihhPT09ZWMpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gWGUoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1LKGEudGFnLGIsYS5rZXksYS5tb2RlKSxjLmVsZW1lbnRUeXBlPWEuZWxlbWVudFR5cGUsYy50eXBlPWEudHlwZSxjLnN0YXRlTm9kZT1hLnN0YXRlTm9kZSxjLmFsdGVybmF0ZT1hLGEuYWx0ZXJuYXRlPWMpOihjLnBlbmRpbmdQcm9wcz1iLGMuZWZmZWN0VGFnPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lO2MuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZTtjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtjLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO2Muc2libGluZz1hLnNpYmxpbmc7XG5jLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBZZShhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpVmUoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgWGI6cmV0dXJuIFplKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgYmM6cmV0dXJuICRlKGMsZXwzLGYsYik7Y2FzZSBZYjpyZXR1cm4gJGUoYyxlfDIsZixiKTtjYXNlIFpiOnJldHVybiBhPUsoMTIsYyxiLGV8NCksYS5lbGVtZW50VHlwZT1aYixhLnR5cGU9WmIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBkYzpyZXR1cm4gYT1LKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPWRjLGEudHlwZT1kYyxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgJGI6Zz0xMDticmVhayBhO2Nhc2UgYWM6Zz05O2JyZWFrIGE7Y2FzZSBjYzpnPTExO2JyZWFrIGE7Y2FzZSBlYzpnPVxuMTQ7YnJlYWsgYTtjYXNlIGZjOmc9MTY7ZD1udWxsO2JyZWFrIGF9eChcIjEzMFwiLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKX1iPUsoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBaZShhLGIsYyxkKXthPUsoNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uICRlKGEsYixjLGQpe2E9Syg4LGEsZCxiKTtiPTA9PT0oYiYxKT9ZYjpiYzthLmVsZW1lbnRUeXBlPWI7YS50eXBlPWI7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIGFmKGEsYixjKXthPUsoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfVxuZnVuY3Rpb24gYmYoYSxiLGMpe2I9Syg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1mdW5jdGlvbiBjZihhLGIpe2EuZGlkRXJyb3I9ITE7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lOzA9PT1jP2EuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lPWI6YzxiP2EuZWFybGllc3RQZW5kaW5nVGltZT1iOmEubGF0ZXN0UGVuZGluZ1RpbWU+YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGVmKGEsYil7YS5kaWRFcnJvcj0hMTtpZigwPT09YilhLmVhcmxpZXN0UGVuZGluZ1RpbWU9MCxhLmxhdGVzdFBlbmRpbmdUaW1lPTAsYS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFN1c3BlbmRlZFRpbWU9MCxhLmxhdGVzdFBpbmdlZFRpbWU9MDtlbHNle2I8YS5sYXRlc3RQaW5nZWRUaW1lJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEubGF0ZXN0UGVuZGluZ1RpbWU7MCE9PWMmJihjPmI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9MDphLmVhcmxpZXN0UGVuZGluZ1RpbWU+YiYmKGEuZWFybGllc3RQZW5kaW5nVGltZT1hLmxhdGVzdFBlbmRpbmdUaW1lKSk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTswPT09Yz9jZihhLGIpOmI8YS5sYXRlc3RTdXNwZW5kZWRUaW1lPyhhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wLGNmKGEsYikpOlxuYj5jJiZjZihhLGIpfWRmKDAsYSl9ZnVuY3Rpb24gZmYoYSxiKXthLmRpZEVycm9yPSExO2EubGF0ZXN0UGluZ2VkVGltZT49YiYmKGEubGF0ZXN0UGluZ2VkVGltZT0wKTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWUsZD1hLmxhdGVzdFBlbmRpbmdUaW1lO2M9PT1iP2EuZWFybGllc3RQZW5kaW5nVGltZT1kPT09Yj9hLmxhdGVzdFBlbmRpbmdUaW1lPTA6ZDpkPT09YiYmKGEubGF0ZXN0UGVuZGluZ1RpbWU9Yyk7Yz1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtkPWEubGF0ZXN0U3VzcGVuZGVkVGltZTswPT09Yz9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1hLmxhdGVzdFN1c3BlbmRlZFRpbWU9YjpjPGI/YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU9YjpkPmImJihhLmxhdGVzdFN1c3BlbmRlZFRpbWU9Yik7ZGYoYixhKX1cbmZ1bmN0aW9uIGdmKGEsYil7dmFyIGM9YS5lYXJsaWVzdFBlbmRpbmdUaW1lO2E9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWU7Yz5iJiYoYj1jKTthPmImJihiPWEpO3JldHVybiBifWZ1bmN0aW9uIGRmKGEsYil7dmFyIGM9Yi5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1iLmxhdGVzdFN1c3BlbmRlZFRpbWUsZT1iLmVhcmxpZXN0UGVuZGluZ1RpbWUsZj1iLmxhdGVzdFBpbmdlZFRpbWU7ZT0wIT09ZT9lOmY7MD09PWUmJigwPT09YXx8ZDxhKSYmKGU9ZCk7YT1lOzAhPT1hJiZjPmEmJihhPWMpO2IubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZTtiLmV4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gTChhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGhmKGEpe3ZhciBiPWEuX3Jlc3VsdDtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGI7Y2FzZSAyOnRocm93IGI7Y2FzZSAwOnRocm93IGI7ZGVmYXVsdDphLl9zdGF0dXM9MDtiPWEuX2N0b3I7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KTtzd2l0Y2goYS5fc3RhdHVzKXtjYXNlIDE6cmV0dXJuIGEuX3Jlc3VsdDtjYXNlIDI6dGhyb3cgYS5fcmVzdWx0O31hLl9yZXN1bHQ9Yjt0aHJvdyBiO319dmFyIGpmPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24ga2YoYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm4oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YztkPWEudXBkYXRlUXVldWU7bnVsbCE9PWQmJjA9PT1hLmV4cGlyYXRpb25UaW1lJiYoZC5iYXNlU3RhdGU9Yyl9XG52YXIgdGY9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpPzI9PT1lZChhKTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1sZigpO2Q9bWYoZCxhKTt2YXIgZT1uZihkKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7b2YoKTtwZihhLGUpO3FmKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UudGFnPXJmO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9bGYoKTtjPW1mKGMsYSk7dmFyIGQ9bmYoYyk7ZC50YWc9XG5zZjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7b2YoKTtwZihhLGQpO3FmKGEsYyl9fTtmdW5jdGlvbiB1ZihhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFkZChjLGQpfHwhZGQoZSxmKTohMH1cbmZ1bmN0aW9uIHZmKGEsYixjKXt2YXIgZD0hMSxlPUhlO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPU0oZik6KGU9SihiKT9JZTpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9KZShhLGUpOkhlKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9dGY7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFsRmliZXI9YTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO3JldHVybiBifVxuZnVuY3Rpb24gd2YoYSxiLGMsZCl7YT1iLnN0YXRlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7Yi5zdGF0ZSE9PWEmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoYixiLnN0YXRlLG51bGwpfVxuZnVuY3Rpb24geGYoYSxiLGMsZCl7dmFyIGU9YS5zdGF0ZU5vZGU7ZS5wcm9wcz1jO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2UucmVmcz1qZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/ZS5jb250ZXh0PU0oZik6KGY9SihiKT9JZTpILmN1cnJlbnQsZS5jb250ZXh0PUplKGEsZikpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihrZihhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fChiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZ0Zi5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJih5ZihhLGYsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHpmPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBBZihhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigxIT09Yy50YWc/eChcIjMwOVwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6eChcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09amYmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/eChcIjI4NFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOngoXCIyOTBcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIEJmKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZ4KFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBDZihhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPVhlKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9YWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzLGQpLGQucmVmPUFmKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1ZZShjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1BZihhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWJmKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIG0oYSxiLGMsZCxmKXtpZihudWxsPT09Ynx8NyE9PWIudGFnKXJldHVybiBiPVplKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1hZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYz1ZZShiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1BZihhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgV2I6cmV0dXJuIGI9YmYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHpmKGIpfHxcbmhjKGIpKXJldHVybiBiPVplKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO0JmKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBWYjpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PVhiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTpsKGEsYixjLGQpOm51bGw7Y2FzZSBXYjpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbH1pZih6ZihjKXx8aGMoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO0JmKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQShhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1YYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmwoYixhLGQsZSk7Y2FzZSBXYjpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsayhiLGEsZCxlKX1pZih6ZihkKXx8aGMoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO0JmKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwscT1nLHU9Zz0wLEI9bnVsbDtudWxsIT09cSYmdTxoLmxlbmd0aDt1Kyspe3EuaW5kZXg+dT8oQj1xLHE9bnVsbCk6Qj1xLnNpYmxpbmc7dmFyIHc9dChlLHEsaFt1XSxrKTtpZihudWxsPT09dyl7bnVsbD09PXEmJihxPUIpO2JyZWFrfWEmJlxucSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUscSk7Zz1mKHcsZyx1KTtudWxsPT09bT9sPXc6bS5zaWJsaW5nPXc7bT13O3E9Qn1pZih1PT09aC5sZW5ndGgpcmV0dXJuIGMoZSxxKSxsO2lmKG51bGw9PT1xKXtmb3IoO3U8aC5sZW5ndGg7dSsrKWlmKHE9cChlLGhbdV0saykpZz1mKHEsZyx1KSxudWxsPT09bT9sPXE6bS5zaWJsaW5nPXEsbT1xO3JldHVybiBsfWZvcihxPWQoZSxxKTt1PGgubGVuZ3RoO3UrKylpZihCPUEocSxlLHUsaFt1XSxrKSlhJiZudWxsIT09Qi5hbHRlcm5hdGUmJnEuZGVsZXRlKG51bGw9PT1CLmtleT91OkIua2V5KSxnPWYoQixnLHUpLG51bGw9PT1tP2w9QjptLnNpYmxpbmc9QixtPUI7YSYmcS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiBSKGUsZyxoLGspe3ZhciBsPWhjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBsP3goXCIxNTBcIik6dm9pZCAwO2g9bC5jYWxsKGgpO251bGw9PWg/eChcIjE1MVwiKTp2b2lkIDA7XG5mb3IodmFyIG09bD1udWxsLHE9Zyx1PWc9MCxCPW51bGwsdz1oLm5leHQoKTtudWxsIT09cSYmIXcuZG9uZTt1Kyssdz1oLm5leHQoKSl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdj10KGUscSx3LnZhbHVlLGspO2lmKG51bGw9PT12KXtxfHwocT1CKTticmVha31hJiZxJiZudWxsPT09di5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodixnLHUpO251bGw9PT1tP2w9djptLnNpYmxpbmc9djttPXY7cT1CfWlmKHcuZG9uZSlyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PXAoZSx3LnZhbHVlLGspLG51bGwhPT13JiYoZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTtyZXR1cm4gbH1mb3IocT1kKGUscSk7IXcuZG9uZTt1Kyssdz1oLm5leHQoKSl3PUEocSxlLHUsdy52YWx1ZSxrKSxudWxsIT09dyYmKGEmJm51bGwhPT13LmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PXcua2V5P3U6XG53LmtleSksZz1mKHcsZyx1KSxudWxsPT09bT9sPXc6bS5zaWJsaW5nPXcsbT13KTthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1YYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBWYjphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpaWYoNz09PWsudGFnP2YudHlwZT09PVhiOmsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PVhiP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1BZihhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPVxuay5zaWJsaW5nfWYudHlwZT09PVhiPyhkPVplKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1ZZShmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1BZihhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgV2I6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1iZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cblwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmLGgpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9YWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoemYoZikpcmV0dXJuIHYoYSxkLGYsaCk7aWYoaGMoZikpcmV0dXJuIFIoYSxkLGYsaCk7bCYmQmYoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDpoPWEudHlwZSx4KFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgRGY9Q2YoITApLEVmPUNmKCExKSxGZj17fSxOPXtjdXJyZW50OkZmfSxHZj17Y3VycmVudDpGZn0sSGY9e2N1cnJlbnQ6RmZ9O2Z1bmN0aW9uIElmKGEpe2E9PT1GZj94KFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpmKGEsYil7RyhIZixiLGEpO0coR2YsYSxhKTtHKE4sRmYsYSk7dmFyIGM9Yi5ub2RlVHlwZTtzd2l0Y2goYyl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6aGUobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmM9OD09PWM/Yi5wYXJlbnROb2RlOmIsYj1jLm5hbWVzcGFjZVVSSXx8bnVsbCxjPWMudGFnTmFtZSxiPWhlKGIsYyl9RihOLGEpO0coTixiLGEpfWZ1bmN0aW9uIEtmKGEpe0YoTixhKTtGKEdmLGEpO0YoSGYsYSl9ZnVuY3Rpb24gTGYoYSl7SWYoSGYuY3VycmVudCk7dmFyIGI9SWYoTi5jdXJyZW50KTt2YXIgYz1oZShiLGEudHlwZSk7YiE9PWMmJihHKEdmLGEsYSksRyhOLGMsYSkpfWZ1bmN0aW9uIE1mKGEpe0dmLmN1cnJlbnQ9PT1hJiYoRihOLGEpLEYoR2YsYSkpfVxudmFyIE5mPTAsT2Y9MixQZj00LFFmPTgsUmY9MTYsU2Y9MzIsVGY9NjQsVWY9MTI4LFZmPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsV2Y9MCxYZj1udWxsLE89bnVsbCxQPW51bGwsWWY9bnVsbCxRPW51bGwsWmY9bnVsbCwkZj0wLGFnPW51bGwsYmc9MCxjZz0hMSxkZz1udWxsLGVnPTA7ZnVuY3Rpb24gZmcoKXt4KFwiMzIxXCIpfWZ1bmN0aW9uIGdnKGEsYil7aWYobnVsbD09PWIpcmV0dXJuITE7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aCYmYzxhLmxlbmd0aDtjKyspaWYoIWJkKGFbY10sYltjXSkpcmV0dXJuITE7cmV0dXJuITB9XG5mdW5jdGlvbiBoZyhhLGIsYyxkLGUsZil7V2Y9ZjtYZj1iO1A9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGw7VmYuY3VycmVudD1udWxsPT09UD9pZzpqZztiPWMoZCxlKTtpZihjZyl7ZG8gY2c9ITEsZWcrPTEsUD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbCxaZj1ZZixhZz1RPU89bnVsbCxWZi5jdXJyZW50PWpnLGI9YyhkLGUpO3doaWxlKGNnKTtkZz1udWxsO2VnPTB9VmYuY3VycmVudD1rZzthPVhmO2EubWVtb2l6ZWRTdGF0ZT1ZZjthLmV4cGlyYXRpb25UaW1lPSRmO2EudXBkYXRlUXVldWU9YWc7YS5lZmZlY3RUYWd8PWJnO2E9bnVsbCE9PU8mJm51bGwhPT1PLm5leHQ7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2E/eChcIjMwMFwiKTp2b2lkIDA7cmV0dXJuIGJ9ZnVuY3Rpb24gbGcoKXtWZi5jdXJyZW50PWtnO1dmPTA7WmY9UT1ZZj1QPU89WGY9bnVsbDskZj0wO2FnPW51bGw7Ymc9MDtjZz0hMTtkZz1udWxsO2VnPTB9XG5mdW5jdGlvbiBtZygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwscXVldWU6bnVsbCxiYXNlVXBkYXRlOm51bGwsbmV4dDpudWxsfTtudWxsPT09UT9ZZj1RPWE6UT1RLm5leHQ9YTtyZXR1cm4gUX1mdW5jdGlvbiBuZygpe2lmKG51bGwhPT1aZilRPVpmLFpmPVEubmV4dCxPPVAsUD1udWxsIT09Tz9PLm5leHQ6bnVsbDtlbHNle251bGw9PT1QP3goXCIzMTBcIik6dm9pZCAwO089UDt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLHF1ZXVlOk8ucXVldWUsYmFzZVVwZGF0ZTpPLmJhc2VVcGRhdGUsbmV4dDpudWxsfTtRPW51bGw9PT1RP1lmPWE6US5uZXh0PWE7UD1PLm5leHR9cmV0dXJuIFF9ZnVuY3Rpb24gb2coYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBwZyhhKXt2YXIgYj1uZygpLGM9Yi5xdWV1ZTtudWxsPT09Yz94KFwiMzExXCIpOnZvaWQgMDtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTtpZigwPGVnKXt2YXIgZD1jLmRpc3BhdGNoO2lmKG51bGwhPT1kZyl7dmFyIGU9ZGcuZ2V0KGMpO2lmKHZvaWQgMCE9PWUpe2RnLmRlbGV0ZShjKTt2YXIgZj1iLm1lbW9pemVkU3RhdGU7ZG8gZj1hKGYsZS5hY3Rpb24pLGU9ZS5uZXh0O3doaWxlKG51bGwhPT1lKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPT09Yy5sYXN0JiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mO3JldHVybltmLGRdfX1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGRdfWQ9Yy5sYXN0O3ZhciBnPWIuYmFzZVVwZGF0ZTtmPWIuYmFzZVN0YXRlO251bGwhPT1nPyhudWxsIT09ZCYmKGQubmV4dD1udWxsKSxkPWcubmV4dCk6ZD1udWxsIT09ZD9kLm5leHQ6bnVsbDtpZihudWxsIT09XG5kKXt2YXIgaD1lPW51bGwsbD1kLGs9ITE7ZG97dmFyIG09bC5leHBpcmF0aW9uVGltZTttPFdmPyhrfHwoaz0hMCxoPWcsZT1mKSxtPiRmJiYoJGY9bSkpOmY9bC5lYWdlclJlZHVjZXI9PT1hP2wuZWFnZXJTdGF0ZTphKGYsbC5hY3Rpb24pO2c9bDtsPWwubmV4dH13aGlsZShudWxsIT09bCYmbCE9PWQpO2t8fChoPWcsZT1mKTtiZChmLGIubWVtb2l6ZWRTdGF0ZSl8fChxZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7Yi5iYXNlVXBkYXRlPWg7Yi5iYXNlU3RhdGU9ZTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHJnKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtudWxsPT09YWc/KGFnPXtsYXN0RWZmZWN0Om51bGx9LGFnLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihiPWFnLmxhc3RFZmZlY3QsbnVsbD09PWI/YWcubGFzdEVmZmVjdD1hLm5leHQ9YTooYz1iLm5leHQsYi5uZXh0PWEsYS5uZXh0PWMsYWcubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gc2coYSxiLGMsZCl7dmFyIGU9bWcoKTtiZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB0ZyhhLGIsYyxkKXt2YXIgZT1uZygpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJmdnKGQsZy5kZXBzKSl7cmcoTmYsYyxmLGQpO3JldHVybn19Ymd8PWE7ZS5tZW1vaXplZFN0YXRlPXJnKGIsYyxmLGQpfWZ1bmN0aW9uIHVnKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gdmcoKXt9XG5mdW5jdGlvbiB3ZyhhLGIsYyl7MjU+ZWc/dm9pZCAwOngoXCIzMDFcIik7dmFyIGQ9YS5hbHRlcm5hdGU7aWYoYT09PVhmfHxudWxsIT09ZCYmZD09PVhmKWlmKGNnPSEwLGE9e2V4cGlyYXRpb25UaW1lOldmLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LG51bGw9PT1kZyYmKGRnPW5ldyBNYXApLGM9ZGcuZ2V0KGIpLHZvaWQgMD09PWMpZGcuc2V0KGIsYSk7ZWxzZXtmb3IoYj1jO251bGwhPT1iLm5leHQ7KWI9Yi5uZXh0O2IubmV4dD1hfWVsc2V7b2YoKTt2YXIgZT1sZigpO2U9bWYoZSxhKTt2YXIgZj17ZXhwaXJhdGlvblRpbWU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIubGFzdDtpZihudWxsPT09ZylmLm5leHQ9ZjtlbHNle3ZhciBoPWcubmV4dDtudWxsIT09aCYmKGYubmV4dD1oKTtnLm5leHQ9Zn1iLmxhc3Q9ZjtpZigwPT09YS5leHBpcmF0aW9uVGltZSYmKG51bGw9PT1cbmR8fDA9PT1kLmV4cGlyYXRpb25UaW1lKSYmKGQ9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1kKSl0cnl7dmFyIGw9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxrPWQobCxjKTtmLmVhZ2VyUmVkdWNlcj1kO2YuZWFnZXJTdGF0ZT1rO2lmKGJkKGssbCkpcmV0dXJufWNhdGNoKG0pe31maW5hbGx5e31xZihhLGUpfX1cbnZhciBrZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmZyx1c2VDb250ZXh0OmZnLHVzZUVmZmVjdDpmZyx1c2VJbXBlcmF0aXZlSGFuZGxlOmZnLHVzZUxheW91dEVmZmVjdDpmZyx1c2VNZW1vOmZnLHVzZVJlZHVjZXI6ZmcsdXNlUmVmOmZnLHVzZVN0YXRlOmZnLHVzZURlYnVnVmFsdWU6Zmd9LGlnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7bWcoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHNnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBzZyg0LFBmfFNmLGEsYil9LFxudXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW1nKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPW1nKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e2xhc3Q6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9d2cuYmluZChudWxsLFhmLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1tZygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXt2YXIgYj1tZygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBhJiYoYT1hKCkpO2IubWVtb2l6ZWRTdGF0ZT1iLmJhc2VTdGF0ZT1hO2E9Yi5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsXG5sYXN0UmVuZGVyZWRSZWR1Y2VyOm9nLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlRGVidWdWYWx1ZTp2Z30samc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZUNvbnRleHQ6TSx1c2VFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGcoNTE2LFVmfFRmLGEsYil9LHVzZUltcGVyYXRpdmVIYW5kbGU6ZnVuY3Rpb24oYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB0Zyg0LFBmfFNmLHVnLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxcbmIpe3JldHVybiB0Zyg0LFBmfFNmLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1uZygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmZ2coYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6cGcsdXNlUmVmOmZ1bmN0aW9uKCl7cmV0dXJuIG5nKCkubWVtb2l6ZWRTdGF0ZX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIHBnKG9nLGEpfSx1c2VEZWJ1Z1ZhbHVlOnZnfSx4Zz1udWxsLHlnPW51bGwsemc9ITE7XG5mdW5jdGlvbiBBZyhhLGIpe3ZhciBjPUsoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZWZmZWN0VGFnPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBCZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gQ2coYSl7aWYoemcpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUJnKGEsYikpe2I9RGUoYyk7aWYoIWJ8fCFCZyhhLGIpKXthLmVmZmVjdFRhZ3w9Mjt6Zz0hMTt4Zz1hO3JldHVybn1BZyh4ZyxjKX14Zz1hO3lnPUVlKGIpfWVsc2UgYS5lZmZlY3RUYWd8PTIsemc9ITEseGc9YX19ZnVuY3Rpb24gRGcoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxOCE9PWEudGFnOylhPWEucmV0dXJuO3hnPWF9ZnVuY3Rpb24gRWcoYSl7aWYoYSE9PXhnKXJldHVybiExO2lmKCF6ZylyZXR1cm4gRGcoYSksemc9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiF4ZShiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9eWc7YjspQWcoYSxiKSxiPURlKGIpO0RnKGEpO3lnPXhnP0RlKGEuc3RhdGVOb2RlKTpudWxsO3JldHVybiEwfWZ1bmN0aW9uIEZnKCl7eWc9eGc9bnVsbDt6Zz0hMX1cbnZhciBHZz1UYi5SZWFjdEN1cnJlbnRPd25lcixxZz0hMTtmdW5jdGlvbiBTKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/RWYoYixudWxsLGMsZCk6RGYoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gSGcoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0lnKGIsZSk7ZD1oZyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFxZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLEpnKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtTKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFWZShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxMZyhhLGIsZyxkLGUsZik7YT1ZZShjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmRkLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIEpnKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVhlKGcsZCxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBMZyhhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZkZChhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihxZz0hMSxlPGYpP0pnKGEsYixmKTpNZyhhLGIsYyxkLGYpfWZ1bmN0aW9uIE5nKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gTWcoYSxiLGMsZCxlKXt2YXIgZj1KKGMpP0llOkguY3VycmVudDtmPUplKGIsZik7SWcoYixlKTtjPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBPZyhhLGIsYyxkLGUpe2lmKEooYykpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtJZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9MiksdmYoYixjLGQsZSkseGYoYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8bCE9PWspJiZ3ZihiLGcsZCxrKTtQZz0hMTt2YXIgdD1iLm1lbW9pemVkU3RhdGU7bD1nLnN0YXRlPXQ7dmFyIEE9Yi51cGRhdGVRdWV1ZTtudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksbD1iLm1lbW9pemVkU3RhdGUpO2ghPT1kfHx0IT09bHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSxsPWIubWVtb2l6ZWRTdGF0ZSksKGg9UGd8fHVmKGIsYyxoLGQsdCxsLGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWwpLGcucHJvcHM9ZCxnLnN0YXRlPWwsZy5jb250ZXh0PWssZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzLGcucHJvcHM9Yi50eXBlPT09Yi5lbGVtZW50VHlwZT9oOkwoYi50eXBlLGgpLGw9Zy5jb250ZXh0LGs9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9TShrKTooaz1KKGMpP0llOkguY3VycmVudCxrPUplKGIsaykpLG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsKHA9XCJmdW5jdGlvblwiPT09XG50eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspLFBnPSExLGw9Yi5tZW1vaXplZFN0YXRlLHQ9Zy5zdGF0ZT1sLEE9Yi51cGRhdGVRdWV1ZSxudWxsIT09QSYmKHlmKGIsQSxkLGcsZSksdD1iLm1lbW9pemVkU3RhdGUpLGghPT1kfHxsIT09dHx8SS5jdXJyZW50fHxQZz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihrZihiLGMsbSxkKSx0PWIubWVtb2l6ZWRTdGF0ZSksKG09UGd8fHVmKGIsYyxoLGQsbCx0LGspKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsayksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCx0LGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmVmZmVjdFRhZ3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmbD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1cbnQpLGcucHJvcHM9ZCxnLnN0YXRlPXQsZy5jb250ZXh0PWssZD1tKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksZD0hMSk7cmV0dXJuIFFnKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIFFnKGEsYixjLGQsZSxmKXtOZyhhLGIpO3ZhciBnPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmUGUoYixjLCExKSxKZyhhLGIsZik7ZD1iLnN0YXRlTm9kZTtHZy5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmVmZmVjdFRhZ3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1EZihiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPURmKGIsbnVsbCxoLGYpKTpTKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJlBlKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gUmcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9NZShhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZNZShhLGIuY29udGV4dCwhMSk7SmYoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gU2coYSxiLGMpe3ZhciBkPWIubW9kZSxlPWIucGVuZGluZ1Byb3BzLGY9Yi5tZW1vaXplZFN0YXRlO2lmKDA9PT0oYi5lZmZlY3RUYWcmNjQpKXtmPW51bGw7dmFyIGc9ITF9ZWxzZSBmPXt0aW1lZE91dEF0Om51bGwhPT1mP2YudGltZWRPdXRBdDowfSxnPSEwLGIuZWZmZWN0VGFnJj0tNjU7aWYobnVsbD09PWEpaWYoZyl7dmFyIGg9ZS5mYWxsYmFjazthPVplKG51bGwsZCwwLG51bGwpOzA9PT0oYi5tb2RlJjEpJiYoYS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCk7ZD1aZShoLGQsYyxudWxsKTthLnNpYmxpbmc9ZDtjPWE7Yy5yZXR1cm49ZC5yZXR1cm49Yn1lbHNlIGM9ZD1FZihiLG51bGwsZS5jaGlsZHJlbixjKTtlbHNlIG51bGwhPT1hLm1lbW9pemVkU3RhdGU/KGQ9YS5jaGlsZCxoPWQuc2libGluZyxnPyhjPWUuZmFsbGJhY2ssZT1YZShkLGQucGVuZGluZ1Byb3BzLDApLDA9PT0oYi5tb2RlJjEpJiYoZz1udWxsIT09XG5iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1kLmNoaWxkJiYoZS5jaGlsZD1nKSksZD1lLnNpYmxpbmc9WGUoaCxjLGguZXhwaXJhdGlvblRpbWUpLGM9ZSxlLmNoaWxkRXhwaXJhdGlvblRpbWU9MCxjLnJldHVybj1kLnJldHVybj1iKTpjPWQ9RGYoYixkLmNoaWxkLGUuY2hpbGRyZW4sYykpOihoPWEuY2hpbGQsZz8oZz1lLmZhbGxiYWNrLGU9WmUobnVsbCxkLDAsbnVsbCksZS5jaGlsZD1oLDA9PT0oYi5tb2RlJjEpJiYoZS5jaGlsZD1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCksZD1lLnNpYmxpbmc9WmUoZyxkLGMsbnVsbCksZC5lZmZlY3RUYWd8PTIsYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmQ9Yz1EZihiLGgsZS5jaGlsZHJlbixjKSksYi5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGU7Yi5tZW1vaXplZFN0YXRlPWY7Yi5jaGlsZD1jO3JldHVybiBkfVxuZnVuY3Rpb24gSmcoYSxiLGMpe251bGwhPT1hJiYoYi5jb250ZXh0RGVwZW5kZW5jaWVzPWEuY29udGV4dERlcGVuZGVuY2llcyk7aWYoYi5jaGlsZEV4cGlyYXRpb25UaW1lPGMpcmV0dXJuIG51bGw7bnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkP3goXCIxNTNcIik6dm9pZCAwO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1YZShhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBUZyhhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8SS5jdXJyZW50KXFnPSEwO2Vsc2V7aWYoZDxjKXtxZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpSZyhiKTtGZygpO2JyZWFrO2Nhc2UgNTpMZihiKTticmVhaztjYXNlIDE6SihiLnR5cGUpJiZPZShiKTticmVhaztjYXNlIDQ6SmYoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOlVnKGIsYi5tZW1vaXplZFByb3BzLnZhbHVlKTticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2Q9Yi5jaGlsZC5jaGlsZEV4cGlyYXRpb25UaW1lO2lmKDAhPT1kJiZkPj1jKXJldHVybiBTZyhhLGIsYyk7Yj1KZyhhLGIsYyk7cmV0dXJuIG51bGwhPT1iP2Iuc2libGluZzpudWxsfX1yZXR1cm4gSmcoYSxiLGMpfX1lbHNlIHFnPSExO2IuZXhwaXJhdGlvblRpbWU9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPVxuYi5lbGVtZW50VHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wczt2YXIgZT1KZShiLEguY3VycmVudCk7SWcoYixjKTtlPWhnKG51bGwsYixkLGEsZSxjKTtiLmVmZmVjdFRhZ3w9MTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7bGcoKTtpZihKKGQpKXt2YXIgZj0hMDtPZShiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYma2YoYixkLGcsYSk7ZS51cGRhdGVyPXRmO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbEZpYmVyPWI7eGYoYixkLGEsYyk7Yj1RZyhudWxsLGIsZCwhMCxmLFxuYyl9ZWxzZSBiLnRhZz0wLFMobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTtmPWIucGVuZGluZ1Byb3BzO2E9aGYoZSk7Yi50eXBlPWE7ZT1iLnRhZz1XZShhKTtmPUwoYSxmKTtnPXZvaWQgMDtzd2l0Y2goZSl7Y2FzZSAwOmc9TWcobnVsbCxiLGEsZixjKTticmVhaztjYXNlIDE6Zz1PZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTE6Zz1IZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTQ6Zz1LZyhudWxsLGIsYSxMKGEudHlwZSxmKSxkLGMpO2JyZWFrO2RlZmF1bHQ6eChcIjMwNlwiLGEsXCJcIil9cmV0dXJuIGc7Y2FzZSAwOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksTWcoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsXG5lPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLE9nKGEsYixkLGUsYyk7Y2FzZSAzOlJnKGIpO2Q9Yi51cGRhdGVRdWV1ZTtudWxsPT09ZD94KFwiMjgyXCIpOnZvaWQgMDtlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lmKGIsZCxiLnBlbmRpbmdQcm9wcyxudWxsLGMpO2Q9Yi5tZW1vaXplZFN0YXRlLmVsZW1lbnQ7aWYoZD09PWUpRmcoKSxiPUpnKGEsYixjKTtlbHNle2U9Yi5zdGF0ZU5vZGU7aWYoZT0obnVsbD09PWF8fG51bGw9PT1hLmNoaWxkKSYmZS5oeWRyYXRlKXlnPUVlKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLHhnPWIsZT16Zz0hMDtlPyhiLmVmZmVjdFRhZ3w9MixiLmNoaWxkPUVmKGIsbnVsbCxkLGMpKTooUyhhLGIsZCxjKSxGZygpKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBMZihiKSxudWxsPT09YSYmQ2coYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLFxuZz1lLmNoaWxkcmVuLHhlKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZ4ZShkLGYpJiYoYi5lZmZlY3RUYWd8PTE2KSxOZyhhLGIpLDEhPT1jJiZiLm1vZGUmMSYmZS5oaWRkZW4/KGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPTEsYj1udWxsKTooUyhhLGIsZyxjKSxiPWIuY2hpbGQpLGI7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQ2coYiksbnVsbDtjYXNlIDEzOnJldHVybiBTZyhhLGIsYyk7Y2FzZSA0OnJldHVybiBKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1EZihiLG51bGwsZCxjKTpTKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TChkLGUpLEhnKGEsYixkLGUsYyk7Y2FzZSA3OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMDphOntkPWIudHlwZS5fY29udGV4dDtlPWIucGVuZGluZ1Byb3BzO2c9Yi5tZW1vaXplZFByb3BzO2Y9ZS52YWx1ZTtVZyhiLGYpO2lmKG51bGwhPT1nKXt2YXIgaD1nLnZhbHVlO2Y9YmQoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwO2lmKDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUkuY3VycmVudCl7Yj1KZyhhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgbD1oLmNvbnRleHREZXBlbmRlbmNpZXM7aWYobnVsbCE9PWwpe2c9aC5jaGlsZDtmb3IodmFyIGs9bC5maXJzdDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQmJjAhPT1cbihrLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYoaz1uZihjKSxrLnRhZz1zZixwZihoLGspKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2s9aC5hbHRlcm5hdGU7bnVsbCE9PWsmJmsuZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7az1jO2Zvcih2YXIgbT1oLnJldHVybjtudWxsIT09bTspe3ZhciBwPW0uYWx0ZXJuYXRlO2lmKG0uY2hpbGRFeHBpcmF0aW9uVGltZTxrKW0uY2hpbGRFeHBpcmF0aW9uVGltZT1rLG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8ayYmKHAuY2hpbGRFeHBpcmF0aW9uVGltZT1rKTtlbHNlIGlmKG51bGwhPT1wJiZwLmNoaWxkRXhwaXJhdGlvblRpbWU8aylwLmNoaWxkRXhwaXJhdGlvblRpbWU9aztlbHNlIGJyZWFrO209bS5yZXR1cm59bC5leHBpcmF0aW9uVGltZTxjJiYobC5leHBpcmF0aW9uVGltZT1jKTticmVha31rPWsubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP1xubnVsbDpoLmNoaWxkOmguY2hpbGQ7aWYobnVsbCE9PWcpZy5yZXR1cm49aDtlbHNlIGZvcihnPWg7bnVsbCE9PWc7KXtpZihnPT09Yil7Zz1udWxsO2JyZWFrfWg9Zy5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1nLnJldHVybjtnPWg7YnJlYWt9Zz1nLnJldHVybn1oPWd9fVMoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4sSWcoYixjKSxlPU0oZSxmLnVuc3RhYmxlX29ic2VydmVkQml0cyksZD1kKGUpLGIuZWZmZWN0VGFnfD0xLFMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDE0OnJldHVybiBlPWIudHlwZSxmPUwoZSxiLnBlbmRpbmdQcm9wcyksZj1MKGUudHlwZSxmKSxLZyhhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gTGcoYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09XG5kP2U6TChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEooZCk/KGE9ITAsT2UoYikpOmE9ITEsSWcoYixjKSx2ZihiLGQsZSxjKSx4ZihiLGQsZSxjKSxRZyhudWxsLGIsZCwhMCxhLGMpfXgoXCIxNTZcIil9dmFyIFZnPXtjdXJyZW50Om51bGx9LFdnPW51bGwsWGc9bnVsbCxZZz1udWxsO2Z1bmN0aW9uIFVnKGEsYil7dmFyIGM9YS50eXBlLl9jb250ZXh0O0coVmcsYy5fY3VycmVudFZhbHVlLGEpO2MuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIFpnKGEpe3ZhciBiPVZnLmN1cnJlbnQ7RihWZyxhKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIElnKGEsYil7V2c9YTtZZz1YZz1udWxsO3ZhciBjPWEuY29udGV4dERlcGVuZGVuY2llcztudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZT49YiYmKHFnPSEwKTthLmNvbnRleHREZXBlbmRlbmNpZXM9bnVsbH1cbmZ1bmN0aW9uIE0oYSxiKXtpZihZZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpWWc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07bnVsbD09PVhnPyhudWxsPT09V2c/eChcIjMwOFwiKTp2b2lkIDAsWGc9YixXZy5jb250ZXh0RGVwZW5kZW5jaWVzPXtmaXJzdDpiLGV4cGlyYXRpb25UaW1lOjB9KTpYZz1YZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgJGc9MCxyZj0xLHNmPTIsYWg9MyxQZz0hMTtmdW5jdGlvbiBiaChhKXtyZXR1cm57YmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBjaChhKXtyZXR1cm57YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gbmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEsdGFnOiRnLHBheWxvYWQ6bnVsbCxjYWxsYmFjazpudWxsLG5leHQ6bnVsbCxuZXh0RWZmZWN0Om51bGx9fWZ1bmN0aW9uIGRoKGEsYil7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIHBmKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7aWYobnVsbD09PWMpe3ZhciBkPWEudXBkYXRlUXVldWU7dmFyIGU9bnVsbDtudWxsPT09ZCYmKGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpKX1lbHNlIGQ9YS51cGRhdGVRdWV1ZSxlPWMudXBkYXRlUXVldWUsbnVsbD09PWQ/bnVsbD09PWU/KGQ9YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpLGU9Yy51cGRhdGVRdWV1ZT1iaChjLm1lbW9pemVkU3RhdGUpKTpkPWEudXBkYXRlUXVldWU9Y2goZSk6bnVsbD09PWUmJihlPWMudXBkYXRlUXVldWU9Y2goZCkpO251bGw9PT1lfHxkPT09ZT9kaChkLGIpOm51bGw9PT1kLmxhc3RVcGRhdGV8fG51bGw9PT1lLmxhc3RVcGRhdGU/KGRoKGQsYiksZGgoZSxiKSk6KGRoKGQsYiksZS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gZWgoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlO2M9bnVsbD09PWM/YS51cGRhdGVRdWV1ZT1iaChhLm1lbW9pemVkU3RhdGUpOmZoKGEsYyk7bnVsbD09PWMubGFzdENhcHR1cmVkVXBkYXRlP2MuZmlyc3RDYXB0dXJlZFVwZGF0ZT1jLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihjLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsYy5sYXN0Q2FwdHVyZWRVcGRhdGU9Yil9ZnVuY3Rpb24gZmgoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9Y2goYikpO3JldHVybiBifVxuZnVuY3Rpb24gZ2goYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSByZjpyZXR1cm4gYT1jLnBheWxvYWQsXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2Nhc2UgYWg6YS5lZmZlY3RUYWc9YS5lZmZlY3RUYWcmLTIwNDl8NjQ7Y2FzZSAkZzphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gbih7fSxkLGUpO2Nhc2Ugc2Y6UGc9ITB9cmV0dXJuIGR9XG5mdW5jdGlvbiB5ZihhLGIsYyxkLGUpe1BnPSExO2I9ZmgoYSxiKTtmb3IodmFyIGY9Yi5iYXNlU3RhdGUsZz1udWxsLGg9MCxsPWIuZmlyc3RVcGRhdGUsaz1mO251bGwhPT1sOyl7dmFyIG09bC5leHBpcmF0aW9uVGltZTttPGU/KG51bGw9PT1nJiYoZz1sLGY9ayksaDxtJiYoaD1tKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGwubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bDooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RFZmZlY3Q9bCkpKTtsPWwubmV4dH1tPW51bGw7Zm9yKGw9Yi5maXJzdENhcHR1cmVkVXBkYXRlO251bGwhPT1sOyl7dmFyIHA9bC5leHBpcmF0aW9uVGltZTtwPGU/KG51bGw9PT1tJiYobT1sLG51bGw9PT1nJiYoZj1rKSksaDxwJiYoaD1wKSk6KGs9Z2goYSxiLGwsayxjLGQpLG51bGwhPT1sLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1sOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWwsYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9bCkpKTtsPWwubmV4dH1udWxsPT09ZyYmKGIubGFzdFVwZGF0ZT1udWxsKTtudWxsPT09bT9iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsOmEuZWZmZWN0VGFnfD0zMjtudWxsPT09ZyYmbnVsbD09PW0mJihmPWspO2IuYmFzZVN0YXRlPWY7Yi5maXJzdFVwZGF0ZT1nO2IuZmlyc3RDYXB0dXJlZFVwZGF0ZT1tO2EuZXhwaXJhdGlvblRpbWU9aDthLm1lbW9pemVkU3RhdGU9a31cbmZ1bmN0aW9uIGhoKGEsYixjKXtudWxsIT09Yi5maXJzdENhcHR1cmVkVXBkYXRlJiYobnVsbCE9PWIubGFzdFVwZGF0ZSYmKGIubGFzdFVwZGF0ZS5uZXh0PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSxiLmxhc3RVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGUpLGIuZmlyc3RDYXB0dXJlZFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZT1udWxsKTtpaChiLmZpcnN0RWZmZWN0LGMpO2IuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PW51bGw7aWgoYi5maXJzdENhcHR1cmVkRWZmZWN0LGMpO2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1udWxsfWZ1bmN0aW9uIGloKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuY2FsbGJhY2s7aWYobnVsbCE9PWMpe2EuY2FsbGJhY2s9bnVsbDt2YXIgZD1iO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7Yy5jYWxsKGQpfWE9YS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIGpoKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6amMoYil9fWZ1bmN0aW9uIGtoKGEpe2EuZWZmZWN0VGFnfD00fXZhciBsaD12b2lkIDAsbWg9dm9pZCAwLG5oPXZvaWQgMCxvaD12b2lkIDA7bGg9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O21oPWZ1bmN0aW9uKCl7fTtcbm5oPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtJZihOLmN1cnJlbnQpO2E9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6Zj12YyhnLGYpO2Q9dmMoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpmPSRkKGcsZik7ZD0kZChnLGQpO2E9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmY9bih7fSxmLHt2YWx1ZTp2b2lkIDB9KTtkPW4oe30sZCx7dmFsdWU6dm9pZCAwfSk7YT1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpmPWJlKGcsZik7ZD1iZShnLGQpO2E9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZi5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoZy5vbmNsaWNrPXRlKX1xZShjLGQpO2c9Yz12b2lkIDA7dmFyIGg9bnVsbDtmb3IoYyBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGMpJiZmLmhhc093blByb3BlcnR5KGMpJiZudWxsIT1mW2NdKWlmKFwic3R5bGVcIj09PVxuYyl7dmFyIGw9ZltjXTtmb3IoZyBpbiBsKWwuaGFzT3duUHJvcGVydHkoZykmJihofHwoaD17fSksaFtnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09YyYmXCJjaGlsZHJlblwiIT09YyYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWMmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1jJiZcImF1dG9Gb2N1c1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpP2F8fChhPVtdKTooYT1hfHxbXSkucHVzaChjLG51bGwpKTtmb3IoYyBpbiBkKXt2YXIgaz1kW2NdO2w9bnVsbCE9Zj9mW2NdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGMpJiZrIT09bCYmKG51bGwhPWt8fG51bGwhPWwpKWlmKFwic3R5bGVcIj09PWMpaWYobCl7Zm9yKGcgaW4gbCkhbC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGh8fChoPXt9KSxoW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmbFtnXSE9PWtbZ10mJihofHxcbihoPXt9KSxoW2ddPWtbZ10pfWVsc2UgaHx8KGF8fChhPVtdKSxhLnB1c2goYyxoKSksaD1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1jPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGw9bD9sLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmbCE9PWsmJihhPWF8fFtdKS5wdXNoKGMsXCJcIitrKSk6XCJjaGlsZHJlblwiPT09Yz9sPT09a3x8XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChhPWF8fFtdKS5wdXNoKGMsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJihyYS5oYXNPd25Qcm9wZXJ0eShjKT8obnVsbCE9ayYmc2UoZSxjKSxhfHxsPT09a3x8KGE9W10pKTooYT1hfHxbXSkucHVzaChjLGspKX1oJiYoYT1hfHxbXSkucHVzaChcInN0eWxlXCIsaCk7ZT1hOyhiLnVwZGF0ZVF1ZXVlPWUpJiZraChiKX19O29oPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiZraChiKX07XG52YXIgcGg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7ZnVuY3Rpb24gcWgoYSxiKXt2YXIgYz1iLnNvdXJjZSxkPWIuc3RhY2s7bnVsbD09PWQmJm51bGwhPT1jJiYoZD1qYyhjKSk7bnVsbCE9PWMmJmljKGMudHlwZSk7Yj1iLnZhbHVlO251bGwhPT1hJiYxPT09YS50YWcmJmljKGEudHlwZSk7dHJ5e2NvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZSl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IGU7fSl9fWZ1bmN0aW9uIHJoKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe3NoKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIHRoKGEsYixjKXtjPWMudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG97aWYoKGQudGFnJmEpIT09TmYpe3ZhciBlPWQuZGVzdHJveTtkLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWUmJmUoKX0oZC50YWcmYikhPT1OZiYmKGU9ZC5jcmVhdGUsZC5kZXN0cm95PWUoKSk7ZD1kLm5leHR9d2hpbGUoZCE9PWMpfX1cbmZ1bmN0aW9uIHVoKGEsYil7Zm9yKHZhciBjPWE7Oyl7aWYoNT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihiKWQuc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtlbHNle2Q9Yy5zdGF0ZU5vZGU7dmFyIGU9Yy5tZW1vaXplZFByb3BzLnN0eWxlO2U9dm9pZCAwIT09ZSYmbnVsbCE9PWUmJmUuaGFzT3duUHJvcGVydHkoXCJkaXNwbGF5XCIpP2UuZGlzcGxheTpudWxsO2Quc3R5bGUuZGlzcGxheT1uZShcImRpc3BsYXlcIixlKX19ZWxzZSBpZig2PT09Yy50YWcpYy5zdGF0ZU5vZGUubm9kZVZhbHVlPWI/XCJcIjpjLm1lbW9pemVkUHJvcHM7ZWxzZSBpZigxMz09PWMudGFnJiZudWxsIT09Yy5tZW1vaXplZFN0YXRlKXtkPWMuY2hpbGQuc2libGluZztkLnJldHVybj1jO2M9ZDtjb250aW51ZX1lbHNlIGlmKG51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YSlicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fFxuYy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gdmgoYSl7XCJmdW5jdGlvblwiPT09dHlwZW9mIFJlJiZSZShhKTtzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iJiYoYj1iLmxhc3RFZmZlY3QsbnVsbCE9PWIpKXt2YXIgYz1iPWIubmV4dDtkb3t2YXIgZD1jLmRlc3Ryb3k7aWYodm9pZCAwIT09ZCl7dmFyIGU9YTt0cnl7ZCgpfWNhdGNoKGYpe3NoKGUsZil9fWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX1icmVhaztjYXNlIDE6cmgoYSk7Yj1hLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsVW5tb3VudCl0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGYpe3NoKGEsZil9YnJlYWs7Y2FzZSA1OnJoKGEpO2JyZWFrO2Nhc2UgNDp3aChhKX19XG5mdW5jdGlvbiB4aChhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIHloKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKHhoKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn14KFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6eChcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKGtlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHx4aChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyZcbjIpY29udGludWUgYjtpZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZz1iLGg9ZS5zdGF0ZU5vZGUsOD09PWcubm9kZVR5cGU/KGY9Zy5wYXJlbnROb2RlLGYuaW5zZXJ0QmVmb3JlKGgsZykpOihmPWcsZi5hcHBlbmRDaGlsZChoKSksZz1nLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWcmJnZvaWQgMCE9PWd8fG51bGwhPT1mLm9uY2xpY2t8fChmLm9uY2xpY2s9dGUpKTpiLmFwcGVuZENoaWxkKGUuc3RhdGVOb2RlKTtcbmVsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZS5zaWJsaW5nOyl7aWYobnVsbD09PWUucmV0dXJufHxlLnJldHVybj09PWEpcmV0dXJuO2U9ZS5yZXR1cm59ZS5zaWJsaW5nLnJldHVybj1lLnJldHVybjtlPWUuc2libGluZ319XG5mdW5jdGlvbiB3aChhKXtmb3IodmFyIGI9YSxjPSExLGQ9dm9pZCAwLGU9dm9pZCAwOzspe2lmKCFjKXtjPWIucmV0dXJuO2E6Zm9yKDs7KXtudWxsPT09Yz94KFwiMTYwXCIpOnZvaWQgMDtzd2l0Y2goYy50YWcpe2Nhc2UgNTpkPWMuc3RhdGVOb2RlO2U9ITE7YnJlYWsgYTtjYXNlIDM6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYTtjYXNlIDQ6ZD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7YnJlYWsgYX1jPWMucmV0dXJufWM9ITB9aWYoNT09PWIudGFnfHw2PT09Yi50YWcpe2E6Zm9yKHZhciBmPWIsZz1mOzspaWYodmgoZyksbnVsbCE9PWcuY2hpbGQmJjQhPT1nLnRhZylnLmNoaWxkLnJldHVybj1nLGc9Zy5jaGlsZDtlbHNle2lmKGc9PT1mKWJyZWFrO2Zvcig7bnVsbD09PWcuc2libGluZzspe2lmKG51bGw9PT1nLnJldHVybnx8Zy5yZXR1cm49PT1mKWJyZWFrIGE7Zz1nLnJldHVybn1nLnNpYmxpbmcucmV0dXJuPWcucmV0dXJuO2c9Zy5zaWJsaW5nfWU/XG4oZj1kLGc9Yi5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGcpOmYucmVtb3ZlQ2hpbGQoZykpOmQucmVtb3ZlQ2hpbGQoYi5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWIudGFnKXtpZihudWxsIT09Yi5jaGlsZCl7ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2U9ITA7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYodmgoYiksbnVsbCE9PWIuY2hpbGQpe2IuY2hpbGQucmV0dXJuPWI7Yj1iLmNoaWxkO2NvbnRpbnVlfWlmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybjtiPWIucmV0dXJuOzQ9PT1iLnRhZyYmKGM9ITEpfWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fVxuZnVuY3Rpb24gemgoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTp0aChQZixRZixiKTticmVhaztjYXNlIDE6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiZDZShjLGYsZSxhLGQsYil9YnJlYWs7Y2FzZSA2Om51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTYyXCIpOnZvaWQgMDtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO2JyZWFrO2Nhc2UgMzpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6Yz1iLm1lbW9pemVkU3RhdGU7ZD12b2lkIDA7YT1iO251bGw9PT1jP2Q9ITE6KGQ9ITAsYT1iLmNoaWxkLDA9PT1jLnRpbWVkT3V0QXQmJihjLnRpbWVkT3V0QXQ9bGYoKSkpO251bGwhPT1hJiZ1aChhLGQpO2M9XG5iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1jKXtiLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGc9Yi5zdGF0ZU5vZGU7bnVsbD09PWcmJihnPWIuc3RhdGVOb2RlPW5ldyBwaCk7Yy5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBjPUFoLmJpbmQobnVsbCxiLGEpO2cuaGFzKGEpfHwoZy5hZGQoYSksYS50aGVuKGMsYykpfSl9YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fXZhciBCaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcDtmdW5jdGlvbiBDaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDtjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7RGgoZCk7cWgoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBFaChhLGIsYyl7Yz1uZihjKTtjLnRhZz1haDt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09Rmg/Rmg9bmV3IFNldChbdGhpc10pOkZoLmFkZCh0aGlzKSk7dmFyIGM9Yi52YWx1ZSxlPWIuc3RhY2s7cWgoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1lP2U6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBHaChhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpKKGEudHlwZSkmJktlKGEpO3ZhciBiPWEuZWZmZWN0VGFnO3JldHVybiBiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDM6cmV0dXJuIEtmKGEpLExlKGEpLGI9YS5lZmZlY3RUYWcsMCE9PShiJjY0KT94KFwiMjg1XCIpOnZvaWQgMCxhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGE7Y2FzZSA1OnJldHVybiBNZihhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIGI9YS5lZmZlY3RUYWcsYiYyMDQ4PyhhLmVmZmVjdFRhZz1iJi0yMDQ5fDY0LGEpOm51bGw7Y2FzZSAxODpyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIEtmKGEpLG51bGw7Y2FzZSAxMDpyZXR1cm4gWmcoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBIaD1UYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLEloPVRiLlJlYWN0Q3VycmVudE93bmVyLEpoPTEwNzM3NDE4MjIsS2g9ITEsVD1udWxsLExoPW51bGwsVT0wLE1oPS0xLE5oPSExLFY9bnVsbCxPaD0hMSxQaD1udWxsLFFoPW51bGwsUmg9bnVsbCxGaD1udWxsO2Z1bmN0aW9uIFNoKCl7aWYobnVsbCE9PVQpZm9yKHZhciBhPVQucmV0dXJuO251bGwhPT1hOyl7dmFyIGI9YTtzd2l0Y2goYi50YWcpe2Nhc2UgMTp2YXIgYz1iLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTticmVhaztjYXNlIDU6TWYoYik7YnJlYWs7Y2FzZSA0OktmKGIpO2JyZWFrO2Nhc2UgMTA6WmcoYil9YT1hLnJldHVybn1MaD1udWxsO1U9MDtNaD0tMTtOaD0hMTtUPW51bGx9XG5mdW5jdGlvbiBUaCgpe2Zvcig7bnVsbCE9PVY7KXt2YXIgYT1WLmVmZmVjdFRhZzthJjE2JiZrZShWLnN0YXRlTm9kZSxcIlwiKTtpZihhJjEyOCl7dmFyIGI9Vi5hbHRlcm5hdGU7bnVsbCE9PWImJihiPWIucmVmLG51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihudWxsKTpiLmN1cnJlbnQ9bnVsbCkpfXN3aXRjaChhJjE0KXtjYXNlIDI6eWgoVik7Vi5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA0OnpoKFYuYWx0ZXJuYXRlLFYpO2JyZWFrO2Nhc2UgODphPVYsd2goYSksYS5yZXR1cm49bnVsbCxhLmNoaWxkPW51bGwsYS5tZW1vaXplZFN0YXRlPW51bGwsYS51cGRhdGVRdWV1ZT1udWxsLGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwpfVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFVoKCl7Zm9yKDtudWxsIT09Vjspe2lmKFYuZWZmZWN0VGFnJjI1NilhOnt2YXIgYT1WLmFsdGVybmF0ZSxiPVY7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKE9mLE5mLGIpO2JyZWFrIGE7Y2FzZSAxOmlmKGIuZWZmZWN0VGFnJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6TChiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifWJyZWFrIGE7Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6YnJlYWsgYTtkZWZhdWx0OngoXCIxNjNcIil9fVY9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFZoKGEsYil7Zm9yKDtudWxsIT09Vjspe3ZhciBjPVYuZWZmZWN0VGFnO2lmKGMmMzYpe3ZhciBkPVYuYWx0ZXJuYXRlLGU9VixmPWI7c3dpdGNoKGUudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OnRoKFJmLFNmLGUpO2JyZWFrO2Nhc2UgMTp2YXIgZz1lLnN0YXRlTm9kZTtpZihlLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1kKWcuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBoPWUuZWxlbWVudFR5cGU9PT1lLnR5cGU/ZC5tZW1vaXplZFByb3BzOkwoZS50eXBlLGQubWVtb2l6ZWRQcm9wcyk7Zy5jb21wb25lbnREaWRVcGRhdGUoaCxkLm1lbW9pemVkU3RhdGUsZy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9ZD1lLnVwZGF0ZVF1ZXVlO251bGwhPT1kJiZoaChlLGQsZyxmKTticmVhaztjYXNlIDM6ZD1lLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1kKXtnPW51bGw7aWYobnVsbCE9PWUuY2hpbGQpc3dpdGNoKGUuY2hpbGQudGFnKXtjYXNlIDU6Zz1cbmUuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpnPWUuY2hpbGQuc3RhdGVOb2RlfWhoKGUsZCxnLGYpfWJyZWFrO2Nhc2UgNTpmPWUuc3RhdGVOb2RlO251bGw9PT1kJiZlLmVmZmVjdFRhZyY0JiZ3ZShlLnR5cGUsZS5tZW1vaXplZFByb3BzKSYmZi5mb2N1cygpO2JyZWFrO2Nhc2UgNjpicmVhaztjYXNlIDQ6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDEzOmJyZWFrO2Nhc2UgMTc6YnJlYWs7ZGVmYXVsdDp4KFwiMTYzXCIpfX1jJjEyOCYmKGU9Vi5yZWYsbnVsbCE9PWUmJihmPVYuc3RhdGVOb2RlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlP2UoZik6ZS5jdXJyZW50PWYpKTtjJjUxMiYmKFBoPWEpO1Y9Vi5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIFdoKGEsYil7Umg9UWg9UGg9bnVsbDt2YXIgYz1XO1c9ITA7ZG97aWYoYi5lZmZlY3RUYWcmNTEyKXt2YXIgZD0hMSxlPXZvaWQgMDt0cnl7dmFyIGY9Yjt0aChVZixOZixmKTt0aChOZixUZixmKX1jYXRjaChnKXtkPSEwLGU9Z31kJiZzaChiLGUpfWI9Yi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1iKTtXPWM7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpO1h8fFd8fFloKDEwNzM3NDE4MjMsITEpfWZ1bmN0aW9uIG9mKCl7bnVsbCE9PVFoJiZCZShRaCk7bnVsbCE9PVJoJiZSaCgpfVxuZnVuY3Rpb24gWmgoYSxiKXtPaD1LaD0hMDthLmN1cnJlbnQ9PT1iP3goXCIxNzdcIik6dm9pZCAwO3ZhciBjPWEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lOzA9PT1jP3goXCIyNjFcIik6dm9pZCAwO2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZSxlPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtlZihhLGU+ZD9lOmQpO0loLmN1cnJlbnQ9bnVsbDtkPXZvaWQgMDsxPGIuZWZmZWN0VGFnP251bGwhPT1iLmxhc3RFZmZlY3Q/KGIubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIsZD1iLmZpcnN0RWZmZWN0KTpkPWI6ZD1iLmZpcnN0RWZmZWN0O3VlPUJkO3ZlPVBkKCk7QmQ9ITE7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7dmFyIGY9dm9pZCAwO3RyeXtVaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1mb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtcbmY9dm9pZCAwO3RyeXtUaCgpfWNhdGNoKGgpe2U9ITAsZj1ofWUmJihudWxsPT09Vj94KFwiMTc4XCIpOnZvaWQgMCxzaChWLGYpLG51bGwhPT1WJiYoVj1WLm5leHRFZmZlY3QpKX1RZCh2ZSk7dmU9bnVsbDtCZD0hIXVlO3VlPW51bGw7YS5jdXJyZW50PWI7Zm9yKFY9ZDtudWxsIT09Vjspe2U9ITE7Zj12b2lkIDA7dHJ5e1ZoKGEsYyl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWlmKG51bGwhPT1kJiZudWxsIT09UGgpe3ZhciBnPVdoLmJpbmQobnVsbCxhLGQpO1FoPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gQWUoZyl9KTtSaD1nfUtoPU9oPSExO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBRZSYmUWUoYi5zdGF0ZU5vZGUpO2M9Yi5leHBpcmF0aW9uVGltZTtiPWIuY2hpbGRFeHBpcmF0aW9uVGltZTtiPVxuYj5jP2I6YzswPT09YiYmKEZoPW51bGwpOyRoKGEsYil9XG5mdW5jdGlvbiBhaShhKXtmb3IoOzspe3ZhciBiPWEuYWx0ZXJuYXRlLGM9YS5yZXR1cm4sZD1hLnNpYmxpbmc7aWYoMD09PShhLmVmZmVjdFRhZyYxMDI0KSl7VD1hO2E6e3ZhciBlPWI7Yj1hO3ZhciBmPVU7dmFyIGc9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSAxNjpicmVhaztjYXNlIDE1OmNhc2UgMDpicmVhaztjYXNlIDE6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDM6S2YoYik7TGUoYik7Zz1iLnN0YXRlTm9kZTtnLnBlbmRpbmdDb250ZXh0JiYoZy5jb250ZXh0PWcucGVuZGluZ0NvbnRleHQsZy5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09ZXx8bnVsbD09PWUuY2hpbGQpRWcoYiksYi5lZmZlY3RUYWcmPS0zO21oKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTt2YXIgaD1JZihIZi5jdXJyZW50KTtmPWIudHlwZTtpZihudWxsIT09ZSYmbnVsbCE9Yi5zdGF0ZU5vZGUpbmgoZSxiLGYsZyxoKSxlLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PVxuMTI4KTtlbHNlIGlmKGcpe3ZhciBsPUlmKE4uY3VycmVudCk7aWYoRWcoYikpe2c9YjtlPWcuc3RhdGVOb2RlO3ZhciBrPWcudHlwZSxtPWcubWVtb2l6ZWRQcm9wcyxwPWg7ZVtGYV09ZztlW0dhXT1tO2Y9dm9pZCAwO2g9aztzd2l0Y2goaCl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLGUpO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihrPTA7azxhYi5sZW5ndGg7aysrKUUoYWJba10sZSk7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkUoXCJlcnJvclwiLGUpO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLGUpO0UoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixlKTtFKFwic3VibWl0XCIsZSk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpFKFwidG9nZ2xlXCIsZSk7YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MoZSxtKTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZS5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07RShcImludmFsaWRcIixlKTtzZShwLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Y2UoZSxtKSxFKFwiaW52YWxpZFwiLGUpLHNlKHAsXCJvbkNoYW5nZVwiKX1xZShoLG0pO2s9bnVsbDtmb3IoZiBpbiBtKW0uaGFzT3duUHJvcGVydHkoZikmJihsPW1bZl0sXCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGw/ZS50ZXh0Q29udGVudCE9PWwmJihrPVtcImNoaWxkcmVuXCIsbF0pOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmZS50ZXh0Q29udGVudCE9PVwiXCIrbCYmKGs9W1wiY2hpbGRyZW5cIixcIlwiK2xdKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9bCYmc2UocCxmKSk7c3dpdGNoKGgpe2Nhc2UgXCJpbnB1dFwiOlJiKGUpO0FjKGUsbSwhMCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIoZSk7ZWUoZSxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIG0ub25DbGljayYmXG4oZS5vbmNsaWNrPXRlKX1mPWs7Zy51cGRhdGVRdWV1ZT1mO2c9bnVsbCE9PWY/ITA6ITE7ZyYma2goYil9ZWxzZXttPWI7cD1mO2U9ZztrPTk9PT1oLm5vZGVUeXBlP2g6aC5vd25lckRvY3VtZW50O2w9PT1mZS5odG1sJiYobD1nZShwKSk7bD09PWZlLmh0bWw/XCJzY3JpcHRcIj09PXA/KGU9ay5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGUuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsaz1lLnJlbW92ZUNoaWxkKGUuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZS5pcz9rPWsuY3JlYXRlRWxlbWVudChwLHtpczplLmlzfSk6KGs9ay5jcmVhdGVFbGVtZW50KHApLFwic2VsZWN0XCI9PT1wJiYocD1rLGUubXVsdGlwbGU/cC5tdWx0aXBsZT0hMDplLnNpemUmJihwLnNpemU9ZS5zaXplKSkpOms9ay5jcmVhdGVFbGVtZW50TlMobCxwKTtlPWs7ZVtGYV09bTtlW0dhXT1nO2xoKGUsYiwhMSwhMSk7cD1lO2s9ZjttPWc7dmFyIHQ9aCxBPXJlKGssbSk7c3dpdGNoKGspe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6RShcImxvYWRcIixcbnApO2g9bTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoaD0wO2g8YWIubGVuZ3RoO2grKylFKGFiW2hdLHApO2g9bTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkUoXCJlcnJvclwiLHApO0UoXCJsb2FkXCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJmb3JtXCI6RShcInJlc2V0XCIscCk7RShcInN1Ym1pdFwiLHApO2g9bTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixwKTtoPW07YnJlYWs7Y2FzZSBcImlucHV0XCI6d2MocCxtKTtoPXZjKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmg9JGQocCxtKTticmVhaztjYXNlIFwic2VsZWN0XCI6cC5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIW0ubXVsdGlwbGV9O2g9bih7fSxtLHt2YWx1ZTp2b2lkIDB9KTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShwLFxubSk7aD1iZShwLG0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2RlZmF1bHQ6aD1tfXFlKGssaCk7bD12b2lkIDA7dmFyIHY9ayxSPXAsdT1oO2ZvcihsIGluIHUpaWYodS5oYXNPd25Qcm9wZXJ0eShsKSl7dmFyIHE9dVtsXTtcInN0eWxlXCI9PT1sP29lKFIscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8ocT1xP3EuX19odG1sOnZvaWQgMCxudWxsIT1xJiZqZShSLHEpKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCI9PT10eXBlb2YgcT8oXCJ0ZXh0YXJlYVwiIT09dnx8XCJcIiE9PXEpJiZrZShSLHEpOlwibnVtYmVyXCI9PT10eXBlb2YgcSYma2UoUixcIlwiK3EpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihyYS5oYXNPd25Qcm9wZXJ0eShsKT9udWxsIT1xJiZzZSh0LGwpOm51bGwhPXEmJnRjKFIsbCxxLEEpKX1zd2l0Y2goayl7Y2FzZSBcImlucHV0XCI6UmIocCk7XG5BYyhwLG0sITEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlJiKHApO2VlKHAsbSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPW0udmFsdWUmJnAuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK3VjKG0udmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6aD1wO2gubXVsdGlwbGU9ISFtLm11bHRpcGxlO3A9bS52YWx1ZTtudWxsIT1wP2FlKGgsISFtLm11bHRpcGxlLHAsITEpOm51bGwhPW0uZGVmYXVsdFZhbHVlJiZhZShoLCEhbS5tdWx0aXBsZSxtLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYocC5vbmNsaWNrPXRlKX0oZz13ZShmLGcpKSYma2goYik7Yi5zdGF0ZU5vZGU9ZX1udWxsIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9MTI4KX1lbHNlIG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMDticmVhaztjYXNlIDY6ZSYmbnVsbCE9Yi5zdGF0ZU5vZGU/b2goZSxiLGUubWVtb2l6ZWRQcm9wcyxnKTooXCJzdHJpbmdcIiE9PVxudHlwZW9mIGcmJihudWxsPT09Yi5zdGF0ZU5vZGU/eChcIjE2NlwiKTp2b2lkIDApLGU9SWYoSGYuY3VycmVudCksSWYoTi5jdXJyZW50KSxFZyhiKT8oZz1iLGY9Zy5zdGF0ZU5vZGUsZT1nLm1lbW9pemVkUHJvcHMsZltGYV09ZywoZz1mLm5vZGVWYWx1ZSE9PWUpJiZraChiKSk6KGY9YixnPSg5PT09ZS5ub2RlVHlwZT9lOmUub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZyksZ1tGYV09YixmLnN0YXRlTm9kZT1nKSk7YnJlYWs7Y2FzZSAxMTpicmVhaztjYXNlIDEzOmc9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXtiLmV4cGlyYXRpb25UaW1lPWY7VD1iO2JyZWFrIGF9Zz1udWxsIT09ZztmPW51bGwhPT1lJiZudWxsIT09ZS5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYhZyYmZiYmKGU9ZS5jaGlsZC5zaWJsaW5nLG51bGwhPT1lJiYoaD1iLmZpcnN0RWZmZWN0LG51bGwhPT1oPyhiLmZpcnN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PWgpOihiLmZpcnN0RWZmZWN0PVxuYi5sYXN0RWZmZWN0PWUsZS5uZXh0RWZmZWN0PW51bGwpLGUuZWZmZWN0VGFnPTgpKTtpZihnfHxmKWIuZWZmZWN0VGFnfD00O2JyZWFrO2Nhc2UgNzpicmVhaztjYXNlIDg6YnJlYWs7Y2FzZSAxMjpicmVhaztjYXNlIDQ6S2YoYik7bWgoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKTticmVhaztjYXNlIDk6YnJlYWs7Y2FzZSAxNDpicmVhaztjYXNlIDE3OkooYi50eXBlKSYmS2UoYik7YnJlYWs7Y2FzZSAxODpicmVhaztkZWZhdWx0OngoXCIxNTZcIil9VD1udWxsfWI9YTtpZigxPT09VXx8MSE9PWIuY2hpbGRFeHBpcmF0aW9uVGltZSl7Zz0wO2ZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KWU9Zi5leHBpcmF0aW9uVGltZSxoPWYuY2hpbGRFeHBpcmF0aW9uVGltZSxlPmcmJihnPWUpLGg+ZyYmKGc9aCksZj1mLnNpYmxpbmc7Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWd9aWYobnVsbCE9PVQpcmV0dXJuIFQ7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmMTAyNCkmJihudWxsPT09Yy5maXJzdEVmZmVjdCYmXG4oYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiYobnVsbCE9PWMubGFzdEVmZmVjdCYmKGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLGMubGFzdEVmZmVjdD1hLmxhc3RFZmZlY3QpLDE8YS5lZmZlY3RUYWcmJihudWxsIT09Yy5sYXN0RWZmZWN0P2MubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWE6Yy5maXJzdEVmZmVjdD1hLGMubGFzdEVmZmVjdD1hKSl9ZWxzZXthPUdoKGEsVSk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj0xMDIzLGE7bnVsbCE9PWMmJihjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsLGMuZWZmZWN0VGFnfD0xMDI0KX1pZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZSBicmVha31yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGJpKGEpe3ZhciBiPVRnKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1haShhKSk7SWguY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gY2koYSxiKXtLaD94KFwiMjQzXCIpOnZvaWQgMDtvZigpO0toPSEwO3ZhciBjPUhoLmN1cnJlbnQ7SGguY3VycmVudD1rZzt2YXIgZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uO2lmKGQhPT1VfHxhIT09TGh8fG51bGw9PT1UKVNoKCksTGg9YSxVPWQsVD1YZShMaC5jdXJyZW50LG51bGwsVSksYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZT0hMTtkb3t0cnl7aWYoYilmb3IoO251bGwhPT1UJiYhZGkoKTspVD1iaShUKTtlbHNlIGZvcig7bnVsbCE9PVQ7KVQ9YmkoVCl9Y2F0Y2godSl7aWYoWWc9WGc9V2c9bnVsbCxsZygpLG51bGw9PT1UKWU9ITAsRGgodSk7ZWxzZXtudWxsPT09VD94KFwiMjcxXCIpOnZvaWQgMDt2YXIgZj1ULGc9Zi5yZXR1cm47aWYobnVsbD09PWcpZT0hMCxEaCh1KTtlbHNle2E6e3ZhciBoPWEsbD1nLGs9ZixtPXU7Zz1VO2suZWZmZWN0VGFnfD0xMDI0O2suZmlyc3RFZmZlY3Q9ay5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PVxubSYmXCJvYmplY3RcIj09PXR5cGVvZiBtJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS50aGVuKXt2YXIgcD1tO209bDt2YXIgdD0tMSxBPS0xO2Rve2lmKDEzPT09bS50YWcpe3ZhciB2PW0uYWx0ZXJuYXRlO2lmKG51bGwhPT12JiYodj12Lm1lbW9pemVkU3RhdGUsbnVsbCE9PXYpKXtBPTEwKigxMDczNzQxODIyLXYudGltZWRPdXRBdCk7YnJlYWt9dj1tLnBlbmRpbmdQcm9wcy5tYXhEdXJhdGlvbjtpZihcIm51bWJlclwiPT09dHlwZW9mIHYpaWYoMD49dil0PTA7ZWxzZSBpZigtMT09PXR8fHY8dCl0PXZ9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1sO2Rve2lmKHY9MTM9PT1tLnRhZyl2PXZvaWQgMD09PW0ubWVtb2l6ZWRQcm9wcy5mYWxsYmFjaz8hMTpudWxsPT09bS5tZW1vaXplZFN0YXRlO2lmKHYpe2w9bS51cGRhdGVRdWV1ZTtudWxsPT09bD8obD1uZXcgU2V0LGwuYWRkKHApLG0udXBkYXRlUXVldWU9bCk6bC5hZGQocCk7aWYoMD09PShtLm1vZGUmMSkpe20uZWZmZWN0VGFnfD1cbjY0O2suZWZmZWN0VGFnJj0tMTk1NzsxPT09ay50YWcmJihudWxsPT09ay5hbHRlcm5hdGU/ay50YWc9MTc6KGc9bmYoMTA3Mzc0MTgyMyksZy50YWc9c2YscGYoayxnKSkpO2suZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMzticmVhayBhfWs9aDtsPWc7dmFyIFI9ay5waW5nQ2FjaGU7bnVsbD09PVI/KFI9ay5waW5nQ2FjaGU9bmV3IEJoLHY9bmV3IFNldCxSLnNldChwLHYpKToodj1SLmdldChwKSx2b2lkIDA9PT12JiYodj1uZXcgU2V0LFIuc2V0KHAsdikpKTt2LmhhcyhsKXx8KHYuYWRkKGwpLGs9ZWkuYmluZChudWxsLGsscCxsKSxwLnRoZW4oayxrKSk7LTE9PT10P2g9MTA3Mzc0MTgyMzooLTE9PT1BJiYoQT0xMCooMTA3Mzc0MTgyMi1nZihoLGcpKS01RTMpLGg9QSt0KTswPD1oJiZNaDxoJiYoTWg9aCk7bS5lZmZlY3RUYWd8PTIwNDg7bS5leHBpcmF0aW9uVGltZT1nO2JyZWFrIGF9bT1tLnJldHVybn13aGlsZShudWxsIT09bSk7bT1FcnJvcigoaWMoay50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcblwiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIramMoaykpfU5oPSEwO209amgobSxrKTtoPWw7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aC5lZmZlY3RUYWd8PTIwNDg7aC5leHBpcmF0aW9uVGltZT1nO2c9Q2goaCxtLGcpO2VoKGgsZyk7YnJlYWsgYTtjYXNlIDE6aWYodD1tLEE9aC50eXBlLGs9aC5zdGF0ZU5vZGUsMD09PShoLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1rJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhrKSkpKXtoLmVmZmVjdFRhZ3w9MjA0ODtcbmguZXhwaXJhdGlvblRpbWU9ZztnPUVoKGgsdCxnKTtlaChoLGcpO2JyZWFrIGF9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpfVQ9YWkoZik7Y29udGludWV9fX1icmVha313aGlsZSgxKTtLaD0hMTtIaC5jdXJyZW50PWM7WWc9WGc9V2c9bnVsbDtsZygpO2lmKGUpTGg9bnVsbCxhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2UgaWYobnVsbCE9PVQpYS5maW5pc2hlZFdvcms9bnVsbDtlbHNle2M9YS5jdXJyZW50LmFsdGVybmF0ZTtudWxsPT09Yz94KFwiMjgxXCIpOnZvaWQgMDtMaD1udWxsO2lmKE5oKXtlPWEubGF0ZXN0UGVuZGluZ1RpbWU7Zj1hLmxhdGVzdFN1c3BlbmRlZFRpbWU7Zz1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMCE9PWUmJmU8ZHx8MCE9PWYmJmY8ZHx8MCE9PWcmJmc8ZCl7ZmYoYSxkKTtmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLC0xKTtyZXR1cm59aWYoIWEuZGlkRXJyb3ImJmIpe2EuZGlkRXJyb3I9ITA7ZD1hLm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uPWQ7XG5iPWEuZXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMztmaShhLGMsZCxiLC0xKTtyZXR1cm59fWImJi0xIT09TWg/KGZmKGEsZCksYj0xMCooMTA3Mzc0MTgyMi1nZihhLGQpKSxiPE1oJiYoTWg9YiksYj0xMCooMTA3Mzc0MTgyMi1sZigpKSxiPU1oLWIsZmkoYSxjLGQsYS5leHBpcmF0aW9uVGltZSwwPmI/MDpiKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWQsYS5maW5pc2hlZFdvcms9Yyl9fVxuZnVuY3Rpb24gc2goYSxiKXtmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtzd2l0Y2goYy50YWcpe2Nhc2UgMTp2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09Rmh8fCFGaC5oYXMoZCkpKXthPWpoKGIsYSk7YT1FaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1icmVhaztjYXNlIDM6YT1qaChiLGEpO2E9Q2goYyxhLDEwNzM3NDE4MjMpO3BmKGMsYSk7cWYoYywxMDczNzQxODIzKTtyZXR1cm59Yz1jLnJldHVybn0zPT09YS50YWcmJihjPWpoKGIsYSksYz1DaChhLGMsMTA3Mzc0MTgyMykscGYoYSxjKSxxZihhLDEwNzM3NDE4MjMpKX1cbmZ1bmN0aW9uIG1mKGEsYil7dmFyIGM9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCgpLGQ9dm9pZCAwO2lmKDA9PT0oYi5tb2RlJjEpKWQ9MTA3Mzc0MTgyMztlbHNlIGlmKEtoJiYhT2gpZD1VO2Vsc2V7c3dpdGNoKGMpe2Nhc2Ugci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eTpkPTEwNzM3NDE4MjM7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0xMCooKCgxMDczNzQxODIyLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2Ugci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eTpkPTEwNzM3NDE4MjItMjUqKCgoMTA3Mzc0MTgyMi1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX0xvd1ByaW9yaXR5OmNhc2Ugci51bnN0YWJsZV9JZGxlUHJpb3JpdHk6ZD0xO2JyZWFrO2RlZmF1bHQ6eChcIjMxM1wiKX1udWxsIT09TGgmJmQ9PT1VJiYtLWR9Yz09PXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkmJlxuKDA9PT1naXx8ZDxnaSkmJihnaT1kKTtyZXR1cm4gZH1mdW5jdGlvbiBlaShhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO2lmKG51bGwhPT1MaCYmVT09PWMpTGg9bnVsbDtlbHNlIGlmKGI9YS5lYXJsaWVzdFN1c3BlbmRlZFRpbWUsZD1hLmxhdGVzdFN1c3BlbmRlZFRpbWUsMCE9PWImJmM8PWImJmM+PWQpe2EuZGlkRXJyb3I9ITE7Yj1hLmxhdGVzdFBpbmdlZFRpbWU7aWYoMD09PWJ8fGI+YylhLmxhdGVzdFBpbmdlZFRpbWU9YztkZihjLGEpO2M9YS5leHBpcmF0aW9uVGltZTswIT09YyYmWGgoYSxjKX19ZnVuY3Rpb24gQWgoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj1sZigpO2I9bWYoYixhKTthPWhpKGEsYik7bnVsbCE9PWEmJihjZihhLGIpLGI9YS5leHBpcmF0aW9uVGltZSwwIT09YiYmWGgoYSxiKSl9XG5mdW5jdGlvbiBoaShhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufXJldHVybiBlfVxuZnVuY3Rpb24gcWYoYSxiKXthPWhpKGEsYik7bnVsbCE9PWEmJighS2gmJjAhPT1VJiZiPlUmJlNoKCksY2YoYSxiKSxLaCYmIU9oJiZMaD09PWF8fFhoKGEsYS5leHBpcmF0aW9uVGltZSksaWk+amkmJihpaT0wLHgoXCIxODVcIikpKX1mdW5jdGlvbiBraShhLGIsYyxkLGUpe3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX12YXIgbGk9bnVsbCxZPW51bGwsbWk9MCxuaT12b2lkIDAsVz0hMSxvaT1udWxsLFo9MCxnaT0wLHBpPSExLHFpPW51bGwsWD0hMSxyaT0hMSxzaT1udWxsLHRpPXIudW5zdGFibGVfbm93KCksdWk9MTA3Mzc0MTgyMi0odGkvMTB8MCksdmk9dWksamk9NTAsaWk9MCx3aT1udWxsO2Z1bmN0aW9uIHhpKCl7dWk9MTA3Mzc0MTgyMi0oKHIudW5zdGFibGVfbm93KCktdGkpLzEwfDApfVxuZnVuY3Rpb24geWkoYSxiKXtpZigwIT09bWkpe2lmKGI8bWkpcmV0dXJuO251bGwhPT1uaSYmci51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayhuaSl9bWk9YjthPXIudW5zdGFibGVfbm93KCktdGk7bmk9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHppLHt0aW1lb3V0OjEwKigxMDczNzQxODIyLWIpLWF9KX1mdW5jdGlvbiBmaShhLGIsYyxkLGUpe2EuZXhwaXJhdGlvblRpbWU9ZDswIT09ZXx8ZGkoKT8wPGUmJihhLnRpbWVvdXRIYW5kbGU9eWUoQWkuYmluZChudWxsLGEsYixjKSxlKSk6KGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWMsYS5maW5pc2hlZFdvcms9Yil9ZnVuY3Rpb24gQWkoYSxiLGMpe2EucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWM7YS5maW5pc2hlZFdvcms9Yjt4aSgpO3ZpPXVpO0JpKGEsYyl9ZnVuY3Rpb24gJGgoYSxiKXthLmV4cGlyYXRpb25UaW1lPWI7YS5maW5pc2hlZFdvcms9bnVsbH1cbmZ1bmN0aW9uIGxmKCl7aWYoVylyZXR1cm4gdmk7Q2koKTtpZigwPT09Wnx8MT09PVopeGkoKSx2aT11aTtyZXR1cm4gdml9ZnVuY3Rpb24gWGgoYSxiKXtudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdD8oYS5leHBpcmF0aW9uVGltZT1iLG51bGw9PT1ZPyhsaT1ZPWEsYS5uZXh0U2NoZWR1bGVkUm9vdD1hKTooWT1ZLm5leHRTY2hlZHVsZWRSb290PWEsWS5uZXh0U2NoZWR1bGVkUm9vdD1saSkpOmI+YS5leHBpcmF0aW9uVGltZSYmKGEuZXhwaXJhdGlvblRpbWU9Yik7V3x8KFg/cmkmJihvaT1hLFo9MTA3Mzc0MTgyMyxEaShhLDEwNzM3NDE4MjMsITEpKToxMDczNzQxODIzPT09Yj9ZaCgxMDczNzQxODIzLCExKTp5aShhLGIpKX1cbmZ1bmN0aW9uIENpKCl7dmFyIGE9MCxiPW51bGw7aWYobnVsbCE9PVkpZm9yKHZhciBjPVksZD1saTtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWU7aWYoMD09PWUpe251bGw9PT1jfHxudWxsPT09WT94KFwiMjQ0XCIpOnZvaWQgMDtpZihkPT09ZC5uZXh0U2NoZWR1bGVkUm9vdCl7bGk9WT1kLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBpZihkPT09bGkpbGk9ZT1kLm5leHRTY2hlZHVsZWRSb290LFkubmV4dFNjaGVkdWxlZFJvb3Q9ZSxkLm5leHRTY2hlZHVsZWRSb290PW51bGw7ZWxzZSBpZihkPT09WSl7WT1jO1kubmV4dFNjaGVkdWxlZFJvb3Q9bGk7ZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2JyZWFrfWVsc2UgYy5uZXh0U2NoZWR1bGVkUm9vdD1kLm5leHRTY2hlZHVsZWRSb290LGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtkPWMubmV4dFNjaGVkdWxlZFJvb3R9ZWxzZXtlPmEmJihhPWUsYj1kKTtpZihkPT09WSlicmVhaztpZigxMDczNzQxODIzPT09XG5hKWJyZWFrO2M9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fW9pPWI7Wj1hfXZhciBFaT0hMTtmdW5jdGlvbiBkaSgpe3JldHVybiBFaT8hMDpyLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCk/RWk9ITA6ITF9ZnVuY3Rpb24gemkoKXt0cnl7aWYoIWRpKCkmJm51bGwhPT1saSl7eGkoKTt2YXIgYT1saTtkb3t2YXIgYj1hLmV4cGlyYXRpb25UaW1lOzAhPT1iJiZ1aTw9YiYmKGEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249dWkpO2E9YS5uZXh0U2NoZWR1bGVkUm9vdH13aGlsZShhIT09bGkpfVloKDAsITApfWZpbmFsbHl7RWk9ITF9fVxuZnVuY3Rpb24gWWgoYSxiKXtDaSgpO2lmKGIpZm9yKHhpKCksdmk9dWk7bnVsbCE9PW9pJiYwIT09WiYmYTw9WiYmIShFaSYmdWk+Wik7KURpKG9pLFosdWk+WiksQ2koKSx4aSgpLHZpPXVpO2Vsc2UgZm9yKDtudWxsIT09b2kmJjAhPT1aJiZhPD1aOylEaShvaSxaLCExKSxDaSgpO2ImJihtaT0wLG5pPW51bGwpOzAhPT1aJiZ5aShvaSxaKTtpaT0wO3dpPW51bGw7aWYobnVsbCE9PXNpKWZvcihhPXNpLHNpPW51bGwsYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO3RyeXtjLl9vbkNvbXBsZXRlKCl9Y2F0Y2goZCl7cGl8fChwaT0hMCxxaT1kKX19aWYocGkpdGhyb3cgYT1xaSxxaT1udWxsLHBpPSExLGE7fWZ1bmN0aW9uIEJpKGEsYil7Vz94KFwiMjUzXCIpOnZvaWQgMDtvaT1hO1o9YjtEaShhLGIsITEpO1loKDEwNzM3NDE4MjMsITEpfVxuZnVuY3Rpb24gRGkoYSxiLGMpe1c/eChcIjI0NVwiKTp2b2lkIDA7Vz0hMDtpZihjKXt2YXIgZD1hLmZpbmlzaGVkV29yaztudWxsIT09ZD9GaShhLGQsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsZD1hLnRpbWVvdXRIYW5kbGUsLTEhPT1kJiYoYS50aW1lb3V0SGFuZGxlPS0xLHplKGQpKSxjaShhLGMpLGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQmJihkaSgpP2EuZmluaXNoZWRXb3JrPWQ6RmkoYSxkLGIpKSl9ZWxzZSBkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmRmkoYSxkLGIpKTtXPSExfVxuZnVuY3Rpb24gRmkoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWMmJihudWxsPT09c2k/c2k9W2RdOnNpLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EuZXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDthPT09d2k/aWkrKzood2k9YSxpaT0wKTtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LGZ1bmN0aW9uKCl7WmgoYSxiKX0pfWZ1bmN0aW9uIERoKGEpe251bGw9PT1vaT94KFwiMjQ2XCIpOnZvaWQgMDtvaS5leHBpcmF0aW9uVGltZT0wO3BpfHwocGk9ITAscWk9YSl9ZnVuY3Rpb24gR2koYSxiKXt2YXIgYz1YO1g9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFg9Yyl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEhpKGEsYil7aWYoWCYmIXJpKXtyaT0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtyaT0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gSWkoYSxiLGMpe1h8fFd8fDA9PT1naXx8KFloKGdpLCExKSxnaT0wKTt2YXIgZD1YO1g9ITA7dHJ5e3JldHVybiByLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShyLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjKX0pfWZpbmFsbHl7KFg9ZCl8fFd8fFloKDEwNzM3NDE4MjMsITEpfX1cbmZ1bmN0aW9uIEppKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2E6aWYoYyl7Yz1jLl9yZWFjdEludGVybmFsRmliZXI7Yjp7Mj09PWVkKGMpJiYxPT09Yy50YWc/dm9pZCAwOngoXCIxNzBcIik7dmFyIGc9Yztkb3tzd2l0Y2goZy50YWcpe2Nhc2UgMzpnPWcuc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoSihnLnR5cGUpKXtnPWcuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWc9Zy5yZXR1cm59d2hpbGUobnVsbCE9PWcpO3goXCIxNzFcIik7Zz12b2lkIDB9aWYoMT09PWMudGFnKXt2YXIgaD1jLnR5cGU7aWYoSihoKSl7Yz1OZShjLGgsZyk7YnJlYWsgYX19Yz1nfWVsc2UgYz1IZTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1uZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7XG5vZigpO3BmKGYsZSk7cWYoZixkKTtyZXR1cm4gZH1mdW5jdGlvbiBLaShhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1sZigpO2U9bWYoZixlKTtyZXR1cm4gSmkoYSxiLGMsZSxkKX1mdW5jdGlvbiBMaShhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIE1pKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6V2Isa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5BYj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOnljKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1LYShkKTtlP3ZvaWQgMDp4KFwiOTBcIik7U2IoZCk7eWMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZhZShhLCEhYy5tdWx0aXBsZSxiLCExKX19O1xuZnVuY3Rpb24gTmkoYSl7dmFyIGI9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWxmKCkrNTAwKS8yNXwwKSsxKTtiPj1KaCYmKGI9SmgtMSk7dGhpcy5fZXhwaXJhdGlvblRpbWU9Smg9Yjt0aGlzLl9yb290PWE7dGhpcy5fY2FsbGJhY2tzPXRoaXMuX25leHQ9bnVsbDt0aGlzLl9oYXNDaGlsZHJlbj10aGlzLl9kaWRDb21wbGV0ZT0hMTt0aGlzLl9jaGlsZHJlbj1udWxsO3RoaXMuX2RlZmVyPSEwfU5pLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSl7dGhpcy5fZGVmZXI/dm9pZCAwOngoXCIyNTBcIik7dGhpcy5faGFzQ2hpbGRyZW49ITA7dGhpcy5fY2hpbGRyZW49YTt2YXIgYj10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYz10aGlzLl9leHBpcmF0aW9uVGltZSxkPW5ldyBPaTtKaShhLGIsbnVsbCxjLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5OaS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbihhKXtpZih0aGlzLl9kaWRDb21wbGV0ZSlhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5OaS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGI9YS5maXJzdEJhdGNoO3RoaXMuX2RlZmVyJiZudWxsIT09Yj92b2lkIDA6eChcIjI1MVwiKTtpZih0aGlzLl9oYXNDaGlsZHJlbil7dmFyIGM9dGhpcy5fZXhwaXJhdGlvblRpbWU7aWYoYiE9PXRoaXMpe3RoaXMuX2hhc0NoaWxkcmVuJiYoYz10aGlzLl9leHBpcmF0aW9uVGltZT1iLl9leHBpcmF0aW9uVGltZSx0aGlzLnJlbmRlcih0aGlzLl9jaGlsZHJlbikpO2Zvcih2YXIgZD1udWxsLGU9YjtlIT09dGhpczspZD1lLGU9ZS5fbmV4dDtudWxsPT09ZD94KFwiMjUxXCIpOnZvaWQgMDtkLl9uZXh0PWUuX25leHQ7dGhpcy5fbmV4dD1iO2EuZmlyc3RCYXRjaD10aGlzfXRoaXMuX2RlZmVyPSExO0JpKGEsYyk7Yj10aGlzLl9uZXh0O3RoaXMuX25leHQ9bnVsbDtiPWEuZmlyc3RCYXRjaD1iO251bGwhPT1iJiZiLl9oYXNDaGlsZHJlbiYmYi5yZW5kZXIoYi5fY2hpbGRyZW4pfWVsc2UgdGhpcy5fbmV4dD1cbm51bGwsdGhpcy5fZGVmZXI9ITF9O05pLnByb3RvdHlwZS5fb25Db21wbGV0ZT1mdW5jdGlvbigpe2lmKCF0aGlzLl9kaWRDb21wbGV0ZSl7dGhpcy5fZGlkQ29tcGxldGU9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKSgwLGFbYl0pKCl9fTtmdW5jdGlvbiBPaSgpe3RoaXMuX2NhbGxiYWNrcz1udWxsO3RoaXMuX2RpZENvbW1pdD0hMTt0aGlzLl9vbkNvbW1pdD10aGlzLl9vbkNvbW1pdC5iaW5kKHRoaXMpfU9pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbW1pdClhKCk7ZWxzZXt2YXIgYj10aGlzLl9jYWxsYmFja3M7bnVsbD09PWImJihiPXRoaXMuX2NhbGxiYWNrcz1bXSk7Yi5wdXNoKGEpfX07XG5PaS5wcm90b3R5cGUuX29uQ29tbWl0PWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbW1pdCl7dGhpcy5fZGlkQ29tbWl0PSEwO3ZhciBhPXRoaXMuX2NhbGxiYWNrcztpZihudWxsIT09YSlmb3IodmFyIGI9MDtiPGEubGVuZ3RoO2IrKyl7dmFyIGM9YVtiXTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz94KFwiMTkxXCIsYyk6dm9pZCAwO2MoKX19fTtcbmZ1bmN0aW9uIFBpKGEsYixjKXtiPUsoMyxudWxsLG51bGwsYj8zOjApO2E9e2N1cnJlbnQ6Yixjb250YWluZXJJbmZvOmEscGVuZGluZ0NoaWxkcmVuOm51bGwscGluZ0NhY2hlOm51bGwsZWFybGllc3RQZW5kaW5nVGltZTowLGxhdGVzdFBlbmRpbmdUaW1lOjAsZWFybGllc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0U3VzcGVuZGVkVGltZTowLGxhdGVzdFBpbmdlZFRpbWU6MCxkaWRFcnJvcjohMSxwZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU6MCxmaW5pc2hlZFdvcms6bnVsbCx0aW1lb3V0SGFuZGxlOi0xLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxuZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbjowLGV4cGlyYXRpb25UaW1lOjAsZmlyc3RCYXRjaDpudWxsLG5leHRTY2hlZHVsZWRSb290Om51bGx9O3RoaXMuX2ludGVybmFsUm9vdD1iLnN0YXRlTm9kZT1hfVxuUGkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuX2ludGVybmFsUm9vdCxkPW5ldyBPaTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiZkLnRoZW4oYik7S2koYSxjLG51bGwsZC5fb25Db21taXQpO3JldHVybiBkfTtQaS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcgT2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO0tpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307UGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IE9pO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtLaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xuUGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IE5pKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU+PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gUWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfUdiPUdpO0hiPUlpO0liPWZ1bmN0aW9uKCl7V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApfTtcbmZ1bmN0aW9uIFJpKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgUGkoYSwhMSxiKX1cbmZ1bmN0aW9uIFNpKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1MaShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPVJpKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1IaShmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gTGkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIFRpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIE1pKGEsYixudWxsLGMpfVxudmFyIFZpPXtjcmVhdGVQb3J0YWw6VGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj94KFwiMTg4XCIpOngoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9aGQoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7UWkoYik/dm9pZCAwOngoXCIyMDBcIik7cmV0dXJuIFNpKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtRaShjKT92b2lkIDA6eChcIjIwMFwiKTtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/XG54KFwiMzhcIik6dm9pZCAwO3JldHVybiBTaShhLGIsYywhMSxkKX0sdW5tb3VudENvbXBvbmVudEF0Tm9kZTpmdW5jdGlvbihhKXtRaShhKT92b2lkIDA6eChcIjQwXCIpO3JldHVybiBhLl9yZWFjdFJvb3RDb250YWluZXI/KEhpKGZ1bmN0aW9uKCl7U2kobnVsbCxudWxsLGEsITEsZnVuY3Rpb24oKXthLl9yZWFjdFJvb3RDb250YWluZXI9bnVsbH0pfSksITApOiExfSx1bnN0YWJsZV9jcmVhdGVQb3J0YWw6ZnVuY3Rpb24oKXtyZXR1cm4gVGkuYXBwbHkodm9pZCAwLGFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOkdpLHVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlczpJaSxmbHVzaFN5bmM6ZnVuY3Rpb24oYSxiKXtXP3goXCIxODdcIik6dm9pZCAwO3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGtpKGEsYil9ZmluYWxseXtYPWMsWWgoMTA3Mzc0MTgyMywhMSl9fSx1bnN0YWJsZV9jcmVhdGVSb290OlVpLHVuc3RhYmxlX2ZsdXNoQ29udHJvbGxlZDpmdW5jdGlvbihhKXt2YXIgYj1cblg7WD0hMDt0cnl7a2koYSl9ZmluYWxseXsoWD1iKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7RXZlbnRzOltJYSxKYSxLYSxCYS5pbmplY3RFdmVudFBsdWdpbnNCeU5hbWUscGEsUWEsZnVuY3Rpb24oYSl7eWEoYSxQYSl9LEViLEZiLERkLERhXX19O2Z1bmN0aW9uIFVpKGEsYil7UWkoYSk/dm9pZCAwOngoXCIyOTlcIixcInVuc3RhYmxlX2NyZWF0ZVJvb3RcIik7cmV0dXJuIG5ldyBQaShhLCEwLG51bGwhPWImJiEwPT09Yi5oeWRyYXRlKX1cbihmdW5jdGlvbihhKXt2YXIgYj1hLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlO3JldHVybiBUZShuKHt9LGEse292ZXJyaWRlUHJvcHM6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpUYi5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH19KSl9KSh7ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6SGEsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNi44LjZcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9KTt2YXIgV2k9e2RlZmF1bHQ6Vml9LFhpPVdpJiZWaXx8V2k7bW9kdWxlLmV4cG9ydHM9WGkuZGVmYXVsdHx8WGk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjEzLjZcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTt2YXIgZD1udWxsLGU9ITEsZz0zLGs9LTEsbD0tMSxtPSExLG49ITE7ZnVuY3Rpb24gcCgpe2lmKCFtKXt2YXIgYT1kLmV4cGlyYXRpb25UaW1lO24/cSgpOm49ITA7cih0LGEpfX1cbmZ1bmN0aW9uIHUoKXt2YXIgYT1kLGI9ZC5uZXh0O2lmKGQ9PT1iKWQ9bnVsbDtlbHNle3ZhciBjPWQucHJldmlvdXM7ZD1jLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbDtjPWEuY2FsbGJhY2s7Yj1hLmV4cGlyYXRpb25UaW1lO2E9YS5wcmlvcml0eUxldmVsO3ZhciBmPWcsUT1sO2c9YTtsPWI7dHJ5e3ZhciBoPWMoKX1maW5hbGx5e2c9ZixsPVF9aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGgpaWYoaD17Y2FsbGJhY2s6aCxwcmlvcml0eUxldmVsOmEsZXhwaXJhdGlvblRpbWU6YixuZXh0Om51bGwscHJldmlvdXM6bnVsbH0sbnVsbD09PWQpZD1oLm5leHQ9aC5wcmV2aW91cz1oO2Vsc2V7Yz1udWxsO2E9ZDtkb3tpZihhLmV4cGlyYXRpb25UaW1lPj1iKXtjPWE7YnJlYWt9YT1hLm5leHR9d2hpbGUoYSE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9aCxwKCkpO2I9Yy5wcmV2aW91cztiLm5leHQ9Yy5wcmV2aW91cz1oO2gubmV4dD1jO2gucHJldmlvdXM9XG5ifX1mdW5jdGlvbiB2KCl7aWYoLTE9PT1rJiZudWxsIT09ZCYmMT09PWQucHJpb3JpdHlMZXZlbCl7bT0hMDt0cnl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKX1maW5hbGx5e209ITEsbnVsbCE9PWQ/cCgpOm49ITF9fX1mdW5jdGlvbiB0KGEpe209ITA7dmFyIGI9ZTtlPWE7dHJ5e2lmKGEpZm9yKDtudWxsIT09ZDspe3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoZC5leHBpcmF0aW9uVGltZTw9Yyl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPD1jKX1lbHNlIGJyZWFrfWVsc2UgaWYobnVsbCE9PWQpe2RvIHUoKTt3aGlsZShudWxsIT09ZCYmIXcoKSl9fWZpbmFsbHl7bT0hMSxlPWIsbnVsbCE9PWQ/cCgpOm49ITEsdigpfX1cbnZhciB4PURhdGUseT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMCxBPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByZXF1ZXN0QW5pbWF0aW9uRnJhbWU/cmVxdWVzdEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjYW5jZWxBbmltYXRpb25GcmFtZT9jYW5jZWxBbmltYXRpb25GcmFtZTp2b2lkIDAsQyxEO2Z1bmN0aW9uIEUoYSl7Qz1BKGZ1bmN0aW9uKGIpe3ooRCk7YShiKX0pO0Q9eShmdW5jdGlvbigpe0IoQyk7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sMTAwKX1cbmlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBGPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIEYubm93KCl9fWVsc2UgZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4geC5ub3coKX07dmFyIHIscSx3LEc9bnVsbDtcInVuZGVmaW5lZFwiIT09dHlwZW9mIHdpbmRvdz9HPXdpbmRvdzpcInVuZGVmaW5lZFwiIT09dHlwZW9mIGdsb2JhbCYmKEc9Z2xvYmFsKTtcbmlmKEcmJkcuX3NjaGVkTW9jayl7dmFyIEg9Ry5fc2NoZWRNb2NrO3I9SFswXTtxPUhbMV07dz1IWzJdO2V4cG9ydHMudW5zdGFibGVfbm93PUhbM119ZWxzZSBpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgST1udWxsLEo9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUkpdHJ5e0koYSl9ZmluYWxseXtJPW51bGx9fTtyPWZ1bmN0aW9uKGEpe251bGwhPT1JP3NldFRpbWVvdXQociwwLGEpOihJPWEsc2V0VGltZW91dChKLDAsITEpKX07cT1mdW5jdGlvbigpe0k9bnVsbH07dz1mdW5jdGlvbigpe3JldHVybiExfX1lbHNle1widW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSYmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBBJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpLFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIEImJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKSk7dmFyIEs9bnVsbCxMPSExLE09LTEsTj0hMSxPPSExLFA9MCxSPTMzLFM9MzM7dz1mdW5jdGlvbigpe3JldHVybiBQPD1leHBvcnRzLnVuc3RhYmxlX25vdygpfTt2YXIgVD1uZXcgTWVzc2FnZUNoYW5uZWwsVT1ULnBvcnQyO1QucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7TD0hMTt2YXIgYT1LLGI9TTtLPW51bGw7TT0tMTt2YXIgYz1leHBvcnRzLnVuc3RhYmxlX25vdygpLGY9ITE7aWYoMD49UC1jKWlmKC0xIT09YiYmYjw9YylmPSEwO2Vsc2V7Tnx8KE49ITAsRShWKSk7Sz1hO009YjtyZXR1cm59aWYobnVsbCE9PWEpe089ITA7dHJ5e2EoZil9ZmluYWxseXtPPSExfX19O1xudmFyIFY9ZnVuY3Rpb24oYSl7aWYobnVsbCE9PUspe0UoVik7dmFyIGI9YS1QK1M7YjxTJiZSPFM/KDg+YiYmKGI9OCksUz1iPFI/UjpiKTpSPWI7UD1hK1M7THx8KEw9ITAsVS5wb3N0TWVzc2FnZSh2b2lkIDApKX1lbHNlIE49ITF9O3I9ZnVuY3Rpb24oYSxiKXtLPWE7TT1iO098fDA+Yj9VLnBvc3RNZXNzYWdlKHZvaWQgMCk6Tnx8KE49ITAsRShWKSl9O3E9ZnVuY3Rpb24oKXtLPW51bGw7TD0hMTtNPS0xfX1leHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtcbmV4cG9ydHMudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5PWZ1bmN0aW9uKGEsYil7c3dpdGNoKGEpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOmNhc2UgNDpjYXNlIDU6YnJlYWs7ZGVmYXVsdDphPTN9dmFyIGM9ZyxmPWs7Zz1hO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChnKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1nfXZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtnPWMsaz1mLHYoKX19O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7dmFyIGM9LTEhPT1rP2s6ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZcIm51bWJlclwiPT09dHlwZW9mIGIudGltZW91dCliPWMrYi50aW1lb3V0O2Vsc2Ugc3dpdGNoKGcpe2Nhc2UgMTpiPWMrLTE7YnJlYWs7Y2FzZSAyOmI9YysyNTA7YnJlYWs7Y2FzZSA1OmI9YysxMDczNzQxODIzO2JyZWFrO2Nhc2UgNDpiPWMrMUU0O2JyZWFrO2RlZmF1bHQ6Yj1jKzVFM31hPXtjYWxsYmFjazphLHByaW9yaXR5TGV2ZWw6ZyxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfTtpZihudWxsPT09ZClkPWEubmV4dD1hLnByZXZpb3VzPWEscCgpO2Vsc2V7Yz1udWxsO3ZhciBmPWQ7ZG97aWYoZi5leHBpcmF0aW9uVGltZT5iKXtjPWY7YnJlYWt9Zj1mLm5leHR9d2hpbGUoZiE9PWQpO251bGw9PT1jP2M9ZDpjPT09ZCYmKGQ9YSxwKCkpO1xuYj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWE7YS5uZXh0PWM7YS5wcmV2aW91cz1ifXJldHVybiBhfTtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWEubmV4dDtpZihudWxsIT09Yil7aWYoYj09PWEpZD1udWxsO2Vsc2V7YT09PWQmJihkPWIpO3ZhciBjPWEucHJldmlvdXM7Yy5uZXh0PWI7Yi5wcmV2aW91cz1jfWEubmV4dD1hLnByZXZpb3VzPW51bGx9fTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1nO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPWcsZj1rO2c9YjtrPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e2c9YyxrPWYsdigpfX19O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gZ307XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIWUmJihudWxsIT09ZCYmZC5leHBpcmF0aW9uVGltZTxsfHx3KCkpfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7bnVsbCE9PWQmJnAoKX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBkfTtcbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keSB7IFxcbiAgICBjb2xvcjogI2Q5ZDlkOTtcXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmLCBHZW9yZ2lhLCBzZXJpZjtcXG59XFxuXFxudWwge1xcbiAgICBib3JkZXI6IDFweCAjNDA0MDQwIHNvbGlkO1xcbn1cXG5cXG5saSAsIGxhYmVsLCBwIHtcXG4gICAgZm9udC1zaXplOiAxMXB4O1xcbn1cXG5cXG5oNCwgaDUsIGg2IHtcXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzMzMzM7XFxufVxcblxcbmlucHV0LCB0ZXh0YXJlYSB7IFxcbiAgICBmb250LXNpemU6IDExcHg7XFxuICAgIGJhY2tncm91bmQ6ICMyYjJiMmI7XFxuICAgIGNvbG9yOiAjZDlkOWQ5O1xcbiAgICBvcGFjaXR5OiAwLjc1O1xcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xcbn1cXG5cXG5pbnB1dFt0eXBlPVxcXCJ0ZXh0XFxcIl0ge1xcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRhcmVhO1xcbn1cXG5cXG51bCBsYWJlbCBpbnB1dCB7XFxuICAgIHdpZHRoOiAxMHB4O1xcbn1cXG5cXG51bCwgbGkge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcXG4gICAgbWFyZ2luLXRvcDogMHB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XFxufVxcblxcbmJ1dHRvbiB7XFxuICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XFxuICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLDAsMCwwLjkpO1xcbiAgICBib3JkZXItd2lkdGg6IDFweDtcXG4gICAgcGFkZGluZzogN3B4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzYTQwO1xcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xcbn1cXG5cXG5idXR0b24gaXtcXG4gICAgcGFkZGluZy1yaWdodDo0cHg7XFxufVxcblxcbmJ1dHRvbjpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNDMsIDQzLCA0Myk7XFxufVxcblxcbnVsLGxpLCB1bCBsYWJlbCB7XFxuICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XFxufVxcblxcbnVsIGxhYmVsOmhvdmVyLCBsaTpob3ZlciwgLmNvbnRlbnQ6aG92ZXJ7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNDMsIDQzLCA0Myk7XFxufVxcblxcbiNpbmRleHtcXG4gICAgbWFyZ2luOi00cHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIERlcGVuZGVuY2llcy5cbmltcG9ydCBcIi4uL0luZGV4L2luZGV4LmNzc1wiO1xuXG4vLyBDb21wb25lbnRzLlxuXG5pbXBvcnQgQ29tcG9uZW50cyBmcm9tIFwiLi4vRWxlbWVudHNcIjtcbmltcG9ydCBEcmFnZ2FibGVDb21wb25lbnQgZnJvbSBcIi4uL0RyYWdnYWJsZUNvbXBvbmVudFwiO1xuaW1wb3J0IEVkaXRvciBmcm9tIFwiLi4vRWRpdG9yXCI7XG5pbXBvcnQgRXZlbnRzIGZyb20gXCIuLi9FdmVudHNcIjtcbmltcG9ydCBIaXN0b3J5IGZyb20gXCIuLi9IaXN0b3J5XCI7XG5pbXBvcnQgUHJldmlldyBmcm9tIFwiLi4vUHJldmlld1wiO1xuaW1wb3J0IFN0eWxlRXhwbG9yZXIgZnJvbSBcIi4uL1N0eWxlRXhwbG9yZXJcIjtcbmltcG9ydCBUYWdFeHBsb3JlciBmcm9tIFwiLi4vVGFnRXhwbG9yZXJcIjtcblxuLy8gUmVkdWNlcnMuXG5pbXBvcnQgeyB1cGRhdGVFdmVudCwgdXBkYXRlQ29uZmlnLCBzYXZlRWxlbWVudCwgdXBkYXRlc2VsZWN0ZWRJbmRleCB9IGZyb20gXCIuLi9FbGVtZW50cy9SZWR1Y2VyXCI7XG5cbi8vIFV0aWxzXG5pbXBvcnQgeyBnZXROb2RlVHJlZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvZ2V0LW5vZGUtdHJlZS5qc1wiO1xuaW1wb3J0IHtyZWFkRGF0YX0gZnJvbSBcIi4uL3V0aWxpdGllcy9sb2NhbFN0b3JhZ2VcIjtcblxuY2xhc3MgVG9vbCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWxlbWVudHM6IHJlYWREYXRhKFwidWktZWRpdG9yXCIpIHx8IFtdLFxuICAgICAgICAgICAgY29tcG9uZW50czogW10sXG4gICAgICAgICAgICBzZWxlY3RlZEluZGV4OiAtMSxcbiAgICAgICAgICAgIGVsZW1lbnQ6IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICAgICAgICAgIG1hcmt1cDogXCJcIixcbiAgICAgICAgICAgICAgICBzdHlsZTogXCJcIixcbiAgICAgICAgICAgICAgICBzdGF0ZTogXCJ7IH1cIixcbiAgICAgICAgICAgICAgICBldmVudHM6IFtdXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cGRhdGVDb25maWcgPSB1cGRhdGVDb25maWcuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy51cGRhdGVFdmVudCA9IHVwZGF0ZUV2ZW50LmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc2F2ZUVsZW1lbnQgPSBzYXZlRWxlbWVudC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnVwZGF0ZXNlbGVjdGVkSW5kZXggPSB1cGRhdGVzZWxlY3RlZEluZGV4LmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgdXBkYXRlUHJldmlldyhlbGVtZW50KSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcHJldmlld0NvbXBvbmVudDogZWxlbWVudFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICB1cGRhdGVTdHlsZXMoKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBlbGVtZW50OiB0aGlzLnN0YXRlLmVsZW1lbnRzW3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleF1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IGNvbXBvbmVudHMgPSByZWFkRGF0YShcInVpLWVkaXRvclwiKSB8fCBbXTtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRFbGVtZW50ID0gY29tcG9uZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdIHx8IHRoaXMuc3RhdGUuZWxlbWVudDtcbiAgICAgICAgbGV0IG5vZGVUcmVlID0gZ2V0Tm9kZVRyZWUoc2VsZWN0ZWRFbGVtZW50LCBzZWxlY3RlZEVsZW1lbnQubWFya3VwLCBzZWxlY3RlZEVsZW1lbnQuc3R5bGUsIEpTT04ucGFyc2Uoc2VsZWN0ZWRFbGVtZW50LnN0YXRlKSwgc2VsZWN0ZWRFbGVtZW50LmV2ZW50cyk7XG4gICAgICAgIFxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICAgICAgPENvbXBvbmVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50cz17dGhpcy5zdGF0ZS5lbGVtZW50c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdGlvbj17dGhpcy51cGRhdGVzZWxlY3RlZEluZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkSW5kZXg9e3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgIFxuICAgICAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgPEV2ZW50c1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17dGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ9e3NlbGVjdGVkRWxlbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50cz17dGhpcy5zdGF0ZS5lbGVtZW50c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkV2ZW50c1VwZGF0ZT17dGhpcy51cGRhdGVFdmVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNvbmZpZ1VwZGF0ZT17dGhpcy51cGRhdGVDb25maWd9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgIFxuICAgICAgICAgICAgICAgICAgICA8L0RyYWdnYWJsZUNvbXBvbmVudD5cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxFZGl0b3JcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudD17c2VsZWN0ZWRFbGVtZW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9e3NlbGVjdGVkRWxlbWVudC5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmt1cD17c2VsZWN0ZWRFbGVtZW50Lm1hcmt1cH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17c2VsZWN0ZWRFbGVtZW50LnN0eWxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlPXtzZWxlY3RlZEVsZW1lbnQuc3RhdGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TYXZlPXt0aGlzLnNhdmVFbGVtZW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIDxEcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UHJldmlldyBjb21wb25lbnQ9e3NlbGVjdGVkRWxlbWVudH0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIDxEcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGFnRXhwbG9yZXIgbm9kZT17bm9kZVRyZWV9IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgIFxuICAgICAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICAgICAgPFN0eWxlRXhwbG9yZXIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwMDApfSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ9e3NlbGVjdGVkRWxlbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkVkaXQ9e3RoaXMudXBkYXRlU3R5bGVzLmJpbmQodGhpcyl9Lz5cbiAgICAgICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgXG4gICAgICAgICAgICAgICAgICAgIDxEcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SGlzdG9yeS8+XG4gICAgICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgIFxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaChlKXtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICA8SGlzdG9yeS8+XG4gICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUb29sOyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbi8vIFN0eWxlcy5cblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuLy8gQ29tcG9uZW50cy5cblxuaW1wb3J0IEVsZW1lbnQgZnJvbSBcIi4uL0VsZW1lbnRcIjtcblxuLy8gUmVkdWNlcnMuXG5cbmltcG9ydCB7b25EZWxldGV9IGZyb20gXCIuL1JlZHVjZXJcIlxuXG4vLyBFdmVudHMuXG5cbmltcG9ydCB7IG9uRXhwb3J0fSBmcm9tIFwiLi9FdmVudHNcIjtcbmltcG9ydCB7d3JpdGVEYXRhfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG5cbmNsYXNzIENvbXBvbmVudHMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVsZW1lbnRzOiB0aGlzLnByb3BzLmVsZW1lbnRzLFxuICAgICAgICAgICAgc2VsZWN0ZWRJbmRleDowXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5vbkRlbGV0ZSA9IG9uRGVsZXRlLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgY3JlYXRlVmFyaWFudChjb21wb25lbnQpe1xuXG4gICAgICAgIC8vIDEuIFVwZGF0ZSBtYXJrdXAuXG4gICAgICAgIGxldCB2YXJpYW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjb21wb25lbnQpKTtcbiAgICAgICAgdmFyaWFudC5uYW1lID0gXCJWYXJpYW50XCIrdmFyaWFudC5uYW1lXG4gICAgICAgIHZhcmlhbnQubWFya3VwID0gdmFyaWFudC5tYXJrdXAucmVwbGFjZSgvPiguKj8pPC9nLCAnPntzdGF0ZS52YXJpYW50fTwnKVxuXG4gICAgICAgIC8vIDIuIFVwZGF0ZSBzdGF0ZS5cbiAgICAgICAgaWYodHlwZW9mIHZhcmlhbnQuc3RhdGUgPT09IFwic3RyaW5nXCIpe1xuICAgICAgICAgICAgdmFyaWFudC5zdGF0ZSA9IEpTT04ucGFyc2UodmFyaWFudC5zdGF0ZSlcbiAgICAgICAgICAgIHZhcmlhbnQuc3RhdGUudmFyaWFudCA9IFwidGV4dFwiXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZih0eXBlb2YgdmFyaWFudC5zdGF0ZSA9PT0gXCJvYmplY3RcIil7XG4gICAgICAgICAgICB2YXJpYW50LnN0YXRlLnZhcmlhbnQgPSBcInRleHRcIlxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICB2YXJpYW50LnN0YXRlID0ge31cbiAgICAgICAgfVxuICAgICAgICB2YXJpYW50LnN0YXRlLnZhcmlhbnQgPSBcInRleHRcIjtcblxuICAgICAgICB2YXJpYW50LnN0YXRlID0gSlNPTi5zdHJpbmdpZnkodmFyaWFudC5zdGF0ZSk7XG5cbiAgICAgICAgcmV0dXJuIHZhcmlhbnQ7XG4gICAgfVxuXG4gICAgZ2VuZXJhdGVWYXJpYW50KGluZGV4KXtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIDEuIFRha2UgdGhlIGN1cnJlbnQgZWxlbWVudCBzZWxlY3RlZFxuICAgICAgICAgKiAyLiBSZW1vdmUgcGxhaW4gdGV4dHMgYW5kIHJlcGxhY2UgaXQgd2l0aCBwcm9wZXJ0eVxuICAgICAgICAgKiAzLiBDcmVhdGUgdGhlIHByb3BlcnR5IGluIHRoZSBzdGF0ZS5cbiAgICAgICAgICovXG4gICAgICAgIGxldCBjdXJyZW50Q29tcG9uZW50ID0gdGhpcy5zdGF0ZS5lbGVtZW50c1tpbmRleF07XG4gICAgICAgIGxldCB2YXJpYW50ID0gdGhpcy5jcmVhdGVWYXJpYW50KGN1cnJlbnRDb21wb25lbnQpO1xuXG4gICAgICAgIGxldCBlbGVtZW50cyA9IHRoaXMuc3RhdGUuZWxlbWVudHM7XG4gICAgICAgIGVsZW1lbnRzLnB1c2godmFyaWFudCk7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBlbGVtZW50czplbGVtZW50c1xuICAgICAgICB9KVxuICAgICAgICB3cml0ZURhdGEoXCJ1aS1lZGl0b3JcIixlbGVtZW50cyk7XG4gICAgfVxuICAgIFxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBjb25zdCBlbGVtZW50TGlzdCA9IHRoaXMucHJvcHMuZWxlbWVudHMubWFwKChlbGVtZW50LCBpbmRleCkgPT4gXG4gICAgICAgICAgICA8RWxlbWVudCBcbiAgICAgICAgICAgICAgICBrZXkgPSB7aW5kZXh9IFxuICAgICAgICAgICAgICAgIGluZGV4ID0ge2luZGV4fVxuICAgICAgICAgICAgICAgIHNlbGVjdGVkSW5kZXggPSB7dGhpcy5wcm9wcy5zZWxlY3RlZEluZGV4fVxuICAgICAgICAgICAgICAgIGVsZW1lbnQgPSB7ZWxlbWVudH1cbiAgICAgICAgICAgICAgICBvblNlbGVjdGlvbkNoYW5nZSA9IHt0aGlzLnByb3BzLm9uU2VsZWN0aW9ufVxuICAgICAgICAgICAgICAgIG9uRXhwb3J0ID0ge29uRXhwb3J0LmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgb25EZWxldGUgPSB7dGhpcy5vbkRlbGV0ZX1cbiAgICAgICAgICAgICAgICBvbkdlbmVyYXRlVmFyaWFudCA9IHt0aGlzLmdlbmVyYXRlVmFyaWFudC5iaW5kKHRoaXMpfS8+XG4gICAgICAgICk7XG5cbiAgICAgICAgXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImVsZW1lbnRzXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZWxlbWVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIENvbXBvbmVudHNcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtlbGVtZW50TGlzdH1cbiAgICAgICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50cztcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm92ZXJyaWRlIHtcXG4gICAgbGluZS1oZWlnaHQ6IDAlO1xcbn1cXG5cXG50ZXh0YXJlYSB7XFxuICAgIGhlaWdodDogNzBweDtcXG4gICAgd2lkdGg6IDQ1MHB4O1xcbn1cXG5cXG4uZWxlbWVudHN7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG59XFxuXFxuLnRpdGxle1xcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMXB4O1xcbiAgICBjb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwwLjUpO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuLmVsZW1lbnRzLXRhYiB7XFxuICAgIGxlZnQ6MTBweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHtzZWxlY3Rpb25DaGFuZ2VkLCBoYW5kbGVEcmFnfSBmcm9tIFwiLi9FdmVudHNcIjtcblxuaW1wb3J0ICBcIi4vU3R5bGUuY3NzXCI7XG5cbmltcG9ydCBEeW5hbWljQ29tcG9uZW50IGZyb20gXCIuLi9EeW5hbWljQ29tcG9uZW50XCI7XG5cbmNsYXNzIEVsZW1lbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHt9O1xuICAgIH1cblxuICAgIGdlbmVyYXRlVmFyaWFudCgpe1xuICAgICAgICB0aGlzLnByb3BzLm9uR2VuZXJhdGVWYXJpYW50KHRoaXMucHJvcHMuc2VsZWN0ZWRJbmRleClcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgLy8gUmVtb3ZlIHRoaXMucHJvcHMuaW5kZXgsIGluc3RlYWQgdXNlIHRoaXMgZWxlbWVudCBpbnN0YW5jZSBpbmRleC4gUmVtb3ZlcyBkdXBsaWNhdGUgY29kZVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYWNrZ3JvdW5kXCIgZHJhZ2dhYmxlPVwidHJ1ZVwiIGlkPXt0aGlzLnByb3BzLmVsZW1lbnQubmFtZX0gb25EcmFnU3RhcnQ9e2hhbmRsZURyYWcuYmluZCh0aGlzKX0+XG4gICAgICAgICAgICAgICAgPGxpIFxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgPSB7dGhpcy5wcm9wcy5pbmRleD09PXRoaXMucHJvcHMuc2VsZWN0ZWRJbmRleCA/IFwic2VsZWN0ZWQgY29tcG9uZW50XCI6IFwiY29tcG9uZW50XCJ9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2sgPSB7c2VsZWN0aW9uQ2hhbmdlZC5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgICAgICBpbmRleCA9IHt0aGlzLnByb3BzLmluZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiY29tcG9uZW50TmFtZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMucHJvcHMuZWxlbWVudC5uYW1lfVxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IHt0aGlzLnByb3BzLmluZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuZ2VuZXJhdGVWYXJpYW50LmJpbmQodGhpcyl9PjxpIGNsYXNzTmFtZT1cImZhcyBmYS1maWxlLWV4cG9ydFwiPjwvaT5HZW5lcmF0ZSBWYXJpYW50PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0ge3RoaXMucHJvcHMuaW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5wcm9wcy5vbkV4cG9ydH0+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLWZpbGUtZXhwb3J0XCI+PC9pPkV4cG9ydDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IHt0aGlzLnByb3BzLmluZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMucHJvcHMub25EZWxldGV9PjxpIGNsYXNzTmFtZT1cImZhIGZhLXRyYXNoXCI+PC9pPkRlbGV0ZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDwvIGRpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVsZW1lbnQ7XG4iLCJleHBvcnQgZnVuY3Rpb24gc2VsZWN0aW9uQ2hhbmdlZChlKSB7XG4gICAgdGhpcy5wcm9wcy5vblNlbGVjdGlvbkNoYW5nZShlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZURyYWcoZSl7XG4gICAgZS5kYXRhVHJhbnNmZXIuc2V0RGF0YShcImNvbXBvbmVudC1uYW1lXCIsIGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJpZFwiKSk7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2VsZWN0ZWQsIC5ncmVlbiB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyZWVuO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNDMsIDQzLCA0Myk7XFxufVxcblxcbi5iYWNrZ3JvdW5kIHtcXG4gICAgYmFja2dyb3VuZDogcmdiKDY0LCA2NCwgNjQpO1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzMzMztcXG59XFxuXFxuLmNvbXBvbmVudCB7XFxuICAgIGRpc3BsYXk6ZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG5cXG4uY29tcG9uZW50IC5jb21wb25lbnROYW1le1xcbiAgICBwYWRkaW5nOjdweDtcXG59XFxuXFxuLnRodW1ibmFpbCB7XFxuICAgIHdpZHRoOiA1MHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJleHBvcnQgZnVuY3Rpb24gY29kZU1vZGlmaWVyKHJlZHVjZXIsIGNvbXBvbmVudCkge1xuICAgIHJldHVybiBgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgJHtyZWR1Y2VyfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZShzdGF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuc2F2ZVZhcmlhbnRzKCR7d2luZG93LnNlbGVjdGVkY29tcG9uZW50bmFtZX0sJHtjb21wb25lbnQubmFtZX0sc3RhdGUsIGUpXG5gXG59IiwiZXhwb3J0IGZ1bmN0aW9uIGdldFN0YXJ0VGFncyhtYXJrdXApe1xuICAgIHJldHVybiBtYXJrdXAuc3BsaXQoXCI+XCIpLmZpbHRlcihpdGVtPT4haXRlbS5pbmNsdWRlcyhcIi9cIikpLmZpbHRlcihCb29sZWFuKS5tYXAoaXRlbT0+aXRlbStcIj5cIilcbn0iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5ib3gge1xcbiAgICBtYXJnaW46IDVweDtcXG4gICAgYm9yZGVyOjFweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzo1cHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsImltcG9ydCB7wqBnZXROZXN0ZWRDb21wb25lbnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuaW1wb3J0IHsgZ2V0Q29tcG9uZW50U3RyaW5nIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jb252ZXJ0LXRvLXJlYWN0LWNvbXBvbmVudFwiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBvbkV4cG9ydCgpIHtcbiAgICBsZXQgbmVzdGVkQ29tcG9uZW50cyA9IGdldE5lc3RlZENvbXBvbmVudHModGhpcy5zdGF0ZS5lbGVtZW50c1t0aGlzLnByb3BzLnNlbGVjdGVkSW5kZXhdKTtcblxuICAgIGNvbnNvbGUubG9nKG5lc3RlZENvbXBvbmVudHMubWFwKGdldENvbXBvbmVudFN0cmluZykuam9pbihcIlwiKSk7XG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNsYXNzIERyYWdnYWJsZUNvbXBvbmVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgdWktZWRpdG9yLXNldHRpbmdzLWRyYWdnYWJsZS1jb21wb25lbnQtJHt0aGlzLnByb3BzLmNoaWxkcmVuLnR5cGUubmFtZX1gKSkgfHwge1xuICAgICAgICAgICAgc3R5bGU6ICB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICAgICAgICAgICAgICB0b3A6IFwiMzBweFwiLFxuICAgICAgICAgICAgICAgIGxlZnQ6IFwiMjAwcHhcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1pbmltaXNlZDogZmFsc2VcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YXRlLmRyYWdnYWJsZT0gXCJmYWxzZVwiXG4gICAgfVxuXG4gICAgbW92ZURpdihlKXtcbiAgICAgICAgaWYoZS50YXJnZXQuaWQ9PT1cIm1vdmVcIil7XG4gICAgICAgICAgICBsZXQgc3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKTtcbiAgICAgICAgICAgIHN0YXRlLnN0eWxlLnRvcCA9IGUucGFnZVkgK1wicHhcIlxuICAgICAgICAgICAgc3RhdGUuc3R5bGUubGVmdCA9IGUucGFnZVggK1wicHhcIlxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc3R5bGUgOiBzdGF0ZS5zdHlsZVxuICAgICAgICAgICAgfSwoKT0+e1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGB1aS1lZGl0b3Itc2V0dGluZ3MtZHJhZ2dhYmxlLWNvbXBvbmVudC0ke3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfWAsSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZSkpO1xuICAgICAgICAgICAgfSkgICAgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0b2dnbGVNaW5pbWlzZU1heGltaXNlKGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBtaW5pbWlzZWQ6ICF0aGlzLnN0YXRlLm1pbmltaXNlZFxuICAgICAgICB9LCgpPT57XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShgdWktZWRpdG9yLXNldHRpbmdzLWRyYWdnYWJsZS1jb21wb25lbnQtJHt0aGlzLnByb3BzLmNoaWxkcmVuLnR5cGUubmFtZX1gLEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUpKTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvbk1vdXNlRW50ZXIoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZHJhZ2dhYmxlOlwidHJ1ZVwiXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgb25Nb3VzZUxlYXZlKCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZHJhZ2dhYmxlOlwiZmFsc2VcIlxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgZHJhZ2dhYmxlPXt0aGlzLnN0YXRlLmRyYWdnYWJsZX0gaWQ9XCJtb3ZlXCIgb25EcmFnRW5kPXt0aGlzLm1vdmVEaXYuYmluZCh0aGlzKX0gc3R5bGU9e3RoaXMuc3RhdGUuc3R5bGV9ID5cbiAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cIk1vdmVcIiBjbGFzc05hbWU9XCJtb3ZlLWhhbmRsZVwiIG9uTW91c2VEb3duPXt0aGlzLm9uTW91c2VFbnRlci5iaW5kKHRoaXMpfSBvbk1vdXNlVXA9e3RoaXMub25Nb3VzZUxlYXZlLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1hcnJvd3MtYWx0IGZhLXhzXCI+PC9pPlxuICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUubWluaW1pc2VkID8gICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT1cIk1pbmltaXNlXCIgY2xhc3NOYW1lPVwibWF4aW1pc2UtaGFuZGxlXCIgb25DbGljaz17dGhpcy50b2dnbGVNaW5pbWlzZU1heGltaXNlLmJpbmQodGhpcyl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmFzIGZhLXdpbmRvdy1tYXhpbWl6ZSBmYS14c1wiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwiTWluaW1pc2VcIiBjbGFzc05hbWU9XCJtaW5pbWlzZS1oYW5kbGVcIiBvbkNsaWNrPXt0aGlzLnRvZ2dsZU1pbmltaXNlTWF4aW1pc2UuYmluZCh0aGlzKX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYXMgZmEtd2luZG93LW1pbmltaXplIGZhLXhzXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5taW5pbWlzZWQgPyBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGVkaXRvci10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+e3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLmNoaWxkcmVuIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBEcmFnZ2FibGVDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIjbW92ZSA+IHNwYW57ICBcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIGNvbG9yOiBibGFjaztcXG59XFxuXFxuI21vdmUgLm1vdmUtaGFuZGxle1xcbiAgICBjdXJzb3I6IG1vdmU7XFxufVxcblxcbiNtb3ZlIC5tb3ZlLWhhbmRsZSxcXG4jbW92ZSAubWluaW1pc2UtaGFuZGxlLFxcbiNtb3ZlIC5tYXhpbWlzZS1oYW5kbGUge1xcbiAgICBwYWRkaW5nLWxlZnQ6IDJweDtcXG4gICAgcGFkZGluZy1yaWdodDogMnB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJcbi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcbmltcG9ydCB7dXBkYXRlTmFtZSwgdXBkYXRlTWFya3VwLCB1cGRhdGVTdHlsZSwgdXBkYXRlU3RhdGV9IGZyb20gXCIuL1JlZHVjZXJcIjtcblxuaW1wb3J0IHtyZWFkQ29tcG9uZW50fSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG4vKipcbiAqIFNob3dzIENvbmZpZ3VyYXRvciBvbiBzZWxlY3Qgb2YgdmFsaWQgY2hpbGQgY29tcG9uZW50IG5hbWUgaW4gdGhlIG1hcmt1cCBhbmQgbW91c2VPdXQgZnJvbSBtYXJrdXBcbiAqIEhpZGVzIENvbmZpZ3VyYXRvciBvbiBtb3VzZUxlYXZlIGZyb20gdGhlIGVkaXRvci5cbiAqL1xuY2xhc3MgRWRpdG9yIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHZhciBjb21wb25lbnQgPSByZWFkQ29tcG9uZW50KHRoaXMucHJvcHMubmFtZSk7XG5cbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG5hbWU6IGNvbXBvbmVudD8gY29tcG9uZW50Lm5hbWUgOiBcIlwiLFxuICAgICAgICAgICAgbWFya3VwOiBjb21wb25lbnQ/IGNvbXBvbmVudC5tYXJrdXAgOiBcIlwiLFxuICAgICAgICAgICAgc3RhdGU6IGNvbXBvbmVudD8gY29tcG9uZW50LnN0YXRlIDogXCJcIixcbiAgICAgICAgICAgIHN0eWxlOiBjb21wb25lbnQ/IGNvbXBvbmVudC5zdHlsZSA6IFwiXCJcbiAgICAgICAgfTtcblxuICAgIH1cblxuICAgIHB1Ymxpc2hFbGVtZW50ICgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vblNhdmUoe1xuICAgICAgICAgICAgbmFtZTogdGhpcy5zdGF0ZS5uYW1lLFxuICAgICAgICAgICAgbWFya3VwOiB0aGlzLnN0YXRlLm1hcmt1cCxcbiAgICAgICAgICAgIHN0eWxlOiB0aGlzLnN0YXRlLnN0eWxlLFxuICAgICAgICAgICAgc3RhdGU6IHRoaXMuc3RhdGUuc3RhdGVcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBuYW1lPSB0aGlzLnN0YXRlLm5hbWU7XG4gICAgICAgIGxldCBtYXJrdXA9IHRoaXMuc3RhdGUubWFya3VwO1xuICAgICAgICBsZXQgc3R5bGU9IHRoaXMuc3RhdGUuc3R5bGU7XG4gICAgICAgIGxldCBzdGF0ZT0gdGhpcy5zdGF0ZS5zdGF0ZTtcbiAgICAgICAgLy8gVE9ETzogU2hvdWxkIHBhc3MgdGhlIGN1cnJlbnQgZGF0YS4gSW5zdGVhZCBvZiBhY2Nlc3NpbmcgaXQgZnJvbSBnbG9iYWxcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGVkaXRvci10YWJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+RWRpdG9yPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IE5hbWU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFbnRlciBlbGVtZW50IG5hbWVcIiB2YWx1ZT17bmFtZX0gb25DaGFuZ2U9e3VwZGF0ZU5hbWUuYmluZCh0aGlzKX0gaWQ9XCJlbGVtZW50TmFtZVwiLz5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnB1Ymxpc2hFbGVtZW50LmJpbmQodGhpcyl9IGlkPVwic2F2ZVwiPjxpIGNsYXNzTmFtZT1cImZhcyBmYS1zYXZlXCI+PC9pPlNhdmU8L2J1dHRvbj4gICAgXG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPkNvbXBvbmVudCBNYXJrdXA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHZhbHVlPXttYXJrdXB9IG9uQ2hhbmdlPXt1cGRhdGVNYXJrdXAuYmluZCh0aGlzKX0gaWQ9XCJlbGVtZW50TWFya3VwXCIgdGl0bGU9XCJJRCBpcyBtYW5kYXRvcnkgZm9yIGV2ZW50c1wiLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPkNvbXBvbmVudCBDU1M8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHZhbHVlPXtzdHlsZX0gb25DaGFuZ2U9e3VwZGF0ZVN0eWxlLmJpbmQodGhpcyl9IC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IFN0YXRlPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSB2YWx1ZT17c3RhdGV9IG9uQ2hhbmdlPXt1cGRhdGVTdGF0ZS5iaW5kKHRoaXMpfSBpZD1cImVsZW1lbnRTdGF0ZVwiLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFZGl0b3I7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5oaWRkZW57XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVwiLCBcIlwiXSk7XG5cbiIsIi8vIFB1YmxpYy5cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZU5hbWUgKGV2ZW50KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG5hbWU6IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlTWFya3VwIChldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBtYXJrdXA6IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gIHVwZGF0ZVN0eWxlIChldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdHlsZTogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVTdGF0ZSAoZXZlbnQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc3RhdGU6IGV2ZW50LmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvcGVydHlDb250YWluaW5nUHJvcHMob2JqKXtcbiAgICAvLyBGZXRjaCBsaXN0IG9mIHByb3BzIGZyb20gY2hpbGQuXG4gICAgbGV0IHByb3BzID0gW107XG4gICAgbGV0IHN0YXRlO1xuICAgIHRyeXtcbiAgICAgICAgc3RhdGUgPSBKU09OLnBhcnNlKG9iai5zdGF0ZSk7XG4gICAgfVxuICAgIGNhdGNoKGUpe1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3I6IENoaWxkIHN0YXRlIGlzIGFuIGludmFsaWQganNvbiwgdHJ5IGFuIG9ubGluZSB2YWxpZGF0b3Igb24gYmVsb3cgc3RyaW5nXCIpXG4gICAgICAgIGNvbnNvbGUubG9nKGNoaWxkLnN0YXRlKTtcbiAgICB9XG4gICAgZm9yKGxldCBwcm9wZXJ0eSBpbiBzdGF0ZSl7XG4gICAgICAgIGlmKHN0YXRlW3Byb3BlcnR5XS5pbmNsdWRlcyhcInByb3BcIikpe1xuICAgICAgICAgICAgcHJvcHMucHVzaChwcm9wZXJ0eSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHByb3BzO1xufSIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBEZXBlbmRlbmNpZXMuXG5cblxuLy8gQ29tcG9uZW50cy4gXG5cbmltcG9ydCBDb25maWd1cmF0b3IgZnJvbSBcIi4uL0NvbmZpZ3VyYXRvclwiO1xuaW1wb3J0IE5vZGVzIGZyb20gXCIuLi9Ob2Rlc1wiO1xuaW1wb3J0IEV2ZW50IGZyb20gXCIuLi9FdmVudFwiO1xuaW1wb3J0IGdldE1lc3NhZ2VzIGZyb20gXCIuL01lc3NhZ2VzXCI7XG5cbi8vIFN0eWxlcy5cblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuLy8gUmVkdWNlcnMuXG5cbmltcG9ydCB7IHVwZGF0ZUV2ZW50LCBzZWxlY3RlZFRhZ0NoYW5nZWQsIGRlbGV0ZUV2ZW50LCB1cGRhdGVDb25maWd1cmF0aW9uIH0gZnJvbSBcIi4vUmVkdWNlclwiO1xuXG5cbi8vIFV0aWxzLlxuXG5pbXBvcnQgeyBnZXROb2RlVHJlZSB9IGZyb20gXCIuLi91dGlsaXRpZXMvZ2V0LW5vZGUtdHJlZS5qc1wiO1xuaW1wb3J0IHsgcmVhZERhdGEgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuXG5jbGFzcyBFdmVudHMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnID0gXCJcIjtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLnByb3BzLmVsZW1lbnQ7XG5cbiAgICAgICAgLy8gUmVwb3J0IGlmIG5vIGNvbXBvbmVudCBpcyBjcmVhdGVkLlxuICAgICAgICBpZiAodGhpcy5zdGF0ZS5lbGVtZW50cy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5TZXR0aW5nczwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8cD5Mb29rcyBsaWtlIHlvdSBkbyBub3QgaGF2ZSBhbnkgV2ViIGNvbXBvbmVudCBjcmVhdGVkLiBUeXBlIHNvbWUgXCJodG1sXCIgb24gdGhlIHJpZ2h0IFwiRWRpdG9yXCIgdGFiPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlcG9ydCBpZiBubyBjb21wb25lbnQgaXMgc2VsZWN0ZWQuXG4gICAgICAgIGlmIChlbGVtZW50Lm5hbWUgPT09IHVuZGVmaW5lZCAmJiB0aGlzLnN0YXRlLmVsZW1lbnRzLmxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlNldHRpbmdzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxwPkxvb2tzIGxpa2UgeW91IGhhdmUgbm90IHNlbGVjdGVkIGFueSBjb21wb25lbnQuIENsaWNrIG9uIGFueSBvZiB0aGUgY29tcG9uZW50IGluIHRoZSBsZWZ0IHBhbmUuPC9wPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IG5vZGVUcmVlID0gZ2V0Tm9kZVRyZWUoZWxlbWVudCwgZWxlbWVudC5tYXJrdXAsIGVsZW1lbnQuc3R5bGUsIEpTT04ucGFyc2UoZWxlbWVudC5zdGF0ZSksIGVsZW1lbnQuZXZlbnRzKTtcblxuICAgICAgICAvLyBSZXBvcnQgZXJyb3IuXG4gICAgICAgIGlmIChub2RlVHJlZS5lcnJvciAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0TWVzc2FnZXMobm9kZVRyZWUuZXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmVwb3J0IGVycm9yIGlmIGNvbXBvbmVudCBpcyBub3QgXG4gICAgICAgIGlmIChub2RlVHJlZS5yZXN1bHQgPT09IHVuZGVmaW5lZCAmJiB0aGlzLnN0YXRlLmVsZW1lbnRzLmxlbmd0aCAhPSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlNldHRpbmdzPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRUYWcgPSB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnIHx8IFwiXCI7XG4gICAgICAgIGxldCBldmVudHNPZlNlbGVjdGVkVGFnLCBjb25maWd1cmF0b3I7XG4gICAgICAgIC8vIENoZWNrIGlmIGl0IGlzIGEgY2hpbGQgY29tcG9uZW50XG4gICAgICAgIGlmIChzZWxlY3RlZFRhZy5pbmNsdWRlcyhcImNoaWxkLWNvbXBvbmVudC1cIikpIHtcbiAgICAgICAgICAgIC8vIEdldCBsaXN0IG9mIGNvbXBvbmVudHMuXG4gICAgICAgICAgICBsZXQgY29tcG9uZW50cyA9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuXG4gICAgICAgICAgICAvLyBHZXQgY2hpbGQgY29tcG9uZW50IG5hbWUgZnJvbSB0aGUgc2VsZWN0ZWQgdGFnLlxuICAgICAgICAgICAgbGV0IGNoaWxkQ29tcG9uZW50TmFtZSA9IHNlbGVjdGVkVGFnLnNwbGl0KFwiY2hpbGQtY29tcG9uZW50LVwiKVsxXTtcblxuICAgICAgICAgICAgLy8gRmluZCB0aGUgY2hpbGQgY29tcG9uZW50IGZyb20gdGhlIGxpc3Qgb2YgY29tcG9uZW50cy5cbiAgICAgICAgICAgIGxldCBjaGlsZENvbXBvbmVudCA9IGNvbXBvbmVudHMuZmluZChjb21wb25lbnQgPT4gY29tcG9uZW50Lm5hbWUgPT09IGNoaWxkQ29tcG9uZW50TmFtZSk7XG5cbiAgICAgICAgICAgIC8vIEZpbmQgZXZlbnRzIHRoYXQgYXJlIHB1Ymxpc2hhYmxlIGZyb20gdGhlIGNoaWxkIGNvbXBvbmVudC5cbiAgICAgICAgICAgIGxldCBldmVudE5hbWVzID0gY2hpbGRDb21wb25lbnQuZXZlbnRzLmZpbHRlcihldmVudCA9PiBldmVudC5wdWJsaXNoYWJsZSA9PT0gdHJ1ZSkubWFwKHB1Ymxpc2hhYmxlRXZlbnQgPT4gcHVibGlzaGFibGVFdmVudC5wdWJsaXNoTmFtZSk7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSBldmVudCB2aWV3IGZvciBsaXN0IG9mIGFsbCBldmVudHNcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50cyA9IGVsZW1lbnQuZXZlbnRzLm1hcCgoZXZlbnQsIGluZGV4KSA9PiA8RXZlbnQga2V5PXtpbmRleH0gaW5kZXg9e2luZGV4fSBldmVudD17ZXZlbnR9IHNlbGVjdGVkVGFnSUQ9e3NlbGVjdGVkVGFnfSBldmVudE5hbWVzPXtldmVudE5hbWVzfSBvblNhdmU9e3VwZGF0ZUV2ZW50LmJpbmQodGhpcyl9IGRlbGV0ZUV2ZW50PXtkZWxldGVFdmVudC5iaW5kKHRoaXMpfSAvPik7XG5cbiAgICAgICAgICAgIC8vIEZpbHRlciBvdXQgZXZlbnRzIHRoYXQgYXJlIG5vdCBwYXJ0IG9mIHNlbGVjdGVkVGFnXG4gICAgICAgICAgICBldmVudHNPZlNlbGVjdGVkVGFnID0gc2VsZWN0ZWRUYWcgPyBldmVudHMuZmlsdGVyKGV2ZW50ID0+IHNlbGVjdGVkVGFnLmluY2x1ZGVzKGV2ZW50LnByb3BzLmV2ZW50LmlkKSkgOiBudWxsO1xuXG4gICAgICAgICAgICBjb25maWd1cmF0b3IgPSA8Q29uZmlndXJhdG9yIG9uQ2hhbmdlPXt1cGRhdGVDb25maWd1cmF0aW9uLmJpbmQodGhpcyl9IGNoaWxkTmFtZT17Y2hpbGRDb21wb25lbnROYW1lfSBwYXJlbnQ9e2VsZW1lbnR9IC8+O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgZXZlbnRzID0gZWxlbWVudC5ldmVudHNcbiAgICAgICAgICAgICAgICAubWFwKChldmVudCwgaW5kZXgpID0+IDxFdmVudCBrZXk9e2luZGV4fSBpbmRleD17aW5kZXh9IGV2ZW50PXtldmVudH0gc2VsZWN0ZWRUYWdJRD17c2VsZWN0ZWRUYWd9IGV2ZW50TmFtZXM9e1tdfSBvblNhdmU9e3VwZGF0ZUV2ZW50LmJpbmQodGhpcyl9IGRlbGV0ZUV2ZW50PXtkZWxldGVFdmVudC5iaW5kKHRoaXMpfSAvPik7XG4gICAgICAgICAgICBldmVudHNPZlNlbGVjdGVkVGFnID0gc2VsZWN0ZWRUYWcgPyBldmVudHMuZmlsdGVyKGV2ZW50ID0+IHNlbGVjdGVkVGFnLmluY2x1ZGVzKGV2ZW50LnByb3BzLmV2ZW50LmlkKSkgOiBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZXZlbnRzLXRhYlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+U2V0dGluZ3M8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRhZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxOb2RlcyBub2RlPXtub2RlVHJlZS5yZXN1bHR9IG9uU2VsZWN0ZWRUYWdDaGFuZ2VkPXtzZWxlY3RlZFRhZ0NoYW5nZWQuYmluZCh0aGlzKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHtjb25maWd1cmF0b3J9XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRzXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRXhpc3RpbmdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2V2ZW50c09mU2VsZWN0ZWRUYWd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE5ld1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RXZlbnQga2V5PXtlbGVtZW50LmV2ZW50cy5sZW5ndGh9IGV2ZW50TmFtZXM9e1tdfSBzZWxlY3RlZFRhZ0lEPXtzZWxlY3RlZFRhZ30gb25TYXZlPXt1cGRhdGVFdmVudC5iaW5kKHRoaXMpfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXZlbnRzO1xuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCJcblxuXG5jbGFzcyBDb25maWd1cmF0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcblxuICAgICAgICBsZXQgY29uZmlnID0gSlNPTi5wYXJzZSh0aGlzLnByb3BzLnBhcmVudC5jb25maWcpW3RoaXMucHJvcHMuY2hpbGROYW1lXSB8fCB7b3ZlcmlkZVN0YXRlOmZhbHNlfTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBvdmVycmlkZTogY29uZmlnLm92ZXJpZGVTdGF0ZVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgdG9nZ2VsT3ZlcnJpZGUoKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBvdmVycmlkZTogIXRoaXMuc3RhdGUub3ZlcnJpZGVcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHtcbiAgICAgICAgICAgIG92ZXJyaWRlOiAhdGhpcy5zdGF0ZS5vdmVycmlkZSxcbiAgICAgICAgICAgIGNoaWxkTmFtZTogdGhpcy5wcm9wcy5jaGlsZE5hbWUsXG4gICAgICAgICAgICBwYXJlbnROYW1lOiB0aGlzLnByb3BzLnBhcmVudC5uYW1lXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICByZXR1cm4gKFxuXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm9wdGlvbi1ncm91cFwiPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm9wdGlvbi1ncm91cC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0aXRsZVwiPkNoaWxkIENvbmZpZ3VyYXRpb25zPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJwYW5lbCBleHBhbmRlZFwiPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250ZW50XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3B0aW9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+T3ZlcnJpZGUgY2hpbGQgc3RhdGU8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG9uQ2hhbmdlPXt0aGlzLnRvZ2dlbE92ZXJyaWRlLmJpbmQodGhpcyl9IGNoZWNrZWQ9e3RoaXMuc3RhdGUub3ZlcnJpZGUgPyBcImNoZWNrZWRcIiA6IFwiXCJ9IC8+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENvbmZpZ3VyYXRvcjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnNvbGV7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDE1MHB4O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbn1cXG5cXG4uZXZlbnQgeyBcXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xcbiAgICBwYWRkaW5nLXRvcDogMTBweDtcXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XFxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMzMzMzMzO1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxufVxcblxcbi5pbmZvIHtcXG4gICAgY29sb3I6IHllbGxvd2dyZWVuO1xcbn1cXG5cXG5sYWJlbCB7XFxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XFxufVxcblxcbi5jb25maWd1cmF0b3Ige1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmNsYXNzIE5vZGVzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICB2YXIgbm9kZSA9IHRoaXMucHJvcHMubm9kZTtcblxuXG4gICAgICAgIGlmKCFub2RlKXtcbiAgICAgICAgICAgIHJldHVybiAoPHNwYW4+bnVsbDwvc3Bhbj4pXG4gICAgICAgIH1cbiAgICAgICAgaWYodHlwZW9mIG5vZGU9PT1cInN0cmluZ1wiKXtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxsaT57bm9kZX08L2xpPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaWQgPSBub2RlLnByb3BzLmlkID8gKFwiLVwiK25vZGUucHJvcHMuaWQpIDogXCJcIjtcblxuICAgICAgICAvLyBDaGVjayBpZiBpdCBjb250YWlucyBjaGlsZHJlbi5cbiAgICAgICAgaWYobm9kZS5wcm9wcyAmJiBBcnJheS5pc0FycmF5KG5vZGUucHJvcHMuY2hpbGRyZW4pKXtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUucHJvcHMuY2hpbGRyZW4ubWFwKChjaGlsZCxpbmRleCk9PjxOb2RlcyBrZXk9e2luZGV4fSBub2RlPXtjaGlsZH0gb25TZWxlY3RlZFRhZ0NoYW5nZWQ9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9Lz4pO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicmFkaW9cIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwic2VsZWN0ZWRFbGVtZW50XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtub2RlLnR5cGUgKyBpZH0vPlxuICAgICAgICAgICAgICAgICAgICAgICAge25vZGUudHlwZSAraWR9XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpZiBub2RlIGNvbnRhaW5zIG9ubHkgb25lIGNoaWxkcmVuLCBqc3ggZ2V0IHRyYW5zcGlsZWQgdG8gb2JqZWN0IHJhdGhlciB0aGFuIGFycmF5LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnByb3BzLmNoaWxkcmVuID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIGxldCBjaGlsZCA9IG5vZGUucHJvcHMuY2hpbGRyZW47XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJzZWxlY3RlZEVsZW1lbnRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5wcm9wcy5vblNlbGVjdGVkVGFnQ2hhbmdlZH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e25vZGUudHlwZStpZH0vPlxuICAgICAgICAgICAgICAgICAgICAgICAge25vZGUudHlwZSAraWR9XG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxOb2RlcyBrZXk9e2luZGV4fSBub2RlPXtjaGlsZH0gb25TZWxlY3RlZFRhZ0NoYW5nZWQ9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9Lz5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBuZXN0ZWQgY29tcG9uZW50LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnR5cGUgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICByZXR1cm4gKDx1bD5cbiAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInNlbGVjdGVkRWxlbWVudFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e1wiY2hpbGQtY29tcG9uZW50LVwiK25vZGUudHlwZS5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9IFxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAge25vZGUudHlwZS5uYW1lfVxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwic2VsZWN0ZWRFbGVtZW50XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bm9kZS50eXBlK2lkfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMucHJvcHMub25TZWxlY3RlZFRhZ0NoYW5nZWR9IFxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAge25vZGUudHlwZSAraWR9XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE5vZGVzOyIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiXG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBnZXRNZXNzYWdlcyBmcm9tIFwiLi9NZXNzYWdlc1wiO1xuXG4vLyBSZWR1Y2Vycy4gXG5cbmltcG9ydCB7dXBkYXRlRXZlbnROYW1lLCB1cGRhdGVFdmVudFR5cGUsIHVwZGF0ZVB1Ymxpc2hOYW1lLCB1cGRhdGVSZWR1Y2VyfSBmcm9tIFwiLi9SZWR1Y2VyXCI7XG5cbi8vIEV2ZW50cy5cblxuaW1wb3J0IHtwdWJsaXNoRXZlbnQsIGRlbGV0ZUV2ZW50fSBmcm9tICcuL0V2ZW50cyc7XG5cbmNsYXNzIEV2ZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLnByb3BzLmV2ZW50ID8gdGhpcy5wcm9wcy5ldmVudC5uYW1lIDogXCJcIixcbiAgICAgICAgICAgIHJlZHVjZXI6IHRoaXMucHJvcHMuZXZlbnQgPyB0aGlzLnByb3BzLmV2ZW50LnJlZHVjZXIgOiBcIlwiLFxuICAgICAgICAgICAgcHVibGlzaGFibGU6IHRoaXMucHJvcHMuZXZlbnQgPyB0aGlzLnByb3BzLmV2ZW50LnB1Ymxpc2hhYmxlIDogXCJcIixcbiAgICAgICAgICAgIHB1Ymxpc2hOYW1lOiB0aGlzLnByb3BzLmV2ZW50ID8gdGhpcy5wcm9wcy5ldmVudC5wdWJsaXNoTmFtZSA6IFwiXCIsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgaWYgKHRoaXMucHJvcHMuc2VsZWN0ZWRUYWdJRCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0TWVzc2FnZXMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBwdWJsaXNoTmFtZSA9IHRoaXMuc3RhdGUucHVibGlzaGFibGU/IDxpbnB1dCB0eXBlPVwidGV4dFwiIG9uQ2hhbmdlPXt1cGRhdGVQdWJsaXNoTmFtZS5iaW5kKHRoaXMpfSB2YWx1ZT17dGhpcy5zdGF0ZS5wdWJsaXNoTmFtZX0gcGxhY2Vob2xkZXI9XCJFbnRlciBldmVudCBwdWJsaXNoIG5hbWUgZm9yIG90aGVyIGNvbXBvbmVudHMgdG8gc3Vic2NyaWJlIHRvXCIvPiA6IG51bGw7XG4gICAgICAgIGxldCBldmVudE5hbWVzID0gdGhpcy5wcm9wcy5ldmVudE5hbWVzLm1hcChldmVudE5hbWU9PjxvcHRpb24gdmFsdWU9e2V2ZW50TmFtZX0+PC9vcHRpb24+KVxuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImV2ZW50XCI+XG4gICAgICAgICAgICAgICAgPGlucHV0IGxpc3Q9XCJicm93c2Vyc1wiIHR5cGU9XCJ0ZXh0XCIgb25DaGFuZ2U9e3VwZGF0ZUV2ZW50TmFtZS5iaW5kKHRoaXMpfSB2YWx1ZT17dGhpcy5zdGF0ZS5uYW1lfSBwbGFjZWhvbGRlcj1cIkVudGVyIGV2ZW50IG5hbWVcIiB0aXRsZT1cIkV2ZW50IE5hbWVcIi8+XG4gICAgICAgICAgICAgICAgPGRhdGFsaXN0IGlkPVwiYnJvd3NlcnNcIj5cbiAgICAgICAgICAgICAgICAgICAge2V2ZW50TmFtZXN9XG4gICAgICAgICAgICAgICAgPC9kYXRhbGlzdD5cbiAgICAgICAgICAgICAgICA8YnIvPlxuICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBvbkNoYW5nZT17dXBkYXRlUmVkdWNlci5iaW5kKHRoaXMpfSB2YWx1ZT17dGhpcy5zdGF0ZS5yZWR1Y2VyfSBwbGFjZWhvbGRlcj1cIkVudGVyIHN0YXRlIHJlZHVjZXJcIiB0aXRsZT1cIlJlZHVjZXJcIi8+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgb25DaGFuZ2U9e3VwZGF0ZUV2ZW50VHlwZS5iaW5kKHRoaXMpfSBjaGVja2VkPXt0aGlzLnN0YXRlLnB1Ymxpc2hhYmxlPyBcImNoZWNrZWRcIjogXCJcIn0vPlxuICAgICAgICAgICAgICAgICAgICBQdWJsaXNoYWJsZVxuICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICB7cHVibGlzaE5hbWV9XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17cHVibGlzaEV2ZW50LmJpbmQodGhpcyl9IGlkPVwic2F2ZUV2ZW50XCI+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLXNhdmVcIj48L2k+U2F2ZTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2RlbGV0ZUV2ZW50LmJpbmQodGhpcyl9IGlkPVwiZGVsZXRlRXZlbnRcIj48aSBjbGFzc05hbWU9XCJmYXMgZmEtdHJhc2hcIj48L2k+RGVsZXRlPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEV2ZW50O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29uc29sZXtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICByaWdodDogMTUwcHg7XFxufVxcblxcbi5lcnJvciB7XFxuICAgIGNvbG9yOiByZWQ7XFxufVxcblxcbi5ldmVudCB7IFxcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XFxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMzMzMzMzM7XFxuICAgIGJhY2tncm91bmQ6IHJnYig2NCwgNjQsIDY0KTtcXG59XFxuXFxuLmluZm8ge1xcbiAgICBjb2xvcjogeWVsbG93Z3JlZW47XFxufVxcblxcbmxhYmVsIHtcXG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcXG59XFxuXFxuLmV2ZW50IGlucHV0IHtcXG4gICAgbWFyZ2luLWxlZnQ6MHB4O1xcbn1cXG5cXG4uZXZlbnQgdGV4dGFyZWEge1xcbiAgICBtYXJnaW4tdG9wOiA4cHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsImltcG9ydCBNZXNzYWdlc0NvbXBvbmVudCBmcm9tIFwiLi4vTWVzc2FnZXNDb21wb25lbnRcIjtcblxuZnVuY3Rpb24gZ2V0TWVzc2FnZXMgKCkge1xuICAgIGxldCBtZXNzYWdlcyA9IFt7XG4gICAgICAgIHR5cGU6IFwiaW5mb1wiLFxuICAgICAgICB0ZXh0OiBcIiMxIElORk86IFNlbGVjdCBhbnkgZWxlbWVudCBpbiB0aGUgbGVmdCBtb3N0IHBhbmUoZWRpdG9yIHBhbmUpIHRvIHNlZSBpdHMgY29udGVudFwiXG4gICAgfSx7XG4gICAgICAgIHR5cGU6IFwiaW5mb1wiLFxuICAgICAgICB0ZXh0OiBcIiMyIElORk86IENsaWNrIG9uICdBZGQnIHRvIGFkZCBhbiBjb21wb25lbnRcIlxuICAgIH1dXG5cbiAgICByZXR1cm4gPE1lc3NhZ2VzQ29tcG9uZW50IG1lc3NhZ2VzPXttZXNzYWdlc30gLz47XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldE1lc3NhZ2VzOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnNvbGV7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgcmlnaHQ6IDE1MHB4O1xcbiAgICBib3R0b206IDUwcHg7XFxufVxcblxcbi5lcnJvciB7XFxuICAgIGNvbG9yOiByZWQ7XFxufVxcblxcblxcbi5pbmZvIHtcXG4gICAgY29sb3I6IHllbGxvd2dyZWVuO1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuY2xhc3MgTWVzc2FnZUNvbXBvbmVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBsZXQgIG1lc3NhZ2UgPSB0aGlzLnByb3BzLm1lc3NhZ2U7XG5cbiAgICAgICAgaWYobWVzc2FnZS50eXBlID09PSBcImVycm9yXCIgfHwgbWVzc2FnZS50eXBlPT09IFwiaW5mb1wiKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXttZXNzYWdlLnR5cGV9PlxuICAgICAgICAgICAgICAgICAgICA8Y29kZT57bWVzc2FnZS50ZXh0fTwvY29kZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBlbHNle1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlLnR5cGUgKyBcIiBpcyB1bmlkZW50aWZpZWQgbWVzc2FnZSB0eXBlIGZvciA8TWVzc2FnZXNDb21wb25lbnQvPi4gUGxlYXNlIHVzZSBlaXRoZXIgJ2Vycm9yJyBvciAnaW5mbycgb25seS4gSWYgeW91IHJlcXVpcmUgYSBkaWZmZXJlbnQgdHlwZSwgcmFpc2UgYW4gaXNzdWUsIHNlbmQgYSBQUlwiKVxuICAgICAgICAgICAgcmV0dXJuICAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb25zb2xlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZWVycm9yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Y29kZT57XCJlcnJvciA6IHVuaWRlbnRpZmllZCBtZXNzYWdlIHR5cGUuIFBsZWFzZSB1c2UgZWl0aGVyIGVycm9yLyBpbmZvIG9ubHlcIn08L2NvZGU+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbn1cXG5cXG5cXG4uaW5mbyB7XFxuICAgIGNvbG9yOiB5ZWxsb3dncmVlbjtcXG59XCIsIFwiXCJdKTtcblxuIiwiXG4gIGZ1bmN0aW9uICB1cGRhdGVFdmVudE5hbWUoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG5hbWU6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gIGZ1bmN0aW9uICB1cGRhdGVSZWR1Y2VyKGUpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICByZWR1Y2VyOiBlLnRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuIGZ1bmN0aW9uICAgdXBkYXRlUHVibGlzaE5hbWUoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHB1Ymxpc2hOYW1lOiBlLnRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICBmdW5jdGlvbiAgdXBkYXRlRXZlbnRUeXBlKGUpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHB1Ymxpc2hhYmxlOiBlLmN1cnJlbnRUYXJnZXQuY2hlY2tlZFxuICAgICAgICB9KVxuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0ge1xuICAgICAgICB1cGRhdGVFdmVudE5hbWUsXG4gICAgICAgIHVwZGF0ZUV2ZW50VHlwZSxcbiAgICAgICAgdXBkYXRlUHVibGlzaE5hbWUsXG4gICAgICAgIHVwZGF0ZUV2ZW50VHlwZSxcbiAgICAgICAgdXBkYXRlUmVkdWNlclxuICAgIH0iLCJleHBvcnQgZnVuY3Rpb24gcHVibGlzaEV2ZW50KCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uU2F2ZSh7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLnN0YXRlLm5hbWUsXG4gICAgICAgICAgICByZWR1Y2VyOiB0aGlzLnN0YXRlLnJlZHVjZXIsXG4gICAgICAgICAgICBpbmRleDogdGhpcy5wcm9wcy5pbmRleCxcbiAgICAgICAgICAgIHB1Ymxpc2hhYmxlOiB0aGlzLnN0YXRlLnB1Ymxpc2hhYmxlLFxuICAgICAgICAgICAgcHVibGlzaE5hbWU6IHRoaXMuc3RhdGUucHVibGlzaE5hbWVcbiAgICAgICAgfSlcbiAgICB9XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVFdmVudCgpe1xuICAgICAgICB0aGlzLnByb3BzLmRlbGV0ZUV2ZW50KHRoaXMucHJvcHMuaW5kZXgpO1xuICAgIH0iLCJpbXBvcnQgTWVzc2FnZXNDb21wb25lbnQgZnJvbSBcIi4uL01lc3NhZ2VzQ29tcG9uZW50XCI7XG5cbmZ1bmN0aW9uIGdldE1lc3NhZ2VzIChlcnJvcikge1xuXG4gICAgbGV0IG1lc3NhZ2VzID0gW3tcbiAgICAgICAgdHlwZTpcImVycm9yXCIsXG4gICAgICAgIHRleHQ6XCJFUlJPUiA6IFwiK2Vycm9yK1wiZGV2ZWxvcGVyIGxvZzogbG9vayBpbiBjb25zb2xlIHJlbGF0ZWQgdG8gZXZhbFwiXG4gICAgfV1cbiAgICByZXR1cm4gKFxuICAgICAgICA8TWVzc2FnZXNDb21wb25lbnQgbWVzc2FnZXMgPSB7bWVzc2FnZXN9Lz5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldE1lc3NhZ2VzOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmV2ZW50cyB7XFxuICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuLmVycm9yIHtcXG4gICAgY29sb3I6IHJlZDtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICByaWdodDogMTUwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIlxuICAgIGV4cG9ydCBmdW5jdGlvbiB1cGRhdGVFdmVudChldmVudCkge1xuICAgICAgICBsZXQgZWxlbWVudCA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZS5lbGVtZW50KSlcbiAgICAgICAgZXZlbnQuaWQgPSB0aGlzLnN0YXRlLnNlbGVjdGVkVGFnLnNwbGl0KFwiLVwiKVsxXTtcbiAgICAgICAgLy8gQWRkIFxuICAgICAgICBpZiAoZXZlbnQuaW5kZXggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZWxlbWVudC5ldmVudHMucHVzaChldmVudCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBFZGl0XG4gICAgICAgICAgICBlbGVtZW50LmV2ZW50c1tldmVudC5pbmRleF0gPSBldmVudDtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucHJvcHMub25FdmVudHNVcGRhdGUoZWxlbWVudC5ldmVudHMpO1xuICAgIH1cblxuICAgIGV4cG9ydCBmdW5jdGlvbiBzZWxlY3RlZFRhZ0NoYW5nZWQoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNlbGVjdGVkVGFnOiBlLmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gZGVsZXRlRXZlbnQoaW5kZXgpIHtcblxuICAgICAgICAvLyBHZXQgY3VycmVudCBjb21wb25lbnQuXG4gICAgICAgIGxldCBlbGVtZW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmVsZW1lbnQpKTtcblxuICAgICAgICAvLyBSZW1vdmUgdGhlIGV2ZW50IHRvIGJlIGRlbGV0ZWQuXG4gICAgICAgIGVsZW1lbnQuZXZlbnRzLnNwbGljZShpbmRleCwgMSk7XG5cbiAgICAgICAgLy8gVXBkYXRlIGVsZW1lbnRzIHdpdGggbmV3IGV2ZW50cy5cbiAgICAgICAgdGhpcy5wcm9wcy5vbkV2ZW50c1VwZGF0ZShlbGVtZW50LmV2ZW50cyk7XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUNvbmZpZ3VyYXRpb24oY29uZmlnKXtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkNvbmZpZ1VwZGF0ZShjb25maWcpO1xuICAgIH0iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgcG9wSGlzdG9yeSB9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmNsYXNzIEhpc3RvcnkgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG5cbiAgICByZWZyZXNoVG9QcmV2aW91cygpe1xuICAgICAgICBwb3BIaXN0b3J5KCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBwcmV2aWV3XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICBIaXN0b3J5XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnJlZnJlc2hUb1ByZXZpb3VzLmJpbmQodGhpcyl9PkdvIGJhY2s8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBIaXN0b3J5OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnRhaW5lcntcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAyNnB4IC04cHggYmxhY2s7XFxuICAgIGJhY2tncm91bmQ6ICMyQzMxMzQ7XFxufVxcblwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuXG5pbXBvcnQgRHluYW1pY0NvbXBvbmVudCBmcm9tIFwiLi4vRHluYW1pY0NvbXBvbmVudFwiO1xuXG5jbGFzcyBQcmV2aWV3IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIC8vIEhlbHBzIHRvIHJlcmVuZGVyIHdoZW4gY2hhbmdlcyB0byBtYXJrdXAvZXZlbnRzIGFyZSBtYWRlIHRvIHRoZSBjb21wb25lbnQgYW5kIHByZXZpZXcgdGhlbS5cbiAgICAgICAgbGV0IHJhbmRvbUtleSA9IHRoaXMucHJvcHMuY29tcG9uZW50LmlkKih+fihNYXRoLnJhbmRvbSgpKjEwKSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBwcmV2aWV3XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICBQcmV2aWV3XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPER5bmFtaWNDb21wb25lbnQga2V5PXtyYW5kb21LZXl9IGNvbXBvbmVudD17dGhpcy5wcm9wcy5jb21wb25lbnR9Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBQcmV2aWV3OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnRhaW5lcntcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAyNnB4IC04cHggYmxhY2s7XFxuICAgIGJhY2tncm91bmQ6ICMyQzMxMzQ7XFxufVxcblwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBDb21wb25lbnRzLlxuXG5pbXBvcnQgUnVsZSBmcm9tIFwiLi9SdWxlXCI7XG5cbmltcG9ydCB7Z2V0T2JqZWN0Rm9ybWF0LCBjb252ZXJ0VG9TdHlsZVN0cmluZ30gZnJvbSBcIi4vdXRpbFwiO1xuaW1wb3J0IHtyZWFkQ29tcG9uZW50LCB3cml0ZURhdGEsIHJlYWREYXRhfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2xvY2FsU3RvcmFnZVwiO1xuLy8gU3R5bGVzLlxuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG5jbGFzcyBTdHlsZUV4cGxvcmVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcblxuICAgICAgICB2YXIgY29tcG9uZW50ID0gcmVhZENvbXBvbmVudCh0aGlzLnN0YXRlLmNvbXBvbmVudC5uYW1lKTtcbiAgICAgICAgdGhpcy5zdGF0ZS5ydWxlcyA9IGdldE9iamVjdEZvcm1hdChjb21wb25lbnQ/IGNvbXBvbmVudC5zdHlsZSA6IFwiXCIpO1xuICAgIH1cblxuICAgIGFkZFJ1bGUoKXtcbiAgICAgICAgbGV0IG5ld1J1bGVzID0gQXJyYXkuZnJvbSh0aGlzLnN0YXRlLnJ1bGVzKTtcbiAgICAgICAgbmV3UnVsZXMudW5zaGlmdCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJuZXdDbGFzc1wiLFxuICAgICAgICAgICAgZGVjbGFyYXRpb25zOlt7XG4gICAgICAgICAgICAgICAgcHJvcGVydHk6IFwibmV3UHJvcGVydHlcIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCJcIlxuICAgICAgICAgICAgfV1cbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBydWxlczogbmV3UnVsZXNcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBydWxlVXBkYXRlKHJ1bGUsIGluZGV4KSB7XG5cbiAgICAgICAgLy8gRGVsZXRlIGlmIHNlbGVjdG9yIGlzIGVtcHR5XG4gICAgICAgIGlmKCFydWxlLnNlbGVjdG9yKXtcbiAgICAgICAgICAgIHJ1bGUgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcnVsZXMgPSB0aGlzLnN0YXRlLnJ1bGVzO1xuICAgICAgICBydWxlc1tpbmRleF0gPSBydWxlO1xuXG4gICAgICAgIHZhciBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG4gICAgICAgIHZhciBjb21wb25lbnQgPSByZWFkQ29tcG9uZW50KHRoaXMuc3RhdGUuY29tcG9uZW50Lm5hbWUpO1xuXG4gICAgICAgIC8vIGNvbnZlcnQgcnVsZXMgdG8gYSBzdHlsZSBzdHJpbmcuXG4gICAgICAgIGNvbXBvbmVudC5zdHlsZSA9IGNvbnZlcnRUb1N0eWxlU3RyaW5nKHJ1bGVzLmZpbHRlcihCb29sZWFuKSk7XG4gICAgICAgIFxuICAgICAgICB3cml0ZURhdGEoXCJ1aS1lZGl0b3JcIixjb21wb25lbnRzKTtcbiAgICAgICAgdGhpcy5wcm9wcy5vbkVkaXQoKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IHJ1bGVzID0gdGhpcy5zdGF0ZS5ydWxlcy5tYXAoKHJ1bGUsaW5kZXgpPT48UnVsZSBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9IGluZGV4PXtpbmRleH0gcnVsZT17cnVsZX0gb25VcGRhdGU9e3RoaXMucnVsZVVwZGF0ZS5iaW5kKHRoaXMpfSAvPik7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5TdHlsZUV4cGxvcmVyICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMuYWRkUnVsZS5iaW5kKHRoaXMpfT4rPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAge3J1bGVzfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTdHlsZUV4cGxvcmVyO1xuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmltcG9ydCBTZWxlY3RvciBmcm9tIFwiLi9TZWxlY3RvclwiO1xuaW1wb3J0IERlY2xhcmF0aW9uIGZyb20gXCIuL0RlY2xhcmF0aW9uXCI7XG5cbmNsYXNzIFJ1bGUgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMucnVsZSk7XG4gICAgfVxuXG4gICAgdXBkYXRlU2VsZWN0b3Ioc2VsZWN0b3Ipe1xuICAgICAgICB0aGlzLnByb3BzLm9uVXBkYXRlKHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBzZWxlY3RvcixcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogdGhpcy5zdGF0ZS5kZWNsYXJhdGlvbnNcbiAgICAgICAgfSwgdGhpcy5wcm9wcy5pbmRleClcbiAgICB9XG5cbiAgICB1cGRhdGVEZWNsYXJhdGlvbnMoZGVjbGFyYXRpb25zKXtcblxuICAgICAgICB0aGlzLnByb3BzLm9uVXBkYXRlKHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiB0aGlzLnN0YXRlLnNlbGVjdG9yLFxuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBkZWNsYXJhdGlvbnNcbiAgICAgICAgfSx0aGlzLnByb3BzLmluZGV4KVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicnVsZXMgY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPFNlbGVjdG9yIFxuICAgICAgICAgICAgICAgICAgICBuYW1lPXt0aGlzLnN0YXRlLnNlbGVjdG9yfVxuICAgICAgICAgICAgICAgICAgICBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9XG4gICAgICAgICAgICAgICAgICAgIG9uRWRpdD17dGhpcy51cGRhdGVTZWxlY3Rvci5iaW5kKHRoaXMpfS8+e1wiIHtcIn1cbiAgICAgICAgICAgICAgICA8RGVjbGFyYXRpb24gXG4gICAgICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9ucz17dGhpcy5zdGF0ZS5kZWNsYXJhdGlvbnN9IFxuICAgICAgICAgICAgICAgICAgICBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9XG4gICAgICAgICAgICAgICAgICAgIG9uRWRpdD17dGhpcy51cGRhdGVEZWNsYXJhdGlvbnMuYmluZCh0aGlzKX0vPlxuICAgICAgICAgICAgICAgIHtcIn1cIn1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUnVsZTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnJ1bGVzIHtcXG4gICAgZm9udC1zaXplOiAxMXB4O1xcbn1cXG5cXG4ucnVsZXMgaW5wdXQge1xcbiAgICBib3JkZXI6IDBweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmNsYXNzIFNlbGVjdG9yIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICB1cGRhdGVTZWxlY3RvcihlKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBuYW1lOiBlLmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICB2YWx1ZUNoYW5nZWQoKXtcbiAgICAgICAgaWYodGhpcy5wcm9wcy5uYW1lIT09dGhpcy5zdGF0ZS5uYW1lKXtcbiAgICAgICAgICAgIC8vIHRoZW4gc2VsZWN0b3IgbmFtZSBjaGFuZ2VkXG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uRWRpdCh0aGlzLnN0YXRlLm5hbWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZWxlY3RUZXh0KGUpe1xuICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc2VsZWN0KCk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgYXV0b0ZvY3VzID0gdGhpcy5zdGF0ZS5uYW1lLmluY2x1ZGVzKFwibmV3Q2xhc3NcIik/IFwiYXV0b0ZvY3VzXCI6IFwiXCI7XG4gICAgICAgIHJldHVybiA8aW5wdXQgXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUubmFtZX0gXG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRvRm9jdXM9e2F1dG9Gb2N1c31cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQmx1cj17dGhpcy52YWx1ZUNoYW5nZWQuYmluZCh0aGlzKX0gXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZvY3VzPXt0aGlzLnNlbGVjdFRleHQuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnVwZGF0ZVNlbGVjdG9yLmJpbmQodGhpcyl9Lz5cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNlbGVjdG9yO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuLy8gQ29tcG9uZW50cy5cblxuaW1wb3J0IFByb3BlcnR5IGZyb20gXCIuL1Byb3BlcnR5XCI7XG5pbXBvcnQgVmFsdWUgZnJvbSBcIi4vVmFsdWVcIjtcblxuY2xhc3MgRGVjbGFyYXRpb24gZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIGFkZE5ld0RlY2xhcmF0aW9uKGluZGV4KSB7XG4gICAgICAgIGxldCBkZWNsYXJhdGlvbnMgPSB0aGlzLnN0YXRlLmRlY2xhcmF0aW9ucztcbiAgICAgICAgaW5kZXggPSBpbmRleCsxO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogWy4uLmRlY2xhcmF0aW9ucy5zbGljZSgwLGluZGV4KSx7cHJvcGVydHk6XCJhZGRQcm9wZXJ0eVwiLCB2YWx1ZTogXCJcIn0sLi4uZGVjbGFyYXRpb25zLnNsaWNlKGluZGV4LGRlY2xhcmF0aW9ucy5sZW5ndGgpXVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIG9uRWRpdChwcmV2aW91c1ZhbHVlLCBjdXJyZW50VmFsdWUsIGluZGV4KSB7XG4gICAgICAgIGxldCBkZWNsYXJhdGlvbnMgPSB0aGlzLnN0YXRlLmRlY2xhcmF0aW9ucztcbiAgICAgICAgZGVjbGFyYXRpb25zW2luZGV4XS5wcm9wZXJ0eSA9IGN1cnJlbnRWYWx1ZTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7ZGVjbGFyYXRpb25zOmRlY2xhcmF0aW9uc30pO1xuXG4gICAgICAgIGlmKGRlY2xhcmF0aW9uc1tpbmRleF0udmFsdWUpe1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkVkaXQoZGVjbGFyYXRpb25zKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25WYWx1ZUVkaXQocHJldmlvdXNWYWx1ZSwgY3VycmVudFZhbHVlLCBpbmRleCkge1xuICAgICAgICBsZXQgZGVjbGFyYXRpb25zID0gdGhpcy5zdGF0ZS5kZWNsYXJhdGlvbnM7XG4gICAgICAgIGRlY2xhcmF0aW9uc1tpbmRleF0udmFsdWUgPSBjdXJyZW50VmFsdWU7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe2RlY2xhcmF0aW9uczpkZWNsYXJhdGlvbnN9KVxuICAgICAgICB0aGlzLnByb3BzLm9uRWRpdChkZWNsYXJhdGlvbnMpXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImRlY2xhcmF0aW9uXCI+XG4gICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuZGVjbGFyYXRpb25zLm1hcCgoZGVjbGFyYXRpb24saW5kZXgpPT4gPGRpdiBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFByb3BlcnR5IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg9e2luZGV4fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwMDApfSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtkZWNsYXJhdGlvbi5wcm9wZXJ0eX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRWRpdD17dGhpcy5vbkVkaXQuYmluZCh0aGlzKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFZhbHVlIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwMDApfSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4PXtpbmRleH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17ZGVjbGFyYXRpb24udmFsdWV9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25OZXdkZWNsYXJhdGlvbj17dGhpcy5hZGROZXdEZWNsYXJhdGlvbi5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25FZGl0PXt0aGlzLm9uVmFsdWVFZGl0LmJpbmQodGhpcyl9Lz5cbiAgICAgICAgICAgICAgICA8L2Rpdj4pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBEZWNsYXJhdGlvbjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmRlY2xhcmF0aW9ue1xcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmNsYXNzIFByb3BlcnR5IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICB1cGRhdGVTZWxlY3RvcihlKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogZS5jdXJyZW50VGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgdmFsdWVDaGFuZ2VkKCl7XG4gICAgICAgIGlmKHRoaXMucHJvcHMudmFsdWUhPT10aGlzLnN0YXRlLnZhbHVlKXtcbiAgICAgICAgICAgIC8vIHRoZW4gc2VsZWN0b3IgbmFtZSBjaGFuZ2VkXG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uRWRpdCh0aGlzLnByb3BzLnZhbHVlLCB0aGlzLnN0YXRlLnZhbHVlLCB0aGlzLnByb3BzLmluZGV4KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2VsZWN0VGV4dChlKXtcbiAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnNlbGVjdCgpO1xuICAgIH1cbiAgICBcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBhdXRvRm9jdXMgPSB0aGlzLnN0YXRlLnZhbHVlLmluY2x1ZGVzKFwiYWRkUHJvcGVydHlcIik/IFwiYXV0b0ZvY3VzXCI6IFwiXCI7XG4gICAgICAgIHJldHVybiAgPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiIFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgYXV0b0ZvY3VzPXthdXRvRm9jdXN9XG4gICAgICAgICAgICAgICAgICAgIG9uQmx1cj17dGhpcy52YWx1ZUNoYW5nZWQuYmluZCh0aGlzKX0gXG4gICAgICAgICAgICAgICAgICAgIG9uRm9jdXM9e3RoaXMuc2VsZWN0VGV4dC5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy51cGRhdGVTZWxlY3Rvci5iaW5kKHRoaXMpfS8+XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQcm9wZXJ0eTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmNsYXNzIFZhbHVlIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICB1cGRhdGVTZWxlY3RvcihlKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICB2YWx1ZTogZS5jdXJyZW50VGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgdmFsdWVDaGFuZ2VkKCl7XG4gICAgICAgIGlmKHRoaXMucHJvcHMubmFtZSE9PXRoaXMuc3RhdGUudmFsdWUpe1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbkVkaXQodGhpcy5wcm9wcy52YWx1ZSwgdGhpcy5zdGF0ZS52YWx1ZSwgdGhpcy5wcm9wcy5pbmRleCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGROZXcoZSl7XG4gICAgICAgIGlmKGUua2V5PT0gXCJFbnRlclwiKXtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25OZXdkZWNsYXJhdGlvbih0aGlzLnByb3BzLmluZGV4KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNlbGVjdFRleHQoZSl7XG4gICAgICAgIGUuY3VycmVudFRhcmdldC5zZWxlY3QoKTtcbiAgICB9XG4gICAgXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgXG4gICAgICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUudmFsdWV9IFxuICAgICAgICAgICAgICAgIG9uQmx1cj17dGhpcy52YWx1ZUNoYW5nZWQuYmluZCh0aGlzKX0gXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMudXBkYXRlU2VsZWN0b3IuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICBvbkZvY3VzPXt0aGlzLnNlbGVjdFRleHQuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICBvbktleVByZXNzPXt0aGlzLmFkZE5ldy5iaW5kKHRoaXMpfS8+XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBWYWx1ZTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCJdKTtcblxuIiwiXG5mdW5jdGlvbiBjb252ZXJ0VG9TdHJpbmcocHJvcGVydHkpe1xuICAgIHJldHVybiBgXCIke3Byb3BlcnR5LnNwbGl0KFwiOlwiKVswXS50cmltKCl9XCI6XCIke3Byb3BlcnR5LnNwbGl0KFwiOlwiKVsxXS50cmltKCl9XCJgXG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRUb09iamVjdChydWxlKXtcblxuICAgIHZhciBzZWxlY3RvciA9IHJ1bGUuc3BsaXQoXCJ7XCIpWzBdLnRyaW0oKTtcbiAgICB2YXIgcHJvcGVydGllcyA9ICd7JytydWxlLnNwbGl0KFwie1wiKVsxXS5zcGxpdChcIn1cIilbMF0uc3BsaXQoXCI7XCIpLm1hcChzPT5zLnRyaW0oKSkuZmlsdGVyKEJvb2xlYW4pLm1hcChjb252ZXJ0VG9TdHJpbmcpLmpvaW4oXCIsXCIpICsnfSc7XG5cbiAgICB2YXIgZGVjbGFyYXRpb25zID0gSlNPTi5wYXJzZShwcm9wZXJ0aWVzKVxuXG4gICAgdmFyIHJ1bGUgPSB7XG4gICAgICAgIHNlbGVjdG9yOiBzZWxlY3RvcixcbiAgICAgICAgZGVjbGFyYXRpb25zOiBPYmplY3Qua2V5cyhkZWNsYXJhdGlvbnMpLm1hcChrZXk9PntcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgcHJvcGVydHk6IGtleSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZGVjbGFyYXRpb25zW2tleV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgcmV0dXJuIHJ1bGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRPYmplY3RGb3JtYXQoc3R5bGUpe1xuICAgIGlmKCFzdHlsZSB8fCBzdHlsZS5sZW5ndGg9PTApe1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHZhciBydWxlcyA9IHN0eWxlLnNwbGl0KFwifVwiKS5maWx0ZXIoQm9vbGVhbikubWFwKGl0ZW09Pml0ZW0rXCJ9XCIpO1xuICAgIHJldHVybiBydWxlcy5tYXAoY29udmVydFRvT2JqZWN0KTtcbn1cblxuZnVuY3Rpb24gcnVsZVRvU3RyaW5nKHJ1bGUpe1xuXHRyZXR1cm4gYCR7cnVsZS5zZWxlY3Rvcn0geyR7ZGVjbGFyYXRpb25Ub1N0cmluZyhydWxlLmRlY2xhcmF0aW9ucyl9fWBcbn1cbmZ1bmN0aW9uIGRlY2xhcmF0aW9uVG9TdHJpbmcoZGVjbGFyYXRpb25zKXtcblx0cmV0dXJuIGRlY2xhcmF0aW9ucy5tYXAoZGVjbGFyYXRpb249PmAke2RlY2xhcmF0aW9uLnByb3BlcnR5fToke2RlY2xhcmF0aW9uLnZhbHVlfTtgKS5qb2luKFwiXCIpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0VG9TdHlsZVN0cmluZyhydWxlcyl7XG4gICAgcmV0dXJuIHJ1bGVzLm1hcChydWxlVG9TdHJpbmcpLmpvaW4oXCJcIik7XG59XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBDb21wb25lbnRzLiBcblxuLy8gcHJpdmF0ZSAtIGV4cGFuZC9jb2xsYXBzZSBcbi8vIHB1YmxpYyAgLSBvbkNsaWNrIC0gU2hvdyBsaXN0IG9mIGNsYXNzZXMuIFxuaW1wb3J0IFRhZ3MgZnJvbSBcIi4vVGFnc1wiO1xuXG4vLyBTdHlsZXMuXG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmNsYXNzIFRhZ0V4cGxvcmVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IG5vZGVUcmVlID0gdGhpcy5wcm9wcy5ub2RlLnJlc3VsdDtcblxuICAgICAgICBpZihub2RlVHJlZT09PXVuZGVmaW5lZCB8fCB0aGlzLnByb3BzLm5vZGUuZXJyb3IhPT11bmRlZmluZWQpe1xuICAgICAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlRhZ0V4cGxvcmVyPC9kaXY+XG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInRhZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRhZ3Mgbm9kZT17bm9kZVRyZWV9Lz5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUYWdFeHBsb3JlcjtcbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXN9IGZyb20gXCIuLi91dGlsaXRpZXMvY29udmVydEpTT050b0hUTUxBdHRyaWJ1dGVzXCI7XG5jbGFzcyBUYWdzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICB2YXIgbm9kZSA9IHRoaXMucHJvcHMubm9kZTtcbiAgICAgICAgdmFyIHByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgbm9kZS5wcm9wcyk7IFxuICAgICAgICBcbiAgICAgICAgZGVsZXRlIHByb3BzLmNoaWxkcmVuXG5cbiAgICAgICAgcHJvcHMgPSBjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMocHJvcHMpO1xuXG4gICAgICAgIGlmKCFub2RlIHx8IHR5cGVvZiBub2RlID09PSBcInN0cmluZ1wiKXtcbiAgICAgICAgICAgIHJldHVybiAoPHNwYW4+bnVsbDwvc3Bhbj4pXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIG5vZGVcbiAgICAgICAgaWYodHlwZW9mIG5vZGUucHJvcHMuY2hpbGRyZW4gPT09IFwic3RyaW5nXCIpe1xuICAgICAgICAgICAgbGV0IGNoaWxkID0gbm9kZS5wcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZX0gJHtwcm9wc30+JHtjaGlsZH08LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vIENoaWxkcmVuXG4gICAgICAgIGlmKG5vZGUucHJvcHMgJiYgQXJyYXkuaXNBcnJheShub2RlLnByb3BzLmNoaWxkcmVuKSl7XG4gICAgICAgICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLnByb3BzLmNoaWxkcmVuLm1hcCgoY2hpbGQsaW5kZXgpPT48VGFncyBrZXk9e2luZGV4fSBub2RlPXtjaGlsZH0vPik7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PmB9XG4gICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vIGlmIG5vZGUgY29udGFpbnMgb25seSBvbmUgY2hpbGRyZW4sIGpzeCBnZXQgdHJhbnNwaWxlZCB0byBvYmplY3QgcmF0aGVyIHRoYW4gYXJyYXkuXG4gICAgICAgIGlmKHR5cGVvZiBub2RlLnByb3BzLmNoaWxkcmVuID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIGxldCBjaGlsZCA9IG5vZGUucHJvcHMuY2hpbGRyZW47XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PmB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGFncyBrZXk9e2luZGV4fSBub2RlPXtjaGlsZH0vPlxuICAgICAgICAgICAgICAgICAgICB7YDwvJHtub2RlLnR5cGV9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2hpbHJlbiBjb21wb25lbnQgLyBOZXN0ZWQgY29tcG9uZW50XG4gICAgICAgIGlmKHR5cGVvZiBub2RlLnR5cGUgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGUubmFtZX0vPmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjaGVjayBpZiBub2RlIGlzIG9iamVjdFxuICAgICAgICBpZih0eXBlb2Ygbm9kZS50eXBlID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZS5pZH0+YH1cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlLmlkfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PmB9XG4gICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGV9XG4gICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFnczsiLCJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMocHJvcHMpIHtcbiAgICBsZXQgc3RyaW5nID0gSlNPTi5zdHJpbmdpZnkocHJvcHMpO1xuICAgIE9iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKHByb3A9PnByb3BzW3Byb3BdPWAnJHtwcm9wc1twcm9wXX0nYCk7XG4gICAgLy8gRG9udCBjb25zaWRlciB0aGUgZW1wdHkgb2JqZWN0cy5cbiAgICBpZihzdHJpbmcubGVuZ3RoPjIpe1xuICAgICAgICBsZXQgbGlzdCA9IEpTT04uc3RyaW5naWZ5KHByb3BzKS5zcGxpdCgnXCInKS5tYXAoaXRlbT0+IHtcbiAgICAgICAgICAgIGlmKGl0ZW0uaW5jbHVkZXMoXCJ7XCIpIHx8IGl0ZW0uaW5jbHVkZXMoXCJ9XCIpKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoaXRlbT09PVwiOlwiKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCI9XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKGl0ZW09PT1cIixcIil7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiIFwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgfSkuZmlsdGVyKEJvb2xlYW4pXG5cbiAgICAgICAgcmV0dXJuIGxpc3Quam9pbihcIlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGFncyB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG59XFxuXFxuLnRhZ3MgbGkge1xcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcXG59XCIsIFwiXCJdKTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==