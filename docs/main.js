!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=12)}([function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(i=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),a=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(a).concat([o]).join("\n")}var i;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var a=this[o][0];null!=a&&(r[a]=!0)}for(o=0;o<e.length;o++){var i=e[o];null!=i[0]&&r[i[0]]||(n&&!i[2]?i[2]=n:n&&(i[2]="("+i[2]+") and ("+n+")"),t.push(i))}},t}},function(e,t,n){var r,o,a={},i=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var r=function(e,t){return t?t.querySelector(e):document.querySelector(e)}.call(this,e,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}}(),u=null,s=0,c=[],f=n(20);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=a[r.id];if(o){o.refs++;for(var i=0;i<o.parts.length;i++)o.parts[i](r.parts[i]);for(;i<r.parts.length;i++)o.parts.push(b(r.parts[i],t))}else{var l=[];for(i=0;i<r.parts.length;i++)l.push(b(r.parts[i],t));a[r.id]={id:r.id,refs:1,parts:l}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var a=e[o],i=t.base?a[0]+t.base:a[0],l={css:a[1],media:a[2],sourceMap:a[3]};r[i]?r[i].parts.push(l):n.push(r[i]={id:i,parts:[l]})}return n}function m(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=c[c.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),c.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=l(e.insertAt.before,n);n.insertBefore(t,o)}}function h(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=c.indexOf(e);t>=0&&c.splice(t,1)}function v(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var r=function(){0;return n.nc}();r&&(e.attrs.nonce=r)}return y(t,e.attrs),m(e,t),t}function y(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function b(e,t){var n,r,o,a;if(t.transform&&e.css){if(!(a="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=a}if(t.singleton){var i=s++;n=u||(u=v(t)),r=_.bind(null,n,i,!1),o=_.bind(null,n,i,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",y(t,e.attrs),m(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,a=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||a)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var i=new Blob([r],{type:"text/css"}),l=e.href;e.href=URL.createObjectURL(i),l&&URL.revokeObjectURL(l)}.bind(null,n,t),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=i()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var i=n[o];(l=a[i.id]).refs--,r.push(l)}e&&d(p(e,t),t);for(o=0;o<r.length;o++){var l;if(0===(l=r[o]).refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete a[l.id]}}}};var g,x=(g=[],function(e,t){return g[e]=t,g.filter(Boolean).join("\n")});function _(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=x(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}},function(e,t,n){"use strict";function r(e){if("ui-editor"===e){var t=JSON.parse(localStorage.getItem("ui-editor"));if(t.length)return t}}Object.defineProperty(t,"__esModule",{value:!0}),t.writeData=function(e,t){"ui-editor"===e&&localStorage.setItem("ui-editor",JSON.stringify(t))},t.readData=r,t.readComponent=function(e){var t=r("ui-editor");if(!t)return;return t.find(function(t){return t.name=e})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.checkNestedComponents=i,t.saveComponentsToWindow=function(e){e.forEach(l)},t.getNestedComponents=function e(t){var n=(0,a.readData)("ui-editor");var r=[t];if(i(t.markup)){var o=n.filter(function(e){return t.markup.includes(e.name)}),l=o.map(e).flat(3);r.push.apply(r,function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(l))}return r.filter(function(e){return e&&e.markup})},t.getChildComponents=function(e){return(0,a.readData)("ui-editor").filter(function(t){return e.includes(t.name)})};var r=n(8),o=n(9),a=n(3);function i(e){return(0,a.readData)("ui-editor").filter(function(t){return e.includes(t.name)}).length>0}function l(e){(0,o.createStylesheet)(e.style,e.name),window[e.name]=(0,r.createComponent)(e)}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=i(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))o.call(n,c)&&(u[c]=n[c]);if(r){l=r(n);for(var f=0;f<l.length;f++)a.call(n,l[f])&&(u[l[f]]=n[l[f]])}}return u}},function(e,t,n){var r=n(19);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateselectedIndex=function(e){var t=e.currentTarget.innerText.split("\n")[0],n=this.state.elements.find(function(e){return e.name===t}),r=this.state.elements.findIndex(function(e){return e.name===t});window.selectedcomponentname=n.name,this.setState({selectedIndex:r,name:n.name,markup:n.markup})},t.saveElement=function(e){var t=Array.from(this.state.elements);if(t.find(function(t){return t.name===e.name})){var n=t[this.state.selectedIndex];n=Object.assign(n,e),t[this.state.selectedIndex]=n}else{var r={name:e.name,markup:e.markup,events:[],state:e.state||"{}",style:e.style,children:[],id:Math.ceil(1e3*Math.random()),config:"{}"};t.push(r)}this.setState({elements:t,element:{name:e.name,markup:e.markup,style:e.style,state:e.state,events:e.events||[]},selectedIndex:t.length-1}),localStorage.setItem("ui-editor",JSON.stringify(t))},t.updateEvent=function(e){var t=Object.assign({},this.state).elements;t[this.state.selectedIndex].events=e,this.setState({elements:t}),localStorage.setItem("ui-editor",JSON.stringify(t))},t.onDelete=function(e){var t=Array.from(this.state.elements),n=t.findIndex(function(t){return t.name===e});t.splice(n,1),this.setState({elements:t}),localStorage.setItem("ui-editor",JSON.stringify(t))},t.updateConfig=function(e){var t=Object.assign({},this.state).elements,n=t.find(function(t){return t.name===e.parentName}),r=t.find(function(t){return t.name===e.childName});n.state=JSON.parse(n.state),void 0===n.config?n.config={}:n.config=JSON.parse(n.config);n.config[r.name]=n.config[r.name]||{},n.config[r.name].overideState=e.override,n.config[r.name].overideState?n.state[r.name]=JSON.parse(r.state):(delete n.state[r.name],delete n.config[r.name]);n.state=JSON.stringify(n.state),n.config=JSON.stringify(n.config),this.setState({elements:t}),localStorage.setItem("ui-editor",JSON.stringify(t))}},function(module,exports,__webpack_require__){"use strict";var _codeModifier=__webpack_require__(30),_nestedComponentSetup=__webpack_require__(4);function getComponentString(e){if(e.markup[3])return convertToReactcomponent(e)}function createComponent(component){var componentString=getComponentString(component);return eval(Babel.transform(componentString,{presets:["react"],plugins:["transform-es2015-classes"]}).code)}function convertToReactcomponent(e){e.events.forEach(function(e){e.id=e.id.replace("-","")});var t,n,r=function(t,n){n.forEach(function(e){var n='id="'+e.id+'"';t=t.replace(n,n+" "+e.name+"={this."+(e.id+e.name)+".bind(this)}")});var r=(0,_nestedComponentSetup.getChildComponents)(t);return r.length>0?(r.forEach(function(n){var r=n.events.filter(function(e){return!0===e.publishable});if(0!=r.length){var o=void 0;r.forEach(function(t){o=e.events.find(function(e){return e.name===t.publishName})});var a=(0,_codeModifier.codeModifier)(o.reducer,e),i=o.name+"={function(e){"+a+"}.bind(this)}";t=e.markup.replace(n.name,n.name+" "+i)}}),t.split("{state.").join("{this.state.")):t.split("{state.").join("{this.state.")}(e.markup,e.events),o=(t=r,n=JSON.parse(e.config),Object.keys(n).forEach(function(e){n[e].overideState&&(t=t.replace(e,e+" state={this.state."+e+"}"))}),t),a=e.events.map(function(t){var n=t.id+t.name,r=(0,_codeModifier.codeModifier)(t.reducer,e);return!0===t.publishable?"\n                    "+n+" (e) {\n                        "+r+"\n                        e.state = state;\n                        debugger;(1)\n                        this.props."+t.publishName+"? this.props."+t.publishName+"(e):null;\n                    }\n                    ":"\n                    "+n+" (e) {\n                        "+r+"\n                    }"}).join("\n");return"(\n    class "+e.name.split(" ").join("")+" extends Component {\n    \n        constructor(props) {\n            super(props);\n            this.state = this.props.state || "+e.state+";\n        }\n    \n        "+a+"\n    \n        render() {\n    \n            return ("+o+")\n        }\n    })\n    "}module.exports={createComponent:createComponent,getComponentString:getComponentString}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createStylesheet=function(e,t){[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(document.querySelectorAll("[data-component-name='ParentComponent']"))).forEach(function(e){e.remove()});var n=document.createElement("style");n.setAttribute("data-component-name",t),n.type="text/css",n.innerHTML=e,document.body.appendChild(n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o);n(53);var i=l(n(55));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.messages;return a.default.createElement("div",{className:"console"},e.map(function(e,t){return a.default.createElement(i.default,{key:t,message:e})}))}}]),t}();t.default=u},function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getNodeTree=getNodeTree;var _react=__webpack_require__(0),_react2=_interopRequireDefault(_react),_nestedComponentSetup=__webpack_require__(4),_localStorage=__webpack_require__(3);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}function getNodeTree(element,jsx,style,state,events){var result=void 0,error=void 0;try{var nestedComponents=(0,_nestedComponentSetup.getNestedComponents)(element);nestedComponents.length>0&&(0,_nestedComponentSetup.saveComponentsToWindow)(nestedComponents),result=eval(Babel.transform(jsx,{presets:["react"]}).code)}catch(e){error=e}finally{return _defineProperty({error:error,result:result},"result",result)}}window.React=_react2.default,window.Component=_react2.default.Component,window.saveVariants=function(e,t,n,r){var o=(0,_localStorage.readData)("ui-editor");if(e===t){var a=o.find(function(t){return t.name===e.name});a.variants=a.variants||[a.state],a.variants.push(n),a.variants=[].concat(_toConsumableArray(new Set(a.variants.map(JSON.stringify)))).map(JSON.parse).filter(Boolean),(0,_localStorage.writeData)("ui-editor",o)}else{var i=o.find(function(t){return t.name===e.name}),l=o.find(function(e){return e.name===t.name});i.variants=i.variants||[JSON.parse(i.state)];var u=JSON.parse(i.state),s={};s[l.name]=n,u=Object.assign(u,s),i.variants.push(u),i.variants=[].concat(_toConsumableArray(new Set(i.variants.map(JSON.stringify)))).map(JSON.parse).filter(Boolean),localStorage.setItem("ui-editor",JSON.stringify(o))}}},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o),i=u(n(14));n(6);var l=u(n(21));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){return a.default.createElement("div",null,a.default.createElement(l.default,null))}}]),t}();i.default.render(a.default.createElement(s,null),document.getElementById("index"))},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(5),o="function"==typeof Symbol&&Symbol.for,a=o?Symbol.for("react.element"):60103,i=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,s=o?Symbol.for("react.profiler"):60114,c=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,v=o?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function b(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function _(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||g}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=x,this.updater=n||g}_.prototype.isReactComponent={},_.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&b("85"),this.updater.enqueueSetState(this,e,t,"setState")},_.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=_.prototype;var E=k.prototype=new w;E.constructor=k,r(E,_.prototype),E.isPureReactComponent=!0;var S={current:null},T={current:null},C=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r=void 0,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)C.call(t,r)&&!O.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:T.current}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var j=/\/+/g,M=[];function I(e,t,n,r){if(M.length){var o=M.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function R(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function D(e,t,n){return null==e?0:function e(t,n,r,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case a:case i:u=!0}}if(u)return r(o,t,""===n?"."+U(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+U(l=t[s],s);u+=e(l,c,r,o)}else if(c=null===t||"object"!=typeof t?null:"function"==typeof(c=y&&t[y]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(l=t.next()).done;)u+=e(l=l.value,c=n+U(l,s++),r,o);else"object"===l&&b("31","[object Object]"==(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return u}(e,"",t,n)}function U(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function A(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?L(e,r,n,function(e){return e}):null!=e&&(N(e)&&(e=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(j,"$&/")+"/")+n)),r.push(e))}function L(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(j,"$&/")+"/"),D(e,A,t=I(t,a,r,o)),R(t)}function F(){var e=S.current;return null===e&&b("321"),e}var W={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return L(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;D(e,z,t=I(null,null,t,n)),R(t)},count:function(e){return D(e,function(){return null},null)},toArray:function(e){var t=[];return L(e,t,null,function(e){return e}),t},only:function(e){return N(e)||b("143"),e}},createRef:function(){return{current:null}},Component:_,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:v,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return F().useCallback(e,t)},useContext:function(e,t){return F().useContext(e,t)},useEffect:function(e,t){return F().useEffect(e,t)},useImperativeHandle:function(e,t,n){return F().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return F().useLayoutEffect(e,t)},useMemo:function(e,t){return F().useMemo(e,t)},useReducer:function(e,t,n){return F().useReducer(e,t,n)},useRef:function(e){return F().useRef(e)},useState:function(e){return F().useState(e)},Fragment:l,StrictMode:u,Suspense:m,createElement:P,cloneElement:function(e,t,n){null==e&&b("267",e);var o=void 0,i=r({},e.props),l=e.key,u=e.ref,s=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,s=T.current),void 0!==t.key&&(l=""+t.key);var c=void 0;for(o in e.type&&e.type.defaultProps&&(c=e.type.defaultProps),t)C.call(t,o)&&!O.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==c?c[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){c=Array(o);for(var f=0;f<o;f++)c[f]=arguments[f+2];i.children=c}return{$$typeof:a,type:e.type,key:l,ref:u,props:i,_owner:s}},createFactory:function(e){var t=P.bind(null,e);return t.type=e,t},isValidElement:N,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:s,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:S,ReactCurrentOwner:T,assign:r}},V={default:W},B=V&&W||V;e.exports=B.default||B},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(15)},function(e,t,n){"use strict";
/** @license React v16.8.6
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),o=n(5),a=n(16);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,a,i,l){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,o,a,i,l],s=0;(e=Error(t.replace(/%s/g,function(){return u[s++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var l=!1,u=null,s=!1,c=null,f={onError:function(e){l=!0,u=e}};function d(e,t,n,r,o,a,i,s,c){l=!1,u=null,function(e,t,n,r,o,a,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||i("96",e),!y[n])for(var r in t.extractEvents||i("97",e),y[n]=t,n=t.eventTypes){var o=void 0,a=n[r],l=t,u=r;b.hasOwnProperty(u)&&i("99",u),b[u]=a;var s=a.phasedRegistrationNames;if(s){for(o in s)s.hasOwnProperty(o)&&v(s[o],l,u);o=!0}else a.registrationName?(v(a.registrationName,l,u),o=!0):o=!1;o||i("98",r,e)}}}function v(e,t,n){g[e]&&i("100",e),g[e]=t,x[e]=t.eventTypes[n].dependencies}var y=[],b={},g={},x={},_=null,w=null,k=null;function E(e,t,n){var r=e.type||"unknown-event";e.currentTarget=k(n),function(e,t,n,r,o,a,f,p,m){if(d.apply(this,arguments),l){if(l){var h=u;l=!1,u=null}else i("198"),h=void 0;s||(s=!0,c=h)}}(r,t,void 0,e),e.currentTarget=null}function S(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function T(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function O(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)E(e,t[r],n[r]);else t&&E(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var P={injectEventPluginOrder:function(e){p&&i("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&i("102",t),m[t]=r,n=!0)}n&&h()}};function N(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&i("231",t,typeof n),n)}function j(e){if(null!==e&&(C=S(C,e)),e=C,C=null,e&&(T(e,O),C&&i("95"),s))throw e=c,s=!1,c=null,e}var M=Math.random().toString(36).slice(2),I="__reactInternalInstance$"+M,R="__reactEventHandlers$"+M;function D(e){if(e[I])return e[I];for(;!e[I];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[I]).tag||6===e.tag?e:null}function U(e){return!(e=e[I])||5!==e.tag&&6!==e.tag?null:e}function z(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function A(e){return e[R]||null}function L(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function F(e,t,n){(t=N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function W(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=L(t);for(t=n.length;0<t--;)F(n[t],"captured",e);for(t=0;t<n.length;t++)F(n[t],"bubbled",e)}}function V(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=S(n._dispatchListeners,t),n._dispatchInstances=S(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&V(e._targetInst,null,e)}function H(e){T(e,W)}var $=!("undefined"==typeof window||!window.document||!window.document.createElement);function J(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var q={animationend:J("Animation","AnimationEnd"),animationiteration:J("Animation","AnimationIteration"),animationstart:J("Animation","AnimationStart"),transitionend:J("Transition","TransitionEnd")},Q={},K={};function Y(e){if(Q[e])return Q[e];if(!q[e])return e;var t,n=q[e];for(t in n)if(n.hasOwnProperty(t)&&t in K)return Q[e]=n[t];return e}$&&(K=document.createElement("div").style,"AnimationEvent"in window||(delete q.animationend.animation,delete q.animationiteration.animation,delete q.animationstart.animation),"TransitionEvent"in window||delete q.transitionend.transition);var X=Y("animationend"),G=Y("animationiteration"),Z=Y("animationstart"),ee=Y("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,oe=null;function ae(){if(oe)return oe;var e,t,n=re,r=n.length,o="value"in ne?ne.value:ne.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===o[a-t];t++);return oe=o.slice(e,1<t?1-t:void 0)}function ie(){return!0}function le(){return!1}function ue(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:le,this.isPropagationStopped=le,this}function se(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ce(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=se,e.release=ce}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:le,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=le,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var a=new t;return o(a,n.prototype),n.prototype=a,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=$&&"CompositionEvent"in window,ve=null;$&&"documentMode"in document&&(ve=document.documentMode);var ye=$&&"TextEvent"in window&&!ve,be=$&&(!he||ve&&8<ve&&11>=ve),ge=String.fromCharCode(32),xe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},_e=!1;function we(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function ke(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Ee=!1;var Se={eventTypes:xe,extractEvents:function(e,t,n,r){var o=void 0,a=void 0;if(he)e:{switch(e){case"compositionstart":o=xe.compositionStart;break e;case"compositionend":o=xe.compositionEnd;break e;case"compositionupdate":o=xe.compositionUpdate;break e}o=void 0}else Ee?we(e,n)&&(o=xe.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=xe.compositionStart);return o?(be&&"ko"!==n.locale&&(Ee||o!==xe.compositionStart?o===xe.compositionEnd&&Ee&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,Ee=!0)),o=de.getPooled(o,t,n,r),a?o.data=a:null!==(a=ke(n))&&(o.data=a),H(o),a=o):a=null,(e=ye?function(e,t){switch(e){case"compositionend":return ke(t);case"keypress":return 32!==t.which?null:(_e=!0,ge);case"textInput":return(e=t.data)===ge&&_e?null:e;default:return null}}(e,n):function(e,t){if(Ee)return"compositionend"===e||!he&&we(e,t)?(e=ae(),oe=re=ne=null,Ee=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return be&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(xe.beforeInput,t,n,r)).data=e,H(t)):t=null,null===a?t:null===t?a:[a,t]}},Te=null,Ce=null,Oe=null;function Pe(e){if(e=w(e)){"function"!=typeof Te&&i("280");var t=_(e.stateNode);Te(e.stateNode,e.type,t)}}function Ne(e){Ce?Oe?Oe.push(e):Oe=[e]:Ce=e}function je(){if(Ce){var e=Ce,t=Oe;if(Oe=Ce=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Me(e,t){return e(t)}function Ie(e,t,n){return e(t,n)}function Re(){}var De=!1;function Ue(e,t){if(De)return e(t);De=!0;try{return Me(e,t)}finally{De=!1,(null!==Ce||null!==Oe)&&(Re(),je())}}var ze={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ae(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ze[e.type]:"textarea"===t}function Le(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Fe(e){if(!$)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function We(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ve(e){e._valueTracker||(e._valueTracker=function(e){var t=We(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Be(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=We(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var He=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;He.hasOwnProperty("ReactCurrentDispatcher")||(He.ReactCurrentDispatcher={current:null});var $e=/^(.*)[\\\/]/,Je="function"==typeof Symbol&&Symbol.for,qe=Je?Symbol.for("react.element"):60103,Qe=Je?Symbol.for("react.portal"):60106,Ke=Je?Symbol.for("react.fragment"):60107,Ye=Je?Symbol.for("react.strict_mode"):60108,Xe=Je?Symbol.for("react.profiler"):60114,Ge=Je?Symbol.for("react.provider"):60109,Ze=Je?Symbol.for("react.context"):60110,et=Je?Symbol.for("react.concurrent_mode"):60111,tt=Je?Symbol.for("react.forward_ref"):60112,nt=Je?Symbol.for("react.suspense"):60113,rt=Je?Symbol.for("react.memo"):60115,ot=Je?Symbol.for("react.lazy"):60116,at="function"==typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=at&&e[at]||e["@@iterator"])?e:null}function lt(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case et:return"ConcurrentMode";case Ke:return"Fragment";case Qe:return"Portal";case Xe:return"Profiler";case Ye:return"StrictMode";case nt:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Ge:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return lt(e.type);case ot:if(e=1===e._status?e._result:null)return lt(e)}return null}function ut(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,o=e._debugSource,a=lt(e.type);n=null,r&&(n=lt(r.type)),r=a,a="",o?a=" (at "+o.fileName.replace($e,"")+":"+o.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var st=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,ct=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var mt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){mt[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];mt[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){mt[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){mt[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){mt[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){mt[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){mt[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){mt[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){mt[e]=new pt(e,5,!1,e.toLowerCase(),null)});var ht=/[\-:]([a-z])/g;function vt(e){return e[1].toUpperCase()}function yt(e,t,n,r){var o=mt.hasOwnProperty(t)?mt[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!ct.call(dt,e)||!ct.call(ft,e)&&(st.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function bt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function gt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=bt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _t(e,t){null!=(t=t.checked)&&yt(e,"checked",t,!1)}function wt(e,t){_t(e,t);var n=bt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Et(e,t.type,n):t.hasOwnProperty("defaultValue")&&Et(e,t.type,bt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function kt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Et(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,vt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new pt(e,1,!1,e.toLowerCase(),null)});var St={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Tt(e,t,n){return(e=ue.getPooled(St.change,e,t,n)).type="change",Ne(n),H(e),e}var Ct=null,Ot=null;function Pt(e){j(e)}function Nt(e){if(Be(z(e)))return e}function jt(e,t){if("change"===e)return t}var Mt=!1;function It(){Ct&&(Ct.detachEvent("onpropertychange",Rt),Ot=Ct=null)}function Rt(e){"value"===e.propertyName&&Nt(Ot)&&Ue(Pt,e=Tt(Ot,e,Le(e)))}function Dt(e,t,n){"focus"===e?(It(),Ot=n,(Ct=t).attachEvent("onpropertychange",Rt)):"blur"===e&&It()}function Ut(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Ot)}function zt(e,t){if("click"===e)return Nt(t)}function At(e,t){if("input"===e||"change"===e)return Nt(t)}$&&(Mt=Fe("input")&&(!document.documentMode||9<document.documentMode));var Lt={eventTypes:St,_isInputEventSupported:Mt,extractEvents:function(e,t,n,r){var o=t?z(t):window,a=void 0,i=void 0,l=o.nodeName&&o.nodeName.toLowerCase();if("select"===l||"input"===l&&"file"===o.type?a=jt:Ae(o)?Mt?a=At:(a=Ut,i=Dt):(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=zt),a&&(a=a(e,t)))return Tt(a,n,r);i&&i(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Et(o,"number",o.value)}},Ft=ue.extend({view:null,detail:null}),Wt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Vt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Wt[e])&&!!t[e]}function Bt(){return Vt}var Ht=0,$t=0,Jt=!1,qt=!1,Qt=Ft.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Bt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Ht;return Ht=e.screenX,Jt?"mousemove"===e.type?e.screenX-t:0:(Jt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=$t;return $t=e.screenY,qt?"mousemove"===e.type?e.screenY-t:0:(qt=!0,0)}}),Kt=Qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Yt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Yt,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):a=null,a===t)return null;var i=void 0,l=void 0,u=void 0,s=void 0;"mouseout"===e||"mouseover"===e?(i=Qt,l=Yt.mouseLeave,u=Yt.mouseEnter,s="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Kt,l=Yt.pointerLeave,u=Yt.pointerEnter,s="pointer");var c=null==a?o:z(a);if(o=null==t?o:z(t),(e=i.getPooled(l,a,n,r)).type=s+"leave",e.target=c,e.relatedTarget=o,(n=i.getPooled(u,t,n,r)).type=s+"enter",n.target=o,n.relatedTarget=c,r=t,a&&r)e:{for(o=r,s=0,i=t=a;i;i=L(i))s++;for(i=0,u=o;u;u=L(u))i++;for(;0<s-i;)t=L(t),s--;for(;0<i-s;)o=L(o),i--;for(;s--;){if(t===o||t===o.alternate)break e;t=L(t),o=L(o)}t=null}else t=null;for(o=t,t=[];a&&a!==o&&(null===(s=a.alternate)||s!==o);)t.push(a),a=L(a);for(a=[];r&&r!==o&&(null===(s=r.alternate)||s!==o);)a.push(r),r=L(r);for(r=0;r<t.length;r++)V(t[r],"bubbled",e);for(r=a.length;0<r--;)V(a[r],"captured",n);return[e,n]}};function Gt(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Gt(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Gt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,a=o?o.alternate:null;if(!o||!a)break;if(o.child===a.child){for(var l=o.child;l;){if(l===n)return nn(o),e;if(l===r)return nn(o),t;l=l.sibling}i("188")}if(n.return!==r.return)n=o,r=a;else{l=!1;for(var u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l){for(u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}l||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var on=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),an=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),ln=Ft.extend({relatedTarget:null});function un(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},cn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=Ft.extend({key:function(e){if(e.key){var t=sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?cn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Bt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=Qt.extend({dataTransfer:null}),pn=Ft.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Bt}),mn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=Qt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),vn=[["abort","abort"],[X,"animationEnd"],[G,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],yn={},bn={};function gn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},yn[e]=t,bn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){gn(e,!0)}),vn.forEach(function(e){gn(e,!1)});var xn={eventTypes:yn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=bn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=bn[e];if(!o)return null;switch(e){case"keypress":if(0===un(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=ln;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case X:case G:case Z:e=on;break;case ee:e=mn;break;case"scroll":e=Ft;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=an;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Kt;break;default:e=ue}return H(t=e.getPooled(o,t,n,r)),t}},_n=xn.isInteractiveTopLevelEventType,wn=[];function kn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var o=Le(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,l=0;l<y.length;l++){var u=y[l];u&&(u=u.extractEvents(r,t,a,o))&&(i=S(i,u))}j(i)}}var En=!0;function Sn(e,t){if(!t)return null;var n=(_n(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!1)}function Tn(e,t){if(!t)return null;var n=(_n(e)?Cn:On).bind(null,e);t.addEventListener(e,n,!0)}function Cn(e,t){Ie(On,e,t)}function On(e,t){if(En){var n=Le(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===tn(n)||(n=null),wn.length){var r=wn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ue(kn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>wn.length&&wn.push(e)}}}var Pn={},Nn=0,jn="_reactListenersID"+(""+Math.random()).slice(2);function Mn(e){return Object.prototype.hasOwnProperty.call(e,jn)||(e[jn]=Nn++,Pn[e[jn]]={}),Pn[e[jn]]}function In(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Rn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Dn(e,t){var n,r=Rn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Rn(r)}}function Un(){for(var e=window,t=In();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=In((e=t.contentWindow).document)}return t}function zn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function An(e){var t=Un(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&zn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,a=Math.min(r.start,o);r=void 0===r.end?a:Math.min(r.end,o),!e.extend&&a>r&&(o=r,r=a,a=o),o=Dn(n,a);var i=Dn(n,r);o&&i&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Ln=$&&"documentMode"in document&&11>=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,Vn=null,Bn=null,Hn=!1;function $n(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Hn||null==Wn||Wn!==In(n)?null:("selectionStart"in(n=Wn)&&zn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Bn&&en(Bn,n)?null:(Bn=n,(e=ue.getPooled(Fn.select,Vn,e,t)).type="select",e.target=Wn,H(e),e))}var Jn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!a)){e:{a=Mn(a),o=x.onSelect;for(var i=0;i<o.length;i++){var l=o[i];if(!a.hasOwnProperty(l)||!a[l]){a=!1;break e}}a=!0}o=!a}if(o)return null;switch(a=t?z(t):window,e){case"focus":(Ae(a)||"true"===a.contentEditable)&&(Wn=a,Vn=t,Bn=null);break;case"blur":Bn=Vn=Wn=null;break;case"mousedown":Hn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hn=!1,$n(n,r);case"selectionchange":if(Ln)break;case"keydown":case"keyup":return $n(n,r)}return null}};function qn(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Qn(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+bt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function Kn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Yn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:bt(n)}}function Xn(e,t){var n=bt(t.value),r=bt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Gn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}P.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=A,w=U,k=z,P.injectEventPluginsByName({SimpleEventPlugin:xn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Lt,SelectEventPlugin:Jn,BeforeInputEventPlugin:Se});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr=void 0,rr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ar={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ir=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ar.hasOwnProperty(e)&&ar[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ar).forEach(function(e){ir.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ar[t]=ar[e]})});var sr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function cr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!=typeof t.style&&i("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=Mn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Tn("scroll",e);break;case"focus":case"blur":Tn("focus",e),Tn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Fe(o)&&Tn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Sn(o,e)}n[o]=!0}}}function pr(){}var mr=null,hr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var br="function"==typeof setTimeout?setTimeout:void 0,gr="function"==typeof clearTimeout?clearTimeout:void 0,xr=a.unstable_scheduleCallback,_r=a.unstable_cancelCallback;function wr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function kr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Er=[],Sr=-1;function Tr(e){0>Sr||(e.current=Er[Sr],Er[Sr]=null,Sr--)}function Cr(e,t){Er[++Sr]=e.current,e.current=t}var Or={},Pr={current:Or},Nr={current:!1},jr=Or;function Mr(e,t){var n=e.type.contextTypes;if(!n)return Or;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ir(e){return null!=(e=e.childContextTypes)}function Rr(e){Tr(Nr),Tr(Pr)}function Dr(e){Tr(Nr),Tr(Pr)}function Ur(e,t,n){Pr.current!==Or&&i("168"),Cr(Pr,t),Cr(Nr,n)}function zr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())a in e||i("108",lt(t)||"Unknown",a);return o({},n,r)}function Ar(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Or,jr=Pr.current,Cr(Pr,t),Cr(Nr,Nr.current),!0}function Lr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=zr(e,t,jr),r.__reactInternalMemoizedMergedChildContext=t,Tr(Nr),Tr(Pr),Cr(Pr,t)):Tr(Nr),Cr(Nr,n)}var Fr=null,Wr=null;function Vr(e){return function(t){try{return e(t)}catch(e){}}}function Br(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Hr(e,t,n,r){return new Br(e,t,n,r)}function $r(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Jr(e,t){var n=e.alternate;return null===n?((n=Hr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function qr(e,t,n,r,o,a){var l=2;if(r=e,"function"==typeof e)$r(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case Ke:return Qr(n.children,o,a,t);case et:return Kr(n,3|o,a,t);case Ye:return Kr(n,2|o,a,t);case Xe:return(e=Hr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=a,e;case nt:return(e=Hr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Ge:l=10;break e;case Ze:l=9;break e;case tt:l=11;break e;case rt:l=14;break e;case ot:l=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=Hr(l,n,t,o)).elementType=e,t.type=r,t.expirationTime=a,t}function Qr(e,t,n,r){return(e=Hr(7,e,r,t)).expirationTime=n,e}function Kr(e,t,n,r){return e=Hr(8,e,r,t),t=0==(1&t)?Ye:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Yr(e,t,n){return(e=Hr(6,e,null,t)).expirationTime=n,e}function Xr(e,t,n){return(t=Hr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Gr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),to(t,e)}function Zr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),to(t,e)}function eo(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function to(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,a=t.latestPingedTime;0===(o=0!==o?o:a)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function no(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var ro=(new r.Component).refs;function oo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var ao={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=_l(),o=Ka(r=Qi(r,e));o.payload=t,null!=n&&(o.callback=n),Vi(),Xa(e,o),Xi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=_l(),o=Ka(r=Qi(r,e));o.tag=Ba,o.payload=t,null!=n&&(o.callback=n),Vi(),Xa(e,o),Xi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=_l(),r=Ka(n=Qi(n,e));r.tag=Ha,null!=t&&(r.callback=t),Vi(),Xa(e,r),Xi(e,n)}};function io(e,t,n,r,o,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,a))}function lo(e,t,n){var r=!1,o=Or,a=t.contextType;return"object"==typeof a&&null!==a?a=Wa(a):(o=Ir(t)?jr:Pr.current,a=(r=null!=(r=t.contextTypes))?Mr(e,o):Or),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ao,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function uo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ao.enqueueReplaceState(t,t.state,null)}function so(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=ro;var a=t.contextType;"object"==typeof a&&null!==a?o.context=Wa(a):(a=Ir(t)?jr:Pr.current,o.context=Mr(e,a)),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(oo(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ao.enqueueReplaceState(o,o.state,null),null!==(a=e.updateQueue)&&(ti(e,a,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var co=Array.isArray;function fo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("309"),r=n.stateNode),r||i("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===ro&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&i("284"),n._owner||i("290",e)}return e}function po(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function mo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Jr(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Yr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=fo(e,t,n),r.return=e,r):((r=qr(n.type,n.key,n.props,null,e.mode,r)).ref=fo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Xr(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Qr(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Yr(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case qe:return(n=qr(t.type,t.key,t.props,null,e.mode,n)).ref=fo(e,null,t),n.return=e,n;case Qe:return(t=Xr(t,e.mode,n)).return=e,t}if(co(t)||it(t))return(t=Qr(t,e.mode,n,null)).return=e,t;po(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case qe:return n.key===o?n.type===Ke?f(e,t,n.props.children,r,o):s(e,t,n,r):null;case Qe:return n.key===o?c(e,t,n,r):null}if(co(n)||it(n))return null!==o?null:f(e,t,n,r,null);po(e,n)}return null}function m(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case qe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ke?f(t,e,r.props.children,o,r.key):s(t,e,r,o);case Qe:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(co(r)||it(r))return f(t,e=e.get(n)||null,r,o,null);po(t,r)}return null}function h(o,i,l,u){for(var s=null,c=null,f=i,h=i=0,v=null;null!==f&&h<l.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var y=p(o,f,l[h],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(o,f),i=a(y,i,h),null===c?s=y:c.sibling=y,c=y,f=v}if(h===l.length)return n(o,f),s;if(null===f){for(;h<l.length;h++)(f=d(o,l[h],u))&&(i=a(f,i,h),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(o,f);h<l.length;h++)(v=m(f,o,h,l[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),i=a(v,i,h),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach(function(e){return t(o,e)}),s}function v(o,l,u,s){var c=it(u);"function"!=typeof c&&i("150"),null==(u=c.call(u))&&i("151");for(var f=c=null,h=l,v=l=0,y=null,b=u.next();null!==h&&!b.done;v++,b=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var g=p(o,h,b.value,s);if(null===g){h||(h=y);break}e&&h&&null===g.alternate&&t(o,h),l=a(g,l,v),null===f?c=g:f.sibling=g,f=g,h=y}if(b.done)return n(o,h),c;if(null===h){for(;!b.done;v++,b=u.next())null!==(b=d(o,b.value,s))&&(l=a(b,l,v),null===f?c=b:f.sibling=b,f=b);return c}for(h=r(o,h);!b.done;v++,b=u.next())null!==(b=m(h,o,v,b.value,s))&&(e&&null!==b.alternate&&h.delete(null===b.key?v:b.key),l=a(b,l,v),null===f?c=b:f.sibling=b,f=b);return e&&h.forEach(function(e){return t(o,e)}),c}return function(e,r,a,u){var s="object"==typeof a&&null!==a&&a.type===Ke&&null===a.key;s&&(a=a.props.children);var c="object"==typeof a&&null!==a;if(c)switch(a.$$typeof){case qe:e:{for(c=a.key,s=r;null!==s;){if(s.key===c){if(7===s.tag?a.type===Ke:s.elementType===a.type){n(e,s.sibling),(r=o(s,a.type===Ke?a.props.children:a.props)).ref=fo(e,s,a),r.return=e,e=r;break e}n(e,s);break}t(e,s),s=s.sibling}a.type===Ke?((r=Qr(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=qr(a.type,a.key,a.props,null,e.mode,u)).ref=fo(e,r,a),u.return=e,e=u)}return l(e);case Qe:e:{for(s=a.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Xr(a,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Yr(a,e.mode,u)).return=e,e=r),l(e);if(co(a))return h(e,r,a,u);if(it(a))return v(e,r,a,u);if(c&&po(e,a),void 0===a&&!s)switch(e.tag){case 1:case 0:i("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var ho=mo(!0),vo=mo(!1),yo={},bo={current:yo},go={current:yo},xo={current:yo};function _o(e){return e===yo&&i("174"),e}function wo(e,t){Cr(xo,t),Cr(go,e),Cr(bo,yo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Tr(bo),Cr(bo,t)}function ko(e){Tr(bo),Tr(go),Tr(xo)}function Eo(e){_o(xo.current);var t=_o(bo.current),n=tr(t,e.type);t!==n&&(Cr(go,e),Cr(bo,n))}function So(e){go.current===e&&(Tr(bo),Tr(go))}var To=0,Co=2,Oo=4,Po=8,No=16,jo=32,Mo=64,Io=128,Ro=He.ReactCurrentDispatcher,Do=0,Uo=null,zo=null,Ao=null,Lo=null,Fo=null,Wo=null,Vo=0,Bo=null,Ho=0,$o=!1,Jo=null,qo=0;function Qo(){i("321")}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Gt(e[n],t[n]))return!1;return!0}function Yo(e,t,n,r,o,a){if(Do=a,Uo=t,Ao=null!==e?e.memoizedState:null,Ro.current=null===Ao?sa:ca,t=n(r,o),$o){do{$o=!1,qo+=1,Ao=null!==e?e.memoizedState:null,Wo=Lo,Bo=Fo=zo=null,Ro.current=ca,t=n(r,o)}while($o);Jo=null,qo=0}return Ro.current=ua,(e=Uo).memoizedState=Lo,e.expirationTime=Vo,e.updateQueue=Bo,e.effectTag|=Ho,e=null!==zo&&null!==zo.next,Do=0,Wo=Fo=Lo=Ao=zo=Uo=null,Vo=0,Bo=null,Ho=0,e&&i("300"),t}function Xo(){Ro.current=ua,Do=0,Wo=Fo=Lo=Ao=zo=Uo=null,Vo=0,Bo=null,Ho=0,$o=!1,Jo=null,qo=0}function Go(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===Fo?Lo=Fo=e:Fo=Fo.next=e,Fo}function Zo(){if(null!==Wo)Wo=(Fo=Wo).next,Ao=null!==(zo=Ao)?zo.next:null;else{null===Ao&&i("310");var e={memoizedState:(zo=Ao).memoizedState,baseState:zo.baseState,queue:zo.queue,baseUpdate:zo.baseUpdate,next:null};Fo=null===Fo?Lo=e:Fo.next=e,Ao=zo.next}return Fo}function ea(e,t){return"function"==typeof t?t(e):t}function ta(e){var t=Zo(),n=t.queue;if(null===n&&i("311"),n.lastRenderedReducer=e,0<qo){var r=n.dispatch;if(null!==Jo){var o=Jo.get(n);if(void 0!==o){Jo.delete(n);var a=t.memoizedState;do{a=e(a,o.action),o=o.next}while(null!==o);return Gt(a,t.memoizedState)||(_a=!0),t.memoizedState=a,t.baseUpdate===n.last&&(t.baseState=a),n.lastRenderedState=a,[a,r]}}return[t.memoizedState,r]}r=n.last;var l=t.baseUpdate;if(a=t.baseState,null!==l?(null!==r&&(r.next=null),r=l.next):r=null!==r?r.next:null,null!==r){var u=o=null,s=r,c=!1;do{var f=s.expirationTime;f<Do?(c||(c=!0,u=l,o=a),f>Vo&&(Vo=f)):a=s.eagerReducer===e?s.eagerState:e(a,s.action),l=s,s=s.next}while(null!==s&&s!==r);c||(u=l,o=a),Gt(a,t.memoizedState)||(_a=!0),t.memoizedState=a,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=a}return[t.memoizedState,n.dispatch]}function na(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Bo?(Bo={lastEffect:null}).lastEffect=e.next=e:null===(t=Bo.lastEffect)?Bo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Bo.lastEffect=e),e}function ra(e,t,n,r){var o=Go();Ho|=e,o.memoizedState=na(t,n,void 0,void 0===r?null:r)}function oa(e,t,n,r){var o=Zo();r=void 0===r?null:r;var a=void 0;if(null!==zo){var i=zo.memoizedState;if(a=i.destroy,null!==r&&Ko(r,i.deps))return void na(To,n,a,r)}Ho|=e,o.memoizedState=na(t,n,a,r)}function aa(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ia(){}function la(e,t,n){25>qo||i("301");var r=e.alternate;if(e===Uo||null!==r&&r===Uo)if($o=!0,e={expirationTime:Do,action:n,eagerReducer:null,eagerState:null,next:null},null===Jo&&(Jo=new Map),void 0===(n=Jo.get(t)))Jo.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Vi();var o=_l(),a={expirationTime:o=Qi(o,e),action:n,eagerReducer:null,eagerState:null,next:null},l=t.last;if(null===l)a.next=a;else{var u=l.next;null!==u&&(a.next=u),l.next=a}if(t.last=a,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var s=t.lastRenderedState,c=r(s,n);if(a.eagerReducer=r,a.eagerState=c,Gt(c,s))return}catch(e){}Xi(e,o)}}var ua={readContext:Wa,useCallback:Qo,useContext:Qo,useEffect:Qo,useImperativeHandle:Qo,useLayoutEffect:Qo,useMemo:Qo,useReducer:Qo,useRef:Qo,useState:Qo,useDebugValue:Qo},sa={readContext:Wa,useCallback:function(e,t){return Go().memoizedState=[e,void 0===t?null:t],e},useContext:Wa,useEffect:function(e,t){return ra(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Go();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Go();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=la.bind(null,Uo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Go().memoizedState=e},useState:function(e){var t=Go();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ea,lastRenderedState:e}).dispatch=la.bind(null,Uo,e),[t.memoizedState,e]},useDebugValue:ia},ca={readContext:Wa,useCallback:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Wa,useEffect:function(e,t){return oa(516,Io|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,oa(4,Oo|jo,aa.bind(null,t,e),n)},useLayoutEffect:function(e,t){return oa(4,Oo|jo,e,t)},useMemo:function(e,t){var n=Zo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ta,useRef:function(){return Zo().memoizedState},useState:function(e){return ta(ea)},useDebugValue:ia},fa=null,da=null,pa=!1;function ma(e,t){var n=Hr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ha(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function va(e){if(pa){var t=da;if(t){var n=t;if(!ha(e,t)){if(!(t=wr(n))||!ha(e,t))return e.effectTag|=2,pa=!1,void(fa=e);ma(fa,n)}fa=e,da=kr(t)}else e.effectTag|=2,pa=!1,fa=e}}function ya(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;fa=e}function ba(e){if(e!==fa)return!1;if(!pa)return ya(e),pa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=da;t;)ma(e,t),t=wr(t);return ya(e),da=fa?wr(e.stateNode):null,!0}function ga(){da=fa=null,pa=!1}var xa=He.ReactCurrentOwner,_a=!1;function wa(e,t,n,r){t.child=null===e?vo(t,null,n,r):ho(t,e.child,n,r)}function ka(e,t,n,r,o){n=n.render;var a=t.ref;return Fa(t,o),r=Yo(e,t,n,r,a,o),null===e||_a?(t.effectTag|=1,wa(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function Ea(e,t,n,r,o,a){if(null===e){var i=n.type;return"function"!=typeof i||$r(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=qr(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Sa(e,t,i,r,o,a))}return i=e.child,o<a&&(o=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(o,r)&&e.ref===t.ref)?Ma(e,t,a):(t.effectTag|=1,(e=Jr(i,r)).ref=t.ref,e.return=t,t.child=e)}function Sa(e,t,n,r,o,a){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(_a=!1,o<a)?Ma(e,t,a):Ca(e,t,n,r,a)}function Ta(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ca(e,t,n,r,o){var a=Ir(n)?jr:Pr.current;return a=Mr(t,a),Fa(t,o),n=Yo(e,t,n,r,a,o),null===e||_a?(t.effectTag|=1,wa(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ma(e,t,o))}function Oa(e,t,n,r,o){if(Ir(n)){var a=!0;Ar(t)}else a=!1;if(Fa(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),lo(t,n,r),so(t,n,r,o),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;"object"==typeof s&&null!==s?s=Wa(s):s=Mr(t,s=Ir(n)?jr:Pr.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&uo(t,i,r,s),Ja=!1;var d=t.memoizedState;u=i.state=d;var p=t.updateQueue;null!==p&&(ti(t,p,r,i,o),u=t.memoizedState),l!==r||d!==u||Nr.current||Ja?("function"==typeof c&&(oo(t,n,c,r),u=t.memoizedState),(l=Ja||io(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,l=t.memoizedProps,i.props=t.type===t.elementType?l:no(t.type,l),u=i.context,"object"==typeof(s=n.contextType)&&null!==s?s=Wa(s):s=Mr(t,s=Ir(n)?jr:Pr.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&uo(t,i,r,s),Ja=!1,u=t.memoizedState,d=i.state=u,null!==(p=t.updateQueue)&&(ti(t,p,r,i,o),d=t.memoizedState),l!==r||u!==d||Nr.current||Ja?("function"==typeof c&&(oo(t,n,c,r),d=t.memoizedState),(c=Ja||io(t,n,l,r,u,d,s))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,s)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Pa(e,t,n,r,a,o)}function Pa(e,t,n,r,o,a){Ta(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return o&&Lr(t,n,!1),Ma(e,t,a);r=t.stateNode,xa.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=ho(t,e.child,null,a),t.child=ho(t,null,l,a)):wa(e,t,l,a),t.memoizedState=r.state,o&&Lr(t,n,!0),t.child}function Na(e){var t=e.stateNode;t.pendingContext?Ur(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ur(0,t.context,!1),wo(e,t.containerInfo)}function ja(e,t,n){var r=t.mode,o=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var l=o.fallback;e=Qr(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Qr(l,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=vo(t,null,o.children,n);else null!==e.memoizedState?(l=(r=e.child).sibling,i?(n=o.fallback,o=Jr(r,r.pendingProps),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(o.child=i)),r=o.sibling=Jr(l,n,l.expirationTime),n=o,o.childExpirationTime=0,n.return=r.return=t):n=r=ho(t,r.child,o.children,n)):(l=e.child,i?(i=o.fallback,(o=Qr(null,r,0,null)).child=l,0==(1&t.mode)&&(o.child=null!==t.memoizedState?t.child.child:t.child),(r=o.sibling=Qr(i,r,n,null)).effectTag|=2,n=o,o.childExpirationTime=0,n.return=r.return=t):r=n=ho(t,l,o.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Ma(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=Jr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Jr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Ia(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Nr.current)_a=!0;else if(r<n){switch(_a=!1,t.tag){case 3:Na(t),ga();break;case 5:Eo(t);break;case 1:Ir(t.type)&&Ar(t);break;case 4:wo(t,t.stateNode.containerInfo);break;case 10:Aa(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?ja(e,t,n):null!==(t=Ma(e,t,n))?t.sibling:null}return Ma(e,t,n)}}else _a=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Mr(t,Pr.current);if(Fa(t,n),o=Yo(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Xo(),Ir(r)){var a=!0;Ar(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var l=r.getDerivedStateFromProps;"function"==typeof l&&oo(t,r,l,e),o.updater=ao,t.stateNode=o,o._reactInternalFiber=t,so(t,r,e,n),t=Pa(null,t,r,!0,a,n)}else t.tag=0,wa(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),a=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return $r(e)?1:0;if(null!=e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),a=no(e,a),l=void 0,o){case 0:l=Ca(null,t,e,a,n);break;case 1:l=Oa(null,t,e,a,n);break;case 11:l=ka(null,t,e,a,n);break;case 14:l=Ea(null,t,e,no(e.type,a),r,n);break;default:i("306",e,"")}return l;case 0:return r=t.type,o=t.pendingProps,Ca(e,t,r,o=t.elementType===r?o:no(r,o),n);case 1:return r=t.type,o=t.pendingProps,Oa(e,t,r,o=t.elementType===r?o:no(r,o),n);case 3:return Na(t),null===(r=t.updateQueue)&&i("282"),o=null!==(o=t.memoizedState)?o.element:null,ti(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(ga(),t=Ma(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(da=kr(t.stateNode.containerInfo),fa=t,o=pa=!0),o?(t.effectTag|=2,t.child=vo(t,null,r,n)):(wa(e,t,r,n),ga()),t=t.child),t;case 5:return Eo(t),null===e&&va(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,l=o.children,yr(r,o)?l=null:null!==a&&yr(r,a)&&(t.effectTag|=16),Ta(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(wa(e,t,l,n),t=t.child),t;case 6:return null===e&&va(t),null;case 13:return ja(e,t,n);case 4:return wo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ho(t,null,r,n):wa(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ka(e,t,r,o=t.elementType===r?o:no(r,o),n);case 7:return wa(e,t,t.pendingProps,n),t.child;case 8:case 12:return wa(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,l=t.memoizedProps,Aa(t,a=o.value),null!==l){var u=l.value;if(0===(a=Gt(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(l.children===o.children&&!Nr.current){t=Ma(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.contextDependencies;if(null!==s){l=u.child;for(var c=s.first;null!==c;){if(c.context===r&&0!=(c.observedBits&a)){1===u.tag&&((c=Ka(n)).tag=Ha,Xa(u,c)),u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n),c=n;for(var f=u.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<c)f.childExpirationTime=c,null!==d&&d.childExpirationTime<c&&(d.childExpirationTime=c);else{if(!(null!==d&&d.childExpirationTime<c))break;d.childExpirationTime=c}f=f.return}s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}}wa(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,Fa(t,n),r=r(o=Wa(o,a.unstable_observedBits)),t.effectTag|=1,wa(e,t,r,n),t.child;case 14:return a=no(o=t.type,t.pendingProps),Ea(e,t,o,a=no(o.type,a),r,n);case 15:return Sa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:no(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ir(r)?(e=!0,Ar(t)):e=!1,Fa(t,n),lo(t,r,o),so(t,r,o,n),Pa(null,t,r,!0,e,n)}i("156")}var Ra={current:null},Da=null,Ua=null,za=null;function Aa(e,t){var n=e.type._context;Cr(Ra,n._currentValue),n._currentValue=t}function La(e){var t=Ra.current;Tr(Ra),e.type._context._currentValue=t}function Fa(e,t){Da=e,za=Ua=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(_a=!0),e.contextDependencies=null}function Wa(e,t){return za!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(za=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ua?(null===Da&&i("308"),Ua=t,Da.contextDependencies={first:t,expirationTime:0}):Ua=Ua.next=t),e._currentValue}var Va=0,Ba=1,Ha=2,$a=3,Ja=!1;function qa(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Qa(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Ka(e){return{expirationTime:e,tag:Va,payload:null,callback:null,next:null,nextEffect:null}}function Ya(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Xa(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=qa(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=qa(e.memoizedState),o=n.updateQueue=qa(n.memoizedState)):r=e.updateQueue=Qa(o):null===o&&(o=n.updateQueue=Qa(r));null===o||r===o?Ya(r,t):null===r.lastUpdate||null===o.lastUpdate?(Ya(r,t),Ya(o,t)):(Ya(r,t),o.lastUpdate=t)}function Ga(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=qa(e.memoizedState):Za(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Za(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Qa(t)),t}function ei(e,t,n,r,a,i){switch(n.tag){case Ba:return"function"==typeof(e=n.payload)?e.call(i,r,a):e;case $a:e.effectTag=-2049&e.effectTag|64;case Va:if(null==(a="function"==typeof(e=n.payload)?e.call(i,r,a):e))break;return o({},r,a);case Ha:Ja=!0}return r}function ti(e,t,n,r,o){Ja=!1;for(var a=(t=Za(e,t)).baseState,i=null,l=0,u=t.firstUpdate,s=a;null!==u;){var c=u.expirationTime;c<o?(null===i&&(i=u,a=s),l<c&&(l=c)):(s=ei(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(c=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<o?(null===c&&(c=u,null===i&&(a=s)),l<f&&(l=f)):(s=ei(e,0,u,s,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===c?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===c&&(a=s),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=c,e.expirationTime=l,e.memoizedState=s}function ni(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),ri(t.firstEffect,n),t.firstEffect=t.lastEffect=null,ri(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function ri(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function oi(e,t){return{value:e,source:t,stack:ut(t)}}function ai(e){e.effectTag|=4}var ii=void 0,li=void 0,ui=void 0,si=void 0;ii=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},li=function(){},ui=function(e,t,n,r,a){var i=e.memoizedProps;if(i!==r){var l=t.stateNode;switch(_o(bo.current),e=null,n){case"input":i=gt(l,i),r=gt(l,r),e=[];break;case"option":i=qn(l,i),r=qn(l,r),e=[];break;case"select":i=o({},i,{value:void 0}),r=o({},r,{value:void 0}),e=[];break;case"textarea":i=Kn(l,i),r=Kn(l,r),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(l.onclick=pr)}cr(n,r),l=n=void 0;var u=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var s=i[n];for(l in s)s.hasOwnProperty(l)&&(u||(u={}),u[l]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(g.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var c=r[n];if(s=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&c!==s&&(null!=c||null!=s))if("style"===n)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(u||(u={}),u[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(u||(u={}),u[l]=c[l])}else u||(e||(e=[]),e.push(n,u)),u=c;else"dangerouslySetInnerHTML"===n?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(n,""+c)):"children"===n?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(n,""+c):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(g.hasOwnProperty(n)?(null!=c&&dr(a,n),e||s===c||(e=[])):(e=e||[]).push(n,c))}u&&(e=e||[]).push("style",u),a=e,(t.updateQueue=a)&&ai(t)}},si=function(e,t,n,r){n!==r&&ai(t)};var ci="function"==typeof WeakSet?WeakSet:Set;function fi(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ut(n)),null!==n&&lt(n.type),t=t.value,null!==e&&1===e.tag&&lt(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){qi(e,t)}else t.current=null}function pi(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==To){var o=r.destroy;r.destroy=void 0,void 0!==o&&o()}(r.tag&t)!==To&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function mi(e){switch("function"==typeof Wr&&Wr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var o=e;try{r()}catch(e){qi(o,e)}}n=n.next}while(n!==t)}break;case 1:if(di(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){qi(e,t)}break;case 5:di(e);break;case 4:yi(e)}}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(hi(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var a=t,l=o.stateNode,u=n;8===a.nodeType?a.parentNode.insertBefore(l,u):a.insertBefore(l,u)}else t.insertBefore(o.stateNode,n);else r?(l=t,u=o.stateNode,8===l.nodeType?(a=l.parentNode).insertBefore(u,l):(a=l).appendChild(u),null!=(l=l._reactRootContainer)||null!==a.onclick||(a.onclick=pr)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function yi(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var a=t,l=a;;)if(mi(l),null!==l.child&&4!==l.tag)l.child.return=l,l=l.child;else{if(l===a)break;for(;null===l.sibling;){if(null===l.return||l.return===a)break e;l=l.return}l.sibling.return=l.return,l=l.sibling}o?(a=r,l=t.stateNode,8===a.nodeType?a.parentNode.removeChild(l):a.removeChild(l)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else if(mi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function bi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:pi(Oo,Po,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,a=t.updateQueue;t.updateQueue=null,null!==a&&function(e,t,n,r,o){e[R]=o,"input"===n&&"radio"===o.type&&null!=o.name&&_t(e,o),fr(n,r),r=fr(n,o);for(var a=0;a<t.length;a+=2){var i=t[a],l=t[a+1];"style"===i?ur(e,l):"dangerouslySetInnerHTML"===i?rr(e,l):"children"===i?or(e,l):yt(e,i,l,r)}switch(n){case"input":wt(e,o);break;case"textarea":Xn(e,o);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?Qn(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?Qn(e,!!o.multiple,o.defaultValue,!0):Qn(e,!!o.multiple,o.multiple?[]:"",!1))}}(n,a,o,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=_l())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=lr("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var l=t.stateNode;null===l&&(l=t.stateNode=new ci),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Qi(t=_l(),e),null!==(e=Yi(e,t))&&(Gr(e,t),0!==(t=e.expirationTime)&&wl(e,t))}.bind(null,t,e);l.has(e)||(l.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var gi="function"==typeof WeakMap?WeakMap:Map;function xi(e,t,n){(n=Ka(n)).tag=$a,n.payload={element:null};var r=t.value;return n.callback=function(){jl(r),fi(e,t)},n}function _i(e,t,n){(n=Ka(n)).tag=$a;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===zi?zi=new Set([this]):zi.add(this));var n=t.value,o=t.stack;fi(e,t),this.componentDidCatch(n,{componentStack:null!==o?o:""})}),n}function wi(e){switch(e.tag){case 1:Ir(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return ko(),Dr(),0!=(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return So(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return ko(),null;case 10:return La(e),null;default:return null}}var ki=He.ReactCurrentDispatcher,Ei=He.ReactCurrentOwner,Si=1073741822,Ti=!1,Ci=null,Oi=null,Pi=0,Ni=-1,ji=!1,Mi=null,Ii=!1,Ri=null,Di=null,Ui=null,zi=null;function Ai(){if(null!==Ci)for(var e=Ci.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Rr();break;case 3:ko(),Dr();break;case 5:So(t);break;case 4:ko();break;case 10:La(t)}e=e.return}Oi=null,Pi=0,Ni=-1,ji=!1,Ci=null}function Li(){for(;null!==Mi;){var e=Mi.effectTag;if(16&e&&or(Mi.stateNode,""),128&e){var t=Mi.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:vi(Mi),Mi.effectTag&=-3;break;case 6:vi(Mi),Mi.effectTag&=-3,bi(Mi.alternate,Mi);break;case 4:bi(Mi.alternate,Mi);break;case 8:yi(e=Mi),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Mi=Mi.nextEffect}}function Fi(){for(;null!==Mi;){if(256&Mi.effectTag)e:{var e=Mi.alternate,t=Mi;switch(t.tag){case 0:case 11:case 15:pi(Co,To,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:no(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}Mi=Mi.nextEffect}}function Wi(e,t){for(;null!==Mi;){var n=Mi.effectTag;if(36&n){var r=Mi.alternate,o=Mi,a=t;switch(o.tag){case 0:case 11:case 15:pi(No,jo,o);break;case 1:var l=o.stateNode;if(4&o.effectTag)if(null===r)l.componentDidMount();else{var u=o.elementType===o.type?r.memoizedProps:no(o.type,r.memoizedProps);l.componentDidUpdate(u,r.memoizedState,l.__reactInternalSnapshotBeforeUpdate)}null!==(r=o.updateQueue)&&ni(0,r,l);break;case 3:if(null!==(r=o.updateQueue)){if(l=null,null!==o.child)switch(o.child.tag){case 5:l=o.child.stateNode;break;case 1:l=o.child.stateNode}ni(0,r,l)}break;case 5:a=o.stateNode,null===r&&4&o.effectTag&&vr(o.type,o.memoizedProps)&&a.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}128&n&&(null!==(o=Mi.ref)&&(a=Mi.stateNode,"function"==typeof o?o(a):o.current=a)),512&n&&(Ri=e),Mi=Mi.nextEffect}}function Vi(){null!==Di&&_r(Di),null!==Ui&&Ui()}function Bi(e,t){Ii=Ti=!0,e.current===t&&i("177");var n=e.pendingCommitExpirationTime;0===n&&i("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,o=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Gr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Gr(e,t)):t>n&&Gr(e,t)}to(0,e)}(e,o>r?o:r),Ei.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=En,hr=function(){var e=Un();if(zn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var a=0,i=-1,l=-1,u=0,s=0,c=e,f=null;t:for(;;){for(var d;c!==t||0!==r&&3!==c.nodeType||(i=a+r),c!==o||0!==n&&3!==c.nodeType||(l=a+n),3===c.nodeType&&(a+=c.nodeValue.length),null!==(d=c.firstChild);)f=c,c=d;for(;;){if(c===e)break t;if(f===t&&++u===r&&(i=a),f===o&&++s===n&&(l=a),null!==(d=c.nextSibling))break;f=(c=f).parentNode}c=d}t=-1===i||-1===l?null:{start:i,end:l}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),En=!1,Mi=r;null!==Mi;){o=!1;var l=void 0;try{Fi()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(Mi=r;null!==Mi;){o=!1,l=void 0;try{Li()}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}for(An(hr),hr=null,En=!!mr,mr=null,e.current=t,Mi=r;null!==Mi;){o=!1,l=void 0;try{Wi(e,n)}catch(e){o=!0,l=e}o&&(null===Mi&&i("178"),qi(Mi,l),null!==Mi&&(Mi=Mi.nextEffect))}if(null!==r&&null!==Ri){var u=function(e,t){Ui=Di=Ri=null;var n=rl;rl=!0;do{if(512&t.effectTag){var r=!1,o=void 0;try{var a=t;pi(Io,To,a),pi(To,Mo,a)}catch(e){r=!0,o=e}r&&qi(t,o)}t=t.nextEffect}while(null!==t);rl=n,0!==(n=e.expirationTime)&&wl(e,n),sl||rl||Cl(1073741823,!1)}.bind(null,e,r);Di=a.unstable_runWithPriority(a.unstable_NormalPriority,function(){return xr(u)}),Ui=u}Ti=Ii=!1,"function"==typeof Fr&&Fr(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(zi=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Hi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){Ci=e;e:{var a=t,l=Pi,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ir(t.type)&&Rr();break;case 3:ko(),Dr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==a&&null!==a.child||(ba(t),t.effectTag&=-3),li(t);break;case 5:So(t);var s=_o(xo.current);if(l=t.type,null!==a&&null!=t.stateNode)ui(a,t,l,u,s),a.ref!==t.ref&&(t.effectTag|=128);else if(u){var c=_o(bo.current);if(ba(t)){a=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=s;switch(a[I]=u,a[R]=d,l=void 0,s=f){case"iframe":case"object":Sn("load",a);break;case"video":case"audio":for(f=0;f<te.length;f++)Sn(te[f],a);break;case"source":Sn("error",a);break;case"img":case"image":case"link":Sn("error",a),Sn("load",a);break;case"form":Sn("reset",a),Sn("submit",a);break;case"details":Sn("toggle",a);break;case"input":xt(a,d),Sn("invalid",a),dr(p,"onChange");break;case"select":a._wrapperState={wasMultiple:!!d.multiple},Sn("invalid",a),dr(p,"onChange");break;case"textarea":Yn(a,d),Sn("invalid",a),dr(p,"onChange")}for(l in cr(s,d),f=null,d)d.hasOwnProperty(l)&&(c=d[l],"children"===l?"string"==typeof c?a.textContent!==c&&(f=["children",c]):"number"==typeof c&&a.textContent!==""+c&&(f=["children",""+c]):g.hasOwnProperty(l)&&null!=c&&dr(p,l));switch(s){case"input":Ve(a),kt(a,d,!0);break;case"textarea":Ve(a),Gn(a);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(a.onclick=pr)}l=f,u.updateQueue=l,(u=null!==l)&&ai(t)}else{d=t,p=l,a=u,f=9===s.nodeType?s:s.ownerDocument,c===Zn.html&&(c=er(p)),c===Zn.html?"script"===p?((a=f.createElement("div")).innerHTML="<script><\/script>",f=a.removeChild(a.firstChild)):"string"==typeof a.is?f=f.createElement(p,{is:a.is}):(f=f.createElement(p),"select"===p&&(p=f,a.multiple?p.multiple=!0:a.size&&(p.size=a.size))):f=f.createElementNS(c,p),(a=f)[I]=d,a[R]=u,ii(a,t,!1,!1),p=a;var m=s,h=fr(f=l,d=u);switch(f){case"iframe":case"object":Sn("load",p),s=d;break;case"video":case"audio":for(s=0;s<te.length;s++)Sn(te[s],p);s=d;break;case"source":Sn("error",p),s=d;break;case"img":case"image":case"link":Sn("error",p),Sn("load",p),s=d;break;case"form":Sn("reset",p),Sn("submit",p),s=d;break;case"details":Sn("toggle",p),s=d;break;case"input":xt(p,d),s=gt(p,d),Sn("invalid",p),dr(m,"onChange");break;case"option":s=qn(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},s=o({},d,{value:void 0}),Sn("invalid",p),dr(m,"onChange");break;case"textarea":Yn(p,d),s=Kn(p,d),Sn("invalid",p),dr(m,"onChange");break;default:s=d}cr(f,s),c=void 0;var v=f,y=p,b=s;for(c in b)if(b.hasOwnProperty(c)){var x=b[c];"style"===c?ur(y,x):"dangerouslySetInnerHTML"===c?null!=(x=x?x.__html:void 0)&&rr(y,x):"children"===c?"string"==typeof x?("textarea"!==v||""!==x)&&or(y,x):"number"==typeof x&&or(y,""+x):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(g.hasOwnProperty(c)?null!=x&&dr(m,c):null!=x&&yt(y,c,x,h))}switch(f){case"input":Ve(p),kt(p,d,!1);break;case"textarea":Ve(p),Gn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+bt(d.value));break;case"select":(s=p).multiple=!!d.multiple,null!=(p=d.value)?Qn(s,!!d.multiple,p,!1):null!=d.defaultValue&&Qn(s,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof s.onClick&&(p.onclick=pr)}(u=vr(l,u))&&ai(t),t.stateNode=a}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:a&&null!=t.stateNode?si(a,t,a.memoizedProps,u):("string"!=typeof u&&(null===t.stateNode&&i("166")),a=_o(xo.current),_o(bo.current),ba(t)?(l=(u=t).stateNode,a=u.memoizedProps,l[I]=u,(u=l.nodeValue!==a)&&ai(t)):(l=t,(u=(9===a.nodeType?a:a.ownerDocument).createTextNode(u))[I]=t,l.stateNode=u));break;case 11:break;case 13:if(u=t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=l,Ci=t;break e}u=null!==u,l=null!==a&&null!==a.memoizedState,null!==a&&!u&&l&&(null!==(a=a.child.sibling)&&(null!==(s=t.firstEffect)?(t.firstEffect=a,a.nextEffect=s):(t.firstEffect=t.lastEffect=a,a.nextEffect=null),a.effectTag=8)),(u||l)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:ko(),li(t);break;case 10:La(t);break;case 9:case 14:break;case 17:Ir(t.type)&&Rr();break;case 18:break;default:i("156")}Ci=null}if(t=e,1===Pi||1!==t.childExpirationTime){for(u=0,l=t.child;null!==l;)(a=l.expirationTime)>u&&(u=a),(s=l.childExpirationTime)>u&&(u=s),l=l.sibling;t.childExpirationTime=u}if(null!==Ci)return Ci;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=wi(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function $i(e){var t=Ia(e.alternate,e,Pi);return e.memoizedProps=e.pendingProps,null===t&&(t=Hi(e)),Ei.current=null,t}function Ji(e,t){Ti&&i("243"),Vi(),Ti=!0;var n=ki.current;ki.current=ua;var r=e.nextExpirationTimeToWorkOn;r===Pi&&e===Oi&&null!==Ci||(Ai(),Pi=r,Ci=Jr((Oi=e).current,null),e.pendingCommitExpirationTime=0);for(var o=!1;;){try{if(t)for(;null!==Ci&&!Sl();)Ci=$i(Ci);else for(;null!==Ci;)Ci=$i(Ci)}catch(t){if(za=Ua=Da=null,Xo(),null===Ci)o=!0,jl(t);else{null===Ci&&i("271");var a=Ci,l=a.return;if(null!==l){e:{var u=e,s=l,c=a,f=t;if(l=Pi,c.effectTag|=1024,c.firstEffect=c.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=s;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=s;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(s=f.updateQueue)?((s=new Set).add(d),f.updateQueue=s):s.add(d),0==(1&f.mode)){f.effectTag|=64,c.effectTag&=-1957,1===c.tag&&(null===c.alternate?c.tag=17:((l=Ka(1073741823)).tag=Ha,Xa(c,l))),c.expirationTime=1073741823;break e}s=l;var v=(c=u).pingCache;null===v?(v=c.pingCache=new gi,h=new Set,v.set(d,h)):void 0===(h=v.get(d))&&(h=new Set,v.set(d,h)),h.has(s)||(h.add(s),c=Ki.bind(null,c,d,s),d.then(c,c)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-eo(u,l))-5e3),u=m+p),0<=u&&Ni<u&&(Ni=u),f.effectTag|=2048,f.expirationTime=l;break e}f=f.return}while(null!==f);f=Error((lt(c.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ut(c))}ji=!0,f=oi(f,c),u=s;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=l,Ga(u,l=xi(u,f,l));break e;case 1:if(p=f,m=u.type,c=u.stateNode,0==(64&u.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==c&&"function"==typeof c.componentDidCatch&&(null===zi||!zi.has(c)))){u.effectTag|=2048,u.expirationTime=l,Ga(u,l=_i(u,p,l));break e}}u=u.return}while(null!==u)}Ci=Hi(a);continue}o=!0,jl(t)}}break}if(Ti=!1,ki.current=n,za=Ua=Da=null,Xo(),o)Oi=null,e.finishedWork=null;else if(null!==Ci)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&i("281"),Oi=null,ji){if(o=e.latestPendingTime,a=e.latestSuspendedTime,l=e.latestPingedTime,0!==o&&o<r||0!==a&&a<r||0!==l&&l<r)return Zr(e,r),void xl(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void xl(e,n,r,t,-1)}t&&-1!==Ni?(Zr(e,r),(t=10*(1073741822-eo(e,r)))<Ni&&(Ni=t),t=10*(1073741822-_l()),t=Ni-t,xl(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function qi(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===zi||!zi.has(r)))return Xa(n,e=_i(n,e=oi(t,e),1073741823)),void Xi(n,1073741823);break;case 3:return Xa(n,e=xi(n,e=oi(t,e),1073741823)),void Xi(n,1073741823)}n=n.return}3===e.tag&&(Xa(e,n=xi(e,n=oi(t,e),1073741823)),Xi(e,1073741823))}function Qi(e,t){var n=a.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Ti&&!Ii)r=Pi;else{switch(n){case a.unstable_ImmediatePriority:r=1073741823;break;case a.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case a.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case a.unstable_LowPriority:case a.unstable_IdlePriority:r=1;break;default:i("313")}null!==Oi&&r===Pi&&--r}return n===a.unstable_UserBlockingPriority&&(0===il||r<il)&&(il=r),r}function Ki(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Oi&&Pi===n?Oi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),to(n,e),0!==(n=e.expirationTime)&&wl(e,n)))}function Yi(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return o}function Xi(e,t){null!==(e=Yi(e,t))&&(!Ti&&0!==Pi&&t>Pi&&Ai(),Gr(e,t),Ti&&!Ii&&Oi===e||wl(e,e.expirationTime),vl>hl&&(vl=0,i("185")))}function Gi(e,t,n,r,o){return a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var Zi=null,el=null,tl=0,nl=void 0,rl=!1,ol=null,al=0,il=0,ll=!1,ul=null,sl=!1,cl=!1,fl=null,dl=a.unstable_now(),pl=1073741822-(dl/10|0),ml=pl,hl=50,vl=0,yl=null;function bl(){pl=1073741822-((a.unstable_now()-dl)/10|0)}function gl(e,t){if(0!==tl){if(t<tl)return;null!==nl&&a.unstable_cancelCallback(nl)}tl=t,e=a.unstable_now()-dl,nl=a.unstable_scheduleCallback(Tl,{timeout:10*(1073741822-t)-e})}function xl(e,t,n,r,o){e.expirationTime=r,0!==o||Sl()?0<o&&(e.timeoutHandle=br(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,bl(),ml=pl,Ol(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function _l(){return rl?ml:(kl(),0!==al&&1!==al||(bl(),ml=pl),ml)}function wl(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===el?(Zi=el=e,e.nextScheduledRoot=e):(el=el.nextScheduledRoot=e).nextScheduledRoot=Zi):t>e.expirationTime&&(e.expirationTime=t),rl||(sl?cl&&(ol=e,al=1073741823,Pl(e,1073741823,!1)):1073741823===t?Cl(1073741823,!1):gl(e,t))}function kl(){var e=0,t=null;if(null!==el)for(var n=el,r=Zi;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===el)&&i("244"),r===r.nextScheduledRoot){Zi=el=r.nextScheduledRoot=null;break}if(r===Zi)Zi=o=r.nextScheduledRoot,el.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===el){(el=n).nextScheduledRoot=Zi,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===el)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}ol=t,al=e}var El=!1;function Sl(){return!!El||!!a.unstable_shouldYield()&&(El=!0)}function Tl(){try{if(!Sl()&&null!==Zi){bl();var e=Zi;do{var t=e.expirationTime;0!==t&&pl<=t&&(e.nextExpirationTimeToWorkOn=pl),e=e.nextScheduledRoot}while(e!==Zi)}Cl(0,!0)}finally{El=!1}}function Cl(e,t){if(kl(),t)for(bl(),ml=pl;null!==ol&&0!==al&&e<=al&&!(El&&pl>al);)Pl(ol,al,pl>al),kl(),bl(),ml=pl;else for(;null!==ol&&0!==al&&e<=al;)Pl(ol,al,!1),kl();if(t&&(tl=0,nl=null),0!==al&&gl(ol,al),vl=0,yl=null,null!==fl)for(e=fl,fl=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){ll||(ll=!0,ul=e)}}if(ll)throw e=ul,ul=null,ll=!1,e}function Ol(e,t){rl&&i("253"),ol=e,al=t,Pl(e,t,!1),Cl(1073741823,!1)}function Pl(e,t,n){if(rl&&i("245"),rl=!0,n){var r=e.finishedWork;null!==r?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&(Sl()?e.finishedWork=r:Nl(e,r,t)))}else null!==(r=e.finishedWork)?Nl(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,gr(r)),Ji(e,n),null!==(r=e.finishedWork)&&Nl(e,r,t));rl=!1}function Nl(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===fl?fl=[r]:fl.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===yl?vl++:(yl=e,vl=0),a.unstable_runWithPriority(a.unstable_ImmediatePriority,function(){Bi(e,t)})}function jl(e){null===ol&&i("246"),ol.expirationTime=0,ll||(ll=!0,ul=e)}function Ml(e,t){var n=sl;sl=!0;try{return e(t)}finally{(sl=n)||rl||Cl(1073741823,!1)}}function Il(e,t){if(sl&&!cl){cl=!0;try{return e(t)}finally{cl=!1}}return e(t)}function Rl(e,t,n){sl||rl||0===il||(Cl(il,!1),il=0);var r=sl;sl=!0;try{return a.unstable_runWithPriority(a.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sl=r)||rl||Cl(1073741823,!1)}}function Dl(e,t,n,r,o){var a=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(Ir(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);i("171"),l=void 0}if(1===n.tag){var u=n.type;if(Ir(u)){n=zr(n,u,l);break e}}n=l}else n=Or;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=Ka(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Vi(),Xa(a,o),Xi(a,r),r}function Ul(e,t,n,r){var o=t.current;return Dl(e,t,n,o=Qi(_l(),o),r)}function zl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Al(e){var t=1073741822-25*(1+((1073741822-_l()+500)/25|0));t>=Si&&(t=Si-1),this._expirationTime=Si=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function Ll(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Fl(e,t,n){e={current:t=Hr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Wl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vl(e,t,n,r,o){var a=n._reactRootContainer;if(a){if("function"==typeof o){var i=o;o=function(){var e=zl(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Fl(e,!1,t)}(n,r),"function"==typeof o){var l=o;o=function(){var e=zl(a._internalRoot);l.call(e)}}Il(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,o):a.render(t,o)})}return zl(a._internalRoot)}function Bl(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return Wl(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Qe,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Te=function(e,t,n){switch(t){case"input":if(wt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=A(r);o||i("90"),Be(r),wt(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&Qn(e,!!n.multiple,t,!1)}},Al.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new Ll;return Dl(e,t,null,n,r._onCommit),r},Al.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Al.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&i("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Ol(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},Al.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},Ll.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},Ll.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&i("191",n),n()}}},Fl.prototype.render=function(e,t){var n=this._internalRoot,r=new Ll;return null!==(t=void 0===t?null:t)&&r.then(t),Ul(e,n,null,r._onCommit),r},Fl.prototype.unmount=function(e){var t=this._internalRoot,n=new Ll;return null!==(e=void 0===e?null:e)&&n.then(e),Ul(null,t,null,n._onCommit),n},Fl.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new Ll;return null!==(n=void 0===n?null:n)&&o.then(n),Ul(t,r,e,o._onCommit),o},Fl.prototype.createBatch=function(){var e=new Al(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Me=Ml,Ie=Rl,Re=function(){rl||0===il||(Cl(il,!1),il=0)};var Hl,$l,Jl={createPortal:Bl,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Wl(t)||i("200"),Vl(null,e,t,!0,n)},render:function(e,t,n){return Wl(t)||i("200"),Vl(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Wl(n)||i("200"),(null==e||void 0===e._reactInternalFiber)&&i("38"),Vl(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Wl(e)||i("40"),!!e._reactRootContainer&&(Il(function(){Vl(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Bl.apply(void 0,arguments)},unstable_batchedUpdates:Ml,unstable_interactiveUpdates:Rl,flushSync:function(e,t){rl&&i("187");var n=sl;sl=!0;try{return Gi(e,t)}finally{sl=n,Cl(1073741823,!1)}},unstable_createRoot:function(e,t){return Wl(e)||i("299","unstable_createRoot"),new Fl(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sl;sl=!0;try{Gi(e)}finally{(sl=t)||rl||Cl(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[U,z,A,P.injectEventPluginsByName,b,H,function(e){T(e,B)},Ne,je,On,j]}};$l=(Hl={findFiberByHostInstance:D,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Fr=Vr(function(e){return t.onCommitFiberRoot(n,e)}),Wr=Vr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}}(o({},Hl,{overrideProps:null,currentDispatcherRef:He.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return $l?$l(e):null}}));var ql={default:Jl},Ql=ql&&Jl||ql;e.exports=Ql.default||Ql},function(e,t,n){"use strict";e.exports=n(17)},function(e,t,n){"use strict";(function(e){
/** @license React v0.13.6
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,a=-1,i=-1,l=!1,u=!1;function s(){if(!l){var e=n.expirationTime;u?k():u=!0,w(d,e)}}function c(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var a=o,l=i;o=e,i=t;try{var u=r()}finally{o=a,i=l}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,s()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===a&&null!==n&&1===n.priorityLevel){l=!0;try{do{c()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?s():u=!1}}}function d(e){l=!0;var o=r;r=e;try{if(e)for(;null!==n;){var a=t.unstable_now();if(!(n.expirationTime<=a))break;do{c()}while(null!==n&&n.expirationTime<=a)}else if(null!==n)do{c()}while(null!==n&&!E())}finally{l=!1,r=o,null!==n?s():u=!1,f()}}var p,m,h=Date,v="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,b="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,g="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function x(e){p=b(function(t){y(m),e(t)}),m=v(function(){g(p),e(t.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var _=performance;t.unstable_now=function(){return _.now()}}else t.unstable_now=function(){return h.now()};var w,k,E,S=null;if("undefined"!=typeof window?S=window:void 0!==e&&(S=e),S&&S._schedMock){var T=S._schedMock;w=T[0],k=T[1],E=T[2],t.unstable_now=T[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var C=null,O=function(e){if(null!==C)try{C(e)}finally{C=null}};w=function(e){null!==C?setTimeout(w,0,e):(C=e,setTimeout(O,0,!1))},k=function(){C=null},E=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof b&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof g&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var P=null,N=!1,j=-1,M=!1,I=!1,R=0,D=33,U=33;E=function(){return R<=t.unstable_now()};var z=new MessageChannel,A=z.port2;z.port1.onmessage=function(){N=!1;var e=P,n=j;P=null,j=-1;var r=t.unstable_now(),o=!1;if(0>=R-r){if(!(-1!==n&&n<=r))return M||(M=!0,x(L)),P=e,void(j=n);o=!0}if(null!==e){I=!0;try{e(o)}finally{I=!1}}};var L=function(e){if(null!==P){x(L);var t=e-R+U;t<U&&D<U?(8>t&&(t=8),U=t<D?D:t):D=t,R=e+U,N||(N=!0,A.postMessage(void 0))}else M=!1};w=function(e,t){P=e,j=t,I||0>t?A.postMessage(void 0):M||(M=!0,x(L))},k=function(){P=null,N=!1,j=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,i=a;o=e,a=t.unstable_now();try{return n()}finally{o=r,a=i,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,i=a;o=n,a=t.unstable_now();try{return e()}finally{o=r,a=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==a?a:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=i+r.timeout;else switch(o){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,s();else{i=null;var l=n;do{if(l.expirationTime>r){i=l;break}l=l.next}while(l!==n);null===i?i=n:i===n&&(n=e,s()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,i=a;o=n,a=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,a=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||E())},t.unstable_continueExecution=function(){null!==n&&s()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(18))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,'body { \n    color: #d9d9d9;\n    font-family: Arial, sans-serif, Georgia, serif;\n}\n\nul {\n    border: 1px #404040 solid;\n}\n\nli , label, p {\n    font-size: 11px;\n}\n\nh4, h5, h6 {\n    border-bottom: 1px solid #333333;\n}\n\ninput, textarea { \n    font-size: 11px;\n    background: #2b2b2b;\n    color: #d9d9d9;\n    opacity: 0.75;\n    vertical-align: bottom;\n}\n\ninput[type="text"] {\n    -webkit-appearance: textarea;\n}\n\nul label input {\n    width: 10px;\n}\n\nul, li {\n    padding-left: 5px;\n    margin-top: 0px;\n    margin-bottom: 0px;\n}\n\nbutton {\n    color: rgba(255,255,255,0.5);\n    border-color: rgba(0,0,0,0.9);\n    border-width: 1px;\n    padding: 7px;\n    background-color: #343a40;\n    margin-left: 4px;\n}\n\nbutton i{\n    padding-right:4px;\n}\n\nbutton:hover {\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\nul,li, ul label {\n    color: rgba(255,255,255,0.5);\n}\n\nul label:hover, li:hover, .content:hover{\n    color: #fff;\n    background: rgb(43, 43, 43);\n}\n\n#index{\n    margin:-4px;\n}',""])},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(a)?e:(o=0===a.indexOf("//")?a:0===a.indexOf("/")?n+a:r+a.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=v(o);n(6);var i=v(n(22)),l=v(n(31)),u=v(n(37)),s=v(n(40)),c=v(n(44)),f=v(n(64)),d=v(n(69)),p=n(7),m=n(11),h=n(3);function v(e){return e&&e.__esModule?e:{default:e}}var y=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:(0,h.readData)("ui-editor")||[],components:[],selectedIndex:-1,element:{name:"",markup:"",style:"",state:"{ }",events:[]}},n.updateConfig=p.updateConfig.bind(n),n.updateEvent=p.updateEvent.bind(n),n.saveElement=p.saveElement.bind(n),n.updateselectedIndex=p.updateselectedIndex.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updatePreview",value:function(e){this.setState({previewComponent:e})}},{key:"updateStyles",value:function(){this.setState({element:this.state.elements[this.state.selectedIndex]})}},{key:"render",value:function(){var e=((0,h.readData)("ui-editor")||[])[this.state.selectedIndex]||this.state.element,t=(0,m.getNodeTree)(e,e.markup,e.style,JSON.parse(e.state),e.events);return a.default.createElement("div",null,a.default.createElement(u.default,null,a.default.createElement(i.default,{elements:this.state.elements,onSelection:this.updateselectedIndex,selectedIndex:this.state.selectedIndex})),a.default.createElement(u.default,null,a.default.createElement(c.default,{key:this.state.selectedIndex,element:e,elements:this.state.elements,onEventsUpdate:this.updateEvent,onConfigUpdate:this.updateConfig})),a.default.createElement(u.default,null,a.default.createElement(s.default,{key:Math.ceil(1e3*Math.random()),element:e,name:e.name,markup:e.markup,style:e.style,state:e.state,onSave:this.saveElement})),a.default.createElement(u.default,null,a.default.createElement(l.default,{component:e})),a.default.createElement(u.default,null,a.default.createElement(f.default,{node:t})),a.default.createElement(u.default,null,a.default.createElement(d.default,{key:Math.ceil(1e3*Math.random()),component:e,onEdit:this.updateStyles.bind(this)})))}}]),t}();t.default=y},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=f(a);n(23);var l=f(n(25)),u=n(7),s=n(29),c=n(3);function f(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={elements:n.props.elements,selectedIndex:0},n.onDelete=u.onDelete.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"createVariant",value:function(e){var t=JSON.parse(JSON.stringify(e));return t.name="Variant"+t.name,t.markup=t.markup.replace(/>(.*?)</g,">{state.variant}<"),"string"==typeof t.state?(t.state=JSON.parse(t.state),t.state.variant="text"):"object"===r(t.state)?t.state.variant="text":t.state={},t.state.variant="text",t.state=JSON.stringify(t.state),t}},{key:"generateVariant",value:function(e){var t=this.state.elements[e],n=this.createVariant(t),r=this.state.elements;r.push(n),this.setState({elements:r}),(0,c.writeData)("ui-editor",r)}},{key:"render",value:function(){var e=this,t=this.props.elements.map(function(t,n){return i.default.createElement(l.default,{key:n,index:n,selectedIndex:e.props.selectedIndex,element:t,onSelectionChange:e.props.onSelection,onExport:s.onExport.bind(e),onDelete:e.onDelete,onGenerateVariant:e.generateVariant.bind(e)})});return i.default.createElement("div",{className:"elements"},i.default.createElement("div",{className:"container elements-tab"},i.default.createElement("div",{className:"title"},"Components"),i.default.createElement("ul",null,t)))}}]),t}();t.default=d},function(e,t,n){var r=n(24);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".override {\n    line-height: 0%;\n}\n\ntextarea {\n    height: 70px;\n    width: 450px;\n}\n\n.elements{\n    position: fixed;\n}\n\n.title{\n    margin-top: 15px;\n    margin-bottom: 11px;\n    color: rgba(255,255,255,0.5);\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}\n\n.elements-tab {\n    left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(26);n(27);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"generateVariant",value:function(){this.props.onGenerateVariant(this.props.selectedIndex)}},{key:"render",value:function(){return i.default.createElement("div",{className:"background",draggable:"true",id:this.props.element.name,onDragStart:l.handleDrag.bind(this)},i.default.createElement("li",{className:this.props.index===this.props.selectedIndex?"selected component":"component",onClick:l.selectionChanged.bind(this),index:this.props.index},i.default.createElement("span",{className:"componentName"},this.props.element.name),i.default.createElement("span",null,i.default.createElement("button",{index:this.props.index,onClick:this.generateVariant.bind(this)},i.default.createElement("i",{className:"fas fa-file-export"}),"Generate Variant"),i.default.createElement("button",{index:this.props.index,onClick:this.props.onExport},i.default.createElement("i",{className:"fas fa-file-export"}),"Export"),i.default.createElement("button",{index:this.props.index,onClick:this.props.onDelete},i.default.createElement("i",{className:"fa fa-trash"}),"Delete"))))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.selectionChanged=function(e){this.props.onSelectionChange(e)},t.handleDrag=function(e){e.dataTransfer.setData("component-name",event.target.getAttribute("id"))}},function(e,t,n){var r=n(28);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".selected, .green {\n    border: 1px solid green;\n    background: rgb(43, 43, 43);\n}\n\n.background {\n    background: rgb(64, 64, 64);\n    border-bottom: 1px solid #333333;\n}\n\n.component {\n    display:flex;\n    justify-content: space-between;\n}\n\n.component .componentName{\n    padding:7px;\n}\n\n.thumbnail {\n    width: 50px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.onExport=function(){var e=(0,r.getNestedComponents)(this.state.elements[this.state.selectedIndex]);console.log(e.map(o.getComponentString).join(""))};var r=n(4),o=n(8)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.codeModifier=function(e,t){return"\n                        var state = JSON.parse(JSON.stringify(this.state))\n                        "+e+"\n                        this.setState(state);\n                        window.saveVariants("+window.selectedcomponentname+","+t.name+",state, e)\n"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o);n(32);var i=l(n(34));function l(e){return e&&e.__esModule?e:{default:e}}var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.component.id*~~(10*Math.random());return a.default.createElement("div",{className:"container preview"},a.default.createElement("div",{className:"title"},"Preview"),a.default.createElement(i.default,{key:e,component:this.props.component}))}}]),t}();t.default=u},function(e,t,n){var r=n(33);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".container{\n    border: 1px solid black;\n    padding: 5px;\n    box-shadow: 0px 8px 26px -8px black;\n    background: #2C3134;\n}\n",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r},l=n(9),u=n(4);n(35);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.component=n.props.component,(0,l.createStylesheet)(n.component.style),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"preventDefault",value:function(e){var t=document.querySelectorAll(".droptarget.green");t[0]&&(t[0].classList.remove("droptarget"),t[0].classList.remove("green")),e.target.classList.add("droptarget"),e.target.classList.add("green"),e.preventDefault()}},{key:"onDrop",value:function(e){e.preventDefault();e.dataTransfer.getData("component-name")}},{key:"render",value:function(){if(""===this.component.name)return i.default.createElement("div",null,"Nothing created.");var e=(0,u.getNestedComponents)(this.component);return e.length>0&&(0,u.saveComponentsToWindow)(e),window[this.component.name]?i.default.createElement("div",{onDrop:this.onDrop.bind(this),onDragOver:this.preventDefault.bind(this)},i.default.createElement(window[this.component.name])):i.default.createElement("div",null,"Component not rendered")}}]),t}();t.default=s},function(e,t,n){var r=n(36);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".box {\n    margin: 5px;\n    border:1px solid black;\n    padding:5px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(38);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=JSON.parse(localStorage.getItem("ui-editor-settings-draggable-component-"+n.props.children.type.name))||{style:{position:"fixed",top:"30px",left:"200px"},minimised:!1},n.state.draggable="false",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"moveDiv",value:function(e){var t=this;if("move"===e.target.id){var n=JSON.parse(JSON.stringify(this.state));n.style.top=e.pageY+"px",n.style.left=e.pageX+"px",this.setState({style:n.style},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}}},{key:"toggleMinimiseMaximise",value:function(e){var t=this;this.setState({minimised:!this.state.minimised},function(){localStorage.setItem("ui-editor-settings-draggable-component-"+t.props.children.type.name,JSON.stringify(t.state))})}},{key:"onMouseEnter",value:function(){this.setState({draggable:"true"})}},{key:"onMouseLeave",value:function(){this.setState({draggable:"false"})}},{key:"render",value:function(){return i.default.createElement("div",{draggable:this.state.draggable,id:"move",onDragEnd:this.moveDiv.bind(this),style:this.state.style},i.default.createElement("span",{title:"Move",className:"move-handle",onMouseDown:this.onMouseEnter.bind(this),onMouseUp:this.onMouseLeave.bind(this)},i.default.createElement("i",{className:"fa fa-arrows-alt fa-xs"})),this.state.minimised?i.default.createElement("span",{title:"Minimise",className:"maximise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-maximize fa-xs"})):i.default.createElement("span",{title:"Minimise",className:"minimise-handle",onClick:this.toggleMinimiseMaximise.bind(this)},i.default.createElement("i",{className:"fas fa-window-minimize fa-xs"})),this.state.minimised?i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},this.props.children.type.name)):this.props.children)}}]),t}();t.default=l},function(e,t,n){var r=n(39);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"#move > span{  \n    border: 1px solid black;\n    color: black;\n}\n\n#move .move-handle{\n    cursor: move;\n}\n\n#move .move-handle,\n#move .minimise-handle,\n#move .maximise-handle {\n    padding-left: 2px;\n    padding-right: 2px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(41);var l=n(43),u=n(3);var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=(0,u.readComponent)(n.props.name);return n.state={name:r?r.name:"",markup:r?r.markup:"",state:r?r.state:"",style:r?r.style:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"publishElement",value:function(){this.props.onSave({name:this.state.name,markup:this.state.markup,style:this.state.style,state:this.state.state})}},{key:"render",value:function(){var e=this.state.name,t=this.state.markup,n=this.state.style,r=this.state.state;return i.default.createElement("div",{className:"container editor-tab"},i.default.createElement("div",{className:"title"},"Editor"),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Name"),i.default.createElement("input",{type:"text",placeholder:"Enter element name",value:e,onChange:l.updateName.bind(this),id:"elementName"}),i.default.createElement("button",{onClick:this.publishElement.bind(this),id:"save"},i.default.createElement("i",{className:"fas fa-save"}),"Save")),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component Markup"),i.default.createElement("textarea",{value:t,onChange:l.updateMarkup.bind(this),id:"elementMarkup",title:"ID is mandatory for events"})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component CSS"),i.default.createElement("textarea",{value:n,onChange:l.updateStyle.bind(this)})),i.default.createElement("div",{className:""},i.default.createElement("div",{className:"title"},"Component State"),i.default.createElement("textarea",{value:r,onChange:l.updateState.bind(this),id:"elementState"})))}}]),t}();t.default=s},function(e,t,n){var r=n(42);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".hidden{\n    display: none;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateName=function(e){this.setState({name:e.currentTarget.value})},t.updateMarkup=function(e){this.setState({markup:e.currentTarget.value})},t.updateStyle=function(e){this.setState({style:e.currentTarget.value})},t.updateState=function(e){this.setState({state:e.currentTarget.value})},t.getPropertyContainingProps=function(e){var t=[],n=void 0;try{n=JSON.parse(e.state)}catch(e){console.error("Error: Child state is an invalid json, try an online validator on below string"),console.log(child.state)}for(var r in n)n[r].includes("prop")&&t.push(r);return t}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=p(o),i=p(n(45)),l=p(n(48)),u=p(n(49)),s=p(n(60));n(61);var c=n(63),f=n(11),d=n(3);function p(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n.state.selectedTag="",n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this,t=this.props.element;if(0==this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,'Looks like you do not have any Web component created. Type some "html" on the right "Editor" tab'));if(void 0===t.name&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("p",null,"Looks like you have not selected any component. Click on any of the component in the left pane."));var n=(0,f.getNodeTree)(t,t.markup,t.style,JSON.parse(t.state),t.events);if(void 0!==n.error)return(0,s.default)(n.error);if(void 0===n.result&&0!=this.state.elements.length)return a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"));var r=this.state.selectedTag||"",o=void 0,p=void 0;if(r.includes("child-component-")){var m=(0,d.readData)("ui-editor"),h=r.split("child-component-")[1],v=m.find(function(e){return e.name===h}).events.filter(function(e){return!0===e.publishable}).map(function(e){return e.publishName}),y=t.events.map(function(t,n){return a.default.createElement(u.default,{key:n,index:n,event:t,selectedTagID:r,eventNames:v,onSave:c.updateEvent.bind(e),deleteEvent:c.deleteEvent.bind(e)})});o=r?y.filter(function(e){return r.includes(e.props.event.id)}):null,p=a.default.createElement(i.default,{onChange:c.updateConfiguration.bind(this),childName:h,parent:t})}else{var b=t.events.map(function(t,n){return a.default.createElement(u.default,{key:n,index:n,event:t,selectedTagID:r,eventNames:[],onSave:c.updateEvent.bind(e),deleteEvent:c.deleteEvent.bind(e)})});o=r?b.filter(function(e){return r.includes(e.props.event.id)}):null}return a.default.createElement("div",null,a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"Settings"),a.default.createElement("div",{className:"tags"},a.default.createElement(l.default,{node:n.result,onSelectedTagChanged:c.selectedTagChanged.bind(this)})),p,a.default.createElement("div",{className:"title"},"Events"),a.default.createElement("div",null,a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"Existing",a.default.createElement("div",null,o))),a.default.createElement("li",null,a.default.createElement("div",{className:"title"},"New",a.default.createElement("div",null,a.default.createElement(u.default,{key:t.events.length,eventNames:[],selectedTagID:r,onSave:c.updateEvent.bind(this)}))))))))}}]),t}();t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(46);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),r=JSON.parse(n.props.parent.config)[n.props.childName]||{overideState:!1};return n.state={override:r.overideState},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"toggelOverride",value:function(){this.setState({override:!this.state.override}),this.props.onChange({override:!this.state.override,childName:this.props.childName,parentName:this.props.parent.name})}},{key:"render",value:function(){return i.default.createElement("div",{className:"option-group"},i.default.createElement("p",{className:"option-group-label"},i.default.createElement("span",{className:"title"},"Child Configurations"),i.default.createElement("span",{className:"panel expanded"})),i.default.createElement("div",{className:"content"},i.default.createElement("div",{className:"option"},i.default.createElement("label",null,"Override child state"),i.default.createElement("input",{type:"checkbox",onChange:this.toggelOverride.bind(this),checked:this.state.override?"checked":""}))))}}]),t}();t.default=l},function(e,t,n){var r=n(47);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.configurator {\n    background: rgb(64, 64, 64);\n    margin-top: 10px;\n    padding: 5px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r};var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this,n=this.props.node;if(!n)return l.default.createElement("span",null,"null");if("string"==typeof n)return l.default.createElement("li",null,n);var r=n.props.id?"-"+n.props.id:"";if(n.props&&Array.isArray(n.props.children)){var a=n.props.children.map(function(n,r){return l.default.createElement(t,{key:r,node:n,onSelectedTagChanged:e.props.onSelectedTagChanged})});return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:n.type+r}),n.type+r),a)}if("object"===o(n.props.children)){var i=n.props.children;return l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",onChange:this.props.onSelectedTagChanged,value:n.type+r}),n.type+r),l.default.createElement(t,{key:index,node:i,onSelectedTagChanged:this.props.onSelectedTagChanged}))}return"function"==typeof n.type?l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:"child-component-"+n.type.name,onChange:this.props.onSelectedTagChanged}),n.type.name)):l.default.createElement("ul",null,l.default.createElement("label",null,l.default.createElement("input",{type:"radio",name:"selectedElement",value:n.type+r,onChange:this.props.onSelectedTagChanged}),n.type+r))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=s(o);n(50);var i=s(n(52)),l=n(58),u=n(59);function s(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={name:n.props.event?n.props.event.name:"",reducer:n.props.event?n.props.event.reducer:"",publishable:n.props.event?n.props.event.publishable:"",publishName:n.props.event?n.props.event.publishName:""},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){if(void 0===this.props.selectedTagID)return(0,i.default)();var e=this.state.publishable?a.default.createElement("input",{type:"text",onChange:l.updatePublishName.bind(this),value:this.state.publishName,placeholder:"Enter event publish name for other components to subscribe to"}):null,t=this.props.eventNames.map(function(e){return a.default.createElement("option",{value:e})});return a.default.createElement("div",{className:"event"},a.default.createElement("input",{list:"browsers",type:"text",onChange:l.updateEventName.bind(this),value:this.state.name,placeholder:"Enter event name",title:"Event Name"}),a.default.createElement("datalist",{id:"browsers"},t),a.default.createElement("br",null),a.default.createElement("textarea",{onChange:l.updateReducer.bind(this),value:this.state.reducer,placeholder:"Enter state reducer",title:"Reducer"}),a.default.createElement("div",null,a.default.createElement("label",null,a.default.createElement("input",{type:"checkbox",onChange:l.updateEventType.bind(this),checked:this.state.publishable?"checked":""}),"Publishable"),e,a.default.createElement("button",{onClick:u.publishEvent.bind(this),id:"saveEvent"},a.default.createElement("i",{className:"fas fa-save"}),"Save"),a.default.createElement("button",{onClick:u.deleteEvent.bind(this),id:"deleteEvent"},a.default.createElement("i",{className:"fas fa-trash"}),"Delete")))}}]),t}();t.default=c},function(e,t,n){var r=n(51);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n}\n\n.error {\n    color: red;\n}\n\n.event { \n    padding-left: 10px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    border-top: 1px solid #333333;\n    background: rgb(64, 64, 64);\n}\n\n.info {\n    color: yellowgreen;\n}\n\nlabel {\n    padding-right: 10px;\n}\n\n.event input {\n    margin-left:0px;\n}\n\n.event textarea {\n    margin-top: 8px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(10),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(){return React.createElement(a.default,{messages:[{type:"info",text:"#1 INFO: Select any element in the left most pane(editor pane) to see its content"},{type:"info",text:"#2 INFO: Click on 'Add' to add an component"}]})}},function(e,t,n){var r=n(54);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".console{\n    position: fixed;\n    right: 150px;\n    bottom: 50px;\n}\n\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(56);var l=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"render",value:function(){var e=this.props.message;return"error"===e.type||"info"===e.type?i.default.createElement("div",{className:e.type},i.default.createElement("code",null,e.text)):(console.error(e.type+" is unidentified message type for <MessagesComponent/>. Please use either 'error' or 'info' only. If you require a different type, raise an issue, send a PR"),i.default.createElement("div",{className:"console"},i.default.createElement("div",{className:"eerror"},i.default.createElement("code",null,"error : unidentified message type. Please use either error/ info only"))))}}]),t}();t.default=l},function(e,t,n){var r=n(57);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"\n.error {\n    color: red;\n}\n\n\n.info {\n    color: yellowgreen;\n}",""])},function(e,t,n){"use strict";var r;function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e){this.setState({publishable:e.currentTarget.checked})}e.exports=(o(r={updateEventName:function(e){this.setState({name:e.target.value})},updateEventType:a,updatePublishName:function(e){this.setState({publishName:e.target.value})}},"updateEventType",a),o(r,"updateReducer",function(e){this.setState({reducer:e.target.value})}),r)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.publishEvent=function(){this.props.onSave({name:this.state.name,reducer:this.state.reducer,index:this.props.index,publishable:this.state.publishable,publishName:this.state.publishName})},t.deleteEvent=function(){this.props.deleteEvent(this.props.index)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(10),a=(r=o)&&r.__esModule?r:{default:r};t.default=function(e){var t=[{type:"error",text:"ERROR : "+e+"developer log: look in console related to eval"}];return React.createElement(a.default,{messages:t})}},function(e,t,n){var r=n(62);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".events {\n    border:1px solid black;\n    padding: 5px;\n}\n\n.error {\n    color: red;\n    position: fixed;\n    right: 150px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.updateEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));e.id=this.state.selectedTag.split("-")[1],void 0===e.index?t.events.push(e):t.events[e.index]=e;this.props.onEventsUpdate(t.events)},t.selectedTagChanged=function(e){this.setState({selectedTag:e.currentTarget.value})},t.deleteEvent=function(e){var t=JSON.parse(JSON.stringify(this.state.element));t.events.splice(e,1),this.props.onEventsUpdate(t.events)},t.updateConfiguration=function(e){this.props.onConfigUpdate(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=l(o),i=l(n(65));function l(e){return e&&e.__esModule?e:{default:e}}n(67);var u=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"render",value:function(){var e=this.props.node.result;return void 0===e||void 0!==this.props.node.error?a.default.createElement("div",null):a.default.createElement("div",{className:"container events-tab"},a.default.createElement("div",{className:"title"},"TagExplorer"),a.default.createElement("ul",{className:"tags"},a.default.createElement(i.default,{node:e})))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(0),l=(r=i)&&r.__esModule?r:{default:r},u=n(66);var s=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,i.Component),a(t,[{key:"render",value:function(){var e=this.props.node,n=Object.assign({},e.props);if(delete n.children,n=(0,u.convertJSONtoHTMLAttributes)(n),!e)return l.default.createElement("span",null,"null");if(e.props&&Array.isArray(e.props.children)){var r=e.props.children.map(function(e,n){return l.default.createElement(t,{key:n,node:e})});return l.default.createElement("li",null,"<"+e.type+" "+n+">",r,"</"+e.type+">")}if("object"===o(e.props.children)){var a=e.props.children;return l.default.createElement("li",null,"<"+e.type+" "+n+">",l.default.createElement(t,{key:index,node:a}),"</"+e.type+">")}if("string"==typeof e.props.children){var i=e.props.children;return l.default.createElement("li",null,"<"+e.type+" "+n+">"+i+"</"+e.type+">")}return"function"==typeof e.type?l.default.createElement("li",null,"<"+e.type.name+">","</"+e.type.name+">"):"object"===o(e.type)?l.default.createElement("li",null,"<"+e.type.id+">","</"+e.type.id+">"):l.default.createElement("li",null,"<"+e.type+" "+n+">",e.type,"</"+e.type+">")}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.convertJSONtoHTMLAttributes=function(e){var t=JSON.stringify(e);if(Object.keys(e).forEach(function(t){return e[t]="'"+e[t]+"'"}),t.length>2){return JSON.stringify(e).split('"').map(function(e){if(!e.includes("{")&&!e.includes("}"))return":"===e?"=":","===e?" ":e}).filter(Boolean).join("")}return""}},function(e,t,n){var r=n(68);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".tags {\n    font-size: 11px;\n}\n\n.tags li {\n    padding-left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=s(o),i=s(n(70)),l=n(85),u=n(3);function s(e){return e&&e.__esModule?e:{default:e}}n(86);var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));n.state=Object.assign({},n.props);var r=(0,u.readComponent)(n.state.component.name);return n.state.rules=(0,l.getObjectFormat)(r?r.style:""),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"addRule",value:function(){var e=Array.from(this.state.rules);e.unshift({selector:"newClass",declarations:[{property:"newProperty",value:""}]}),this.setState({rules:e})}},{key:"ruleUpdate",value:function(e,t){e.selector||(e=void 0);var n=this.state.rules;n[t]=e;var r=(0,u.readData)("ui-editor");(0,u.readComponent)(this.state.component.name).style=(0,l.convertToStyleString)(n.filter(Boolean)),(0,u.writeData)("ui-editor",r),this.props.onEdit()}},{key:"render",value:function(){var e=this,t=this.state.rules.map(function(t,n){return a.default.createElement(i.default,{key:Math.ceil(1e3*Math.random()),index:n,rule:t,onUpdate:e.ruleUpdate.bind(e)})});return a.default.createElement("div",{className:"container"},a.default.createElement("div",{className:"title"},"StyleExplorer",a.default.createElement("button",{onClick:this.addRule.bind(this)},"+")),t)}}]),t}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(71);var i=u(n(73)),l=u(n(76));function u(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props.rule),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"updateSelector",value:function(e){this.props.onUpdate({selector:e,declarations:this.state.declarations},this.props.index)}},{key:"updateDeclarations",value:function(e){this.props.onUpdate({selector:this.state.selector,declarations:e},this.props.index)}},{key:"render",value:function(){return a.default.createElement("div",{className:"rules container"},a.default.createElement(i.default,{name:this.state.selector,key:Math.ceil(1e3*Math.random()),onEdit:this.updateSelector.bind(this)})," {",a.default.createElement(l.default,{declarations:this.state.declarations,key:Math.ceil(1e3*Math.random()),onEdit:this.updateDeclarations.bind(this)}),"}")}}]),t}();t.default=s},function(e,t,n){var r=n(72);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".rules {\n    font-size: 11px;\n}\n\n.rules input {\n    border: 0px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(74);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({name:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.name!==this.state.name&&this.props.onEdit(this.state.name)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){var e=this.state.name.includes("newClass")?"autoFocus":"";return i.default.createElement("input",{type:"text",value:this.state.name,autoFocus:e,onBlur:this.valueChanged.bind(this),onFocus:this.selectText.bind(this),onChange:this.updateSelector.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(75);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=n(0),a=u(o);n(77);var i=u(n(79)),l=u(n(82));function u(e){return e&&e.__esModule?e:{default:e}}function s(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}var c=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),r(t,[{key:"addNewDeclaration",value:function(e){var t=this.state.declarations;e+=1,this.setState({declarations:[].concat(s(t.slice(0,e)),[{property:"addProperty",value:""}],s(t.slice(e,t.length)))})}},{key:"onEdit",value:function(e,t,n){var r=this.state.declarations;r[n].property=t,this.setState({declarations:r}),r[n].value&&this.props.onEdit(r)}},{key:"onValueEdit",value:function(e,t,n){var r=this.state.declarations;r[n].value=t,this.setState({declarations:r}),this.props.onEdit(r)}},{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"declaration"},this.state.declarations.map(function(t,n){return a.default.createElement("div",{key:n},a.default.createElement(i.default,{index:n,key:Math.ceil(1e3*Math.random()),value:t.property,onEdit:e.onEdit.bind(e)}),":",a.default.createElement(l.default,{key:Math.ceil(1e3*Math.random()),index:n,value:t.value,onNewdeclaration:e.addNewDeclaration.bind(e),onEdit:e.onValueEdit.bind(e)}))}))}}]),t}();t.default=c},function(e,t,n){var r=n(78);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,".declaration{\n    padding-left:10px;\n}",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(80);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({value:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.value!==this.state.value&&this.props.onEdit(this.props.value,this.state.value,this.props.index)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){var e=this.state.value.includes("addProperty")?"autoFocus":"";return i.default.createElement("input",{type:"text",value:this.state.value,autoFocus:e,onBlur:this.valueChanged.bind(this),onFocus:this.selectText.bind(this),onChange:this.updateSelector.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(81);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(0),i=(r=a)&&r.__esModule?r:{default:r};n(83);var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state=Object.assign({},n.props),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.Component),o(t,[{key:"updateSelector",value:function(e){this.setState({value:e.currentTarget.value})}},{key:"valueChanged",value:function(){this.props.name!==this.state.value&&this.props.onEdit(this.props.value,this.state.value,this.props.index)}},{key:"addNew",value:function(e){"Enter"==e.key&&this.props.onNewdeclaration(this.props.index)}},{key:"selectText",value:function(e){e.currentTarget.select()}},{key:"render",value:function(){return i.default.createElement("input",{type:"text",value:this.state.value,onBlur:this.valueChanged.bind(this),onChange:this.updateSelector.bind(this),onFocus:this.selectText.bind(this),onKeyPress:this.addNew.bind(this)})}}]),t}();t.default=l},function(e,t,n){var r=n(84);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])},function(e,t,n){"use strict";function r(e){return'"'+e.split(":")[0].trim()+'":"'+e.split(":")[1].trim()+'"'}function o(e){var t=e.split("{")[0].trim(),n="{"+e.split("{")[1].split("}")[0].split(";").map(function(e){return e.trim()}).filter(Boolean).map(r).join(",")+"}",o=JSON.parse(n);return e={selector:t,declarations:Object.keys(o).map(function(e){return{property:e,value:o[e]}})}}function a(e){return e.selector+" {"+e.declarations.map(function(e){return e.property+":"+e.value+";"}).join("")+"}"}Object.defineProperty(t,"__esModule",{value:!0}),t.getObjectFormat=function(e){if(!e||0==e.length)return[];return e.split("}").filter(Boolean).map(function(e){return e+"}"}).map(o)},t.convertToStyleString=function(e){return e.map(a).join("")}},function(e,t,n){var r=n(87);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(2)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){(e.exports=n(1)(!1)).push([e.i,"",""])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvbG9jYWxTdG9yYWdlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvbmVzdGVkQ29tcG9uZW50U2V0dXAvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0luZGV4L2luZGV4LmNzcz9kMGQ3Iiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50cy9SZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvY29udmVydC10by1yZWFjdC1jb21wb25lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWxpdGllcy9qc3hUcmFuc3BpbGVyL2NyZWF0ZS1zdHlsZXNoZWV0LmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlc0NvbXBvbmVudC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2dldC1ub2RlLXRyZWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvSW5kZXgvaW5kZXguY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1Rvb2wvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50cy9TdHlsZS5jc3M/MGIwOCIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudHMvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FbGVtZW50L0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3M/NjFhMyIsIndlYnBhY2s6Ly8vLi9zcmMvRWxlbWVudC9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VsZW1lbnRzL0V2ZW50cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbGl0aWVzL2NvZGVNb2RpZmllci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvUHJldmlldy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvUHJldmlldy9zdHlsZS5jc3M/NmQ0OCIsIndlYnBhY2s6Ly8vLi9zcmMvUHJldmlldy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0R5bmFtaWNDb21wb25lbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0R5bmFtaWNDb21wb25lbnQvc3R5bGUuY3NzP2VkN2IiLCJ3ZWJwYWNrOi8vLy4vc3JjL0R5bmFtaWNDb21wb25lbnQvc3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9EcmFnZ2FibGVDb21wb25lbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0RyYWdnYWJsZUNvbXBvbmVudC9zdHlsZS5jc3M/MDgyYyIsIndlYnBhY2s6Ly8vLi9zcmMvRHJhZ2dhYmxlQ29tcG9uZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvRWRpdG9yL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9FZGl0b3IvU3R5bGUuY3NzPzFiZmMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VkaXRvci9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VkaXRvci9SZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0NvbmZpZ3VyYXRvci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQ29uZmlndXJhdG9yL1N0eWxlLmNzcz9kZDU2Iiwid2VicGFjazovLy8uL3NyYy9Db25maWd1cmF0b3IvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9Ob2Rlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L1N0eWxlLmNzcz9mMzEzIiwid2VicGFjazovLy8uL3NyYy9FdmVudC9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50L01lc3NhZ2VzLmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlc0NvbXBvbmVudC9zdHlsZS5jc3M/OGY3ZSIsIndlYnBhY2s6Ly8vLi9zcmMvTWVzc2FnZXNDb21wb25lbnQvc3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlQ29tcG9uZW50L2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlQ29tcG9uZW50L3N0eWxlLmNzcz80NzY4Iiwid2VicGFjazovLy8uL3NyYy9NZXNzYWdlQ29tcG9uZW50L3N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvUmVkdWNlci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnQvRXZlbnRzLmpzIiwid2VicGFjazovLy8uL3NyYy9FdmVudHMvTWVzc2FnZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0V2ZW50cy9TdHlsZS5jc3M/Nzk3MSIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvRXZlbnRzL1JlZHVjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1RhZ0V4cGxvcmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9UYWdFeHBsb3Jlci9UYWdzLmpzIiwid2VicGFjazovLy8uL3NyYy91dGlsaXRpZXMvY29udmVydEpTT050b0hUTUxBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9UYWdFeHBsb3Jlci9TdHlsZS5jc3M/YWM0NCIsIndlYnBhY2s6Ly8vLi9zcmMvVGFnRXhwbG9yZXIvU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9TdHlsZS5jc3M/M2I5NyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL1NlbGVjdG9yL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvU2VsZWN0b3IvU3R5bGUuY3NzP2JiODUiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9TZWxlY3Rvci9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1N0eWxlLmNzcz8yY2U2Iiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vU3R5bGUuY3NzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vUHJvcGVydHkvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9Qcm9wZXJ0eS9TdHlsZS5jc3M/OTU4MyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1Byb3BlcnR5L1N0eWxlLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9SdWxlL0RlY2xhcmF0aW9uL1ZhbHVlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9TdHlsZUV4cGxvcmVyL1J1bGUvRGVjbGFyYXRpb24vVmFsdWUvU3R5bGUuY3NzP2IxMmQiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvUnVsZS9EZWNsYXJhdGlvbi9WYWx1ZS9TdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL1N0eWxlRXhwbG9yZXIvdXRpbC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9TdHlsZS5jc3M/ZjkyYSIsIndlYnBhY2s6Ly8vLi9zcmMvU3R5bGVFeHBsb3Jlci9TdHlsZS5jc3MiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiaWQiLCJwdXNoIiwiZm4iLCJtZW1vIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZXRFbGVtZW50IiwidGFyZ2V0IiwicGFyZW50Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwib3B0aW9ucyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsIkVycm9yIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsIm5leHRTaWJsaW5nIiwiaW5zZXJ0QmVmb3JlIiwiYXBwZW5kQ2hpbGQiLCJmaXJzdENoaWxkIiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ1bmRlZmluZWQiLCJhdHRycyIsInR5cGUiLCJub25jZSIsIm5jIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsImVsIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJvYmoiLCJ1cGRhdGUiLCJyZW1vdmUiLCJyZXN1bHQiLCJ0cmFuc2Zvcm0iLCJkZWZhdWx0Iiwic3R5bGVJbmRleCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwibGluayIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwiYXV0b0ZpeFVybHMiLCJjb252ZXJ0VG9BYnNvbHV0ZVVybHMiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsImluZGV4IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiY3NzTm9kZSIsImNoaWxkTm9kZXMiLCJyZWFkRGF0YSIsImRhdGEiLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJ3cml0ZURhdGEiLCJjb21wb25lbnRzIiwic2V0SXRlbSIsInJlYWRDb21wb25lbnQiLCJjb21wb25lbnROYW1lIiwiZmluZCIsImNvbXBvbmVudCIsImNoZWNrTmVzdGVkQ29tcG9uZW50cyIsInNhdmVDb21wb25lbnRzVG9XaW5kb3ciLCJuZXN0ZWRDb21wb25lbnRzIiwic2F2ZVRvV2luZG93IiwiZ2V0TmVzdGVkQ29tcG9uZW50cyIsIl9sb2NhbFN0b3JhZ2UiLCJtYXJrdXAiLCJjaGlsZHJlbiIsImluY2x1ZGVzIiwiZ3JhbmRLaWRzIiwiZmxhdCIsIl90b0NvbnN1bWFibGVBcnJheSIsImdldENoaWxkQ29tcG9uZW50cyIsIl9jb252ZXJ0VG9SZWFjdENvbXBvbmVudCIsIl9jcmVhdGVTdHlsZXNoZWV0IiwiY3JlYXRlU3R5bGVzaGVldCIsImNyZWF0ZUNvbXBvbmVudCIsImdldE93blByb3BlcnR5U3ltYm9scyIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJ0ZXN0MyIsInNwbGl0IiwibGV0dGVyIiwiZXJyIiwic2hvdWxkVXNlTmF0aXZlIiwiZnJvbSIsInN5bWJvbHMiLCJ0byIsImhtciIsImxvY2FscyIsInVwZGF0ZXNlbGVjdGVkSW5kZXgiLCJjdXJyZW50VGFyZ2V0IiwiaW5uZXJUZXh0Iiwic2VsZWN0ZWRDb21wb25lbnQiLCJzdGF0ZSIsImVsZW1lbnRzIiwic2VsZWN0ZWRJbmRleCIsImZpbmRJbmRleCIsInNlbGVjdGVkY29tcG9uZW50bmFtZSIsInNldFN0YXRlIiwic2F2ZUVsZW1lbnQiLCJlbGVtZW50IiwiQXJyYXkiLCJlbGVtZW50VW5kZXJFZGl0IiwibmV3RWxlbWVudCIsImV2ZW50cyIsIk1hdGgiLCJjZWlsIiwicmFuZG9tIiwiY29uZmlnIiwidXBkYXRlRXZlbnQiLCJuZXdFbGVtZW50cyIsIm9uRGVsZXRlIiwidXBkYXRlQ29uZmlnIiwicGFyZW50TmFtZSIsImNoaWxkIiwiY2hpbGROYW1lIiwib3ZlcmlkZVN0YXRlIiwib3ZlcnJpZGUiLCJfY29kZU1vZGlmaWVyIiwiX25lc3RlZENvbXBvbmVudFNldHVwIiwiZ2V0Q29tcG9uZW50U3RyaW5nIiwiY29udmVydFRvUmVhY3Rjb21wb25lbnQiLCJjb21wb25lbnRTdHJpbmciLCJldmFsIiwiQmFiZWwiLCJwcmVzZXRzIiwicGx1Z2lucyIsImNvZGUiLCJldmVudCIsInJlcGxhY2UiLCJjb21wb25lbnRFdmVudGVkTWFya3VwIiwiY2hpbGRDb21wb25lbnRzIiwicHVibGlzaGFibGVFdmVudHMiLCJwdWJsaXNoYWJsZSIsImV2ZW50VXNlZEluUGFyZW50IiwicHVibGlzaGFibGVFdmVudCIsInB1Ymxpc2hOYW1lIiwiZnVuY3Rpb25EZWYiLCJjb2RlTW9kaWZpZXIiLCJyZWR1Y2VyIiwicHJvcHMiLCJnZXRDb21wb25lbnRFdmVudGVkTWFya3VwIiwic3RhdGVPdmVyaWRlTWFya3VwIiwiY29tcG9uZW50UmVkdWNlcnMiLCJmdW5jdGlvbk5hbWUiLCJSZWFjdENvbXBvbmVudCIsInRvRGVsZXRlIiwicXVlcnlTZWxlY3RvckFsbCIsImR5bmFtaWNTdHlsZSIsImlubmVySFRNTCIsImJvZHkiLCJfcmVhY3QiLCJNZXNzYWdlc0NvbXBvbmVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwiZ2V0UHJvdG90eXBlT2YiLCJDb21wb25lbnQiLCJtZXNzYWdlcyIsIl9yZWFjdDIiLCJjbGFzc05hbWUiLCJtZXNzYWdlIiwiX01lc3NhZ2VDb21wb25lbnQyIiwiZ2V0Tm9kZVRyZWUiLCJqc3giLCJlcnJvciIsIl9kZWZpbmVQcm9wZXJ0eSIsIlJlYWN0Iiwic2F2ZVZhcmlhbnRzIiwidmFyaWFudHMiLCJTZXQiLCJzb3VyY2VDb21wb25lbnQiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VzdGF0ZSIsIm5ld1N0YXRlIiwiSW5kZXgiLCJfVG9vbDIiLCJSZWFjdERPTSIsInJlbmRlciIsImdldEVsZW1lbnRCeUlkIiwiayIsImZvciIsInEiLCJ1IiwidiIsInciLCJ4IiwieSIsInoiLCJhYSIsImJhIiwiQSIsIml0ZXJhdG9yIiwiQiIsImEiLCJiIiwiZyIsImgiLCJmIiwiZnJhbWVzVG9Qb3AiLCJjYSIsIkMiLCJpc01vdW50ZWQiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZVNldFN0YXRlIiwiRCIsIkUiLCJjb250ZXh0IiwidXBkYXRlciIsIkYiLCJHIiwiaXNSZWFjdENvbXBvbmVudCIsImZvcmNlVXBkYXRlIiwiSCIsImNvbnN0cnVjdG9yIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJJIiwiY3VycmVudCIsIkoiLCJLIiwiTCIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiTSIsImRlZmF1bHRQcm9wcyIsIiQkdHlwZW9mIiwiX293bmVyIiwiTiIsIk8iLCJQIiwiUSIsInBvcCIsImtleVByZWZpeCIsImZ1bmMiLCJjb3VudCIsIlIiLCJVIiwiUyIsIlQiLCJpc0FycmF5IiwibmV4dCIsImRvbmUiLCI9IiwiOiIsImVzY2FwZSIsImVhIiwiZmEiLCJWIiwiZGEiLCJXIiwiWCIsIkNoaWxkcmVuIiwidG9BcnJheSIsIm9ubHkiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIlByb3ZpZGVyIiwiQ29uc3VtZXIiLCJfY29udGV4dCIsImZvcndhcmRSZWYiLCJsYXp5IiwiX2N0b3IiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImNvbXBhcmUiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VFZmZlY3QiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlRGVidWdWYWx1ZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsInZlcnNpb24iLCJ1bnN0YWJsZV9Db25jdXJyZW50TW9kZSIsInVuc3RhYmxlX1Byb2ZpbGVyIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwiUmVhY3RDdXJyZW50T3duZXIiLCJZIiwiWiIsImNoZWNrRENFIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwiY29uc29sZSIsImhhIiwiaWEiLCJvbkVycm9yIiwiamEiLCJzbGljZSIsImxhIiwibWEiLCJuYSIsIm9hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJwYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicWEiLCJyZWdpc3RyYXRpb25OYW1lIiwicmEiLCJzYSIsImRlcGVuZGVuY2llcyIsInRhIiwidWEiLCJ2YSIsIndhIiwia2EiLCJ4YSIsInlhIiwiemEiLCJBYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkJhIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIkNhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwidGFnIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJyZXR1cm4iLCJNYSIsImRpc3BhdGNoQ29uZmlnIiwiTmEiLCJfdGFyZ2V0SW5zdCIsIk9hIiwiUGEiLCJRYSIsIlJhIiwiU2EiLCJ0b0xvd2VyQ2FzZSIsIlRhIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiVWEiLCJWYSIsIldhIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIlhhIiwiWWEiLCJaYSIsIiRhIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJlYiIsInRleHRDb250ZW50IiwiZmIiLCJnYiIsIm5hdGl2ZUV2ZW50IiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaWIiLCJldmVudFBvb2wiLCJqYiIsImRlc3RydWN0b3IiLCJoYiIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJleHRlbmQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm9iIiwiZG9jdW1lbnRNb2RlIiwicGIiLCJxYiIsInJiIiwic2IiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwidGIiLCJ1YiIsImtleUNvZGUiLCJ2YiIsImRldGFpbCIsIndiIiwiemIiLCJsb2NhbGUiLCJ3aGljaCIsInhiIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwieWIiLCJBYiIsIkJiIiwiQ2IiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsIm51bWJlciIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJNYiIsIm5vZGVOYW1lIiwiTmIiLCJzcmNFbGVtZW50IiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCJub2RlVHlwZSIsIk9iIiwiUGIiLCJSYiIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJzZXQiLCJjb25maWd1cmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiUWIiLCJTYiIsImNoZWNrZWQiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiWWIiLCJaYiIsIiRiIiwiYWMiLCJiYyIsImNjIiwiZGMiLCJlYyIsImZjIiwiZ2MiLCJoYyIsImljIiwiZGlzcGxheU5hbWUiLCJqYyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwia2MiLCJsYyIsIm1jIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInJjIiwic2MiLCJ0b1VwcGVyQ2FzZSIsInRjIiwicGMiLCJpc05hTiIsInFjIiwidGVzdCIsIm9jIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlTlMiLCJ1YyIsInZjIiwiZGVmYXVsdENoZWNrZWQiLCJkZWZhdWx0VmFsdWUiLCJfd3JhcHBlclN0YXRlIiwiaW5pdGlhbENoZWNrZWQiLCJ3YyIsImluaXRpYWxWYWx1ZSIsImNvbnRyb2xsZWQiLCJ4YyIsInljIiwiemMiLCJBYyIsIm93bmVyRG9jdW1lbnQiLCJhY3RpdmVFbGVtZW50IiwiQmMiLCJjaGFuZ2UiLCJDYyIsIkRjIiwiRWMiLCJGYyIsIkdjIiwiSGMiLCJJYyIsIkpjIiwiZGV0YWNoRXZlbnQiLCJLYyIsIkxjIiwiYXR0YWNoRXZlbnQiLCJNYyIsIk5jIiwiT2MiLCJQYyIsIl9pc0lucHV0RXZlbnRTdXBwb3J0ZWQiLCJRYyIsInZpZXciLCJSYyIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJTYyIsImdldE1vZGlmaWVyU3RhdGUiLCJUYyIsIlVjIiwiVmMiLCJXYyIsIlhjIiwiWWMiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIlpjIiwicG9pbnRlcklkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiJGMiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsImFkIiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJhbHRlcm5hdGUiLCJiZCIsImNkIiwiZGQiLCJlZCIsImVmZmVjdFRhZyIsImZkIiwiaGQiLCJzaWJsaW5nIiwiZ2QiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiamQiLCJjbGlwYm9hcmREYXRhIiwia2QiLCJsZCIsImNoYXJDb2RlIiwibWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwibmQiLCI4IiwiOSIsIjEyIiwiMTMiLCIxNiIsIjE3IiwiMTgiLCIxOSIsIjIwIiwiMjciLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiMzciLCIzOCIsIjM5IiwiNDAiLCI0NSIsIjQ2IiwiMTEyIiwiMTEzIiwiMTE0IiwiMTE1IiwiMTE2IiwiMTE3IiwiMTE4IiwiMTE5IiwiMTIwIiwiMTIxIiwiMTIyIiwiMTIzIiwiMTQ0IiwiMTQ1IiwiMjI0Iiwib2QiLCJsb2NhdGlvbiIsInJlcGVhdCIsInBkIiwiZGF0YVRyYW5zZmVyIiwicWQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwicmQiLCJzZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwidGQiLCJ1ZCIsInZkIiwid2QiLCJpc0ludGVyYWN0aXZlIiwieGQiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJ5ZCIsInpkIiwiQWQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkJkIiwiQ2QiLCJEZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJFZCIsIkZkIiwiR2QiLCJIZCIsIklkIiwiSmQiLCJLZCIsIkxkIiwibm9kZSIsIm9mZnNldCIsIk5kIiwiY29udGVudFdpbmRvdyIsIk9kIiwiY29udGVudEVkaXRhYmxlIiwiUWQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiTWQiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiZG9jdW1lbnRFbGVtZW50Iiwic3RhcnQiLCJlbmQiLCJzZWxlY3Rpb25TdGFydCIsInNlbGVjdGlvbkVuZCIsIm1pbiIsImdldFNlbGVjdGlvbiIsInJhbmdlQ291bnQiLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUmQiLCJTZCIsInNlbGVjdCIsIlRkIiwiVWQiLCJWZCIsIldkIiwiWGQiLCJZZCIsIm9uU2VsZWN0IiwiJGQiLCJaZCIsImFlIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJiZSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiY2UiLCJkZSIsImVlIiwiU2ltcGxlRXZlbnRQbHVnaW4iLCJFbnRlckxlYXZlRXZlbnRQbHVnaW4iLCJDaGFuZ2VFdmVudFBsdWdpbiIsIlNlbGVjdEV2ZW50UGx1Z2luIiwiQmVmb3JlSW5wdXRFdmVudFBsdWdpbiIsImZlIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsImdlIiwiaGUiLCJpZSIsImplIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIm5hbWVzcGFjZVVSSSIsImtlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwibGUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIm1lIiwibmUiLCJ0cmltIiwib2UiLCJzZXRQcm9wZXJ0eSIsImNoYXJBdCIsInN1YnN0cmluZyIsInBlIiwibWVudWl0ZW0iLCJhcmVhIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJtZXRhIiwicGFyYW0iLCJ0cmFjayIsIndiciIsInFlIiwicmUiLCJpcyIsInNlIiwiYmx1ciIsInRlIiwidWUiLCJ2ZSIsIndlIiwiYXV0b0ZvY3VzIiwieGUiLCJfX2h0bWwiLCJ5ZSIsInNldFRpbWVvdXQiLCJ6ZSIsImNsZWFyVGltZW91dCIsIkFlIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsIkJlIiwidW5zdGFibGVfY2FuY2VsQ2FsbGJhY2siLCJEZSIsIkVlIiwiRmUiLCJHZSIsIkhlIiwiSWUiLCJKZSIsImNvbnRleHRUeXBlcyIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsImNoaWxkQ29udGV4dFR5cGVzIiwiS2UiLCJMZSIsIk1lIiwiTmUiLCJnZXRDaGlsZENvbnRleHQiLCJPZSIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0IiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJVZSIsImVsZW1lbnRUeXBlIiwicGVuZGluZ1Byb3BzIiwiY29udGV4dERlcGVuZGVuY2llcyIsIm1lbW9pemVkU3RhdGUiLCJ1cGRhdGVRdWV1ZSIsIm1lbW9pemVkUHJvcHMiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwiVmUiLCJYZSIsIlllIiwiWmUiLCIkZSIsImFmIiwiYmYiLCJwZW5kaW5nQ2hpbGRyZW4iLCJpbXBsZW1lbnRhdGlvbiIsImNmIiwiZGlkRXJyb3IiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJkZiIsImZmIiwibGF0ZXN0UGluZ2VkVGltZSIsImVhcmxpZXN0U3VzcGVuZGVkVGltZSIsImxhdGVzdFN1c3BlbmRlZFRpbWUiLCJnZiIsIm5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uIiwiamYiLCJrZiIsImJhc2VTdGF0ZSIsInRmIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImxmIiwibmYiLCJtZiIsInBheWxvYWQiLCJjYWxsYmFjayIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJ1ZiIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsInZmIiwiY29udGV4dFR5cGUiLCJ3ZiIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsInhmIiwieWYiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInpmIiwiQWYiLCJfc3RyaW5nUmVmIiwiQmYiLCJDZiIsIk1hcCIsImRlbGV0ZSIsIkRmIiwiRWYiLCJGZiIsIkdmIiwiSGYiLCJJZiIsIkpmIiwidGFnTmFtZSIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsIlFmIiwiUmYiLCJTZiIsIlRmIiwiVWYiLCJWZiIsIldmIiwiWGYiLCJZZiIsIlpmIiwiJGYiLCJhZyIsImJnIiwiY2ciLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiaWciLCJqZyIsImtnIiwibGciLCJtZyIsInF1ZXVlIiwiYmFzZVVwZGF0ZSIsIm5nIiwib2ciLCJwZyIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJkaXNwYXRjaCIsImFjdGlvbiIsInFnIiwibGFzdCIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsInJnIiwiZGVzdHJveSIsImRlcHMiLCJzZyIsInRnIiwidWciLCJ2ZyIsIndnIiwicmVhZENvbnRleHQiLCJ4ZyIsInlnIiwiemciLCJBZyIsIkJnIiwiQ2ciLCJEZyIsIkVnIiwiRmciLCJHZyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsIlFnIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiUmciLCJwZW5kaW5nQ29udGV4dCIsIlNnIiwidGltZWRPdXRBdCIsImZhbGxiYWNrIiwiVGciLCJVZyIsInRoZW4iLCJoZiIsIldlIiwiaHlkcmF0ZSIsImhpZGRlbiIsImZpcnN0Iiwib2JzZXJ2ZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwiVmciLCJXZyIsIlhnIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImZpcnN0VXBkYXRlIiwibGFzdFVwZGF0ZSIsImZpcnN0Q2FwdHVyZWRVcGRhdGUiLCJsYXN0Q2FwdHVyZWRVcGRhdGUiLCJmaXJzdENhcHR1cmVkRWZmZWN0IiwibGFzdENhcHR1cmVkRWZmZWN0IiwiY2giLCJkaCIsImVoIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsInN0YWNrIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsIm9uQ2xpY2siLCJvbmNsaWNrIiwicGgiLCJXZWFrU2V0IiwicWgiLCJyaCIsInNoIiwidGgiLCJ2aCIsImNvbXBvbmVudFdpbGxVbm1vdW50Iiwid2giLCJ4aCIsInloIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsInpoIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIkNlIiwiZGlzcGxheSIsInVoIiwiaGkiLCJYaCIsImhhcyIsImFkZCIsIkJoIiwiV2Vha01hcCIsIkNoIiwiRGgiLCJFaCIsImNvbXBvbmVudERpZENhdGNoIiwiRmgiLCJjb21wb25lbnRTdGFjayIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJPaCIsIlBoIiwiUWgiLCJSaCIsIlNoIiwiVGgiLCJVaCIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVmgiLCJaaCIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImVmIiwiUGQiLCJZaCIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiZmluaXNoZWRXb3JrIiwiJGgiLCJhaSIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJiaSIsImNpIiwiZGkiLCJtYXhEdXJhdGlvbiIsInBpbmdDYWNoZSIsImVpIiwiZmkiLCJ1bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsImdpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsIm5pIiwib2kiLCJwaSIsInFpIiwicmkiLCJzaSIsInRpIiwidW5zdGFibGVfbm93IiwidWkiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwidGltZW91dCIsInRpbWVvdXRIYW5kbGUiLCJCaSIsIkNpIiwibmV4dFNjaGVkdWxlZFJvb3QiLCJEaSIsIkVpIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJfb25Db21wbGV0ZSIsIkZpIiwiZmlyc3RCYXRjaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsIkdpIiwiSGkiLCJJaSIsIkppIiwiS2kiLCJMaSIsIk5pIiwiX3Jvb3QiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJPaSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJQaSIsIl9pbnRlcm5hbFJvb3QiLCJRaSIsIlNpIiwibGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiaGFzQXR0cmlidXRlIiwiUmkiLCJUaSIsIk1pIiwiZm9ybSIsImNvbW1pdCIsInVubW91bnQiLCJjcmVhdGVCYXRjaCIsIlZpIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX2ludGVyYWN0aXZlVXBkYXRlcyIsImZsdXNoU3luYyIsInVuc3RhYmxlX2NyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudHMiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiVGUiLCJvdmVycmlkZVByb3BzIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsIldpIiwiWGkiLCJnbG9iYWwiLCJwcmV2aW91cyIsInByaW9yaXR5TGV2ZWwiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInBlcmZvcm1hbmNlIiwiX3NjaGVkTW9jayIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3dyYXBDYWxsYmFjayIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfcGF1c2VFeGVjdXRpb24iLCJ1bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZSIsIkZ1bmN0aW9uIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCIkMSIsIl9SZWR1Y2VyIiwiX2dldE5vZGVUcmVlIiwiVG9vbCIsIl90aGlzIiwicHJldmlld0NvbXBvbmVudCIsInNlbGVjdGVkRWxlbWVudCIsIm5vZGVUcmVlIiwiX0RyYWdnYWJsZUNvbXBvbmVudDIiLCJfRWxlbWVudHMyIiwib25TZWxlY3Rpb24iLCJfRXZlbnRzMiIsIm9uRXZlbnRzVXBkYXRlIiwib25Db25maWdVcGRhdGUiLCJfRWRpdG9yMiIsIm9uU2F2ZSIsIl9QcmV2aWV3MiIsIl9UYWdFeHBsb3JlcjIiLCJfU3R5bGVFeHBsb3JlcjIiLCJvbkVkaXQiLCJ1cGRhdGVTdHlsZXMiLCJfRXZlbnRzIiwiQ29tcG9uZW50cyIsInZhcmlhbnQiLCJfdHlwZW9mIiwiY3VycmVudENvbXBvbmVudCIsImNyZWF0ZVZhcmlhbnQiLCJfdGhpczIiLCJlbGVtZW50TGlzdCIsIl9FbGVtZW50MiIsIm9uU2VsZWN0aW9uQ2hhbmdlIiwib25FeHBvcnQiLCJvbkdlbmVyYXRlVmFyaWFudCIsImdlbmVyYXRlVmFyaWFudCIsIkVsZW1lbnQiLCJkcmFnZ2FibGUiLCJvbkRyYWdTdGFydCIsImhhbmRsZURyYWciLCJzZWxlY3Rpb25DaGFuZ2VkIiwic2V0RGF0YSIsImdldEF0dHJpYnV0ZSIsImxvZyIsIlByZXZpZXciLCJyYW5kb21LZXkiLCJfRHluYW1pY0NvbXBvbmVudDIiLCJEeW5hbWljQ29tcG9uZW50IiwicHJldmlvdXNUYXJnZXQiLCJjbGFzc0xpc3QiLCJnZXREYXRhIiwib25Ecm9wIiwib25EcmFnT3ZlciIsIkRyYWdnYWJsZUNvbXBvbmVudCIsInBvc2l0aW9uIiwibWluaW1pc2VkIiwiX3RoaXMzIiwib25EcmFnRW5kIiwibW92ZURpdiIsInRpdGxlIiwib25Nb3VzZURvd24iLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlVXAiLCJvbk1vdXNlTGVhdmUiLCJ0b2dnbGVNaW5pbWlzZU1heGltaXNlIiwiRWRpdG9yIiwicGxhY2Vob2xkZXIiLCJvbkNoYW5nZSIsInVwZGF0ZU5hbWUiLCJwdWJsaXNoRWxlbWVudCIsInVwZGF0ZU1hcmt1cCIsInVwZGF0ZVN0eWxlIiwidXBkYXRlU3RhdGUiLCJnZXRQcm9wZXJ0eUNvbnRhaW5pbmdQcm9wcyIsInNlbGVjdGVkVGFnIiwiX01lc3NhZ2VzMiIsImV2ZW50c09mU2VsZWN0ZWRUYWciLCJjb25maWd1cmF0b3IiLCJjaGlsZENvbXBvbmVudE5hbWUiLCJldmVudE5hbWVzIiwiX0V2ZW50MiIsInNlbGVjdGVkVGFnSUQiLCJkZWxldGVFdmVudCIsIl9Db25maWd1cmF0b3IyIiwidXBkYXRlQ29uZmlndXJhdGlvbiIsIl9Ob2RlczIiLCJvblNlbGVjdGVkVGFnQ2hhbmdlZCIsInNlbGVjdGVkVGFnQ2hhbmdlZCIsIkNvbmZpZ3VyYXRvciIsInRvZ2dlbE92ZXJyaWRlIiwiTm9kZXMiLCJFdmVudCIsInVwZGF0ZVB1Ymxpc2hOYW1lIiwiZXZlbnROYW1lIiwidXBkYXRlRXZlbnROYW1lIiwidXBkYXRlUmVkdWNlciIsInVwZGF0ZUV2ZW50VHlwZSIsInB1Ymxpc2hFdmVudCIsIl9NZXNzYWdlc0NvbXBvbmVudCIsIl9NZXNzYWdlc0NvbXBvbmVudDIiLCJNZXNzYWdlQ29tcG9uZW50IiwiX21vZHVsZSRleHBvcnRzIiwiVGFnRXhwbG9yZXIiLCJfVGFnczIiLCJfY29udmVydEpTT050b0hUTUxBdHRyaWJ1dGVzIiwiVGFncyIsImNvbnZlcnRKU09OdG9IVE1MQXR0cmlidXRlcyIsInN0cmluZyIsInByb3AiLCJfdXRpbCIsIlN0eWxlRXhwbG9yZXIiLCJydWxlcyIsImdldE9iamVjdEZvcm1hdCIsIm5ld1J1bGVzIiwidW5zaGlmdCIsInNlbGVjdG9yIiwiZGVjbGFyYXRpb25zIiwicnVsZSIsImNvbnZlcnRUb1N0eWxlU3RyaW5nIiwiX1J1bGUyIiwib25VcGRhdGUiLCJydWxlVXBkYXRlIiwiYWRkUnVsZSIsIlJ1bGUiLCJfU2VsZWN0b3IyIiwidXBkYXRlU2VsZWN0b3IiLCJfRGVjbGFyYXRpb24yIiwidXBkYXRlRGVjbGFyYXRpb25zIiwiU2VsZWN0b3IiLCJvbkJsdXIiLCJ2YWx1ZUNoYW5nZWQiLCJvbkZvY3VzIiwic2VsZWN0VGV4dCIsIkRlY2xhcmF0aW9uIiwicHJldmlvdXNWYWx1ZSIsImN1cnJlbnRWYWx1ZSIsImRlY2xhcmF0aW9uIiwiX1Byb3BlcnR5MiIsIl9WYWx1ZTIiLCJvbk5ld2RlY2xhcmF0aW9uIiwiYWRkTmV3RGVjbGFyYXRpb24iLCJvblZhbHVlRWRpdCIsIlByb3BlcnR5IiwiVmFsdWUiLCJvbktleVByZXNzIiwiYWRkTmV3IiwiY29udmVydFRvU3RyaW5nIiwiY29udmVydFRvT2JqZWN0IiwicHJvcGVy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QU1sOEMsSUFBSXcrQyxHQUFjeDlDLEtBQUssTSxnQkN4Q3hDLElBQUlkLEVBQVUxQyxFQUFRLElBRUEsaUJBQVowQyxJQUFzQkEsRUFBVSxDQUFDLENBQUN2QyxFQUFPQyxFQUFJc0MsRUFBUyxNQU9oRSxJQUFJOEMsRUFBVSxDQUFDOEgsS0FBTSxFQUVyQmhGLGVBUElBLEVBUUpoQyxnQkFBcUJpQixHQUVSdkgsRUFBUSxFQUFSQSxDQUE2RDBDLEVBQVM4QyxHQUVoRjlDLEVBQVE2SyxTQUFRcE4sRUFBT0QsUUFBVXdDLEVBQVE2SyxTLGlCQ2pCbENwTixFQUFPRCxRQUFVRixFQUFRLEVBQVJBLEVBQTZELElBRWhGOEQsS0FBSyxDQUFDM0QsRUFBT0MsRUFBSSxHQUFJIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTIpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gJ0BtZWRpYSAnICsgaXRlbVsyXSArICd7JyArIGNvbnRlbnQgKyAnfSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgIH1cbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tpXTsgLy8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuICAgICAgLy8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcbiAgICAgIC8vIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cbiAgICAgIC8vIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblxuICAgICAgaWYgKGl0ZW1bMF0gPT0gbnVsbCB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBpZiAobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2UgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICBpdGVtWzJdID0gJygnICsgaXRlbVsyXSArICcpIGFuZCAoJyArIG1lZGlhUXVlcnkgKyAnKSc7XG4gICAgICAgIH1cblxuICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLyc7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG4gIHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59IiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cblxudmFyIHN0eWxlc0luRG9tID0ge307XG5cbnZhclx0bWVtb2l6ZSA9IGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbztcblxuXHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdGlmICh0eXBlb2YgbWVtbyA9PT0gXCJ1bmRlZmluZWRcIikgbWVtbyA9IGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0cmV0dXJuIG1lbW87XG5cdH07XG59O1xuXG52YXIgaXNPbGRJRSA9IG1lbW9pemUoZnVuY3Rpb24gKCkge1xuXHQvLyBUZXN0IGZvciBJRSA8PSA5IGFzIHByb3Bvc2VkIGJ5IEJyb3dzZXJoYWNrc1xuXHQvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG5cdC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcblx0Ly8gdG8gb3BlcmF0ZSBjb3JyZWN0bHkgaW50byBub24tc3RhbmRhcmQgZW52aXJvbm1lbnRzXG5cdC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuXHRyZXR1cm4gd2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2I7XG59KTtcblxudmFyIGdldFRhcmdldCA9IGZ1bmN0aW9uICh0YXJnZXQsIHBhcmVudCkge1xuICBpZiAocGFyZW50KXtcbiAgICByZXR1cm4gcGFyZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbiAgfVxuICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xufTtcblxudmFyIGdldEVsZW1lbnQgPSAoZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vID0ge307XG5cblx0cmV0dXJuIGZ1bmN0aW9uKHRhcmdldCwgcGFyZW50KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQsIHBhcmVudCk7XG5cdFx0XHQvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXHRcdFx0aWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG5cdFx0XHRcdFx0Ly8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuXHRcdFx0XHR9IGNhdGNoKGUpIHtcblx0XHRcdFx0XHRzdHlsZVRhcmdldCA9IG51bGw7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuXHRcdH1cblx0XHRyZXR1cm4gbWVtb1t0YXJnZXRdXG5cdH07XG59KSgpO1xuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhclx0c2luZ2xldG9uQ291bnRlciA9IDA7XG52YXJcdHN0eWxlc0luc2VydGVkQXRUb3AgPSBbXTtcblxudmFyXHRmaXhVcmxzID0gcmVxdWlyZShcIi4vdXJsc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlLCB0YXJnZXQpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGlmKG9wdGlvbnMuYXR0cnMubm9uY2UgPT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBub25jZSA9IGdldE5vbmNlKCk7XG5cdFx0aWYgKG5vbmNlKSB7XG5cdFx0XHRvcHRpb25zLmF0dHJzLm5vbmNlID0gbm9uY2U7XG5cdFx0fVxuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XG5cdGlmICh0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHRyZXR1cm4gX193ZWJwYWNrX25vbmNlX187XG59XG5cbmZ1bmN0aW9uIGFkZFN0eWxlIChvYmosIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlLCB1cGRhdGUsIHJlbW92ZSwgcmVzdWx0O1xuXG5cdC8vIElmIGEgdHJhbnNmb3JtIGZ1bmN0aW9uIHdhcyBkZWZpbmVkLCBydW4gaXQgb24gdGhlIGNzc1xuXHRpZiAob3B0aW9ucy50cmFuc2Zvcm0gJiYgb2JqLmNzcykge1xuXHQgICAgcmVzdWx0ID0gdHlwZW9mIG9wdGlvbnMudHJhbnNmb3JtID09PSAnZnVuY3Rpb24nXG5cdFx0ID8gb3B0aW9ucy50cmFuc2Zvcm0ob2JqLmNzcykgXG5cdFx0IDogb3B0aW9ucy50cmFuc2Zvcm0uZGVmYXVsdChvYmouY3NzKTtcblxuXHQgICAgaWYgKHJlc3VsdCkge1xuXHQgICAgXHQvLyBJZiB0cmFuc2Zvcm0gcmV0dXJucyBhIHZhbHVlLCB1c2UgdGhhdCBpbnN0ZWFkIG9mIHRoZSBvcmlnaW5hbCBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIHJ1bm5pbmcgcnVudGltZSB0cmFuc2Zvcm1hdGlvbnMgb24gdGhlIGNzcy5cblx0ICAgIFx0b2JqLmNzcyA9IHJlc3VsdDtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICBcdC8vIElmIHRoZSB0cmFuc2Zvcm0gZnVuY3Rpb24gcmV0dXJucyBhIGZhbHN5IHZhbHVlLCBkb24ndCBhZGQgdGhpcyBjc3MuXG5cdCAgICBcdC8vIFRoaXMgYWxsb3dzIGNvbmRpdGlvbmFsIGxvYWRpbmcgb2YgY3NzXG5cdCAgICBcdHJldHVybiBmdW5jdGlvbigpIHtcblx0ICAgIFx0XHQvLyBub29wXG5cdCAgICBcdH07XG5cdCAgICB9XG5cdH1cblxuXHRpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcblx0XHR2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcblxuXHRcdHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuXG5cdFx0dXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG5cdFx0cmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcblxuXHR9IGVsc2UgaWYgKFxuXHRcdG9iai5zb3VyY2VNYXAgJiZcblx0XHR0eXBlb2YgVVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLmNyZWF0ZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIFVSTC5yZXZva2VPYmplY3RVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBCbG9iID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiXG5cdCkge1xuXHRcdHN0eWxlID0gY3JlYXRlTGlua0VsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gdXBkYXRlTGluay5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXG5cdFx0XHRpZihzdHlsZS5ocmVmKSBVUkwucmV2b2tlT2JqZWN0VVJMKHN0eWxlLmhyZWYpO1xuXHRcdH07XG5cdH0gZWxzZSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG5cdFx0dXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlKTtcblx0XHRyZW1vdmUgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuXHRcdH07XG5cdH1cblxuXHR1cGRhdGUob2JqKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUgKG5ld09iaikge1xuXHRcdGlmIChuZXdPYmopIHtcblx0XHRcdGlmIChcblx0XHRcdFx0bmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJlxuXHRcdFx0XHRuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJlxuXHRcdFx0XHRuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwXG5cdFx0XHQpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR1cGRhdGUob2JqID0gbmV3T2JqKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVtb3ZlKCk7XG5cdFx0fVxuXHR9O1xufVxuXG52YXIgcmVwbGFjZVRleHQgPSAoZnVuY3Rpb24gKCkge1xuXHR2YXIgdGV4dFN0b3JlID0gW107XG5cblx0cmV0dXJuIGZ1bmN0aW9uIChpbmRleCwgcmVwbGFjZW1lbnQpIHtcblx0XHR0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG5cblx0XHRyZXR1cm4gdGV4dFN0b3JlLmZpbHRlcihCb29sZWFuKS5qb2luKCdcXG4nKTtcblx0fTtcbn0pKCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcgKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcblx0dmFyIGNzcyA9IHJlbW92ZSA/IFwiXCIgOiBvYmouY3NzO1xuXG5cdGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG5cdH0gZWxzZSB7XG5cdFx0dmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuXHRcdHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuXHRcdGlmIChjaGlsZE5vZGVzW2luZGV4XSkgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXMubGVuZ3RoKSB7XG5cdFx0XHRzdHlsZS5pbnNlcnRCZWZvcmUoY3NzTm9kZSwgY2hpbGROb2Rlc1tpbmRleF0pO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzdHlsZS5hcHBlbmRDaGlsZChjc3NOb2RlKTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gYXBwbHlUb1RhZyAoc3R5bGUsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuXG5cdGlmKG1lZGlhKSB7XG5cdFx0c3R5bGUuc2V0QXR0cmlidXRlKFwibWVkaWFcIiwgbWVkaWEpXG5cdH1cblxuXHRpZihzdHlsZS5zdHlsZVNoZWV0KSB7XG5cdFx0c3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuXHR9IGVsc2Uge1xuXHRcdHdoaWxlKHN0eWxlLmZpcnN0Q2hpbGQpIHtcblx0XHRcdHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuXHRcdH1cblxuXHRcdHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZUxpbmsgKGxpbmssIG9wdGlvbnMsIG9iaikge1xuXHR2YXIgY3NzID0gb2JqLmNzcztcblx0dmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cblx0Lypcblx0XHRJZiBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgaXNuJ3QgZGVmaW5lZCwgYnV0IHNvdXJjZW1hcHMgYXJlIGVuYWJsZWRcblx0XHRhbmQgdGhlcmUgaXMgbm8gcHVibGljUGF0aCBkZWZpbmVkIHRoZW4gbGV0cyB0dXJuIGNvbnZlcnRUb0Fic29sdXRlVXJsc1xuXHRcdG9uIGJ5IGRlZmF1bHQuICBPdGhlcndpc2UgZGVmYXVsdCB0byB0aGUgY29udmVydFRvQWJzb2x1dGVVcmxzIG9wdGlvblxuXHRcdGRpcmVjdGx5XG5cdCovXG5cdHZhciBhdXRvRml4VXJscyA9IG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzID09PSB1bmRlZmluZWQgJiYgc291cmNlTWFwO1xuXG5cdGlmIChvcHRpb25zLmNvbnZlcnRUb0Fic29sdXRlVXJscyB8fCBhdXRvRml4VXJscykge1xuXHRcdGNzcyA9IGZpeFVybHMoY3NzKTtcblx0fVxuXG5cdGlmIChzb3VyY2VNYXApIHtcblx0XHQvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NVxuXHRcdGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpICsgXCIgKi9cIjtcblx0fVxuXG5cdHZhciBibG9iID0gbmV3IEJsb2IoW2Nzc10sIHsgdHlwZTogXCJ0ZXh0L2Nzc1wiIH0pO1xuXG5cdHZhciBvbGRTcmMgPSBsaW5rLmhyZWY7XG5cblx0bGluay5ocmVmID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcblxuXHRpZihvbGRTcmMpIFVSTC5yZXZva2VPYmplY3RVUkwob2xkU3JjKTtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiB3cml0ZURhdGEoa2V5LCBjb21wb25lbnRzKXtcbiAgICBpZihrZXk9PT1cInVpLWVkaXRvclwiKXtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ1aS1lZGl0b3JcIiwgSlNPTi5zdHJpbmdpZnkoY29tcG9uZW50cykpO1xuICAgIH1cblxufVxuXG4vLyBJZiBlbXB0eSwgcmV0dXJuIGVtcHR5IGFycmF5LlxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZERhdGEoa2V5KXtcbiAgICBpZihrZXk9PT1cInVpLWVkaXRvclwiKXtcbiAgICAgICAgbGV0IGRhdGEgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidWktZWRpdG9yXCIpKTtcblxuICAgICAgICBpZihkYXRhLmxlbmd0aCl7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVhZENvbXBvbmVudChjb21wb25lbnROYW1lKXtcbiAgICBsZXQgY29tcG9uZW50cyA9IHJlYWREYXRhKFwidWktZWRpdG9yXCIpO1xuICAgIGlmKCFjb21wb25lbnRzKXtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBvbmVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPWNvbXBvbmVudE5hbWUpO1xufSIsIi8vIERlcGVuZGVuY2llcy5cblxuaW1wb3J0IHtjcmVhdGVDb21wb25lbnR9IGZyb20gXCIuLi9jb252ZXJ0LXRvLXJlYWN0LWNvbXBvbmVudFwiO1xuaW1wb3J0IHtjcmVhdGVTdHlsZXNoZWV0fSBmcm9tIFwiLi4vanN4VHJhbnNwaWxlci9jcmVhdGUtc3R5bGVzaGVldFwiO1xuaW1wb3J0IHtyZWFkRGF0YX0gZnJvbSBcIi4uL2xvY2FsU3RvcmFnZVwiO1xuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tOZXN0ZWRDb21wb25lbnRzKCBtYXJrdXApIHtcblxuICAgIHZhciBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG5cbiAgICByZXR1cm4gY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50PT4gbWFya3VwLmluY2x1ZGVzKGNvbXBvbmVudC5uYW1lKSkubGVuZ3RoID4wO1xufVxuXG4vKiogVGFrZXMgYSBjb21wb25lbnQgYW5kIGNvbnZlcnRzIGl0IGFzIGEgcmVhY3QgY29tcG9uZW50ICovXG5mdW5jdGlvbiBzYXZlVG9XaW5kb3coIGNvbXBvbmVudCApIHtcbiAgICBjcmVhdGVTdHlsZXNoZWV0KGNvbXBvbmVudC5zdHlsZSwgY29tcG9uZW50Lm5hbWUpXG4gICAgd2luZG93W2NvbXBvbmVudC5uYW1lXSA9IGNyZWF0ZUNvbXBvbmVudChjb21wb25lbnQpO1xufVxuXG4vKiogVGFrZXMgY29tcG9uZW50cyBhbmQgc2F2ZXMgdGhlbSB0byB3aW5kb3cgYXMgcmVhY3QgT2JqZWN0ICovXG5leHBvcnQgZnVuY3Rpb24gc2F2ZUNvbXBvbmVudHNUb1dpbmRvdyggbmVzdGVkQ29tcG9uZW50cyl7XG4gICAgLy8gVHJhbnNwaWxlIHRoZW0gYW5kIG1ha2UgdGhlbSBnbG9iYWwuXG4gICAgbmVzdGVkQ29tcG9uZW50cy5mb3JFYWNoKHNhdmVUb1dpbmRvdyk7XG59XG5cbi8qKiBUYWtlcyBtYXJrdXAgYW5kIHJldHVybnMgY2hpbGRyZW4gY29tcG9uZW50IG9iamVjdHMuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TmVzdGVkQ29tcG9uZW50cyAocGFyZW50KSB7XG4gICAgLy8gU2hvdWxkIGJlIGFibGUgdG8gZGV0ZWN0IG5lc3RlZCBjb21wb25lbnQuXG5cbiAgICBsZXQgY29tcG9uZW50cz0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG4gICAgbGV0IG5lc3RlZENvbXBvbmVudHMgPSBbcGFyZW50XTtcbiAgICBpZihjaGVja05lc3RlZENvbXBvbmVudHMocGFyZW50Lm1hcmt1cCkpe1xuICAgICAgICAvLyBmaW5kIGFsbCB0aGUgbmVzdGVkIGNvbXBvbmVudHMgZnJvbSB0aGUgbWFya3VwIGFuZCBwdXNoIGl0IHRvIG5lc3RlZENvbXBvbmVudHMuXG4gICAgICAgIGxldCBjaGlsZHJlbiA9IGNvbXBvbmVudHMuZmlsdGVyKGNvbXBvbmVudD0+IHBhcmVudC5tYXJrdXAuaW5jbHVkZXMoY29tcG9uZW50Lm5hbWUpKTtcbiAgICAgICAgLy8gRmluZCBncmFuZCBraWRzLlxuICAgICAgICBsZXQgZ3JhbmRLaWRzID0gY2hpbGRyZW4ubWFwKGdldE5lc3RlZENvbXBvbmVudHMpLmZsYXQoMylcbiAgICAgICAgbmVzdGVkQ29tcG9uZW50cy5wdXNoKC4uLmdyYW5kS2lkcylcbiAgICB9XG4gICAgcmV0dXJuIG5lc3RlZENvbXBvbmVudHMuZmlsdGVyKGNvbXBvbmVudD0+Y29tcG9uZW50ICYmIGNvbXBvbmVudC5tYXJrdXApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q2hpbGRDb21wb25lbnRzIChtYXJrdXApe1xuICAgIGxldCBjb21wb25lbnRzPSByZWFkRGF0YShcInVpLWVkaXRvclwiKTtcbiAgICByZXR1cm4gY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50PT4gbWFya3VwLmluY2x1ZGVzKGNvbXBvbmVudC5uYW1lKSk7XG59IiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsIi8vIERlcGVuZGVuY2llcy5cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZXNlbGVjdGVkSW5kZXggKGUpIHtcbiAgICBsZXQgY29tcG9uZW50TmFtZSA9IGUuY3VycmVudFRhcmdldC5pbm5lclRleHQuc3BsaXQoXCJcXG5cIilbMF07XG4gICAgLy8gRmluZCB0aGUgZWxlbWVudCBmcm9tIHN0YXRlIHRoYXQgbWF0Y2hlcyB0aGUgY3VycmVudGx5IHNlbGVjdGVkIGVsZW1lbnQuXG4gICAgbGV0IHNlbGVjdGVkQ29tcG9uZW50ID0gdGhpcy5zdGF0ZS5lbGVtZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWU9PT1jb21wb25lbnROYW1lKTtcbiAgICBsZXQgc2VsZWN0ZWRJbmRleCA9IHRoaXMuc3RhdGUuZWxlbWVudHMuZmluZEluZGV4KGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWU9PT1jb21wb25lbnROYW1lKTtcblxuICAgIHdpbmRvdy5zZWxlY3RlZGNvbXBvbmVudG5hbWUgPSBzZWxlY3RlZENvbXBvbmVudC5uYW1lO1xuICAgIC8vIFVwZGF0ZSB0aGUgc3RhdGUgd2l0aCBzZWxlY3RlZEVsZW1lbnQuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHNlbGVjdGVkSW5kZXgsXG4gICAgICAgIG5hbWU6IHNlbGVjdGVkQ29tcG9uZW50Lm5hbWUsXG4gICAgICAgIG1hcmt1cDogc2VsZWN0ZWRDb21wb25lbnQubWFya3VwXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNhdmVFbGVtZW50IChlbGVtZW50KSB7XG4gICAgXG4gICAgbGV0IGNvbXBvbmVudHMgPSBBcnJheS5mcm9tKHRoaXMuc3RhdGUuZWxlbWVudHMpO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgZXhpc3QuXG4gICAgbGV0IGVsZW1lbnRFeGlzdCA9IGNvbXBvbmVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lPT09ZWxlbWVudC5uYW1lKTtcblxuICAgIGlmKGVsZW1lbnRFeGlzdCl7XG4gICAgICAgIC8vIEZpbmQgdGhlIGVsZW1lbnQuXG4gICAgICAgIGxldCBlbGVtZW50VW5kZXJFZGl0ID0gY29tcG9uZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdO1xuXG4gICAgICAgIC8vIE1lcmdlLlxuICAgICAgICBlbGVtZW50VW5kZXJFZGl0ID0gT2JqZWN0LmFzc2lnbihlbGVtZW50VW5kZXJFZGl0LCBlbGVtZW50KVxuXG4gICAgICAgIC8vIFB1c2ggaXQgdG8gb3JpZ2luYWwgbGlzdC5cbiAgICAgICAgY29tcG9uZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdID0gZWxlbWVudFVuZGVyRWRpdDtcbiAgICB9XG5cbiAgICBlbHNlIHtcbiAgICAgICAgbGV0IG5ld0VsZW1lbnQgPSB7XG4gICAgICAgICAgICBuYW1lOiBlbGVtZW50Lm5hbWUsXG4gICAgICAgICAgICBtYXJrdXA6IGVsZW1lbnQubWFya3VwLFxuICAgICAgICAgICAgZXZlbnRzOiBbXSxcbiAgICAgICAgICAgIHN0YXRlOiBlbGVtZW50LnN0YXRlIHx8IFwie31cIixcbiAgICAgICAgICAgIHN0eWxlOiBlbGVtZW50LnN0eWxlLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtdLFxuICAgICAgICAgICAgaWQ6IE1hdGguY2VpbChNYXRoLnJhbmRvbSgpKjEwMDApLFxuICAgICAgICAgICAgY29uZmlnOlwie31cIlxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbXBvbmVudHMucHVzaChuZXdFbGVtZW50KTtcbiAgICB9XG5cbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZWxlbWVudHM6IGNvbXBvbmVudHMsXG4gICAgICAgIGVsZW1lbnQ6IHtcbiAgICAgICAgICAgIG5hbWU6IGVsZW1lbnQubmFtZSxcbiAgICAgICAgICAgIG1hcmt1cDogZWxlbWVudC5tYXJrdXAsXG4gICAgICAgICAgICBzdHlsZTogZWxlbWVudC5zdHlsZSxcbiAgICAgICAgICAgIHN0YXRlOiBlbGVtZW50LnN0YXRlLFxuICAgICAgICAgICAgZXZlbnRzOiBlbGVtZW50LmV2ZW50cyB8fCBbXVxuICAgICAgICB9LFxuICAgICAgICBzZWxlY3RlZEluZGV4OiBjb21wb25lbnRzLmxlbmd0aC0xXG4gICAgfSk7XG5cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInVpLWVkaXRvclwiLCBKU09OLnN0cmluZ2lmeShjb21wb25lbnRzKSk7XG5cbn1cblxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlRXZlbnQgKGV2ZW50cykge1xuICAgIC8vIENyZWF0ZSBuZXcgc3RhdGUuXG4gICAgbGV0IG5ld0VsZW1lbnRzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5zdGF0ZSkuZWxlbWVudHM7XG5cbiAgICBuZXdFbGVtZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdLmV2ZW50cyA9IGV2ZW50cztcblxuICAgIC8vIFNldCBzdGF0ZSB0byB0aGUgbmV3IHN0YXRlLlxuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBlbGVtZW50czogbmV3RWxlbWVudHNcbiAgICB9KTtcblxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidWktZWRpdG9yXCIsIEpTT04uc3RyaW5naWZ5KG5ld0VsZW1lbnRzKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkRlbGV0ZShjb21wb25lbnROYW1lKSB7XG4gICAgZGVidWdnZXI7XG4gICAgLy8gR2V0IGFsbCB0aGUgZWxlbWVudHNcbiAgICBsZXQgZWxlbWVudHMgPSBBcnJheS5mcm9tKHRoaXMuc3RhdGUuZWxlbWVudHMpO1xuICAgIFxuICAgIC8vIEZpbmQgdGhlIGluZGV4IG9mIGVsZW1lbnQgdG8gYmUgZGVsZXRlZC5cbiAgICBsZXQgaW5kZXggPSBlbGVtZW50cy5maW5kSW5kZXgoY29tcG9uZW50PT5jb21wb25lbnQubmFtZT09PWNvbXBvbmVudE5hbWUpXG5cbiAgICAvLyBSZW1vdmUgdGhlIGVsZW1lbnQgZnJvbSB0aGUgbGlzdFxuICAgIGVsZW1lbnRzLnNwbGljZShpbmRleCwxKTtcblxuICAgIC8vIFVwZGF0ZSB0aGUgc3RhdGUgd2l0aCBuZXcgZWxlbWVudHMuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBlbGVtZW50c1xuICAgIH0pXG5cbiAgICAvLyBQZXJzaXN0IHRoZSBjaGFuZ2VzLlxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidWktZWRpdG9yXCIsIEpTT04uc3RyaW5naWZ5KGVsZW1lbnRzKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVDb25maWcoY29uZmlnKXtcbiAgICBcbiAgICBsZXQgbmV3RWxlbWVudHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnN0YXRlKS5lbGVtZW50cztcbiAgICBcbiAgICBsZXQgcGFyZW50ID0gbmV3RWxlbWVudHMuZmluZChlbGVtZW50PT5lbGVtZW50Lm5hbWU9PT1jb25maWcucGFyZW50TmFtZSk7XG4gICAgbGV0IGNoaWxkID0gbmV3RWxlbWVudHMuZmluZChlbGVtZW50PT5lbGVtZW50Lm5hbWU9PT1jb25maWcuY2hpbGROYW1lKTtcblxuICAgIHBhcmVudC5zdGF0ZSA9IEpTT04ucGFyc2UocGFyZW50LnN0YXRlKTtcblxuICAgIGlmKHBhcmVudC5jb25maWcgPT09IHVuZGVmaW5lZCl7XG4gICAgICAgIHBhcmVudC5jb25maWcgPSB7fTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHBhcmVudC5jb25maWcgPSBKU09OLnBhcnNlKHBhcmVudC5jb25maWcpO1xuICAgIH1cbiAgICBwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdID0gcGFyZW50LmNvbmZpZ1tjaGlsZC5uYW1lXSB8fCB7fVxuICAgIHBhcmVudC5jb25maWdbY2hpbGQubmFtZV0ub3ZlcmlkZVN0YXRlID0gY29uZmlnLm92ZXJyaWRlXG4gICAgXG4gICAgaWYocGFyZW50LmNvbmZpZ1tjaGlsZC5uYW1lXS5vdmVyaWRlU3RhdGUpIHsgICAgXG4gICAgICAgIHBhcmVudC5zdGF0ZVtjaGlsZC5uYW1lXSA9IEpTT04ucGFyc2UoY2hpbGQuc3RhdGUpO1xuICAgIH0gXG4gICAgZWxzZSB7XG4gICAgICAgIGRlbGV0ZSBwYXJlbnQuc3RhdGVbY2hpbGQubmFtZV07XG4gICAgICAgIGRlbGV0ZSBwYXJlbnQuY29uZmlnW2NoaWxkLm5hbWVdO1xuICAgIH1cblxuXG4gICAgcGFyZW50LnN0YXRlID0gSlNPTi5zdHJpbmdpZnkocGFyZW50LnN0YXRlKVxuICAgIHBhcmVudC5jb25maWcgPSBKU09OLnN0cmluZ2lmeShwYXJlbnQuY29uZmlnKVxuXG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGVsZW1lbnRzOiBuZXdFbGVtZW50c1xuICAgIH0pXG5cbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInVpLWVkaXRvclwiLCBKU09OLnN0cmluZ2lmeShuZXdFbGVtZW50cykpO1xufSIsImltcG9ydCB7IGNvZGVNb2RpZmllciB9IGZyb20gXCIuL2NvZGVNb2RpZmllclwiO1xuaW1wb3J0IHsgZ2V0Q2hpbGRDb21wb25lbnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuXG5mdW5jdGlvbiBnZXRDb21wb25lbnRTdHJpbmcoY29tcG9uZW50KXtcblxuICAgIGlmKCFjb21wb25lbnQubWFya3VwWzNdKXtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICByZXR1cm4gY29udmVydFRvUmVhY3Rjb21wb25lbnQoY29tcG9uZW50KTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudCl7XG4gICAgbGV0IGNvbXBvbmVudFN0cmluZyA9IGdldENvbXBvbmVudFN0cmluZyhjb21wb25lbnQpO1xuICAgIC8vIGV2YWwgZG9lcyBub3QgZXZhbHVhdGUgY2xhc3MgaWYgbm90IGV4Y2xvc2VkIGluIHBhcmFudGhlc2lzLlxuICAgIHJldHVybiBldmFsKEJhYmVsLnRyYW5zZm9ybShjb21wb25lbnRTdHJpbmcsIHsgcHJlc2V0czogWydyZWFjdCddLCBwbHVnaW5zOiBbXCJ0cmFuc2Zvcm0tZXMyMDE1LWNsYXNzZXNcIl0gIH0pLmNvZGUpXG59XG5cblxuLy8gRWxlbWVudHMgdG8gIHJlYWN0IGNvbXBvbmVudC5cbmZ1bmN0aW9uIGNvbnZlcnRUb1JlYWN0Y29tcG9uZW50IChjb21wb25lbnQpe1xuXG4gICAgY29tcG9uZW50LmV2ZW50cy5mb3JFYWNoKGV2ZW50PT57XG4gICAgICAgIGV2ZW50LmlkID0gZXZlbnQuaWQucmVwbGFjZShcIi1cIixcIlwiKTtcbiAgICB9KVxuXG4gICAgbGV0IGdldENvbXBvbmVudEV2ZW50ZWRNYXJrdXAgPSAobWFya3VwLCBldmVudHMpPT57XG4gICAgICAgIGV2ZW50cy5mb3JFYWNoKGV2ZW50PT57XG4gICAgICAgICAgICBsZXQgaWQgPSBgaWQ9XCIke2V2ZW50LmlkfVwiYDtcbiAgICAgICAgICAgIG1hcmt1cCA9IG1hcmt1cC5yZXBsYWNlKGlkLCBgJHtpZH0gJHtldmVudC5uYW1lfT17dGhpcy4ke2V2ZW50LmlkK2V2ZW50Lm5hbWV9LmJpbmQodGhpcyl9YCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIFRoaXMgd2FzIGEgZWFzeSB0byB0aGluayBidXQgaGFyZCB0byB3cml0ZSBhIHJlYWRhYmxlIGNvZGUuIEkga25vdyBjb21tZW50cyB3b250IGhlbHAuXG4gICAgICAgIGxldCBjaGlsZENvbXBvbmVudHMgPSBnZXRDaGlsZENvbXBvbmVudHMobWFya3VwKTtcbiAgICAgICAgaWYoY2hpbGRDb21wb25lbnRzLmxlbmd0aD4wKXtcbiAgICAgICAgICAgIC8vIEZvciBlYWNoIG9mIGNoaWxkIGNvbXBvbmVudHNcbiAgICAgICAgICAgIGNoaWxkQ29tcG9uZW50cy5mb3JFYWNoKGNoaWxkPT57XG5cbiAgICAgICAgICAgICAgICAvLyBGcm9tIGVhY2ggb2YgY2hpbGQgZXZlbnRzIGZpbHRlciB0aGUgcHVibGlzaGFibGUgZXZlbnRzLlxuICAgICAgICAgICAgICAgIGxldCBwdWJsaXNoYWJsZUV2ZW50cyA9IGNoaWxkLmV2ZW50cy5maWx0ZXIoZXZlbnQ9PmV2ZW50LnB1Ymxpc2hhYmxlPT09dHJ1ZSk7XG4gICAgICAgICAgICAgICAgLy8gRmlsdGVyIHB1Ymxpc2hhYmxlIGNoaWxkIGV2ZW50cyB0aGF0IGFyZSBpbiBwYXJlbnQuXG4gICAgICAgICAgICAgICAgLy8gRm9yIGVhY2ggb2YgcHVibGlzaGFibGUgZXZlbnRzXG4gICAgICAgICAgICAgICAgLy8gRmluZCB3aGljaCBpcyBwcmVzZW50IGluIHRoaXMgY29tcG9uZW50LmV2ZW50cy5uYW1lXG4gICAgICAgICAgICAgICAgaWYocHVibGlzaGFibGVFdmVudHMubGVuZ3RoIT0wKXtcblxuICAgICAgICAgICAgICAgICAgICBsZXQgZXZlbnRVc2VkSW5QYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgIHB1Ymxpc2hhYmxlRXZlbnRzLmZvckVhY2gocHVibGlzaGFibGVFdmVudD0+e1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRVc2VkSW5QYXJlbnQgPSBjb21wb25lbnQuZXZlbnRzLmZpbmQoZXZlbnQ9PmV2ZW50Lm5hbWU9PT1wdWJsaXNoYWJsZUV2ZW50LnB1Ymxpc2hOYW1lKVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICBsZXQgZnVuY3Rpb25EZWYgPSBjb2RlTW9kaWZpZXIoZXZlbnRVc2VkSW5QYXJlbnQucmVkdWNlciwgY29tcG9uZW50KTtcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgbGV0IHByb3BzID0gZXZlbnRVc2VkSW5QYXJlbnQubmFtZSsnPScrYHtmdW5jdGlvbihlKXske2Z1bmN0aW9uRGVmfX0uYmluZCh0aGlzKX1gXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoZW4gZG8gbWFya3VwLnJlcGxhY2VcbiAgICAgICAgICAgICAgICAgICAgbWFya3VwID0gY29tcG9uZW50Lm1hcmt1cC5yZXBsYWNlKGNoaWxkLm5hbWUsIGNoaWxkLm5hbWUrXCIgXCIrcHJvcHMpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHJldHVybiBtYXJrdXAuc3BsaXQoXCJ7c3RhdGUuXCIpLmpvaW4oXCJ7dGhpcy5zdGF0ZS5cIik7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgcmV0dXJuIG1hcmt1cC5zcGxpdChcIntzdGF0ZS5cIikuam9pbihcInt0aGlzLnN0YXRlLlwiKVxuICAgIH1cblxuICAgIC8vIGNoZWNrcyBpZiBzdGF0ZSBvdmVycmlkZSBpcyBvbi4gdGhlbiBhZGRzIHN0YXRlIHByb3AgdG8gY2hpbGQgXG4gICAgbGV0IGdldFN0YXRlZE1hcmt1cCA9IChtYXJrdXApPT57XG4gICAgICAgIC8vIGZvciBhbGwgdGhlIGNvbmZpZy5cbiAgICAgICAgLy8gZmlsdGVyIGNoaWxkIHdpdGggb3ZlcmlkZSBzdGF0ZSBpcyB0cnVlXG4gICAgICAgIGxldCBjb25maWcgPSBKU09OLnBhcnNlKGNvbXBvbmVudC5jb25maWcpO1xuICAgICAgICBsZXQgY2hpbGRyZW5Db25maWcgPSBPYmplY3Qua2V5cyhjb25maWcpO1xuICAgICAgICBjaGlsZHJlbkNvbmZpZy5mb3JFYWNoKGNoaWxkTmFtZT0+e1xuICAgICAgICAgICAgaWYoY29uZmlnW2NoaWxkTmFtZV0ub3ZlcmlkZVN0YXRlKXtcbiAgICAgICAgICAgICAgICBtYXJrdXAgPSBtYXJrdXAucmVwbGFjZShjaGlsZE5hbWUsIGNoaWxkTmFtZStgIHN0YXRlPXt0aGlzLnN0YXRlLiR7Y2hpbGROYW1lfX1gKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gbWFya3VwO1xuICAgIH1cblxuICAgIGxldCBnZXRDb21wb25lbnRSZWR1Y2VycyA9IChldmVudHMpID0+IHtcbiAgICAgICAgcmV0dXJuIGV2ZW50cy5tYXAoZXZlbnQ9PntcbiAgICAgICAgICAgIGxldCBmdW5jdGlvbk5hbWUgPSBldmVudC5pZCtldmVudC5uYW1lO1xuICAgICAgICAgICAgbGV0IGZ1bmN0aW9uRGVmID0gY29kZU1vZGlmaWVyKGV2ZW50LnJlZHVjZXIsIGNvbXBvbmVudCk7XG5cbiAgICAgICAgICAgIGlmKGV2ZW50LnB1Ymxpc2hhYmxlPT09dHJ1ZSl7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgICAgICAgICAgJHtmdW5jdGlvbk5hbWV9IChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAke2Z1bmN0aW9uRGVmfVxuICAgICAgICAgICAgICAgICAgICAgICAgZS5zdGF0ZSA9IHN0YXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVidWdnZXI7KDEpXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLiR7ZXZlbnQucHVibGlzaE5hbWV9PyB0aGlzLnByb3BzLiR7ZXZlbnQucHVibGlzaE5hbWV9KGUpOm51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgICAgICAgICAgJHtmdW5jdGlvbk5hbWV9IChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAke2Z1bmN0aW9uRGVmfVxuICAgICAgICAgICAgICAgICAgICB9YFxuICAgICAgICB9KS5qb2luKFwiXFxuXCIpXG4gICAgfVxuICAgIFxuICAgIGxldCBjb21wb25lbnRFdmVudGVkTWFya3VwID0gZ2V0Q29tcG9uZW50RXZlbnRlZE1hcmt1cChjb21wb25lbnQubWFya3VwLCBjb21wb25lbnQuZXZlbnRzKVxuICAgIGxldCBzdGF0ZU92ZXJpZGVNYXJrdXAgPSBnZXRTdGF0ZWRNYXJrdXAoY29tcG9uZW50RXZlbnRlZE1hcmt1cClcbiAgICBsZXQgY29tcG9uZW50UmVkdWNlcnMgPSBnZXRDb21wb25lbnRSZWR1Y2Vycyhjb21wb25lbnQuZXZlbnRzKVxuICAgIGxldCBjb21wb25lbnROYW1lID0gY29tcG9uZW50Lm5hbWUuc3BsaXQoXCIgXCIpLmpvaW4oXCJcIilcbiAgICBsZXQgY29tcG9uZW50U3RhdGUgPSBjb21wb25lbnQuc3RhdGVcbiAgICBsZXQgUmVhY3RDb21wb25lbnQgPSBcbiAgICBgKFxuICAgIGNsYXNzICR7Y29tcG9uZW50TmFtZX0gZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIFxuICAgICAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMucHJvcHMuc3RhdGUgfHwgJHtjb21wb25lbnRTdGF0ZX07XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgJHtjb21wb25lbnRSZWR1Y2Vyc31cbiAgICBcbiAgICAgICAgcmVuZGVyKCkge1xuICAgIFxuICAgICAgICAgICAgcmV0dXJuICgke3N0YXRlT3ZlcmlkZU1hcmt1cH0pXG4gICAgICAgIH1cbiAgICB9KVxuICAgIGBcbiAgICByZXR1cm4gUmVhY3RDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGNyZWF0ZUNvbXBvbmVudCxcbiAgICBnZXRDb21wb25lbnRTdHJpbmdcbn0iLCIvLyBJbXBsZW1lbnQgc3R5bGVzaGVldCBjbGVhbnVwXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdHlsZXNoZWV0KHN0eWxlLCBuYW1lKSB7XG5cbiAgICBsZXQgdG9EZWxldGUgPSBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWNvbXBvbmVudC1uYW1lPSdQYXJlbnRDb21wb25lbnQnXVwiKV07XG4gICAgdG9EZWxldGUuZm9yRWFjaChpdGVtPT57XG4gICAgICAgIGl0ZW0ucmVtb3ZlKClcbiAgICB9KVxuICAgIHZhciBkeW5hbWljU3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIGR5bmFtaWNTdHlsZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWNvbXBvbmVudC1uYW1lXCIsIG5hbWUpO1xuICAgIGR5bmFtaWNTdHlsZS50eXBlID0gJ3RleHQvY3NzJztcbiAgICBkeW5hbWljU3R5bGUuaW5uZXJIVE1MID0gc3R5bGU7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkeW5hbWljU3R5bGUpXG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vc3R5bGUuY3NzXCI7XG5cbmltcG9ydCBNZXNzYWdlQ29tcG9uZW50IGZyb20gXCIuLi9NZXNzYWdlQ29tcG9uZW50XCI7XG5cbmNsYXNzIE1lc3NhZ2VzQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBtZXNzYWdlcyA9IHRoaXMucHJvcHMubWVzc2FnZXM7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29uc29sZVwiPlxuICAgICAgICAgICAgICAgICAgICB7bWVzc2FnZXMubWFwKChtZXNzYWdlLGluZGV4KT0+PE1lc3NhZ2VDb21wb25lbnQga2V5PXtpbmRleH0gbWVzc2FnZT17bWVzc2FnZX0vPil9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VzQ29tcG9uZW50OyIsImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHvCoHNhdmVDb21wb25lbnRzVG9XaW5kb3csIGdldE5lc3RlZENvbXBvbmVudHMgfSBmcm9tIFwiLi9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuaW1wb3J0IHsgcmVhZERhdGEsIHdyaXRlRGF0YSB9IGZyb20gXCIuL2xvY2FsU3RvcmFnZVwiO1xuXG5cbi8vIFdoeT8gQmVjYXVzZSBpbXBvcnRpbmcgUmVhY3QgYXMgdmFyaWFibGUgYXQgbGluZSMyIHdpbGwgYmUgYWx0ZXJ0ZWQgYnkgYmFiZWwuIEtlZXAgaXQgYXMgYSBwcm9wZXJ0eSwgYmFiZWwgd2lsbCBpZ25vcmUgaXQuXG53aW5kb3cuUmVhY3QgPSBSZWFjdDtcbndpbmRvdy5Db21wb25lbnQgPSBSZWFjdC5Db21wb25lbnQ7XG53aW5kb3cuc2F2ZVZhcmlhbnRzID0gZnVuY3Rpb24gKHNvdXJjZSwgdGFyZ2V0LCBzdGF0ZSwgZXZlbnQpIHtcblxuICAgIGRlYnVnZ2VyO1xuICAgIHZhciBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG5cbiAgICBpZihzb3VyY2U9PT10YXJnZXQpe1xuICAgICAgICB2YXIgY29tcG9uZW50ID0gY29tcG9uZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWUgPT09IHNvdXJjZS5uYW1lKTtcbiAgICAgICAgY29tcG9uZW50LnZhcmlhbnRzID0gY29tcG9uZW50LnZhcmlhbnRzIHx8IFtjb21wb25lbnQuc3RhdGVdO1xuICAgICAgICBjb21wb25lbnQudmFyaWFudHMucHVzaChzdGF0ZSk7XG4gICAgICAgIGNvbXBvbmVudC52YXJpYW50cyA9IFsuLi5uZXcgU2V0KGNvbXBvbmVudC52YXJpYW50cy5tYXAoSlNPTi5zdHJpbmdpZnkpKV0ubWFwKEpTT04ucGFyc2UpLmZpbHRlcihCb29sZWFuKTtcbiAgICAgICAgd3JpdGVEYXRhKFwidWktZWRpdG9yXCIsY29tcG9uZW50cyk7XG4gICAgfVxuICAgIGVsc2V7XG5cblxuICAgICAgICAvLyBzb3VyY2UgaXMgdGhlIHBhcmVudCBhbmQgdGFyZ2V0IGlzIHRoZSBjaGlsZC5cbiAgICAgICAgLy8gQWN0dWFsIGZpeFxuICAgICAgICAvLyAxLiBmaW5kIHBhcmVudCB0aGF0IGhhcyBzdGF0ZVt0YXJnZXRdICE9PSB1bmRlZmluZWRcblxuICAgICAgICB2YXIgc291cmNlQ29tcG9uZW50ID0gY29tcG9uZW50cy5maW5kKGNvbXBvbmVudD0+Y29tcG9uZW50Lm5hbWUgPT09IHNvdXJjZS5uYW1lKTtcbiAgICAgICAgdmFyIHRhcmdldENvbXBvbmVudCA9IGNvbXBvbmVudHMuZmluZChjb21wb25lbnQ9PmNvbXBvbmVudC5uYW1lID09PSB0YXJnZXQubmFtZSk7XG5cblxuICAgICAgICAvLyB0ZW1wb3JhcnlGaXhcblxuICAgICAgICBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgPSBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgfHwgW0pTT04ucGFyc2Uoc291cmNlQ29tcG9uZW50LnN0YXRlKV07XG5cbiAgICAgICAgbGV0IHNvdXJjZXN0YXRlID0gSlNPTi5wYXJzZShzb3VyY2VDb21wb25lbnQuc3RhdGUpO1xuXG4gICAgICAgIGxldCBuZXdTdGF0ZSA9IHt9O1xuICAgICAgICBuZXdTdGF0ZVt0YXJnZXRDb21wb25lbnQubmFtZV0gPSBzdGF0ZTtcblxuICAgICAgICBzb3VyY2VzdGF0ZSA9IE9iamVjdC5hc3NpZ24oc291cmNlc3RhdGUsbmV3U3RhdGUpXG5cbiAgICAgICAgc291cmNlQ29tcG9uZW50LnZhcmlhbnRzLnB1c2goc291cmNlc3RhdGUpO1xuICAgICAgICBzb3VyY2VDb21wb25lbnQudmFyaWFudHMgPSBbLi4ubmV3IFNldChzb3VyY2VDb21wb25lbnQudmFyaWFudHMubWFwKEpTT04uc3RyaW5naWZ5KSldLm1hcChKU09OLnBhcnNlKS5maWx0ZXIoQm9vbGVhbik7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidWktZWRpdG9yXCIsIEpTT04uc3RyaW5naWZ5KGNvbXBvbmVudHMpKTtcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROb2RlVHJlZShlbGVtZW50LCBqc3gsIHN0eWxlLCBzdGF0ZSwgZXZlbnRzKSB7XG4gICAgXG4gICAgbGV0IHJlc3VsdCwgZXJyb3I7XG4gICAgdHJ5e1xuICAgICAgICBsZXQgbmVzdGVkQ29tcG9uZW50cyA9IGdldE5lc3RlZENvbXBvbmVudHMoZWxlbWVudCk7XG4gICAgICAgIGlmIChuZXN0ZWRDb21wb25lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNhdmVDb21wb25lbnRzVG9XaW5kb3cobmVzdGVkQ29tcG9uZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gZXZhbChCYWJlbC50cmFuc2Zvcm0oanN4LCB7IHByZXNldHM6IFsncmVhY3QnXSB9KS5jb2RlKVxuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIGVycm9yID0gZTtcbiAgICB9XG4gICAgZmluYWxseXtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGVycm9yOiBlcnJvcixcbiAgICAgICAgICAgIHJlc3VsdCwgcmVzdWx0XG4gICAgICAgIH07XG4gICAgfVxufSIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gXCJyZWFjdC1kb21cIjtcblxuLy8gRGVwZW5kZW5jaWVzLlxuaW1wb3J0IFwiLi9JbmRleC9pbmRleC5jc3NcIjtcblxuLy8gQ29tcG9uZW50cy5cblxuaW1wb3J0IFRvb2wgZnJvbSBcIi4vVG9vbFwiO1xuXG5cbmNsYXNzIEluZGV4IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG5cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8VG9vbCAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5SZWFjdERPTS5yZW5kZXIoPEluZGV4IC8+LCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImluZGV4XCIpKTsiLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNlxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIGs9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLHA9bj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxxPW4/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixyPW4/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHQ9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsdT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCx2PW4/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LHc9bj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCx4PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSx5PW4/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHo9bj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMsYWE9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTpcbjYwMTE1LGJhPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gY2EoYSxiLGQsYyxlLGcsaCxmKXtpZighYSl7YT12b2lkIDA7aWYodm9pZCAwPT09YilhPUVycm9yKFwiTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIik7ZWxzZXt2YXIgbD1bZCxjLGUsZyxoLGZdLG09MDthPUVycm9yKGIucmVwbGFjZSgvJXMvZyxmdW5jdGlvbigpe3JldHVybiBsW20rK119KSk7YS5uYW1lPVwiSW52YXJpYW50IFZpb2xhdGlvblwifWEuZnJhbWVzVG9Qb3A9MTt0aHJvdyBhO319XG5mdW5jdGlvbiBCKGEpe2Zvcih2YXIgYj1hcmd1bWVudHMubGVuZ3RoLTEsZD1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0wO2M8YjtjKyspZCs9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbYysxXSk7Y2EoITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixkKX12YXIgQz17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sRD17fTtcbmZ1bmN0aW9uIEUoYSxiLGQpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZHx8Q31FLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0UucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT9CKFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07RS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07ZnVuY3Rpb24gRigpe31GLnByb3RvdHlwZT1FLnByb3RvdHlwZTtmdW5jdGlvbiBHKGEsYixkKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWR8fEN9dmFyIEg9Ry5wcm90b3R5cGU9bmV3IEY7XG5ILmNvbnN0cnVjdG9yPUc7ayhILEUucHJvdG90eXBlKTtILmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBJPXtjdXJyZW50Om51bGx9LEo9e2N1cnJlbnQ6bnVsbH0sSz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGQpe3ZhciBjPXZvaWQgMCxlPXt9LGc9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoYyBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KSxiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109YltjXSk7dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Zil7Zm9yKHZhciBsPUFycmF5KGYpLG09MDttPGY7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1sfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihjIGluIGY9YS5kZWZhdWx0UHJvcHMsZil2b2lkIDA9PT1lW2NdJiYoZVtjXT1mW2NdKTtyZXR1cm57JCR0eXBlb2Y6cCx0eXBlOmEsa2V5OmcscmVmOmgscHJvcHM6ZSxfb3duZXI6Si5jdXJyZW50fX1cbmZ1bmN0aW9uIGRhKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBOKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE89L1xcLysvZyxQPVtdO2Z1bmN0aW9uIFEoYSxiLGQsYyl7aWYoUC5sZW5ndGgpe3ZhciBlPVAucG9wKCk7ZS5yZXN1bHQ9YTtlLmtleVByZWZpeD1iO2UuZnVuYz1kO2UuY29udGV4dD1jO2UuY291bnQ9MDtyZXR1cm4gZX1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpkLGNvbnRleHQ6Yyxjb3VudDowfX1cbmZ1bmN0aW9uIFIoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5QLmxlbmd0aCYmUC5wdXNoKGEpfVxuZnVuY3Rpb24gUyhhLGIsZCxjKXt2YXIgZT10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZXx8XCJib29sZWFuXCI9PT1lKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gZChjLGEsXCJcIj09PWI/XCIuXCIrVChhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaD0wO2g8YS5sZW5ndGg7aCsrKXtlPWFbaF07dmFyIGY9YitUKGUsaCk7Zys9UyhlLGYsZCxjKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUEmJmFbQV18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaD1cbjA7IShlPWEubmV4dCgpKS5kb25lOyllPWUudmFsdWUsZj1iK1QoZSxoKyspLGcrPVMoZSxmLGQsYyk7ZWxzZVwib2JqZWN0XCI9PT1lJiYoZD1cIlwiK2EsQihcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWQ/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZCxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gVShhLGIsZCl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixiLGQpfWZ1bmN0aW9uIFQoYSxiKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZudWxsIT1hLmtleT9lc2NhcGUoYS5rZXkpOmIudG9TdHJpbmcoMzYpfWZ1bmN0aW9uIGVhKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGZhKGEsYixkKXt2YXIgYz1hLnJlc3VsdCxlPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1YoYSxjLGQsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTihhKSYmKGE9ZGEoYSxlKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKStkKSksYy5wdXNoKGEpKX1mdW5jdGlvbiBWKGEsYixkLGMsZSl7dmFyIGc9XCJcIjtudWxsIT1kJiYoZz0oXCJcIitkKS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpO2I9UShiLGcsYyxlKTtVKGEsZmEsYik7UihiKX1mdW5jdGlvbiBXKCl7dmFyIGE9SS5jdXJyZW50O251bGw9PT1hP0IoXCIzMjFcIik6dm9pZCAwO3JldHVybiBhfVxudmFyIFg9e0NoaWxkcmVuOnttYXA6ZnVuY3Rpb24oYSxiLGQpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGM9W107VihhLGMsbnVsbCxiLGQpO3JldHVybiBjfSxmb3JFYWNoOmZ1bmN0aW9uKGEsYixkKXtpZihudWxsPT1hKXJldHVybiBhO2I9UShudWxsLG51bGwsYixkKTtVKGEsZWEsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFUoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtWKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TihhKT92b2lkIDA6QihcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RSxQdXJlQ29tcG9uZW50OkcsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsXG5fY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnYsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX0sZm9yd2FyZFJlZjpmdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxyZW5kZXI6YX19LGxhenk6ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOmJhLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fSxtZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOmFhLHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNhbGxiYWNrKGEsYil9LHVzZUNvbnRleHQ6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUNvbnRleHQoYSxiKX0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VFZmZlY3QoYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLFxuYixkKXtyZXR1cm4gVygpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGQpfSx1c2VEZWJ1Z1ZhbHVlOmZ1bmN0aW9uKCl7fSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVygpLnVzZUxheW91dEVmZmVjdChhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7cmV0dXJuIFcoKS51c2VNZW1vKGEsYil9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGQpe3JldHVybiBXKCkudXNlUmVkdWNlcihhLGIsZCl9LHVzZVJlZjpmdW5jdGlvbihhKXtyZXR1cm4gVygpLnVzZVJlZihhKX0sdXNlU3RhdGU6ZnVuY3Rpb24oYSl7cmV0dXJuIFcoKS51c2VTdGF0ZShhKX0sRnJhZ21lbnQ6cixTdHJpY3RNb2RlOnQsU3VzcGVuc2U6eixjcmVhdGVFbGVtZW50Ok0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixkKXtudWxsPT09YXx8dm9pZCAwPT09YT9CKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxlPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7aWYobnVsbCE9XG5iKXt2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYsZj1KLmN1cnJlbnQpO3ZvaWQgMCE9PWIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGVbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWUuY2hpbGRyZW49ZDtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmUsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpOLHZlcnNpb246XCIxNi44LjZcIixcbnVuc3RhYmxlX0NvbmN1cnJlbnRNb2RlOngsdW5zdGFibGVfUHJvZmlsZXI6dSxfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpJLFJlYWN0Q3VycmVudE93bmVyOkosYXNzaWduOmt9fSxZPXtkZWZhdWx0Olh9LFo9WSYmWHx8WTttb2R1bGUuZXhwb3J0cz1aLmRlZmF1bHR8fFo7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjguNlxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuLypcbiBNb2Rlcm5penIgMy4wLjBwcmUgKEN1c3RvbSBCdWlsZCkgfCBNSVRcbiovXG4ndXNlIHN0cmljdCc7dmFyIGFhPXJlcXVpcmUoXCJyZWFjdFwiKSxuPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHI9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgpe2lmKCFhKXthPXZvaWQgMDtpZih2b2lkIDA9PT1iKWE9RXJyb3IoXCJNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtlbHNle3ZhciBsPVtjLGQsZSxmLGcsaF0saz0wO2E9RXJyb3IoYi5yZXBsYWNlKC8lcy9nLGZ1bmN0aW9uKCl7cmV0dXJuIGxbaysrXX0pKTthLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCJ9YS5mcmFtZXNUb1BvcD0xO3Rocm93IGE7fX1cbmZ1bmN0aW9uIHgoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTtiYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWFhP3ZvaWQgMDp4KFwiMjI3XCIpO2Z1bmN0aW9uIGNhKGEsYixjLGQsZSxmLGcsaCxsKXt2YXIgaz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxrKX1jYXRjaChtKXt0aGlzLm9uRXJyb3IobSl9fVxudmFyIGRhPSExLGVhPW51bGwsZmE9ITEsaGE9bnVsbCxpYT17b25FcnJvcjpmdW5jdGlvbihhKXtkYT0hMDtlYT1hfX07ZnVuY3Rpb24gamEoYSxiLGMsZCxlLGYsZyxoLGwpe2RhPSExO2VhPW51bGw7Y2EuYXBwbHkoaWEsYXJndW1lbnRzKX1mdW5jdGlvbiBrYShhLGIsYyxkLGUsZixnLGgsbCl7amEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGRhKXtpZihkYSl7dmFyIGs9ZWE7ZGE9ITE7ZWE9bnVsbH1lbHNlIHgoXCIxOThcIiksaz12b2lkIDA7ZmF8fChmYT0hMCxoYT1rKX19dmFyIGxhPW51bGwsbWE9e307XG5mdW5jdGlvbiBuYSgpe2lmKGxhKWZvcih2YXIgYSBpbiBtYSl7dmFyIGI9bWFbYV0sYz1sYS5pbmRleE9mKGEpOy0xPGM/dm9pZCAwOngoXCI5NlwiLGEpO2lmKCFvYVtjXSl7Yi5leHRyYWN0RXZlbnRzP3ZvaWQgMDp4KFwiOTdcIixhKTtvYVtjXT1iO2M9Yi5ldmVudFR5cGVzO2Zvcih2YXIgZCBpbiBjKXt2YXIgZT12b2lkIDA7dmFyIGY9Y1tkXSxnPWIsaD1kO3BhLmhhc093blByb3BlcnR5KGgpP3goXCI5OVwiLGgpOnZvaWQgMDtwYVtoXT1mO3ZhciBsPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYobCl7Zm9yKGUgaW4gbClsLmhhc093blByb3BlcnR5KGUpJiZxYShsW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8ocWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtlP3ZvaWQgMDp4KFwiOThcIixkLGEpfX19fVxuZnVuY3Rpb24gcWEoYSxiLGMpe3JhW2FdP3goXCIxMDBcIixhKTp2b2lkIDA7cmFbYV09YjtzYVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBvYT1bXSxwYT17fSxyYT17fSxzYT17fSx0YT1udWxsLHVhPW51bGwsdmE9bnVsbDtmdW5jdGlvbiB3YShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9dmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1mdW5jdGlvbiB4YShhLGIpe251bGw9PWI/eChcIjMwXCIpOnZvaWQgMDtpZihudWxsPT1hKXJldHVybiBiO2lmKEFycmF5LmlzQXJyYXkoYSkpe2lmKEFycmF5LmlzQXJyYXkoYikpcmV0dXJuIGEucHVzaC5hcHBseShhLGIpLGE7YS5wdXNoKGIpO3JldHVybiBhfXJldHVybiBBcnJheS5pc0FycmF5KGIpP1thXS5jb25jYXQoYik6W2EsYl19XG5mdW5jdGlvbiB5YShhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIgemE9bnVsbDtmdW5jdGlvbiBBYShhKXtpZihhKXt2YXIgYj1hLl9kaXNwYXRjaExpc3RlbmVycyxjPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYikpZm9yKHZhciBkPTA7ZDxiLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtkKyspd2EoYSxiW2RdLGNbZF0pO2Vsc2UgYiYmd2EoYSxiLGMpO2EuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGw7YS5fZGlzcGF0Y2hJbnN0YW5jZXM9bnVsbDthLmlzUGVyc2lzdGVudCgpfHxhLmNvbnN0cnVjdG9yLnJlbGVhc2UoYSl9fVxudmFyIEJhPXtpbmplY3RFdmVudFBsdWdpbk9yZGVyOmZ1bmN0aW9uKGEpe2xhP3goXCIxMDFcIik6dm9pZCAwO2xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO25hKCl9LGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTpmdW5jdGlvbihhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTttYS5oYXNPd25Qcm9wZXJ0eShjKSYmbWFbY109PT1kfHwobWFbY10/eChcIjEwMlwiLGMpOnZvaWQgMCxtYVtjXT1kLGI9ITApfWImJm5hKCl9fTtcbmZ1bmN0aW9uIENhKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9dGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7YyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjIzMVwiLGIsdHlwZW9mIGMpOnZvaWQgMDtcbnJldHVybiBjfWZ1bmN0aW9uIERhKGEpe251bGwhPT1hJiYoemE9eGEoemEsYSkpO2E9emE7emE9bnVsbDtpZihhJiYoeWEoYSxBYSksemE/eChcIjk1XCIpOnZvaWQgMCxmYSkpdGhyb3cgYT1oYSxmYT0hMSxoYT1udWxsLGE7fXZhciBFYT1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSxGYT1cIl9fcmVhY3RJbnRlcm5hbEluc3RhbmNlJFwiK0VhLEdhPVwiX19yZWFjdEV2ZW50SGFuZGxlcnMkXCIrRWE7ZnVuY3Rpb24gSGEoYSl7aWYoYVtGYV0pcmV0dXJuIGFbRmFdO2Zvcig7IWFbRmFdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbRmFdO3JldHVybiA1PT09YS50YWd8fDY9PT1hLnRhZz9hOm51bGx9ZnVuY3Rpb24gSWEoYSl7YT1hW0ZhXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfVxuZnVuY3Rpb24gSmEoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3goXCIzM1wiKX1mdW5jdGlvbiBLYShhKXtyZXR1cm4gYVtHYV18fG51bGx9ZnVuY3Rpb24gTGEoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBNYShhLGIsYyl7aWYoYj1DYShhLGMuZGlzcGF0Y2hDb25maWcucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXNbYl0pKWMuX2Rpc3BhdGNoTGlzdGVuZXJzPXhhKGMuX2Rpc3BhdGNoTGlzdGVuZXJzLGIpLGMuX2Rpc3BhdGNoSW5zdGFuY2VzPXhhKGMuX2Rpc3BhdGNoSW5zdGFuY2VzLGEpfVxuZnVuY3Rpb24gTmEoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1MYShiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspTWEoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylNYShjW2JdLFwiYnViYmxlZFwiLGEpfX1mdW5jdGlvbiBPYShhLGIsYyl7YSYmYyYmYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiYoYj1DYShhLGMuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSkpJiYoYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9eGEoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9eGEoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSkpfWZ1bmN0aW9uIFBhKGEpe2EmJmEuZGlzcGF0Y2hDb25maWcucmVnaXN0cmF0aW9uTmFtZSYmT2EoYS5fdGFyZ2V0SW5zdCxudWxsLGEpfVxuZnVuY3Rpb24gUWEoYSl7eWEoYSxOYSl9dmFyIFJhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fCF3aW5kb3cuZG9jdW1lbnR8fCF3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7ZnVuY3Rpb24gU2EoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGE9e2FuaW1hdGlvbmVuZDpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNhKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNhKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWE9e30sVmE9e307XG5SYSYmKFZhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRhLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRhLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRhLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRhLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2EoYSl7aWYoVWFbYV0pcmV0dXJuIFVhW2FdO2lmKCFUYVthXSlyZXR1cm4gYTt2YXIgYj1UYVthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYSlyZXR1cm4gVWFbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYT1XYShcImFuaW1hdGlvbmVuZFwiKSxZYT1XYShcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYT1XYShcImFuaW1hdGlvbnN0YXJ0XCIpLCRhPVdhKFwidHJhbnNpdGlvbmVuZFwiKSxhYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmI9bnVsbCxjYj1udWxsLGRiPW51bGw7XG5mdW5jdGlvbiBlYigpe2lmKGRiKXJldHVybiBkYjt2YXIgYSxiPWNiLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGJiP2JiLnZhbHVlOmJiLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIGRiPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gZmIoKXtyZXR1cm4hMH1mdW5jdGlvbiBnYigpe3JldHVybiExfVxuZnVuY3Rpb24geShhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/ZmI6Z2I7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1nYjtyZXR1cm4gdGhpc31cbm4oeS5wcm90b3R5cGUse3ByZXZlbnREZWZhdWx0OmZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwO3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEucHJldmVudERlZmF1bHQ/YS5wcmV2ZW50RGVmYXVsdCgpOlwidW5rbm93blwiIT09dHlwZW9mIGEucmV0dXJuVmFsdWUmJihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1mYil9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1mYil9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt0aGlzLmlzUGVyc2lzdGVudD1mYn0saXNQZXJzaXN0ZW50OmdiLGRlc3RydWN0b3I6ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZSxcbmI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7dGhpcy5uYXRpdmVFdmVudD10aGlzLl90YXJnZXRJbnN0PXRoaXMuZGlzcGF0Y2hDb25maWc9bnVsbDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWdiO3RoaXMuX2Rpc3BhdGNoSW5zdGFuY2VzPXRoaXMuX2Rpc3BhdGNoTGlzdGVuZXJzPW51bGx9fSk7eS5JbnRlcmZhY2U9e3R5cGU6bnVsbCx0YXJnZXQ6bnVsbCxjdXJyZW50VGFyZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9LGV2ZW50UGhhc2U6bnVsbCxidWJibGVzOm51bGwsY2FuY2VsYWJsZTpudWxsLHRpbWVTdGFtcDpmdW5jdGlvbihhKXtyZXR1cm4gYS50aW1lU3RhbXB8fERhdGUubm93KCl9LGRlZmF1bHRQcmV2ZW50ZWQ6bnVsbCxpc1RydXN0ZWQ6bnVsbH07XG55LmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtuKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1uKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO2hiKGMpO3JldHVybiBjfTtoYih5KTtmdW5jdGlvbiBpYihhLGIsYyxkKXtpZih0aGlzLmV2ZW50UG9vbC5sZW5ndGgpe3ZhciBlPXRoaXMuZXZlbnRQb29sLnBvcCgpO3RoaXMuY2FsbChlLGEsYixjLGQpO3JldHVybiBlfXJldHVybiBuZXcgdGhpcyhhLGIsYyxkKX1mdW5jdGlvbiBqYihhKXthIGluc3RhbmNlb2YgdGhpcz92b2lkIDA6eChcIjI3OVwiKTthLmRlc3RydWN0b3IoKTsxMD50aGlzLmV2ZW50UG9vbC5sZW5ndGgmJnRoaXMuZXZlbnRQb29sLnB1c2goYSl9XG5mdW5jdGlvbiBoYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1pYjthLnJlbGVhc2U9amJ9dmFyIGtiPXkuZXh0ZW5kKHtkYXRhOm51bGx9KSxsYj15LmV4dGVuZCh7ZGF0YTpudWxsfSksbWI9WzksMTMsMjcsMzJdLG5iPVJhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxvYj1udWxsO1JhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihvYj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHBiPVJhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhb2IscWI9UmEmJighbmJ8fG9iJiY4PG9iJiYxMT49b2IpLHJiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLHNiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHRiPSExO1xuZnVuY3Rpb24gdWIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1tYi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHZiKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHdiPSExO2Z1bmN0aW9uIHhiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiB2YihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7dGI9ITA7cmV0dXJuIHJiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PXJiJiZ0Yj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB5YihhLGIpe2lmKHdiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFuYiYmdWIoYSxiKT8oYT1lYigpLGRiPWNiPWJiPW51bGwsd2I9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIHFiJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB6Yj17ZXZlbnRUeXBlczpzYixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPXZvaWQgMDt2YXIgZj12b2lkIDA7aWYobmIpYjp7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbnN0YXJ0XCI6ZT1zYi5jb21wb3NpdGlvblN0YXJ0O2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6ZT1zYi5jb21wb3NpdGlvbkVuZDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbnVwZGF0ZVwiOmU9c2IuY29tcG9zaXRpb25VcGRhdGU7YnJlYWsgYn1lPXZvaWQgMH1lbHNlIHdiP3ViKGEsYykmJihlPXNiLmNvbXBvc2l0aW9uRW5kKTpcImtleWRvd25cIj09PWEmJjIyOT09PWMua2V5Q29kZSYmKGU9c2IuY29tcG9zaXRpb25TdGFydCk7ZT8ocWImJlwia29cIiE9PWMubG9jYWxlJiYod2J8fGUhPT1zYi5jb21wb3NpdGlvblN0YXJ0P2U9PT1zYi5jb21wb3NpdGlvbkVuZCYmd2ImJihmPWViKCkpOihiYj1kLGNiPVwidmFsdWVcImluIGJiP2JiLnZhbHVlOmJiLnRleHRDb250ZW50LHdiPVxuITApKSxlPWtiLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1mOihmPXZiKGMpLG51bGwhPT1mJiYoZS5kYXRhPWYpKSxRYShlKSxmPWUpOmY9bnVsbDsoYT1wYj94YihhLGMpOnliKGEsYykpPyhiPWxiLmdldFBvb2xlZChzYi5iZWZvcmVJbnB1dCxiLGMsZCksYi5kYXRhPWEsUWEoYikpOmI9bnVsbDtyZXR1cm4gbnVsbD09PWY/YjpudWxsPT09Yj9mOltmLGJdfX0sQWI9bnVsbCxCYj1udWxsLENiPW51bGw7ZnVuY3Rpb24gRGIoYSl7aWYoYT11YShhKSl7XCJmdW5jdGlvblwiIT09dHlwZW9mIEFiP3goXCIyODBcIik6dm9pZCAwO3ZhciBiPXRhKGEuc3RhdGVOb2RlKTtBYihhLnN0YXRlTm9kZSxhLnR5cGUsYil9fWZ1bmN0aW9uIEViKGEpe0JiP0NiP0NiLnB1c2goYSk6Q2I9W2FdOkJiPWF9ZnVuY3Rpb24gRmIoKXtpZihCYil7dmFyIGE9QmIsYj1DYjtDYj1CYj1udWxsO0RiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylEYihiW2FdKX19XG5mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKGEsYixjKXtyZXR1cm4gYShiLGMpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj0hMTtmdW5jdGlvbiBLYihhLGIpe2lmKEpiKXJldHVybiBhKGIpO0piPSEwO3RyeXtyZXR1cm4gR2IoYSxiKX1maW5hbGx5e2lmKEpiPSExLG51bGwhPT1CYnx8bnVsbCE9PUNiKUliKCksRmIoKX19dmFyIExiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIE1iKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhTGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfVxuZnVuY3Rpb24gTmIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIE9iKGEpe2lmKCFSYSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn1mdW5jdGlvbiBQYihhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gUWIoYSl7dmFyIGI9UGIoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFJiKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1RYihhKSl9ZnVuY3Rpb24gU2IoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVBiKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9dmFyIFRiPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEO1RiLmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KFRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXI9e2N1cnJlbnQ6bnVsbH0pO1xudmFyIFViPS9eKC4qKVtcXFxcXFwvXS8sej1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFZiPXo/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsV2I9ej9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LFhiPXo/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LFliPXo/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LFpiPXo/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LCRiPXo/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGFjPXo/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsYmM9ej9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGNjPXo/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGRjPXo/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGVjPXo/U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIik6XG42MDExNSxmYz16P1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LGdjPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBoYyhhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9Z2MmJmFbZ2NdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG5mdW5jdGlvbiBpYyhhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGJjOnJldHVyblwiQ29uY3VycmVudE1vZGVcIjtjYXNlIFhiOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIFdiOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBaYjpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBZYjpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIGRjOnJldHVyblwiU3VzcGVuc2VcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgYWM6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSAkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGNjOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXG5cIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBlYzpyZXR1cm4gaWMoYS50eXBlKTtjYXNlIGZjOmlmKGE9MT09PWEuX3N0YXR1cz9hLl9yZXN1bHQ6bnVsbClyZXR1cm4gaWMoYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gamMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAzOmNhc2UgNDpjYXNlIDY6Y2FzZSA3OmNhc2UgMTA6Y2FzZSA5OnZhciBjPVwiXCI7YnJlYWsgYTtkZWZhdWx0OnZhciBkPWEuX2RlYnVnT3duZXIsZT1hLl9kZWJ1Z1NvdXJjZSxmPWljKGEudHlwZSk7Yz1udWxsO2QmJihjPWljKGQudHlwZSkpO2Q9ZjtmPVwiXCI7ZT9mPVwiIChhdCBcIitlLmZpbGVOYW1lLnJlcGxhY2UoVWIsXCJcIikrXCI6XCIrZS5saW5lTnVtYmVyK1wiKVwiOmMmJihmPVwiIChjcmVhdGVkIGJ5IFwiK2MrXCIpXCIpO2M9XCJcXG4gICAgaW4gXCIrKGR8fFwiVW5rbm93blwiKStmfWIrPWM7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciBrYz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8sbGM9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxtYz17fSxuYz17fTtcbmZ1bmN0aW9uIG9jKGEpe2lmKGxjLmNhbGwobmMsYSkpcmV0dXJuITA7aWYobGMuY2FsbChtYyxhKSlyZXR1cm4hMTtpZihrYy50ZXN0KGEpKXJldHVybiBuY1thXT0hMDttY1thXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFjKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBjKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEQ9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwwLCExLGEsbnVsbCl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07RFtiXT1uZXcgQyhiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwyLCExLGEsbnVsbCl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMywhMCxhLG51bGwpfSk7XG5bXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEMoYSw0LCExLGEsbnVsbCl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDYsITEsYSxudWxsKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQyhhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7dmFyIHJjPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gc2MoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsXG5zYyk7RFtiXT1uZXcgQyhiLDEsITEsYSxudWxsKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOmhyZWYgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2UocmMsc2MpO0RbYl09bmV3IEMoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIil9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBDKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbmZ1bmN0aW9uIHRjKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KHFjKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9vYyhiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxuZnVuY3Rpb24gdWMoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIHZjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIHdjKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXVjKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24geGMoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YyhhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24geWMoYSxiKXt4YyhhLGIpO3ZhciBjPXVjKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP3pjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJnpjKGEsYi50eXBlLHVjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gQWMoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gemMoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxhLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudCE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBCYz17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiBDYyhhLGIsYyl7YT15LmdldFBvb2xlZChCYy5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0ViKGMpO1FhKGEpO3JldHVybiBhfXZhciBEYz1udWxsLEVjPW51bGw7ZnVuY3Rpb24gRmMoYSl7RGEoYSl9XG5mdW5jdGlvbiBHYyhhKXt2YXIgYj1KYShhKTtpZihTYihiKSlyZXR1cm4gYX1mdW5jdGlvbiBIYyhhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciBJYz0hMTtSYSYmKEljPU9iKFwiaW5wdXRcIikmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSkpO2Z1bmN0aW9uIEpjKCl7RGMmJihEYy5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixLYyksRWM9RGM9bnVsbCl9ZnVuY3Rpb24gS2MoYSl7XCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkdjKEVjKSYmKGE9Q2MoRWMsYSxOYihhKSksS2IoRmMsYSkpfWZ1bmN0aW9uIExjKGEsYixjKXtcImZvY3VzXCI9PT1hPyhKYygpLERjPWIsRWM9YyxEYy5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixLYykpOlwiYmx1clwiPT09YSYmSmMoKX1mdW5jdGlvbiBNYyhhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBHYyhFYyl9XG5mdW5jdGlvbiBOYyhhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIEdjKGIpfWZ1bmN0aW9uIE9jKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIEdjKGIpfVxudmFyIFBjPXtldmVudFR5cGVzOkJjLF9pc0lucHV0RXZlbnRTdXBwb3J0ZWQ6SWMsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1iP0phKGIpOndpbmRvdyxmPXZvaWQgMCxnPXZvaWQgMCxoPWUubm9kZU5hbWUmJmUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcInNlbGVjdFwiPT09aHx8XCJpbnB1dFwiPT09aCYmXCJmaWxlXCI9PT1lLnR5cGU/Zj1IYzpNYihlKT9JYz9mPU9jOihmPU1jLGc9TGMpOihoPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1oLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihmPU5jKTtpZihmJiYoZj1mKGEsYikpKXJldHVybiBDYyhmLGMsZCk7ZyYmZyhhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJnpjKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LFFjPXkuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxSYz17QWx0OlwiYWx0S2V5XCIsXG5Db250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBTYyhhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPVJjW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gVGMoKXtyZXR1cm4gU2N9XG52YXIgVWM9MCxWYz0wLFdjPSExLFhjPSExLFljPVFjLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpUYyxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1VYztVYz1hLnNjcmVlblg7cmV0dXJuIFdjP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooV2M9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1WYztWYz1hLnNjcmVlblk7cmV0dXJuIFhjP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooWGM9ITAsMCl9fSksWmM9WWMuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLCRjPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxhZD17ZXZlbnRUeXBlczokYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fGUucGFyZW50V2luZG93OndpbmRvdztmPyhmPWIsYj0oYj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50KT9IYShiKTpudWxsKTpmPW51bGw7aWYoZj09PWIpcmV0dXJuIG51bGw7dmFyIGc9dm9pZCAwLGg9dm9pZCAwLGw9dm9pZCAwLGs9dm9pZCAwO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1hKWc9WWMsaD0kYy5tb3VzZUxlYXZlLGw9JGMubW91c2VFbnRlcixrPVwibW91c2VcIjtcbmVsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9WmMsaD0kYy5wb2ludGVyTGVhdmUsbD0kYy5wb2ludGVyRW50ZXIsaz1cInBvaW50ZXJcIjt2YXIgbT1udWxsPT1mP2U6SmEoZik7ZT1udWxsPT1iP2U6SmEoYik7YT1nLmdldFBvb2xlZChoLGYsYyxkKTthLnR5cGU9aytcImxlYXZlXCI7YS50YXJnZXQ9bTthLnJlbGF0ZWRUYXJnZXQ9ZTtjPWcuZ2V0UG9vbGVkKGwsYixjLGQpO2MudHlwZT1rK1wiZW50ZXJcIjtjLnRhcmdldD1lO2MucmVsYXRlZFRhcmdldD1tO2Q9YjtpZihmJiZkKWE6e2I9ZjtlPWQ7az0wO2ZvcihnPWI7ZztnPUxhKGcpKWsrKztnPTA7Zm9yKGw9ZTtsO2w9TGEobCkpZysrO2Zvcig7MDxrLWc7KWI9TGEoYiksay0tO2Zvcig7MDxnLWs7KWU9TGEoZSksZy0tO2Zvcig7ay0tOyl7aWYoYj09PWV8fGI9PT1lLmFsdGVybmF0ZSlicmVhayBhO2I9TGEoYik7ZT1MYShlKX1iPW51bGx9ZWxzZSBiPW51bGw7ZT1iO2ZvcihiPVtdO2YmJmYhPT1lOyl7az1cbmYuYWx0ZXJuYXRlO2lmKG51bGwhPT1rJiZrPT09ZSlicmVhaztiLnB1c2goZik7Zj1MYShmKX1mb3IoZj1bXTtkJiZkIT09ZTspe2s9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWsmJms9PT1lKWJyZWFrO2YucHVzaChkKTtkPUxhKGQpfWZvcihkPTA7ZDxiLmxlbmd0aDtkKyspT2EoYltkXSxcImJ1YmJsZWRcIixhKTtmb3IoZD1mLmxlbmd0aDswPGQtLTspT2EoZltkXSxcImNhcHR1cmVkXCIsYyk7cmV0dXJuW2EsY119fTtmdW5jdGlvbiBiZChhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIGNkPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBkZChhLGIpe2lmKGJkKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighY2QuY2FsbChiLGNbZF0pfHwhYmQoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBlZChhKXt2YXIgYj1hO2lmKGEuYWx0ZXJuYXRlKWZvcig7Yi5yZXR1cm47KWI9Yi5yZXR1cm47ZWxzZXtpZigwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxO2Zvcig7Yi5yZXR1cm47KWlmKGI9Yi5yZXR1cm4sMCE9PShiLmVmZmVjdFRhZyYyKSlyZXR1cm4gMX1yZXR1cm4gMz09PWIudGFnPzI6M31mdW5jdGlvbiBmZChhKXsyIT09ZWQoYSk/eChcIjE4OFwiKTp2b2lkIDB9XG5mdW5jdGlvbiBnZChhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYilyZXR1cm4gYj1lZChhKSwzPT09Yj94KFwiMTg4XCIpOnZvaWQgMCwxPT09Yj9udWxsOmE7Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuLGY9ZT9lLmFsdGVybmF0ZTpudWxsO2lmKCFlfHwhZilicmVhaztpZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKHZhciBnPWUuY2hpbGQ7Zzspe2lmKGc9PT1jKXJldHVybiBmZChlKSxhO2lmKGc9PT1kKXJldHVybiBmZChlKSxiO2c9Zy5zaWJsaW5nfXgoXCIxODhcIil9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zz0hMTtmb3IodmFyIGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9Zz9cbnZvaWQgMDp4KFwiMTg5XCIpfX1jLmFsdGVybmF0ZSE9PWQ/eChcIjE5MFwiKTp2b2lkIDB9MyE9PWMudGFnP3goXCIxODhcIik6dm9pZCAwO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gaGQoYSl7YT1nZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbnZhciBpZD15LmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksamQ9eS5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxrZD1RYy5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIGxkKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIG1kPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxuZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sb2Q9UWMuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPW1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPWxkKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9uZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGMsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/bGQoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/bGQoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxwZD1ZYy5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSkscWQ9UWMuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6VGN9KSxyZD15LmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSxzZD1ZYy5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHRkPVtbXCJhYm9ydFwiLFwiYWJvcnRcIl0sW1hhLFwiYW5pbWF0aW9uRW5kXCJdLFtZYSxcImFuaW1hdGlvbkl0ZXJhdGlvblwiXSxbWmEsXCJhbmltYXRpb25TdGFydFwiXSxbXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCJdLFtcImNhbnBsYXl0aHJvdWdoXCIsXCJjYW5QbGF5VGhyb3VnaFwiXSxbXCJkcmFnXCIsXCJkcmFnXCJdLFtcImRyYWdlbnRlclwiLFwiZHJhZ0VudGVyXCJdLFtcImRyYWdleGl0XCIsXCJkcmFnRXhpdFwiXSxbXCJkcmFnbGVhdmVcIixcImRyYWdMZWF2ZVwiXSxbXCJkcmFnb3ZlclwiLFwiZHJhZ092ZXJcIl0sW1wiZHVyYXRpb25jaGFuZ2VcIixcImR1cmF0aW9uQ2hhbmdlXCJdLFtcImVtcHRpZWRcIixcImVtcHRpZWRcIl0sW1wiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIl0sXG5bXCJlbmRlZFwiLFwiZW5kZWRcIl0sW1wiZXJyb3JcIixcImVycm9yXCJdLFtcImdvdHBvaW50ZXJjYXB0dXJlXCIsXCJnb3RQb2ludGVyQ2FwdHVyZVwiXSxbXCJsb2FkXCIsXCJsb2FkXCJdLFtcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIl0sW1wibG9hZGVkbWV0YWRhdGFcIixcImxvYWRlZE1ldGFkYXRhXCJdLFtcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCJdLFtcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCJdLFtcIm1vdXNlbW92ZVwiLFwibW91c2VNb3ZlXCJdLFtcIm1vdXNlb3V0XCIsXCJtb3VzZU91dFwiXSxbXCJtb3VzZW92ZXJcIixcIm1vdXNlT3ZlclwiXSxbXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCJdLFtcInBvaW50ZXJtb3ZlXCIsXCJwb2ludGVyTW92ZVwiXSxbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyT3V0XCJdLFtcInBvaW50ZXJvdmVyXCIsXCJwb2ludGVyT3ZlclwiXSxbXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIl0sW1wic2Nyb2xsXCIsXCJzY3JvbGxcIl0sW1wic2Vla2luZ1wiLFwic2Vla2luZ1wiXSxbXCJzdGFsbGVkXCIsXCJzdGFsbGVkXCJdLFxuW1wic3VzcGVuZFwiLFwic3VzcGVuZFwiXSxbXCJ0aW1ldXBkYXRlXCIsXCJ0aW1lVXBkYXRlXCJdLFtcInRvZ2dsZVwiLFwidG9nZ2xlXCJdLFtcInRvdWNobW92ZVwiLFwidG91Y2hNb3ZlXCJdLFskYSxcInRyYW5zaXRpb25FbmRcIl0sW1wid2FpdGluZ1wiLFwid2FpdGluZ1wiXSxbXCJ3aGVlbFwiLFwid2hlZWxcIl1dLHVkPXt9LHZkPXt9O2Z1bmN0aW9uIHdkKGEsYil7dmFyIGM9YVswXTthPWFbMV07dmFyIGQ9XCJvblwiKyhhWzBdLnRvVXBwZXJDYXNlKCkrYS5zbGljZSgxKSk7Yj17cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6ZCxjYXB0dXJlZDpkK1wiQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W2NdLGlzSW50ZXJhY3RpdmU6Yn07dWRbYV09Yjt2ZFtjXT1ifVxuW1tcImJsdXJcIixcImJsdXJcIl0sW1wiY2FuY2VsXCIsXCJjYW5jZWxcIl0sW1wiY2xpY2tcIixcImNsaWNrXCJdLFtcImNsb3NlXCIsXCJjbG9zZVwiXSxbXCJjb250ZXh0bWVudVwiLFwiY29udGV4dE1lbnVcIl0sW1wiY29weVwiLFwiY29weVwiXSxbXCJjdXRcIixcImN1dFwiXSxbXCJhdXhjbGlja1wiLFwiYXV4Q2xpY2tcIl0sW1wiZGJsY2xpY2tcIixcImRvdWJsZUNsaWNrXCJdLFtcImRyYWdlbmRcIixcImRyYWdFbmRcIl0sW1wiZHJhZ3N0YXJ0XCIsXCJkcmFnU3RhcnRcIl0sW1wiZHJvcFwiLFwiZHJvcFwiXSxbXCJmb2N1c1wiLFwiZm9jdXNcIl0sW1wiaW5wdXRcIixcImlucHV0XCJdLFtcImludmFsaWRcIixcImludmFsaWRcIl0sW1wia2V5ZG93blwiLFwia2V5RG93blwiXSxbXCJrZXlwcmVzc1wiLFwia2V5UHJlc3NcIl0sW1wia2V5dXBcIixcImtleVVwXCJdLFtcIm1vdXNlZG93blwiLFwibW91c2VEb3duXCJdLFtcIm1vdXNldXBcIixcIm1vdXNlVXBcIl0sW1wicGFzdGVcIixcInBhc3RlXCJdLFtcInBhdXNlXCIsXCJwYXVzZVwiXSxbXCJwbGF5XCIsXCJwbGF5XCJdLFtcInBvaW50ZXJjYW5jZWxcIixcInBvaW50ZXJDYW5jZWxcIl0sXG5bXCJwb2ludGVyZG93blwiLFwicG9pbnRlckRvd25cIl0sW1wicG9pbnRlcnVwXCIsXCJwb2ludGVyVXBcIl0sW1wicmF0ZWNoYW5nZVwiLFwicmF0ZUNoYW5nZVwiXSxbXCJyZXNldFwiLFwicmVzZXRcIl0sW1wic2Vla2VkXCIsXCJzZWVrZWRcIl0sW1wic3VibWl0XCIsXCJzdWJtaXRcIl0sW1widG91Y2hjYW5jZWxcIixcInRvdWNoQ2FuY2VsXCJdLFtcInRvdWNoZW5kXCIsXCJ0b3VjaEVuZFwiXSxbXCJ0b3VjaHN0YXJ0XCIsXCJ0b3VjaFN0YXJ0XCJdLFtcInZvbHVtZWNoYW5nZVwiLFwidm9sdW1lQ2hhbmdlXCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3dkKGEsITApfSk7dGQuZm9yRWFjaChmdW5jdGlvbihhKXt3ZChhLCExKX0pO1xudmFyIHhkPXtldmVudFR5cGVzOnVkLGlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZTpmdW5jdGlvbihhKXthPXZkW2FdO3JldHVybiB2b2lkIDAhPT1hJiYhMD09PWEuaXNJbnRlcmFjdGl2ZX0sZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12ZFthXTtpZighZSlyZXR1cm4gbnVsbDtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PWxkKGMpKXJldHVybiBudWxsO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6YT1vZDticmVhaztjYXNlIFwiYmx1clwiOmNhc2UgXCJmb2N1c1wiOmE9a2Q7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKXJldHVybiBudWxsO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6YT1ZYzticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjphPVxucGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6YT1xZDticmVhaztjYXNlIFhhOmNhc2UgWWE6Y2FzZSBaYTphPWlkO2JyZWFrO2Nhc2UgJGE6YT1yZDticmVhaztjYXNlIFwic2Nyb2xsXCI6YT1RYzticmVhaztjYXNlIFwid2hlZWxcIjphPXNkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOmE9amQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6YT1aYzticmVhaztkZWZhdWx0OmE9eX1iPWEuZ2V0UG9vbGVkKGUsYixjLGQpO1FhKGIpO3JldHVybiBifX0seWQ9eGQuaXNJbnRlcmFjdGl2ZVRvcExldmVsRXZlbnRUeXBlLFxuemQ9W107ZnVuY3Rpb24gQWQoYSl7dmFyIGI9YS50YXJnZXRJbnN0LGM9Yjtkb3tpZighYyl7YS5hbmNlc3RvcnMucHVzaChjKTticmVha312YXIgZDtmb3IoZD1jO2QucmV0dXJuOylkPWQucmV0dXJuO2Q9MyE9PWQudGFnP251bGw6ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighZClicmVhazthLmFuY2VzdG9ycy5wdXNoKGMpO2M9SGEoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9TmIoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTtmb3IodmFyIGY9YS5uYXRpdmVFdmVudCxnPW51bGwsaD0wO2g8b2EubGVuZ3RoO2grKyl7dmFyIGw9b2FbaF07bCYmKGw9bC5leHRyYWN0RXZlbnRzKGQsYixmLGUpKSYmKGc9eGEoZyxsKSl9RGEoZyl9fXZhciBCZD0hMDtcbmZ1bmN0aW9uIEUoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oeWQoYSk/Q2Q6RGQpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCExKX1mdW5jdGlvbiBFZChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPSh5ZChhKT9DZDpEZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITApfWZ1bmN0aW9uIENkKGEsYil7SGIoRGQsYSxiKX1cbmZ1bmN0aW9uIERkKGEsYil7aWYoQmQpe3ZhciBjPU5iKGIpO2M9SGEoYyk7bnVsbD09PWN8fFwibnVtYmVyXCIhPT10eXBlb2YgYy50YWd8fDI9PT1lZChjKXx8KGM9bnVsbCk7aWYoemQubGVuZ3RoKXt2YXIgZD16ZC5wb3AoKTtkLnRvcExldmVsVHlwZT1hO2QubmF0aXZlRXZlbnQ9YjtkLnRhcmdldEluc3Q9YzthPWR9ZWxzZSBhPXt0b3BMZXZlbFR5cGU6YSxuYXRpdmVFdmVudDpiLHRhcmdldEluc3Q6YyxhbmNlc3RvcnM6W119O3RyeXtLYihBZCxhKX1maW5hbGx5e2EudG9wTGV2ZWxUeXBlPW51bGwsYS5uYXRpdmVFdmVudD1udWxsLGEudGFyZ2V0SW5zdD1udWxsLGEuYW5jZXN0b3JzLmxlbmd0aD0wLDEwPnpkLmxlbmd0aCYmemQucHVzaChhKX19fXZhciBGZD17fSxHZD0wLEhkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtcbmZ1bmN0aW9uIElkKGEpe09iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhLEhkKXx8KGFbSGRdPUdkKyssRmRbYVtIZF1dPXt9KTtyZXR1cm4gRmRbYVtIZF1dfWZ1bmN0aW9uIEpkKGEpe2E9YXx8KFwidW5kZWZpbmVkXCIhPT10eXBlb2YgZG9jdW1lbnQ/ZG9jdW1lbnQ6dm9pZCAwKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGEpcmV0dXJuIG51bGw7dHJ5e3JldHVybiBhLmFjdGl2ZUVsZW1lbnR8fGEuYm9keX1jYXRjaChiKXtyZXR1cm4gYS5ib2R5fX1mdW5jdGlvbiBLZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZChhLGIpe3ZhciBjPUtkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtkKGMpfX1mdW5jdGlvbiBNZChhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01kKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5kKCl7Zm9yKHZhciBhPXdpbmRvdyxiPUpkKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPUpkKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9kKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG5mdW5jdGlvbiBQZCgpe3ZhciBhPU5kKCk7aWYoT2QoYSkpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGEpdmFyIGI9e3N0YXJ0OmEuc2VsZWN0aW9uU3RhcnQsZW5kOmEuc2VsZWN0aW9uRW5kfTtlbHNlIGE6e2I9KGI9YS5vd25lckRvY3VtZW50KSYmYi5kZWZhdWx0Vmlld3x8d2luZG93O3ZhciBjPWIuZ2V0U2VsZWN0aW9uJiZiLmdldFNlbGVjdGlvbigpO2lmKGMmJjAhPT1jLnJhbmdlQ291bnQpe2I9Yy5hbmNob3JOb2RlO3ZhciBkPWMuYW5jaG9yT2Zmc2V0LGU9Yy5mb2N1c05vZGU7Yz1jLmZvY3VzT2Zmc2V0O3RyeXtiLm5vZGVUeXBlLGUubm9kZVR5cGV9Y2F0Y2goQSl7Yj1udWxsO2JyZWFrIGF9dmFyIGY9MCxnPS0xLGg9LTEsbD0wLGs9MCxtPWEscD1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIHQ7Oyl7bSE9PWJ8fDAhPT1kJiYzIT09bS5ub2RlVHlwZXx8KGc9ZitkKTttIT09ZXx8MCE9PWMmJjMhPT1tLm5vZGVUeXBlfHwoaD1mK2MpOzM9PT1tLm5vZGVUeXBlJiYoZis9bS5ub2RlVmFsdWUubGVuZ3RoKTtcbmlmKG51bGw9PT0odD1tLmZpcnN0Q2hpbGQpKWJyZWFrO3A9bTttPXR9Zm9yKDs7KXtpZihtPT09YSlicmVhayBiO3A9PT1iJiYrK2w9PT1kJiYoZz1mKTtwPT09ZSYmKytrPT09YyYmKGg9Zik7aWYobnVsbCE9PSh0PW0ubmV4dFNpYmxpbmcpKWJyZWFrO209cDtwPW0ucGFyZW50Tm9kZX1tPXR9Yj0tMT09PWd8fC0xPT09aD9udWxsOntzdGFydDpnLGVuZDpofX1lbHNlIGI9bnVsbH1iPWJ8fHtzdGFydDowLGVuZDowfX1lbHNlIGI9bnVsbDtyZXR1cm57Zm9jdXNlZEVsZW06YSxzZWxlY3Rpb25SYW5nZTpifX1cbmZ1bmN0aW9uIFFkKGEpe3ZhciBiPU5kKCksYz1hLmZvY3VzZWRFbGVtLGQ9YS5zZWxlY3Rpb25SYW5nZTtpZihiIT09YyYmYyYmYy5vd25lckRvY3VtZW50JiZNZChjLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGMpKXtpZihudWxsIT09ZCYmT2QoYykpaWYoYj1kLnN0YXJ0LGE9ZC5lbmQsdm9pZCAwPT09YSYmKGE9YiksXCJzZWxlY3Rpb25TdGFydFwiaW4gYyljLnNlbGVjdGlvblN0YXJ0PWIsYy5zZWxlY3Rpb25FbmQ9TWF0aC5taW4oYSxjLnZhbHVlLmxlbmd0aCk7ZWxzZSBpZihhPShiPWMub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZiLmRlZmF1bHRWaWV3fHx3aW5kb3csYS5nZXRTZWxlY3Rpb24pe2E9YS5nZXRTZWxlY3Rpb24oKTt2YXIgZT1jLnRleHRDb250ZW50Lmxlbmd0aCxmPU1hdGgubWluKGQuc3RhcnQsZSk7ZD12b2lkIDA9PT1kLmVuZD9mOk1hdGgubWluKGQuZW5kLGUpOyFhLmV4dGVuZCYmZj5kJiYoZT1kLGQ9ZixmPWUpO2U9TGQoYyxmKTt2YXIgZz1MZChjLFxuZCk7ZSYmZyYmKDEhPT1hLnJhbmdlQ291bnR8fGEuYW5jaG9yTm9kZSE9PWUubm9kZXx8YS5hbmNob3JPZmZzZXQhPT1lLm9mZnNldHx8YS5mb2N1c05vZGUhPT1nLm5vZGV8fGEuZm9jdXNPZmZzZXQhPT1nLm9mZnNldCkmJihiPWIuY3JlYXRlUmFuZ2UoKSxiLnNldFN0YXJ0KGUubm9kZSxlLm9mZnNldCksYS5yZW1vdmVBbGxSYW5nZXMoKSxmPmQ/KGEuYWRkUmFuZ2UoYiksYS5leHRlbmQoZy5ub2RlLGcub2Zmc2V0KSk6KGIuc2V0RW5kKGcubm9kZSxnLm9mZnNldCksYS5hZGRSYW5nZShiKSkpfWI9W107Zm9yKGE9YzthPWEucGFyZW50Tm9kZTspMT09PWEubm9kZVR5cGUmJmIucHVzaCh7ZWxlbWVudDphLGxlZnQ6YS5zY3JvbGxMZWZ0LHRvcDphLnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmZvY3VzJiZjLmZvY3VzKCk7Zm9yKGM9MDtjPGIubGVuZ3RoO2MrKylhPWJbY10sYS5lbGVtZW50LnNjcm9sbExlZnQ9YS5sZWZ0LGEuZWxlbWVudC5zY3JvbGxUb3A9YS50b3B9fVxudmFyIFJkPVJhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJjExPj1kb2N1bWVudC5kb2N1bWVudE1vZGUsU2Q9e3NlbGVjdDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvblNlbGVjdFwiLGNhcHR1cmVkOlwib25TZWxlY3RDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29udGV4dG1lbnUgZHJhZ2VuZCBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFRkPW51bGwsVWQ9bnVsbCxWZD1udWxsLFdkPSExO1xuZnVuY3Rpb24gWGQoYSxiKXt2YXIgYz1iLndpbmRvdz09PWI/Yi5kb2N1bWVudDo5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudDtpZihXZHx8bnVsbD09VGR8fFRkIT09SmQoYykpcmV0dXJuIG51bGw7Yz1UZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZPZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06KGM9KGMub3duZXJEb2N1bWVudCYmYy5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3fHx3aW5kb3cpLmdldFNlbGVjdGlvbigpLGM9e2FuY2hvck5vZGU6Yy5hbmNob3JOb2RlLGFuY2hvck9mZnNldDpjLmFuY2hvck9mZnNldCxmb2N1c05vZGU6Yy5mb2N1c05vZGUsZm9jdXNPZmZzZXQ6Yy5mb2N1c09mZnNldH0pO3JldHVybiBWZCYmZGQoVmQsYyk/bnVsbDooVmQ9YyxhPXkuZ2V0UG9vbGVkKFNkLnNlbGVjdCxVZCxhLGIpLGEudHlwZT1cInNlbGVjdFwiLGEudGFyZ2V0PVRkLFFhKGEpLGEpfVxudmFyIFlkPXtldmVudFR5cGVzOlNkLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9ZC53aW5kb3c9PT1kP2QuZG9jdW1lbnQ6OT09PWQubm9kZVR5cGU/ZDpkLm93bmVyRG9jdW1lbnQsZjtpZighKGY9IWUpKXthOntlPUlkKGUpO2Y9c2Eub25TZWxlY3Q7Zm9yKHZhciBnPTA7ZzxmLmxlbmd0aDtnKyspe3ZhciBoPWZbZ107aWYoIWUuaGFzT3duUHJvcGVydHkoaCl8fCFlW2hdKXtlPSExO2JyZWFrIGF9fWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9KYShiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKE1iKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKVRkPWUsVWQ9YixWZD1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6VmQ9VWQ9VGQ9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6V2Q9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBXZD0hMSxYZChjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihSZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIFhkKGMsZCl9cmV0dXJuIG51bGx9fTtCYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3RhPUthO3VhPUlhO3ZhPUphO0JhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46eGQsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmFkLENoYW5nZUV2ZW50UGx1Z2luOlBjLFNlbGVjdEV2ZW50UGx1Z2luOllkLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46emJ9KTtmdW5jdGlvbiBaZChhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRkKGEsYil7YT1uKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9WmQoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIGFlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIit1YyhjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gYmUoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP3goXCI5MVwiKTp2b2lkIDA7cmV0dXJuIG4oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gY2UoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz94KFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6eChcIjkzXCIpLGI9YlswXSksYz1iKSxudWxsPT1jJiYoYz1cIlwiKSk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6dWMoYyl9fVxuZnVuY3Rpb24gZGUoYSxiKXt2YXIgYz11YyhiLnZhbHVlKSxkPXVjKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gZWUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIGZlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIGdlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gaGUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2dlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIGllPXZvaWQgMCxqZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1mZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtpZT1pZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtpZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1pZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBrZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIGxlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LG1lPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhsZSkuZm9yRWFjaChmdW5jdGlvbihhKXttZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO2xlW2JdPWxlW2FdfSl9KTtmdW5jdGlvbiBuZShhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8bGUuaGFzT3duUHJvcGVydHkoYSkmJmxlW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIG9lKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPW5lKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHBlPW4oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiBxZShhLGIpe2ImJihwZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/eChcIjEzN1wiLGEsXCJcIik6dm9pZCAwKSxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiYobnVsbCE9Yi5jaGlsZHJlbj94KFwiNjBcIik6dm9pZCAwLFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/dm9pZCAwOngoXCI2MVwiKSksbnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlP3goXCI2MlwiLFwiXCIpOnZvaWQgMCl9XG5mdW5jdGlvbiByZShhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19XG5mdW5jdGlvbiBzZShhLGIpe2E9OT09PWEubm9kZVR5cGV8fDExPT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudDt2YXIgYz1JZChhKTtiPXNhW2JdO2Zvcih2YXIgZD0wO2Q8Yi5sZW5ndGg7ZCsrKXt2YXIgZT1iW2RdO2lmKCFjLmhhc093blByb3BlcnR5KGUpfHwhY1tlXSl7c3dpdGNoKGUpe2Nhc2UgXCJzY3JvbGxcIjpFZChcInNjcm9sbFwiLGEpO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6RWQoXCJmb2N1c1wiLGEpO0VkKFwiYmx1clwiLGEpO2MuYmx1cj0hMDtjLmZvY3VzPSEwO2JyZWFrO2Nhc2UgXCJjYW5jZWxcIjpjYXNlIFwiY2xvc2VcIjpPYihlKSYmRWQoZSxhKTticmVhaztjYXNlIFwiaW52YWxpZFwiOmNhc2UgXCJzdWJtaXRcIjpjYXNlIFwicmVzZXRcIjpicmVhaztkZWZhdWx0Oi0xPT09YWIuaW5kZXhPZihlKSYmRShlLGEpfWNbZV09ITB9fX1mdW5jdGlvbiB0ZSgpe312YXIgdWU9bnVsbCx2ZT1udWxsO1xuZnVuY3Rpb24gd2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfWZ1bmN0aW9uIHhlKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH1cbnZhciB5ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCx6ZT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDAsQWU9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLEJlPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s7XG5mdW5jdGlvbiBDZShhLGIsYyxkLGUpe2FbR2FdPWU7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJnhjKGEsZSk7cmUoYyxkKTtkPXJlKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/b2UoYSxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP2plKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9rZShhLGgpOnRjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjp5YyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmRlKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/YWUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP2FlKGEsISFlLm11bHRpcGxlLGUuZGVmYXVsdFZhbHVlLFxuITApOmFlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1mdW5jdGlvbiBEZShhKXtmb3IoYT1hLm5leHRTaWJsaW5nO2EmJjEhPT1hLm5vZGVUeXBlJiYzIT09YS5ub2RlVHlwZTspYT1hLm5leHRTaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIEVlKGEpe2ZvcihhPWEuZmlyc3RDaGlsZDthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1uZXcgU2V0O3ZhciBGZT1bXSxHZT0tMTtmdW5jdGlvbiBGKGEpezA+R2V8fChhLmN1cnJlbnQ9RmVbR2VdLEZlW0dlXT1udWxsLEdlLS0pfWZ1bmN0aW9uIEcoYSxiKXtHZSsrO0ZlW0dlXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIEhlPXt9LEg9e2N1cnJlbnQ6SGV9LEk9e2N1cnJlbnQ6ITF9LEllPUhlO1xuZnVuY3Rpb24gSmUoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBIZTt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1mdW5jdGlvbiBKKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gS2UoYSl7RihJLGEpO0YoSCxhKX1mdW5jdGlvbiBMZShhKXtGKEksYSk7RihILGEpfVxuZnVuY3Rpb24gTWUoYSxiLGMpe0guY3VycmVudCE9PUhlP3goXCIxNjhcIik6dm9pZCAwO0coSCxiLGEpO0coSSxjLGEpfWZ1bmN0aW9uIE5lKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZCllIGluIGE/dm9pZCAwOngoXCIxMDhcIixpYyhiKXx8XCJVbmtub3duXCIsZSk7cmV0dXJuIG4oe30sYyxkKX1mdW5jdGlvbiBPZShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEhlO0llPUguY3VycmVudDtHKEgsYixhKTtHKEksSS5jdXJyZW50LGEpO3JldHVybiEwfVxuZnVuY3Rpb24gUGUoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2Q/dm9pZCAwOngoXCIxNjlcIik7Yz8oYj1OZShhLGIsSWUpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YixGKEksYSksRihILGEpLEcoSCxiLGEpKTpGKEksYSk7RyhJLGMsYSl9dmFyIFFlPW51bGwsUmU9bnVsbDtmdW5jdGlvbiBTZShhKXtyZXR1cm4gZnVuY3Rpb24oYil7dHJ5e3JldHVybiBhKGIpfWNhdGNoKGMpe319fVxuZnVuY3Rpb24gVGUoYSl7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18pcmV0dXJuITE7dmFyIGI9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKGIuaXNEaXNhYmxlZHx8IWIuc3VwcG9ydHNGaWJlcilyZXR1cm4hMDt0cnl7dmFyIGM9Yi5pbmplY3QoYSk7UWU9U2UoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclJvb3QoYyxhKX0pO1JlPVNlKGZ1bmN0aW9uKGEpe3JldHVybiBiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9KX1jYXRjaChkKXt9cmV0dXJuITB9XG5mdW5jdGlvbiBVZShhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuY29udGV4dERlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBLKGEsYixjLGQpe3JldHVybiBuZXcgVWUoYSxiLGMsZCl9XG5mdW5jdGlvbiBWZShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfWZ1bmN0aW9uIFdlKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBWZShhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09Y2MpcmV0dXJuIDExO2lmKGE9PT1lYylyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBYZShhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPUsoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy5lZmZlY3RUYWc9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRFeHBpcmF0aW9uVGltZT1hLmNoaWxkRXhwaXJhdGlvblRpbWU7Yy5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2MuY29udGV4dERlcGVuZGVuY2llcz1hLmNvbnRleHREZXBlbmRlbmNpZXM7Yy5zaWJsaW5nPWEuc2libGluZztcbmMuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFllKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlWZShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBYYjpyZXR1cm4gWmUoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBiYzpyZXR1cm4gJGUoYyxlfDMsZixiKTtjYXNlIFliOnJldHVybiAkZShjLGV8MixmLGIpO2Nhc2UgWmI6cmV0dXJuIGE9SygxMixjLGIsZXw0KSxhLmVsZW1lbnRUeXBlPVpiLGEudHlwZT1aYixhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIGRjOnJldHVybiBhPUsoMTMsYyxiLGUpLGEuZWxlbWVudFR5cGU9ZGMsYS50eXBlPWRjLGEuZXhwaXJhdGlvblRpbWU9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSAkYjpnPTEwO2JyZWFrIGE7Y2FzZSBhYzpnPTk7YnJlYWsgYTtjYXNlIGNjOmc9MTE7YnJlYWsgYTtjYXNlIGVjOmc9XG4xNDticmVhayBhO2Nhc2UgZmM6Zz0xNjtkPW51bGw7YnJlYWsgYX14KFwiMTMwXCIsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpfWI9SyhnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFplKGEsYixjLGQpe2E9Syg3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gJGUoYSxiLGMsZCl7YT1LKDgsYSxkLGIpO2I9MD09PShiJjEpP1liOmJjO2EuZWxlbWVudFR5cGU9YjthLnR5cGU9YjthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gYWYoYSxiLGMpe2E9Syg2LGEsbnVsbCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBiZihhLGIsYyl7Yj1LKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifWZ1bmN0aW9uIGNmKGEsYil7YS5kaWRFcnJvcj0hMTt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7MD09PWM/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWU9YjpjPGI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWI6YS5sYXRlc3RQZW5kaW5nVGltZT5iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1iKTtkZihiLGEpfVxuZnVuY3Rpb24gZWYoYSxiKXthLmRpZEVycm9yPSExO2lmKDA9PT1iKWEuZWFybGllc3RQZW5kaW5nVGltZT0wLGEubGF0ZXN0UGVuZGluZ1RpbWU9MCxhLmVhcmxpZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0U3VzcGVuZGVkVGltZT0wLGEubGF0ZXN0UGluZ2VkVGltZT0wO2Vsc2V7YjxhLmxhdGVzdFBpbmdlZFRpbWUmJihhLmxhdGVzdFBpbmdlZFRpbWU9MCk7dmFyIGM9YS5sYXRlc3RQZW5kaW5nVGltZTswIT09YyYmKGM+Yj9hLmVhcmxpZXN0UGVuZGluZ1RpbWU9YS5sYXRlc3RQZW5kaW5nVGltZT0wOmEuZWFybGllc3RQZW5kaW5nVGltZT5iJiYoYS5lYXJsaWVzdFBlbmRpbmdUaW1lPWEubGF0ZXN0UGVuZGluZ1RpbWUpKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2NmKGEsYik6YjxhLmxhdGVzdFN1c3BlbmRlZFRpbWU/KGEuZWFybGllc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RTdXNwZW5kZWRUaW1lPTAsYS5sYXRlc3RQaW5nZWRUaW1lPTAsY2YoYSxiKSk6XG5iPmMmJmNmKGEsYil9ZGYoMCxhKX1mdW5jdGlvbiBmZihhLGIpe2EuZGlkRXJyb3I9ITE7YS5sYXRlc3RQaW5nZWRUaW1lPj1iJiYoYS5sYXRlc3RQaW5nZWRUaW1lPTApO3ZhciBjPWEuZWFybGllc3RQZW5kaW5nVGltZSxkPWEubGF0ZXN0UGVuZGluZ1RpbWU7Yz09PWI/YS5lYXJsaWVzdFBlbmRpbmdUaW1lPWQ9PT1iP2EubGF0ZXN0UGVuZGluZ1RpbWU9MDpkOmQ9PT1iJiYoYS5sYXRlc3RQZW5kaW5nVGltZT1jKTtjPWEuZWFybGllc3RTdXNwZW5kZWRUaW1lO2Q9YS5sYXRlc3RTdXNwZW5kZWRUaW1lOzA9PT1jP2EuZWFybGllc3RTdXNwZW5kZWRUaW1lPWEubGF0ZXN0U3VzcGVuZGVkVGltZT1iOmM8Yj9hLmVhcmxpZXN0U3VzcGVuZGVkVGltZT1iOmQ+YiYmKGEubGF0ZXN0U3VzcGVuZGVkVGltZT1iKTtkZihiLGEpfVxuZnVuY3Rpb24gZ2YoYSxiKXt2YXIgYz1hLmVhcmxpZXN0UGVuZGluZ1RpbWU7YT1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZTtjPmImJihiPWMpO2E+YiYmKGI9YSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZGYoYSxiKXt2YXIgYz1iLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWIubGF0ZXN0U3VzcGVuZGVkVGltZSxlPWIuZWFybGllc3RQZW5kaW5nVGltZSxmPWIubGF0ZXN0UGluZ2VkVGltZTtlPTAhPT1lP2U6ZjswPT09ZSYmKDA9PT1hfHxkPGEpJiYoZT1kKTthPWU7MCE9PWEmJmM+YSYmKGE9Yyk7Yi5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj1lO2IuZXhwaXJhdGlvblRpbWU9YX1mdW5jdGlvbiBMKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9bih7fSxiKTthPWEuZGVmYXVsdFByb3BzO2Zvcih2YXIgYyBpbiBhKXZvaWQgMD09PWJbY10mJihiW2NdPWFbY10pfXJldHVybiBifVxuZnVuY3Rpb24gaGYoYSl7dmFyIGI9YS5fcmVzdWx0O3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYjtjYXNlIDI6dGhyb3cgYjtjYXNlIDA6dGhyb3cgYjtkZWZhdWx0OmEuX3N0YXR1cz0wO2I9YS5fY3RvcjtiPWIoKTtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pO3N3aXRjaChhLl9zdGF0dXMpe2Nhc2UgMTpyZXR1cm4gYS5fcmVzdWx0O2Nhc2UgMjp0aHJvdyBhLl9yZXN1bHQ7fWEuX3Jlc3VsdD1iO3Rocm93IGI7fX12YXIgamY9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBrZihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jO2Q9YS51cGRhdGVRdWV1ZTtudWxsIT09ZCYmMD09PWEuZXhwaXJhdGlvblRpbWUmJihkLmJhc2VTdGF0ZT1jKX1cbnZhciB0Zj17aXNNb3VudGVkOmZ1bmN0aW9uKGEpe3JldHVybihhPWEuX3JlYWN0SW50ZXJuYWxGaWJlcik/Mj09PWVkKGEpOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPWxmKCk7ZD1tZihkLGEpO3ZhciBlPW5mKGQpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtvZigpO3BmKGEsZSk7cWYoYSxkKX0sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9bGYoKTtkPW1mKGQsYSk7dmFyIGU9bmYoZCk7ZS50YWc9cmY7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO29mKCk7cGYoYSxlKTtxZihhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1sZigpO2M9bWYoYyxhKTt2YXIgZD1uZihjKTtkLnRhZz1cbnNmO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtvZigpO3BmKGEsZCk7cWYoYSxjKX19O2Z1bmN0aW9uIHVmKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IWRkKGMsZCl8fCFkZChlLGYpOiEwfVxuZnVuY3Rpb24gdmYoYSxiLGMpe3ZhciBkPSExLGU9SGU7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9TShmKTooZT1KKGIpP0llOkguY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0plKGEsZSk6SGUpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj10ZjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiB3ZihhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmdGYuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiB4ZihhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPWpmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9TShmKTooZj1KKGIpP0llOkguY3VycmVudCxlLmNvbnRleHQ9SmUoYSxmKSk7Zj1hLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoeWYoYSxmLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKGtmKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJnRmLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLGY9YS51cGRhdGVRdWV1ZSxudWxsIT09ZiYmKHlmKGEsZixjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgemY9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIEFmKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjt2YXIgZD12b2lkIDA7YyYmKDEhPT1jLnRhZz94KFwiMzA5XCIpOnZvaWQgMCxkPWMuc3RhdGVOb2RlKTtkP3ZvaWQgMDp4KFwiMTQ3XCIsYSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1qZiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifVwic3RyaW5nXCIhPT10eXBlb2YgYT94KFwiMjg0XCIpOnZvaWQgMDtjLl9vd25lcj92b2lkIDA6eChcIjI5MFwiLGEpfXJldHVybiBhfVxuZnVuY3Rpb24gQmYoYSxiKXtcInRleHRhcmVhXCIhPT1hLnR5cGUmJngoXCIzMVwiLFwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYik/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YixcIlwiKX1cbmZ1bmN0aW9uIENmKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiLGMpe2E9WGUoYSxiLGMpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1hZihjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGwoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9QWYoYSxiLGMpLGQucmV0dXJuPWEsZDtkPVllKGMudHlwZSxjLmtleSxjLnByb3BzLG51bGwsYS5tb2RlLGQpO2QucmVmPUFmKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1cbmMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9YmYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WmUoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyxkKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHAoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWFmKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBjPVllKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPUFmKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBXYjpyZXR1cm4gYj1iZihiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoemYoYil8fFxuaGMoYikpcmV0dXJuIGI9WmUoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7QmYoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB0KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIFZiOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09WGI/bShhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmwoYSxiLGMsZCk6bnVsbDtjYXNlIFdiOnJldHVybiBjLmtleT09PWU/ayhhLGIsYyxkKTpudWxsfWlmKHpmKGMpfHxoYyhjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDptKGEsYixjLGQsbnVsbCk7QmYoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBBKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgVmI6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PVhiP20oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6bChiLGEsZCxlKTtjYXNlIFdiOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxrKGIsYSxkLGUpfWlmKHpmKGQpfHxoYyhkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxtKGIsYSxkLGUsbnVsbCk7QmYoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB2KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLG09bnVsbCxxPWcsdT1nPTAsQj1udWxsO251bGwhPT1xJiZ1PGgubGVuZ3RoO3UrKyl7cS5pbmRleD51PyhCPXEscT1udWxsKTpCPXEuc2libGluZzt2YXIgdz10KGUscSxoW3VdLGspO2lmKG51bGw9PT13KXtudWxsPT09cSYmKHE9Qik7YnJlYWt9YSYmXG5xJiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSxxKTtnPWYodyxnLHUpO251bGw9PT1tP2w9dzptLnNpYmxpbmc9dzttPXc7cT1CfWlmKHU9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHEpLGw7aWYobnVsbD09PXEpe2Zvcig7dTxoLmxlbmd0aDt1KyspaWYocT1wKGUsaFt1XSxrKSlnPWYocSxnLHUpLG51bGw9PT1tP2w9cTptLnNpYmxpbmc9cSxtPXE7cmV0dXJuIGx9Zm9yKHE9ZChlLHEpO3U8aC5sZW5ndGg7dSsrKWlmKEI9QShxLGUsdSxoW3VdLGspKWEmJm51bGwhPT1CLmFsdGVybmF0ZSYmcS5kZWxldGUobnVsbD09PUIua2V5P3U6Qi5rZXkpLGc9ZihCLGcsdSksbnVsbD09PW0/bD1COm0uc2libGluZz1CLG09QjthJiZxLmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIFIoZSxnLGgsayl7dmFyIGw9aGMoaCk7XCJmdW5jdGlvblwiIT09dHlwZW9mIGw/eChcIjE1MFwiKTp2b2lkIDA7aD1sLmNhbGwoaCk7bnVsbD09aD94KFwiMTUxXCIpOnZvaWQgMDtcbmZvcih2YXIgbT1sPW51bGwscT1nLHU9Zz0wLEI9bnVsbCx3PWgubmV4dCgpO251bGwhPT1xJiYhdy5kb25lO3UrKyx3PWgubmV4dCgpKXtxLmluZGV4PnU/KEI9cSxxPW51bGwpOkI9cS5zaWJsaW5nO3ZhciB2PXQoZSxxLHcudmFsdWUsayk7aWYobnVsbD09PXYpe3F8fChxPUIpO2JyZWFrfWEmJnEmJm51bGw9PT12LmFsdGVybmF0ZSYmYihlLHEpO2c9Zih2LGcsdSk7bnVsbD09PW0/bD12Om0uc2libGluZz12O209djtxPUJ9aWYody5kb25lKXJldHVybiBjKGUscSksbDtpZihudWxsPT09cSl7Zm9yKDshdy5kb25lO3UrKyx3PWgubmV4dCgpKXc9cChlLHcudmFsdWUsayksbnVsbCE9PXcmJihnPWYodyxnLHUpLG51bGw9PT1tP2w9dzptLnNpYmxpbmc9dyxtPXcpO3JldHVybiBsfWZvcihxPWQoZSxxKTshdy5kb25lO3UrKyx3PWgubmV4dCgpKXc9QShxLGUsdSx3LnZhbHVlLGspLG51bGwhPT13JiYoYSYmbnVsbCE9PXcuYWx0ZXJuYXRlJiZxLmRlbGV0ZShudWxsPT09dy5rZXk/dTpcbncua2V5KSxnPWYodyxnLHUpLG51bGw9PT1tP2w9dzptLnNpYmxpbmc9dyxtPXcpO2EmJnEuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PVhiJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIFZiOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bClpZig3PT09ay50YWc/Zi50eXBlPT09WGI6ay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi50eXBlPT09WGI/Zi5wcm9wcy5jaGlsZHJlbjpmLnByb3BzLGgpO2QucmVmPUFmKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9XG5rLnNpYmxpbmd9Zi50eXBlPT09WGI/KGQ9WmUoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVllKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPUFmKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSBXYjphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10saCk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPWJmKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVxuXCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYsaCksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1hZihmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZih6ZihmKSlyZXR1cm4gdihhLGQsZixoKTtpZihoYyhmKSlyZXR1cm4gUihhLGQsZixoKTtsJiZCZihhLGYpO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgZiYmIWspc3dpdGNoKGEudGFnKXtjYXNlIDE6Y2FzZSAwOmg9YS50eXBlLHgoXCIxNTJcIixoLmRpc3BsYXlOYW1lfHxoLm5hbWV8fFwiQ29tcG9uZW50XCIpfXJldHVybiBjKGEsZCl9fXZhciBEZj1DZighMCksRWY9Q2YoITEpLEZmPXt9LE49e2N1cnJlbnQ6RmZ9LEdmPXtjdXJyZW50OkZmfSxIZj17Y3VycmVudDpGZn07ZnVuY3Rpb24gSWYoYSl7YT09PUZmP3goXCIxNzRcIik6dm9pZCAwO3JldHVybiBhfVxuZnVuY3Rpb24gSmYoYSxiKXtHKEhmLGIsYSk7RyhHZixhLGEpO0coTixGZixhKTt2YXIgYz1iLm5vZGVUeXBlO3N3aXRjaChjKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpoZShudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6Yz04PT09Yz9iLnBhcmVudE5vZGU6YixiPWMubmFtZXNwYWNlVVJJfHxudWxsLGM9Yy50YWdOYW1lLGI9aGUoYixjKX1GKE4sYSk7RyhOLGIsYSl9ZnVuY3Rpb24gS2YoYSl7RihOLGEpO0YoR2YsYSk7RihIZixhKX1mdW5jdGlvbiBMZihhKXtJZihIZi5jdXJyZW50KTt2YXIgYj1JZihOLmN1cnJlbnQpO3ZhciBjPWhlKGIsYS50eXBlKTtiIT09YyYmKEcoR2YsYSxhKSxHKE4sYyxhKSl9ZnVuY3Rpb24gTWYoYSl7R2YuY3VycmVudD09PWEmJihGKE4sYSksRihHZixhKSl9XG52YXIgTmY9MCxPZj0yLFBmPTQsUWY9OCxSZj0xNixTZj0zMixUZj02NCxVZj0xMjgsVmY9VGIuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixXZj0wLFhmPW51bGwsTz1udWxsLFA9bnVsbCxZZj1udWxsLFE9bnVsbCxaZj1udWxsLCRmPTAsYWc9bnVsbCxiZz0wLGNnPSExLGRnPW51bGwsZWc9MDtmdW5jdGlvbiBmZygpe3goXCIzMjFcIil9ZnVuY3Rpb24gZ2coYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighYmQoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIGhnKGEsYixjLGQsZSxmKXtXZj1mO1hmPWI7UD1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtWZi5jdXJyZW50PW51bGw9PT1QP2lnOmpnO2I9YyhkLGUpO2lmKGNnKXtkbyBjZz0hMSxlZys9MSxQPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsLFpmPVlmLGFnPVE9Tz1udWxsLFZmLmN1cnJlbnQ9amcsYj1jKGQsZSk7d2hpbGUoY2cpO2RnPW51bGw7ZWc9MH1WZi5jdXJyZW50PWtnO2E9WGY7YS5tZW1vaXplZFN0YXRlPVlmO2EuZXhwaXJhdGlvblRpbWU9JGY7YS51cGRhdGVRdWV1ZT1hZzthLmVmZmVjdFRhZ3w9Ymc7YT1udWxsIT09TyYmbnVsbCE9PU8ubmV4dDtXZj0wO1pmPVE9WWY9UD1PPVhmPW51bGw7JGY9MDthZz1udWxsO2JnPTA7YT94KFwiMzAwXCIpOnZvaWQgMDtyZXR1cm4gYn1mdW5jdGlvbiBsZygpe1ZmLmN1cnJlbnQ9a2c7V2Y9MDtaZj1RPVlmPVA9Tz1YZj1udWxsOyRmPTA7YWc9bnVsbDtiZz0wO2NnPSExO2RnPW51bGw7ZWc9MH1cbmZ1bmN0aW9uIG1nKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxxdWV1ZTpudWxsLGJhc2VVcGRhdGU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1RP1lmPVE9YTpRPVEubmV4dD1hO3JldHVybiBRfWZ1bmN0aW9uIG5nKCl7aWYobnVsbCE9PVpmKVE9WmYsWmY9US5uZXh0LE89UCxQPW51bGwhPT1PP08ubmV4dDpudWxsO2Vsc2V7bnVsbD09PVA/eChcIjMxMFwiKTp2b2lkIDA7Tz1QO3ZhciBhPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUscXVldWU6Ty5xdWV1ZSxiYXNlVXBkYXRlOk8uYmFzZVVwZGF0ZSxuZXh0Om51bGx9O1E9bnVsbD09PVE/WWY9YTpRLm5leHQ9YTtQPU8ubmV4dH1yZXR1cm4gUX1mdW5jdGlvbiBvZyhhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIHBnKGEpe3ZhciBiPW5nKCksYz1iLnF1ZXVlO251bGw9PT1jP3goXCIzMTFcIik6dm9pZCAwO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO2lmKDA8ZWcpe3ZhciBkPWMuZGlzcGF0Y2g7aWYobnVsbCE9PWRnKXt2YXIgZT1kZy5nZXQoYyk7aWYodm9pZCAwIT09ZSl7ZGcuZGVsZXRlKGMpO3ZhciBmPWIubWVtb2l6ZWRTdGF0ZTtkbyBmPWEoZixlLmFjdGlvbiksZT1lLm5leHQ7d2hpbGUobnVsbCE9PWUpO2JkKGYsYi5tZW1vaXplZFN0YXRlKXx8KHFnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9PT1jLmxhc3QmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWY7cmV0dXJuW2YsZF19fXJldHVybltiLm1lbW9pemVkU3RhdGUsZF19ZD1jLmxhc3Q7dmFyIGc9Yi5iYXNlVXBkYXRlO2Y9Yi5iYXNlU3RhdGU7bnVsbCE9PWc/KG51bGwhPT1kJiYoZC5uZXh0PW51bGwpLGQ9Zy5uZXh0KTpkPW51bGwhPT1kP2QubmV4dDpudWxsO2lmKG51bGwhPT1cbmQpe3ZhciBoPWU9bnVsbCxsPWQsaz0hMTtkb3t2YXIgbT1sLmV4cGlyYXRpb25UaW1lO208V2Y/KGt8fChrPSEwLGg9ZyxlPWYpLG0+JGYmJigkZj1tKSk6Zj1sLmVhZ2VyUmVkdWNlcj09PWE/bC5lYWdlclN0YXRlOmEoZixsLmFjdGlvbik7Zz1sO2w9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09ZCk7a3x8KGg9ZyxlPWYpO2JkKGYsYi5tZW1vaXplZFN0YXRlKXx8KHFnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtiLmJhc2VVcGRhdGU9aDtiLmJhc2VTdGF0ZT1lO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gcmcoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O251bGw9PT1hZz8oYWc9e2xhc3RFZmZlY3Q6bnVsbH0sYWcubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGI9YWcubGFzdEVmZmVjdCxudWxsPT09Yj9hZy5sYXN0RWZmZWN0PWEubmV4dD1hOihjPWIubmV4dCxiLm5leHQ9YSxhLm5leHQ9YyxhZy5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1mdW5jdGlvbiBzZyhhLGIsYyxkKXt2YXIgZT1tZygpO2JnfD1hO2UubWVtb2l6ZWRTdGF0ZT1yZyhiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIHRnKGEsYixjLGQpe3ZhciBlPW5nKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU8pe3ZhciBnPU8ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmZ2coZCxnLmRlcHMpKXtyZyhOZixjLGYsZCk7cmV0dXJufX1iZ3w9YTtlLm1lbW9pemVkU3RhdGU9cmcoYixjLGYsZCl9ZnVuY3Rpb24gdWcoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiB2Zygpe31cbmZ1bmN0aW9uIHdnKGEsYixjKXsyNT5lZz92b2lkIDA6eChcIjMwMVwiKTt2YXIgZD1hLmFsdGVybmF0ZTtpZihhPT09WGZ8fG51bGwhPT1kJiZkPT09WGYpaWYoY2c9ITAsYT17ZXhwaXJhdGlvblRpbWU6V2YsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH0sbnVsbD09PWRnJiYoZGc9bmV3IE1hcCksYz1kZy5nZXQoYiksdm9pZCAwPT09YylkZy5zZXQoYixhKTtlbHNle2ZvcihiPWM7bnVsbCE9PWIubmV4dDspYj1iLm5leHQ7Yi5uZXh0PWF9ZWxzZXtvZigpO3ZhciBlPWxmKCk7ZT1tZihlLGEpO3ZhciBmPXtleHBpcmF0aW9uVGltZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5sYXN0O2lmKG51bGw9PT1nKWYubmV4dD1mO2Vsc2V7dmFyIGg9Zy5uZXh0O251bGwhPT1oJiYoZi5uZXh0PWgpO2cubmV4dD1mfWIubGFzdD1mO2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PVxuZHx8MD09PWQuZXhwaXJhdGlvblRpbWUpJiYoZD1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWQpKXRyeXt2YXIgbD1iLmxhc3RSZW5kZXJlZFN0YXRlLGs9ZChsLGMpO2YuZWFnZXJSZWR1Y2VyPWQ7Zi5lYWdlclN0YXRlPWs7aWYoYmQoayxsKSlyZXR1cm59Y2F0Y2gobSl7fWZpbmFsbHl7fXFmKGEsZSl9fVxudmFyIGtnPXtyZWFkQ29udGV4dDpNLHVzZUNhbGxiYWNrOmZnLHVzZUNvbnRleHQ6ZmcsdXNlRWZmZWN0OmZnLHVzZUltcGVyYXRpdmVIYW5kbGU6ZmcsdXNlTGF5b3V0RWZmZWN0OmZnLHVzZU1lbW86ZmcsdXNlUmVkdWNlcjpmZyx1c2VSZWY6ZmcsdXNlU3RhdGU6ZmcsdXNlRGVidWdWYWx1ZTpmZ30saWc9e3JlYWRDb250ZXh0Ok0sdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXttZygpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0Ok0sdXNlRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHNnKDUxNixVZnxUZixhLGIpfSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gc2coNCxQZnxTZix1Zy5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHNnKDQsUGZ8U2YsYSxiKX0sXG51c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9bWcoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9bWcoKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9ZC5xdWV1ZT17bGFzdDpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjphLGxhc3RSZW5kZXJlZFN0YXRlOmJ9O2E9YS5kaXNwYXRjaD13Zy5iaW5kKG51bGwsWGYsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPW1nKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOmZ1bmN0aW9uKGEpe3ZhciBiPW1nKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtsYXN0Om51bGwsZGlzcGF0Y2g6bnVsbCxcbmxhc3RSZW5kZXJlZFJlZHVjZXI6b2csbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXdnLmJpbmQobnVsbCxYZixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfSx1c2VEZWJ1Z1ZhbHVlOnZnfSxqZz17cmVhZENvbnRleHQ6TSx1c2VDYWxsYmFjazpmdW5jdGlvbihhLGIpe3ZhciBjPW5nKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZnZyhiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDpNLHVzZUVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0Zyg1MTYsVWZ8VGYsYSxiKX0sdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIHRnKDQsUGZ8U2YsdWcuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLFxuYil7cmV0dXJuIHRnKDQsUGZ8U2YsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPW5nKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZnZyhiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpwZyx1c2VSZWY6ZnVuY3Rpb24oKXtyZXR1cm4gbmcoKS5tZW1vaXplZFN0YXRlfSx1c2VTdGF0ZTpmdW5jdGlvbihhKXtyZXR1cm4gcGcob2csYSl9LHVzZURlYnVnVmFsdWU6dmd9LHhnPW51bGwseWc9bnVsbCx6Zz0hMTtcbmZ1bmN0aW9uIEFnKGEsYil7dmFyIGM9Syg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2MudHlwZT1cIkRFTEVURURcIjtjLnN0YXRlTm9kZT1iO2MucmV0dXJuPWE7Yy5lZmZlY3RUYWc9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIEJnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBDZyhhKXtpZih6Zyl7dmFyIGI9eWc7aWYoYil7dmFyIGM9YjtpZighQmcoYSxiKSl7Yj1EZShjKTtpZighYnx8IUJnKGEsYikpe2EuZWZmZWN0VGFnfD0yO3pnPSExO3hnPWE7cmV0dXJufUFnKHhnLGMpfXhnPWE7eWc9RWUoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9Mix6Zz0hMSx4Zz1hfX1mdW5jdGlvbiBEZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjE4IT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1mdW5jdGlvbiBFZyhhKXtpZihhIT09eGcpcmV0dXJuITE7aWYoIXpnKXJldHVybiBEZyhhKSx6Zz0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIXhlKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj15ZztiOylBZyhhLGIpLGI9RGUoYik7RGcoYSk7eWc9eGc/RGUoYS5zdGF0ZU5vZGUpOm51bGw7cmV0dXJuITB9ZnVuY3Rpb24gRmcoKXt5Zz14Zz1udWxsO3pnPSExfVxudmFyIEdnPVRiLlJlYWN0Q3VycmVudE93bmVyLHFnPSExO2Z1bmN0aW9uIFMoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9FZihiLG51bGwsYyxkKTpEZihiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBIZyhhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7SWcoYixlKTtkPWhnKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXFnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksSmcoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1MoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBLZyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIVZlKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLExnKGEsYixnLGQsZSxmKTthPVllKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6ZGQsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gSmcoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9WGUoZyxkLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1cbmZ1bmN0aW9uIExnKGEsYixjLGQsZSxmKXtyZXR1cm4gbnVsbCE9PWEmJmRkKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZiYmKHFnPSExLGU8Zik/SmcoYSxiLGYpOk1nKGEsYixjLGQsZil9ZnVuY3Rpb24gTmcoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBNZyhhLGIsYyxkLGUpe3ZhciBmPUooYyk/SWU6SC5jdXJyZW50O2Y9SmUoYixmKTtJZyhiLGUpO2M9aGcoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhcWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmVmZmVjdFRhZyY9LTUxNyxhLmV4cGlyYXRpb25UaW1lPD1lJiYoYS5leHBpcmF0aW9uVGltZT0wKSxKZyhhLGIsZSk7Yi5lZmZlY3RUYWd8PTE7UyhhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIE9nKGEsYixjLGQsZSl7aWYoSihjKSl7dmFyIGY9ITA7T2UoYil9ZWxzZSBmPSExO0lnKGIsZSk7aWYobnVsbD09PWIuc3RhdGVOb2RlKW51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSx2ZihiLGMsZCxlKSx4ZihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgbD1nLmNvbnRleHQsaz1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1NKGspOihrPUooYyk/SWU6SC5jdXJyZW50LGs9SmUoYixrKSk7dmFyIG09Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgbXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxsIT09aykmJndmKGIsZyxkLGspO1BnPSExO3ZhciB0PWIubWVtb2l6ZWRTdGF0ZTtsPWcuc3RhdGU9dDt2YXIgQT1iLnVwZGF0ZVF1ZXVlO251bGwhPT1BJiYoeWYoYixBLGQsZyxlKSxsPWIubWVtb2l6ZWRTdGF0ZSk7aCE9PWR8fHQhPT1sfHxJLmN1cnJlbnR8fFBnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtmKGIsYyxtLGQpLGw9Yi5tZW1vaXplZFN0YXRlKSwoaD1QZ3x8dWYoYixjLGgsZCx0LGwsaykpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXG5nLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9bCksZy5wcm9wcz1kLGcuc3RhdGU9bCxnLmNvbnRleHQ9ayxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6TChiLnR5cGUsaCksbD1nLmNvbnRleHQsaz1jLmNvbnRleHRUeXBlLFwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1NKGspOihrPUooYyk/SWU6SC5jdXJyZW50LGs9SmUoYixrKSksbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywocD1cImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PWR8fGwhPT1rKSYmd2YoYixnLGQsayksUGc9ITEsbD1iLm1lbW9pemVkU3RhdGUsdD1nLnN0YXRlPWwsQT1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1BJiYoeWYoYixBLGQsZyxlKSx0PWIubWVtb2l6ZWRTdGF0ZSksaCE9PWR8fGwhPT10fHxJLmN1cnJlbnR8fFBnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtmKGIsYyxtLGQpLHQ9Yi5tZW1vaXplZFN0YXRlKSwobT1QZ3x8dWYoYixjLGgsZCxsLHQsaykpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsdCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHQsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZsPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPVxudCksZy5wcm9wcz1kLGcuc3RhdGU9dCxnLmNvbnRleHQ9ayxkPW0pOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJmw9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gUWcoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gUWcoYSxiLGMsZCxlLGYpe05nKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZQZShiLGMsITEpLEpnKGEsYixmKTtkPWIuc3RhdGVOb2RlO0dnLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPURmKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9RGYoYixudWxsLGgsZikpOlMoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmUGUoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBSZyhhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P01lKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJk1lKGEsYi5jb250ZXh0LCExKTtKZihhLGIuY29udGFpbmVySW5mbyl9XG5mdW5jdGlvbiBTZyhhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkU3RhdGU7aWYoMD09PShiLmVmZmVjdFRhZyY2NCkpe2Y9bnVsbDt2YXIgZz0hMX1lbHNlIGY9e3RpbWVkT3V0QXQ6bnVsbCE9PWY/Zi50aW1lZE91dEF0OjB9LGc9ITAsYi5lZmZlY3RUYWcmPS02NTtpZihudWxsPT09YSlpZihnKXt2YXIgaD1lLmZhbGxiYWNrO2E9WmUobnVsbCxkLDAsbnVsbCk7MD09PShiLm1vZGUmMSkmJihhLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKTtkPVplKGgsZCxjLG51bGwpO2Euc2libGluZz1kO2M9YTtjLnJldHVybj1kLnJldHVybj1ifWVsc2UgYz1kPUVmKGIsbnVsbCxlLmNoaWxkcmVuLGMpO2Vsc2UgbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZT8oZD1hLmNoaWxkLGg9ZC5zaWJsaW5nLGc/KGM9ZS5mYWxsYmFjayxlPVhlKGQsZC5wZW5kaW5nUHJvcHMsMCksMD09PShiLm1vZGUmMSkmJihnPW51bGwhPT1cbmIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZyE9PWQuY2hpbGQmJihlLmNoaWxkPWcpKSxkPWUuc2libGluZz1YZShoLGMsaC5leHBpcmF0aW9uVGltZSksYz1lLGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGMucmV0dXJuPWQucmV0dXJuPWIpOmM9ZD1EZihiLGQuY2hpbGQsZS5jaGlsZHJlbixjKSk6KGg9YS5jaGlsZCxnPyhnPWUuZmFsbGJhY2ssZT1aZShudWxsLGQsMCxudWxsKSxlLmNoaWxkPWgsMD09PShiLm1vZGUmMSkmJihlLmNoaWxkPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkKSxkPWUuc2libGluZz1aZShnLGQsYyxudWxsKSxkLmVmZmVjdFRhZ3w9MixjPWUsZS5jaGlsZEV4cGlyYXRpb25UaW1lPTAsYy5yZXR1cm49ZC5yZXR1cm49Yik6ZD1jPURmKGIsaCxlLmNoaWxkcmVuLGMpKSxiLnN0YXRlTm9kZT1hLnN0YXRlTm9kZTtiLm1lbW9pemVkU3RhdGU9ZjtiLmNoaWxkPWM7cmV0dXJuIGR9XG5mdW5jdGlvbiBKZyhhLGIsYyl7bnVsbCE9PWEmJihiLmNvbnRleHREZXBlbmRlbmNpZXM9YS5jb250ZXh0RGVwZW5kZW5jaWVzKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/eChcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVhlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVhlKGEsYS5wZW5kaW5nUHJvcHMsYS5leHBpcmF0aW9uVGltZSksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIFRnKGEsYixjKXt2YXIgZD1iLmV4cGlyYXRpb25UaW1lO2lmKG51bGwhPT1hKWlmKGEubWVtb2l6ZWRQcm9wcyE9PWIucGVuZGluZ1Byb3BzfHxJLmN1cnJlbnQpcWc9ITA7ZWxzZXtpZihkPGMpe3FnPSExO3N3aXRjaChiLnRhZyl7Y2FzZSAzOlJnKGIpO0ZnKCk7YnJlYWs7Y2FzZSA1OkxmKGIpO2JyZWFrO2Nhc2UgMTpKKGIudHlwZSkmJk9lKGIpO2JyZWFrO2Nhc2UgNDpKZihiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6VWcoYixiLm1lbW9pemVkUHJvcHMudmFsdWUpO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7aWYoMCE9PWQmJmQ+PWMpcmV0dXJuIFNnKGEsYixjKTtiPUpnKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9fXJldHVybiBKZyhhLGIsYyl9fWVsc2UgcWc9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9XG5iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3ZhciBlPUplKGIsSC5jdXJyZW50KTtJZyhiLGMpO2U9aGcobnVsbCxiLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtsZygpO2lmKEooZCkpe3ZhciBmPSEwO09lKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZrZihiLGQsZyxhKTtlLnVwZGF0ZXI9dGY7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9Yjt4ZihiLGQsYSxjKTtiPVFnKG51bGwsYixkLCEwLGYsXG5jKX1lbHNlIGIudGFnPTAsUyhudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjplPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2Y9Yi5wZW5kaW5nUHJvcHM7YT1oZihlKTtiLnR5cGU9YTtlPWIudGFnPVdlKGEpO2Y9TChhLGYpO2c9dm9pZCAwO3N3aXRjaChlKXtjYXNlIDA6Zz1NZyhudWxsLGIsYSxmLGMpO2JyZWFrO2Nhc2UgMTpnPU9nKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxMTpnPUhnKG51bGwsYixhLGYsYyk7YnJlYWs7Y2FzZSAxNDpnPUtnKG51bGwsYixhLEwoYS50eXBlLGYpLGQsYyk7YnJlYWs7ZGVmYXVsdDp4KFwiMzA2XCIsYSxcIlwiKX1yZXR1cm4gZztjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOkwoZCxlKSxNZyhhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxcbmU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksT2coYSxiLGQsZSxjKTtjYXNlIDM6UmcoYik7ZD1iLnVwZGF0ZVF1ZXVlO251bGw9PT1kP3goXCIyODJcIik6dm9pZCAwO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWYoYixkLGIucGVuZGluZ1Byb3BzLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlGZygpLGI9SmcoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihlPShudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpJiZlLmh5ZHJhdGUpeWc9RWUoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbykseGc9YixlPXpnPSEwO2U/KGIuZWZmZWN0VGFnfD0yLGIuY2hpbGQ9RWYoYixudWxsLGQsYykpOihTKGEsYixkLGMpLEZnKCkpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDU6cmV0dXJuIExmKGIpLG51bGw9PT1hJiZDZyhiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsXG5nPWUuY2hpbGRyZW4seGUoZCxlKT9nPW51bGw6bnVsbCE9PWYmJnhlKGQsZikmJihiLmVmZmVjdFRhZ3w9MTYpLE5nKGEsYiksMSE9PWMmJmIubW9kZSYxJiZlLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT1iLmNoaWxkRXhwaXJhdGlvblRpbWU9MSxiPW51bGwpOihTKGEsYixnLGMpLGI9Yi5jaGlsZCksYjtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZDZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIFNnKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEpmKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPURmKGIsbnVsbCxkLGMpOlMoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMKGQsZSksSGcoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFMoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBTKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixcbmMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUyhhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO1VnKGIsZik7aWYobnVsbCE9PWcpe3ZhciBoPWcudmFsdWU7Zj1iZChoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDA7aWYoMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhSS5jdXJyZW50KXtiPUpnKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBsPWguY29udGV4dERlcGVuZGVuY2llcztpZihudWxsIT09bCl7Zz1oLmNoaWxkO2Zvcih2YXIgaz1sLmZpcnN0O251bGwhPT1rOyl7aWYoay5jb250ZXh0PT09ZCYmMCE9PVxuKGsub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihrPW5mKGMpLGsudGFnPXNmLHBmKGgsaykpO2guZXhwaXJhdGlvblRpbWU8YyYmKGguZXhwaXJhdGlvblRpbWU9Yyk7az1oLmFsdGVybmF0ZTtudWxsIT09ayYmay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTtrPWM7Zm9yKHZhciBtPWgucmV0dXJuO251bGwhPT1tOyl7dmFyIHA9bS5hbHRlcm5hdGU7aWYobS5jaGlsZEV4cGlyYXRpb25UaW1lPGspbS5jaGlsZEV4cGlyYXRpb25UaW1lPWssbnVsbCE9PXAmJnAuY2hpbGRFeHBpcmF0aW9uVGltZTxrJiYocC5jaGlsZEV4cGlyYXRpb25UaW1lPWspO2Vsc2UgaWYobnVsbCE9PXAmJnAuY2hpbGRFeHBpcmF0aW9uVGltZTxrKXAuY2hpbGRFeHBpcmF0aW9uVGltZT1rO2Vsc2UgYnJlYWs7bT1tLnJldHVybn1sLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO2JyZWFrfWs9ay5uZXh0fX1lbHNlIGc9MTA9PT1oLnRhZz9oLnR5cGU9PT1iLnR5cGU/XG5udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z319UyhhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixJZyhiLGMpLGU9TShlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUyhhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9TChlLGIucGVuZGluZ1Byb3BzKSxmPUwoZS50eXBlLGYpLEtnKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBMZyhhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1cbmQ/ZTpMKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsSihkKT8oYT0hMCxPZShiKSk6YT0hMSxJZyhiLGMpLHZmKGIsZCxlLGMpLHhmKGIsZCxlLGMpLFFnKG51bGwsYixkLCEwLGEsYyl9eChcIjE1NlwiKX12YXIgVmc9e2N1cnJlbnQ6bnVsbH0sV2c9bnVsbCxYZz1udWxsLFlnPW51bGw7ZnVuY3Rpb24gVWcoYSxiKXt2YXIgYz1hLnR5cGUuX2NvbnRleHQ7RyhWZyxjLl9jdXJyZW50VmFsdWUsYSk7Yy5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gWmcoYSl7dmFyIGI9VmcuY3VycmVudDtGKFZnLGEpO2EudHlwZS5fY29udGV4dC5fY3VycmVudFZhbHVlPWJ9ZnVuY3Rpb24gSWcoYSxiKXtXZz1hO1lnPVhnPW51bGw7dmFyIGM9YS5jb250ZXh0RGVwZW5kZW5jaWVzO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPj1iJiYocWc9ITApO2EuY29udGV4dERlcGVuZGVuY2llcz1udWxsfVxuZnVuY3Rpb24gTShhLGIpe2lmKFlnIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YilZZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtudWxsPT09WGc/KG51bGw9PT1XZz94KFwiMzA4XCIpOnZvaWQgMCxYZz1iLFdnLmNvbnRleHREZXBlbmRlbmNpZXM9e2ZpcnN0OmIsZXhwaXJhdGlvblRpbWU6MH0pOlhnPVhnLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciAkZz0wLHJmPTEsc2Y9MixhaD0zLFBnPSExO2Z1bmN0aW9uIGJoKGEpe3JldHVybntiYXNlU3RhdGU6YSxmaXJzdFVwZGF0ZTpudWxsLGxhc3RVcGRhdGU6bnVsbCxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1cbmZ1bmN0aW9uIGNoKGEpe3JldHVybntiYXNlU3RhdGU6YS5iYXNlU3RhdGUsZmlyc3RVcGRhdGU6YS5maXJzdFVwZGF0ZSxsYXN0VXBkYXRlOmEubGFzdFVwZGF0ZSxmaXJzdENhcHR1cmVkVXBkYXRlOm51bGwsbGFzdENhcHR1cmVkVXBkYXRlOm51bGwsZmlyc3RFZmZlY3Q6bnVsbCxsYXN0RWZmZWN0Om51bGwsZmlyc3RDYXB0dXJlZEVmZmVjdDpudWxsLGxhc3RDYXB0dXJlZEVmZmVjdDpudWxsfX1mdW5jdGlvbiBuZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6JGcscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsLG5leHRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gZGgoYSxiKXtudWxsPT09YS5sYXN0VXBkYXRlP2EuZmlyc3RVcGRhdGU9YS5sYXN0VXBkYXRlPWI6KGEubGFzdFVwZGF0ZS5uZXh0PWIsYS5sYXN0VXBkYXRlPWIpfVxuZnVuY3Rpb24gcGYoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtpZihudWxsPT09Yyl7dmFyIGQ9YS51cGRhdGVRdWV1ZTt2YXIgZT1udWxsO251bGw9PT1kJiYoZD1hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZD1hLnVwZGF0ZVF1ZXVlLGU9Yy51cGRhdGVRdWV1ZSxudWxsPT09ZD9udWxsPT09ZT8oZD1hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSksZT1jLnVwZGF0ZVF1ZXVlPWJoKGMubWVtb2l6ZWRTdGF0ZSkpOmQ9YS51cGRhdGVRdWV1ZT1jaChlKTpudWxsPT09ZSYmKGU9Yy51cGRhdGVRdWV1ZT1jaChkKSk7bnVsbD09PWV8fGQ9PT1lP2RoKGQsYik6bnVsbD09PWQubGFzdFVwZGF0ZXx8bnVsbD09PWUubGFzdFVwZGF0ZT8oZGgoZCxiKSxkaChlLGIpKTooZGgoZCxiKSxlLmxhc3RVcGRhdGU9Yil9XG5mdW5jdGlvbiBlaChhLGIpe3ZhciBjPWEudXBkYXRlUXVldWU7Yz1udWxsPT09Yz9hLnVwZGF0ZVF1ZXVlPWJoKGEubWVtb2l6ZWRTdGF0ZSk6ZmgoYSxjKTtudWxsPT09Yy5sYXN0Q2FwdHVyZWRVcGRhdGU/Yy5maXJzdENhcHR1cmVkVXBkYXRlPWMubGFzdENhcHR1cmVkVXBkYXRlPWI6KGMubGFzdENhcHR1cmVkVXBkYXRlLm5leHQ9YixjLmxhc3RDYXB0dXJlZFVwZGF0ZT1iKX1mdW5jdGlvbiBmaChhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZiPT09Yy51cGRhdGVRdWV1ZSYmKGI9YS51cGRhdGVRdWV1ZT1jaChiKSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiBnaChhLGIsYyxkLGUsZil7c3dpdGNoKGMudGFnKXtjYXNlIHJmOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSBhaDphLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMjA0OXw2NDtjYXNlICRnOmE9Yy5wYXlsb2FkO2U9XCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YS5jYWxsKGYsZCxlKTphO2lmKG51bGw9PT1lfHx2b2lkIDA9PT1lKWJyZWFrO3JldHVybiBuKHt9LGQsZSk7Y2FzZSBzZjpQZz0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIHlmKGEsYixjLGQsZSl7UGc9ITE7Yj1maChhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGw9Yi5maXJzdFVwZGF0ZSxrPWY7bnVsbCE9PWw7KXt2YXIgbT1sLmV4cGlyYXRpb25UaW1lO208ZT8obnVsbD09PWcmJihnPWwsZj1rKSxoPG0mJihoPW0pKTooaz1naChhLGIsbCxrLGMsZCksbnVsbCE9PWwuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsbC5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdEVmZmVjdD9iLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1sOihiLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1sLGIubGFzdEVmZmVjdD1sKSkpO2w9bC5uZXh0fW09bnVsbDtmb3IobD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWw7KXt2YXIgcD1sLmV4cGlyYXRpb25UaW1lO3A8ZT8obnVsbD09PW0mJihtPWwsbnVsbD09PWcmJihmPWspKSxoPHAmJihoPXApKTooaz1naChhLGIsbCxrLGMsZCksbnVsbCE9PWwuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9XG4zMixsLm5leHRFZmZlY3Q9bnVsbCxudWxsPT09Yi5sYXN0Q2FwdHVyZWRFZmZlY3Q/Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PWw6KGIubGFzdENhcHR1cmVkRWZmZWN0Lm5leHRFZmZlY3Q9bCxiLmxhc3RDYXB0dXJlZEVmZmVjdD1sKSkpO2w9bC5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1tP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09bSYmKGY9ayk7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPW07YS5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1rfVxuZnVuY3Rpb24gaGgoYSxiLGMpe251bGwhPT1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUmJihudWxsIT09Yi5sYXN0VXBkYXRlJiYoYi5sYXN0VXBkYXRlLm5leHQ9Yi5maXJzdENhcHR1cmVkVXBkYXRlLGIubGFzdFVwZGF0ZT1iLmxhc3RDYXB0dXJlZFVwZGF0ZSksYi5maXJzdENhcHR1cmVkVXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlPW51bGwpO2loKGIuZmlyc3RFZmZlY3QsYyk7Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbDtpaChiLmZpcnN0Q2FwdHVyZWRFZmZlY3QsYyk7Yi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGx9ZnVuY3Rpb24gaWgoYSxiKXtmb3IoO251bGwhPT1hOyl7dmFyIGM9YS5jYWxsYmFjaztpZihudWxsIT09Yyl7YS5jYWxsYmFjaz1udWxsO3ZhciBkPWI7XCJmdW5jdGlvblwiIT09dHlwZW9mIGM/eChcIjE5MVwiLGMpOnZvaWQgMDtjLmNhbGwoZCl9YT1hLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gamgoYSxiKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazpqYyhiKX19ZnVuY3Rpb24ga2goYSl7YS5lZmZlY3RUYWd8PTR9dmFyIGxoPXZvaWQgMCxtaD12b2lkIDAsbmg9dm9pZCAwLG9oPXZvaWQgMDtsaD1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07bWg9ZnVuY3Rpb24oKXt9O1xubmg9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkUHJvcHM7aWYoZiE9PWQpe3ZhciBnPWIuc3RhdGVOb2RlO0lmKE4uY3VycmVudCk7YT1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpmPXZjKGcsZik7ZD12YyhnLGQpO2E9W107YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9JGQoZyxmKTtkPSRkKGcsZCk7YT1bXTticmVhaztjYXNlIFwic2VsZWN0XCI6Zj1uKHt9LGYse3ZhbHVlOnZvaWQgMH0pO2Q9bih7fSxkLHt2YWx1ZTp2b2lkIDB9KTthPVtdO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmY9YmUoZyxmKTtkPWJlKGcsZCk7YT1bXTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBmLm9uQ2xpY2smJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLm9uQ2xpY2smJihnLm9uY2xpY2s9dGUpfXFlKGMsZCk7Zz1jPXZvaWQgMDt2YXIgaD1udWxsO2ZvcihjIGluIGYpaWYoIWQuaGFzT3duUHJvcGVydHkoYykmJmYuaGFzT3duUHJvcGVydHkoYykmJm51bGwhPWZbY10paWYoXCJzdHlsZVwiPT09XG5jKXt2YXIgbD1mW2NdO2ZvcihnIGluIGwpbC5oYXNPd25Qcm9wZXJ0eShnKSYmKGh8fChoPXt9KSxoW2ddPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1jJiZcImNoaWxkcmVuXCIhPT1jJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YyYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWMmJlwiYXV0b0ZvY3VzXCIhPT1jJiYocmEuaGFzT3duUHJvcGVydHkoYyk/YXx8KGE9W10pOihhPWF8fFtdKS5wdXNoKGMsbnVsbCkpO2ZvcihjIGluIGQpe3ZhciBrPWRbY107bD1udWxsIT1mP2ZbY106dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYykmJmshPT1sJiYobnVsbCE9a3x8bnVsbCE9bCkpaWYoXCJzdHlsZVwiPT09YylpZihsKXtmb3IoZyBpbiBsKSFsLmhhc093blByb3BlcnR5KGcpfHxrJiZrLmhhc093blByb3BlcnR5KGcpfHwoaHx8KGg9e30pLGhbZ109XCJcIik7Zm9yKGcgaW4gaylrLmhhc093blByb3BlcnR5KGcpJiZsW2ddIT09a1tnXSYmKGh8fFxuKGg9e30pLGhbZ109a1tnXSl9ZWxzZSBofHwoYXx8KGE9W10pLGEucHVzaChjLGgpKSxoPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWM/KGs9az9rLl9faHRtbDp2b2lkIDAsbD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1rJiZsIT09ayYmKGE9YXx8W10pLnB1c2goYyxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1jP2w9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGE9YXx8W10pLnB1c2goYyxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1jJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YyYmKHJhLmhhc093blByb3BlcnR5KGMpPyhudWxsIT1rJiZzZShlLGMpLGF8fGw9PT1rfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGMsaykpfWgmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixoKTtlPWE7KGIudXBkYXRlUXVldWU9ZSkmJmtoKGIpfX07b2g9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJmtoKGIpfTtcbnZhciBwaD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBxaChhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPWpjKGMpKTtudWxsIT09YyYmaWMoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmaWMoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gcmgoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7c2goYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfVxuZnVuY3Rpb24gdGgoYSxiLGMpe2M9Yy51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkb3tpZigoZC50YWcmYSkhPT1OZil7dmFyIGU9ZC5kZXN0cm95O2QuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZSYmZSgpfShkLnRhZyZiKSE9PU5mJiYoZT1kLmNyZWF0ZSxkLmRlc3Ryb3k9ZSgpKTtkPWQubmV4dH13aGlsZShkIT09Yyl9fVxuZnVuY3Rpb24gdWgoYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZC5zdHlsZS5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PW5lKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKDEzPT09Yy50YWcmJm51bGwhPT1jLm1lbW9pemVkU3RhdGUpe2Q9Yy5jaGlsZC5zaWJsaW5nO2QucmV0dXJuPWM7Yz1kO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8XG5jLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiB2aChhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgUmUmJlJlKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnZhciBiPWEudXBkYXRlUXVldWU7aWYobnVsbCE9PWImJihiPWIubGFzdEVmZmVjdCxudWxsIT09Yikpe3ZhciBjPWI9Yi5uZXh0O2Rve3ZhciBkPWMuZGVzdHJveTtpZih2b2lkIDAhPT1kKXt2YXIgZT1hO3RyeXtkKCl9Y2F0Y2goZil7c2goZSxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWIpfWJyZWFrO2Nhc2UgMTpyaChhKTtiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7c2goYSxmKX1icmVhaztjYXNlIDU6cmgoYSk7YnJlYWs7Y2FzZSA0OndoKGEpfX1cbmZ1bmN0aW9uIHhoKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24geWgoYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoeGgoYikpe3ZhciBjPWI7YnJlYWsgYX1iPWIucmV0dXJufXgoXCIxNjBcIik7Yz12b2lkIDB9dmFyIGQ9Yj12b2lkIDA7c3dpdGNoKGMudGFnKXtjYXNlIDU6Yj1jLnN0YXRlTm9kZTtkPSExO2JyZWFrO2Nhc2UgMzpiPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp4KFwiMTYxXCIpfWMuZWZmZWN0VGFnJjE2JiYoa2UoYixcIlwiKSxjLmVmZmVjdFRhZyY9LTE3KTthOmI6Zm9yKGM9YTs7KXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fHhoKGMucmV0dXJuKSl7Yz1udWxsO2JyZWFrIGF9Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2ZvcihjPWMuc2libGluZzs1IT09Yy50YWcmJjYhPT1jLnRhZyYmMTghPT1jLnRhZzspe2lmKGMuZWZmZWN0VGFnJlxuMiljb250aW51ZSBiO2lmKG51bGw9PT1jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5lZmZlY3RUYWcmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19Zm9yKHZhciBlPWE7Oyl7aWYoNT09PWUudGFnfHw2PT09ZS50YWcpaWYoYylpZihkKXt2YXIgZj1iLGc9ZS5zdGF0ZU5vZGUsaD1jOzg9PT1mLm5vZGVUeXBlP2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZyxoKTpmLmluc2VydEJlZm9yZShnLGgpfWVsc2UgYi5pbnNlcnRCZWZvcmUoZS5zdGF0ZU5vZGUsYyk7ZWxzZSBkPyhnPWIsaD1lLnN0YXRlTm9kZSw4PT09Zy5ub2RlVHlwZT8oZj1nLnBhcmVudE5vZGUsZi5pbnNlcnRCZWZvcmUoaCxnKSk6KGY9ZyxmLmFwcGVuZENoaWxkKGgpKSxnPWcuX3JlYWN0Um9vdENvbnRhaW5lcixudWxsIT09ZyYmdm9pZCAwIT09Z3x8bnVsbCE9PWYub25jbGlja3x8KGYub25jbGljaz10ZSkpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO1xuZWxzZSBpZig0IT09ZS50YWcmJm51bGwhPT1lLmNoaWxkKXtlLmNoaWxkLnJldHVybj1lO2U9ZS5jaGlsZDtjb250aW51ZX1pZihlPT09YSlicmVhaztmb3IoO251bGw9PT1lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIHdoKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP3goXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZih2aChnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWcpe2lmKG51bGwhPT1iLmNoaWxkKXtkPWIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX19ZWxzZSBpZih2aChiKSxudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuO2I9Yi5yZXR1cm47ND09PWIudGFnJiYoYz0hMSl9Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319XG5mdW5jdGlvbiB6aChhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OnRoKFBmLFFmLGIpO2JyZWFrO2Nhc2UgMTpicmVhaztjYXNlIDU6dmFyIGM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7dmFyIGQ9Yi5tZW1vaXplZFByb3BzO2E9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7dmFyIGU9Yi50eXBlLGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7bnVsbCE9PWYmJkNlKGMsZixlLGEsZCxiKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzpjPWIubWVtb2l6ZWRTdGF0ZTtkPXZvaWQgMDthPWI7bnVsbD09PWM/ZD0hMTooZD0hMCxhPWIuY2hpbGQsMD09PWMudGltZWRPdXRBdCYmKGMudGltZWRPdXRBdD1sZigpKSk7bnVsbCE9PWEmJnVoKGEsZCk7Yz1cbmIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMpe2IudXBkYXRlUXVldWU9bnVsbDt2YXIgZz1iLnN0YXRlTm9kZTtudWxsPT09ZyYmKGc9Yi5zdGF0ZU5vZGU9bmV3IHBoKTtjLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGM9QWguYmluZChudWxsLGIsYSk7Zy5oYXMoYSl8fChnLmFkZChhKSxhLnRoZW4oYyxjKSl9KX1icmVhaztjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6eChcIjE2M1wiKX19dmFyIEJoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIENoKGEsYixjKXtjPW5mKGMpO2MudGFnPWFoO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtEaChkKTtxaChhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIEVoKGEsYixjKXtjPW5mKGMpO2MudGFnPWFoO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1GaD9GaD1uZXcgU2V0KFt0aGlzXSk6RmguYWRkKHRoaXMpKTt2YXIgYz1iLnZhbHVlLGU9Yi5zdGFjaztxaChhLGIpO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYyx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWU/ZTpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIEdoKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkooYS50eXBlKSYmS2UoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMjA0OD8oYS5lZmZlY3RUYWc9YiYtMjA0OXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gS2YoYSksTGUoYSksYj1hLmVmZmVjdFRhZywwIT09KGImNjQpP3goXCIyODVcIik6dm9pZCAwLGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYTtjYXNlIDU6cmV0dXJuIE1mKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjIwNDg/KGEuZWZmZWN0VGFnPWImLTIwNDl8NjQsYSk6bnVsbDtjYXNlIDE4OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gS2YoYSksbnVsbDtjYXNlIDEwOnJldHVybiBaZyhhKSxudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxudmFyIEhoPVRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsSWg9VGIuUmVhY3RDdXJyZW50T3duZXIsSmg9MTA3Mzc0MTgyMixLaD0hMSxUPW51bGwsTGg9bnVsbCxVPTAsTWg9LTEsTmg9ITEsVj1udWxsLE9oPSExLFBoPW51bGwsUWg9bnVsbCxSaD1udWxsLEZoPW51bGw7ZnVuY3Rpb24gU2goKXtpZihudWxsIT09VClmb3IodmFyIGE9VC5yZXR1cm47bnVsbCE9PWE7KXt2YXIgYj1hO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnZhciBjPWIudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09YyYmdm9pZCAwIT09YyYmS2UoYik7YnJlYWs7Y2FzZSAzOktmKGIpO0xlKGIpO2JyZWFrO2Nhc2UgNTpNZihiKTticmVhaztjYXNlIDQ6S2YoYik7YnJlYWs7Y2FzZSAxMDpaZyhiKX1hPWEucmV0dXJufUxoPW51bGw7VT0wO01oPS0xO05oPSExO1Q9bnVsbH1cbmZ1bmN0aW9uIFRoKCl7Zm9yKDtudWxsIT09Vjspe3ZhciBhPVYuZWZmZWN0VGFnO2EmMTYmJmtlKFYuc3RhdGVOb2RlLFwiXCIpO2lmKGEmMTI4KXt2YXIgYj1WLmFsdGVybmF0ZTtudWxsIT09YiYmKGI9Yi5yZWYsbnVsbCE9PWImJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKG51bGwpOmIuY3VycmVudD1udWxsKSl9c3dpdGNoKGEmMTQpe2Nhc2UgMjp5aChWKTtWLmVmZmVjdFRhZyY9LTM7YnJlYWs7Y2FzZSA2OnloKFYpO1YuZWZmZWN0VGFnJj0tMzt6aChWLmFsdGVybmF0ZSxWKTticmVhaztjYXNlIDQ6emgoVi5hbHRlcm5hdGUsVik7YnJlYWs7Y2FzZSA4OmE9Vix3aChhKSxhLnJldHVybj1udWxsLGEuY2hpbGQ9bnVsbCxhLm1lbW9pemVkU3RhdGU9bnVsbCxhLnVwZGF0ZVF1ZXVlPW51bGwsYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGEucmV0dXJuPW51bGwsYS5jaGlsZD1udWxsLGEubWVtb2l6ZWRTdGF0ZT1udWxsLGEudXBkYXRlUXVldWU9bnVsbCl9Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gVWgoKXtmb3IoO251bGwhPT1WOyl7aWYoVi5lZmZlY3RUYWcmMjU2KWE6e3ZhciBhPVYuYWx0ZXJuYXRlLGI9Vjtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGgoT2YsTmYsYik7YnJlYWsgYTtjYXNlIDE6aWYoYi5lZmZlY3RUYWcmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpMKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9YnJlYWsgYTtjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpicmVhayBhO2RlZmF1bHQ6eChcIjE2M1wiKX19Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gVmgoYSxiKXtmb3IoO251bGwhPT1WOyl7dmFyIGM9Vi5lZmZlY3RUYWc7aWYoYyYzNil7dmFyIGQ9Vi5hbHRlcm5hdGUsZT1WLGY9Yjtzd2l0Y2goZS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGgoUmYsU2YsZSk7YnJlYWs7Y2FzZSAxOnZhciBnPWUuc3RhdGVOb2RlO2lmKGUuZWZmZWN0VGFnJjQpaWYobnVsbD09PWQpZy5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGg9ZS5lbGVtZW50VHlwZT09PWUudHlwZT9kLm1lbW9pemVkUHJvcHM6TChlLnR5cGUsZC5tZW1vaXplZFByb3BzKTtnLmNvbXBvbmVudERpZFVwZGF0ZShoLGQubWVtb2l6ZWRTdGF0ZSxnLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1kPWUudXBkYXRlUXVldWU7bnVsbCE9PWQmJmhoKGUsZCxnLGYpO2JyZWFrO2Nhc2UgMzpkPWUudXBkYXRlUXVldWU7aWYobnVsbCE9PWQpe2c9bnVsbDtpZihudWxsIT09ZS5jaGlsZClzd2l0Y2goZS5jaGlsZC50YWcpe2Nhc2UgNTpnPVxuZS5jaGlsZC5zdGF0ZU5vZGU7YnJlYWs7Y2FzZSAxOmc9ZS5jaGlsZC5zdGF0ZU5vZGV9aGgoZSxkLGcsZil9YnJlYWs7Y2FzZSA1OmY9ZS5zdGF0ZU5vZGU7bnVsbD09PWQmJmUuZWZmZWN0VGFnJjQmJndlKGUudHlwZSxlLm1lbW9pemVkUHJvcHMpJiZmLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgMTM6YnJlYWs7Y2FzZSAxNzpicmVhaztkZWZhdWx0OngoXCIxNjNcIil9fWMmMTI4JiYoZT1WLnJlZixudWxsIT09ZSYmKGY9Vi5zdGF0ZU5vZGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGU/ZShmKTplLmN1cnJlbnQ9ZikpO2MmNTEyJiYoUGg9YSk7Vj1WLm5leHRFZmZlY3R9fVxuZnVuY3Rpb24gV2goYSxiKXtSaD1RaD1QaD1udWxsO3ZhciBjPVc7Vz0hMDtkb3tpZihiLmVmZmVjdFRhZyY1MTIpe3ZhciBkPSExLGU9dm9pZCAwO3RyeXt2YXIgZj1iO3RoKFVmLE5mLGYpO3RoKE5mLFRmLGYpfWNhdGNoKGcpe2Q9ITAsZT1nfWQmJnNoKGIsZSl9Yj1iLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PWIpO1c9YztjPWEuZXhwaXJhdGlvblRpbWU7MCE9PWMmJlhoKGEsYyk7WHx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9ZnVuY3Rpb24gb2YoKXtudWxsIT09UWgmJkJlKFFoKTtudWxsIT09UmgmJlJoKCl9XG5mdW5jdGlvbiBaaChhLGIpe09oPUtoPSEwO2EuY3VycmVudD09PWI/eChcIjE3N1wiKTp2b2lkIDA7dmFyIGM9YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU7MD09PWM/eChcIjI2MVwiKTp2b2lkIDA7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9MDt2YXIgZD1iLmV4cGlyYXRpb25UaW1lLGU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2VmKGEsZT5kP2U6ZCk7SWguY3VycmVudD1udWxsO2Q9dm9pZCAwOzE8Yi5lZmZlY3RUYWc/bnVsbCE9PWIubGFzdEVmZmVjdD8oYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YixkPWIuZmlyc3RFZmZlY3QpOmQ9YjpkPWIuZmlyc3RFZmZlY3Q7dWU9QmQ7dmU9UGQoKTtCZD0hMTtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTt2YXIgZj12b2lkIDA7dHJ5e1VoKCl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfWZvcihWPWQ7bnVsbCE9PVY7KXtlPSExO1xuZj12b2lkIDA7dHJ5e1RoKCl9Y2F0Y2goaCl7ZT0hMCxmPWh9ZSYmKG51bGw9PT1WP3goXCIxNzhcIik6dm9pZCAwLHNoKFYsZiksbnVsbCE9PVYmJihWPVYubmV4dEVmZmVjdCkpfVFkKHZlKTt2ZT1udWxsO0JkPSEhdWU7dWU9bnVsbDthLmN1cnJlbnQ9Yjtmb3IoVj1kO251bGwhPT1WOyl7ZT0hMTtmPXZvaWQgMDt0cnl7VmgoYSxjKX1jYXRjaChoKXtlPSEwLGY9aH1lJiYobnVsbD09PVY/eChcIjE3OFwiKTp2b2lkIDAsc2goVixmKSxudWxsIT09ViYmKFY9Vi5uZXh0RWZmZWN0KSl9aWYobnVsbCE9PWQmJm51bGwhPT1QaCl7dmFyIGc9V2guYmluZChudWxsLGEsZCk7UWg9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxmdW5jdGlvbigpe3JldHVybiBBZShnKX0pO1JoPWd9S2g9T2g9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIFFlJiZRZShiLnN0YXRlTm9kZSk7Yz1iLmV4cGlyYXRpb25UaW1lO2I9Yi5jaGlsZEV4cGlyYXRpb25UaW1lO2I9XG5iPmM/YjpjOzA9PT1iJiYoRmg9bnVsbCk7JGgoYSxiKX1cbmZ1bmN0aW9uIGFpKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjEwMjQpKXtUPWE7YTp7dmFyIGU9YjtiPWE7dmFyIGY9VTt2YXIgZz1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMjpicmVhaztjYXNlIDE2OmJyZWFrO2Nhc2UgMTU6Y2FzZSAwOmJyZWFrO2Nhc2UgMTpKKGIudHlwZSkmJktlKGIpO2JyZWFrO2Nhc2UgMzpLZihiKTtMZShiKTtnPWIuc3RhdGVOb2RlO2cucGVuZGluZ0NvbnRleHQmJihnLmNvbnRleHQ9Zy5wZW5kaW5nQ29udGV4dCxnLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1lfHxudWxsPT09ZS5jaGlsZClFZyhiKSxiLmVmZmVjdFRhZyY9LTM7bWgoYik7YnJlYWs7Y2FzZSA1Ok1mKGIpO3ZhciBoPUlmKEhmLmN1cnJlbnQpO2Y9Yi50eXBlO2lmKG51bGwhPT1lJiZudWxsIT1iLnN0YXRlTm9kZSluaChlLGIsZixnLGgpLGUucmVmIT09Yi5yZWYmJihiLmVmZmVjdFRhZ3w9XG4xMjgpO2Vsc2UgaWYoZyl7dmFyIGw9SWYoTi5jdXJyZW50KTtpZihFZyhiKSl7Zz1iO2U9Zy5zdGF0ZU5vZGU7dmFyIGs9Zy50eXBlLG09Zy5tZW1vaXplZFByb3BzLHA9aDtlW0ZhXT1nO2VbR2FdPW07Zj12b2lkIDA7aD1rO3N3aXRjaChoKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkUoXCJsb2FkXCIsZSk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGs9MDtrPGFiLmxlbmd0aDtrKyspRShhYltrXSxlKTticmVhaztjYXNlIFwic291cmNlXCI6RShcImVycm9yXCIsZSk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RShcImVycm9yXCIsZSk7RShcImxvYWRcIixlKTticmVhaztjYXNlIFwiZm9ybVwiOkUoXCJyZXNldFwiLGUpO0UoXCJzdWJtaXRcIixlKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkUoXCJ0b2dnbGVcIixlKTticmVhaztjYXNlIFwiaW5wdXRcIjp3YyhlLG0pO0UoXCJpbnZhbGlkXCIsZSk7c2UocCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFtLm11bHRpcGxlfTtFKFwiaW52YWxpZFwiLGUpO3NlKHAsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjZShlLG0pLEUoXCJpbnZhbGlkXCIsZSksc2UocCxcIm9uQ2hhbmdlXCIpfXFlKGgsbSk7az1udWxsO2ZvcihmIGluIG0pbS5oYXNPd25Qcm9wZXJ0eShmKSYmKGw9bVtmXSxcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD9lLnRleHRDb250ZW50IT09bCYmKGs9W1wiY2hpbGRyZW5cIixsXSk6XCJudW1iZXJcIj09PXR5cGVvZiBsJiZlLnRleHRDb250ZW50IT09XCJcIitsJiYoaz1bXCJjaGlsZHJlblwiLFwiXCIrbF0pOnJhLmhhc093blByb3BlcnR5KGYpJiZudWxsIT1sJiZzZShwLGYpKTtzd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6UmIoZSk7QWMoZSxtLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpSYihlKTtlZShlLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgbS5vbkNsaWNrJiZcbihlLm9uY2xpY2s9dGUpfWY9aztnLnVwZGF0ZVF1ZXVlPWY7Zz1udWxsIT09Zj8hMDohMTtnJiZraChiKX1lbHNle209YjtwPWY7ZT1nO2s9OT09PWgubm9kZVR5cGU/aDpoLm93bmVyRG9jdW1lbnQ7bD09PWZlLmh0bWwmJihsPWdlKHApKTtsPT09ZmUuaHRtbD9cInNjcmlwdFwiPT09cD8oZT1rLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksZS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixrPWUucmVtb3ZlQ2hpbGQoZS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBlLmlzP2s9ay5jcmVhdGVFbGVtZW50KHAse2lzOmUuaXN9KTooaz1rLmNyZWF0ZUVsZW1lbnQocCksXCJzZWxlY3RcIj09PXAmJihwPWssZS5tdWx0aXBsZT9wLm11bHRpcGxlPSEwOmUuc2l6ZSYmKHAuc2l6ZT1lLnNpemUpKSk6az1rLmNyZWF0ZUVsZW1lbnROUyhsLHApO2U9aztlW0ZhXT1tO2VbR2FdPWc7bGgoZSxiLCExLCExKTtwPWU7az1mO209Zzt2YXIgdD1oLEE9cmUoayxtKTtzd2l0Y2goayl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpFKFwibG9hZFwiLFxucCk7aD1tO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYi5sZW5ndGg7aCsrKUUoYWJbaF0scCk7aD1tO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpFKFwiZXJyb3JcIixwKTtoPW07YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RShcImVycm9yXCIscCk7RShcImxvYWRcIixwKTtoPW07YnJlYWs7Y2FzZSBcImZvcm1cIjpFKFwicmVzZXRcIixwKTtFKFwic3VibWl0XCIscCk7aD1tO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RShcInRvZ2dsZVwiLHApO2g9bTticmVhaztjYXNlIFwiaW5wdXRcIjp3YyhwLG0pO2g9dmMocCxtKTtFKFwiaW52YWxpZFwiLHApO3NlKHQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD0kZChwLG0pO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpwLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhbS5tdWx0aXBsZX07aD1uKHt9LG0se3ZhbHVlOnZvaWQgMH0pO0UoXCJpbnZhbGlkXCIscCk7c2UodCxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmNlKHAsXG5tKTtoPWJlKHAsbSk7RShcImludmFsaWRcIixwKTtzZSh0LFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPW19cWUoayxoKTtsPXZvaWQgMDt2YXIgdj1rLFI9cCx1PWg7Zm9yKGwgaW4gdSlpZih1Lmhhc093blByb3BlcnR5KGwpKXt2YXIgcT11W2xdO1wic3R5bGVcIj09PWw/b2UoUixxKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhxPXE/cS5fX2h0bWw6dm9pZCAwLG51bGwhPXEmJmplKFIscSkpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIj09PXR5cGVvZiBxPyhcInRleHRhcmVhXCIhPT12fHxcIlwiIT09cSkmJmtlKFIscSk6XCJudW1iZXJcIj09PXR5cGVvZiBxJiZrZShSLFwiXCIrcSk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKHJhLmhhc093blByb3BlcnR5KGwpP251bGwhPXEmJnNlKHQsbCk6bnVsbCE9cSYmdGMoUixsLHEsQSkpfXN3aXRjaChrKXtjYXNlIFwiaW5wdXRcIjpSYihwKTtcbkFjKHAsbSwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6UmIocCk7ZWUocCxtKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9bS52YWx1ZSYmcC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrdWMobS52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpoPXA7aC5tdWx0aXBsZT0hIW0ubXVsdGlwbGU7cD1tLnZhbHVlO251bGwhPXA/YWUoaCwhIW0ubXVsdGlwbGUscCwhMSk6bnVsbCE9bS5kZWZhdWx0VmFsdWUmJmFlKGgsISFtLm11bHRpcGxlLG0uZGVmYXVsdFZhbHVlLCEwKTticmVhaztkZWZhdWx0OlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLm9uQ2xpY2smJihwLm9uY2xpY2s9dGUpfShnPXdlKGYsZykpJiZraChiKTtiLnN0YXRlTm9kZT1lfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfWVsc2UgbnVsbD09PWIuc3RhdGVOb2RlP3goXCIxNjZcIik6dm9pZCAwO2JyZWFrO2Nhc2UgNjplJiZudWxsIT1iLnN0YXRlTm9kZT9vaChlLGIsZS5tZW1vaXplZFByb3BzLGcpOihcInN0cmluZ1wiIT09XG50eXBlb2YgZyYmKG51bGw9PT1iLnN0YXRlTm9kZT94KFwiMTY2XCIpOnZvaWQgMCksZT1JZihIZi5jdXJyZW50KSxJZihOLmN1cnJlbnQpLEVnKGIpPyhnPWIsZj1nLnN0YXRlTm9kZSxlPWcubWVtb2l6ZWRQcm9wcyxmW0ZhXT1nLChnPWYubm9kZVZhbHVlIT09ZSkmJmtoKGIpKTooZj1iLGc9KDk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50KS5jcmVhdGVUZXh0Tm9kZShnKSxnW0ZhXT1iLGYuc3RhdGVOb2RlPWcpKTticmVhaztjYXNlIDExOmJyZWFrO2Nhc2UgMTM6Zz1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpe2IuZXhwaXJhdGlvblRpbWU9ZjtUPWI7YnJlYWsgYX1nPW51bGwhPT1nO2Y9bnVsbCE9PWUmJm51bGwhPT1lLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJiFnJiZmJiYoZT1lLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihoPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWg/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9aCk6KGIuZmlyc3RFZmZlY3Q9XG5iLmxhc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpO2lmKGd8fGYpYi5lZmZlY3RUYWd8PTQ7YnJlYWs7Y2FzZSA3OmJyZWFrO2Nhc2UgODpicmVhaztjYXNlIDEyOmJyZWFrO2Nhc2UgNDpLZihiKTttaChiKTticmVhaztjYXNlIDEwOlpnKGIpO2JyZWFrO2Nhc2UgOTpicmVhaztjYXNlIDE0OmJyZWFrO2Nhc2UgMTc6SihiLnR5cGUpJiZLZShiKTticmVhaztjYXNlIDE4OmJyZWFrO2RlZmF1bHQ6eChcIjE1NlwiKX1UPW51bGx9Yj1hO2lmKDE9PT1VfHwxIT09Yi5jaGlsZEV4cGlyYXRpb25UaW1lKXtnPTA7Zm9yKGY9Yi5jaGlsZDtudWxsIT09ZjspZT1mLmV4cGlyYXRpb25UaW1lLGg9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGU+ZyYmKGc9ZSksaD5nJiYoZz1oKSxmPWYuc2libGluZztiLmNoaWxkRXhwaXJhdGlvblRpbWU9Z31pZihudWxsIT09VClyZXR1cm4gVDtudWxsIT09YyYmMD09PShjLmVmZmVjdFRhZyYxMDI0KSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiZcbihjLmZpcnN0RWZmZWN0PWEuZmlyc3RFZmZlY3QpLG51bGwhPT1hLmxhc3RFZmZlY3QmJihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKX1lbHNle2E9R2goYSxVKTtpZihudWxsIT09YSlyZXR1cm4gYS5lZmZlY3RUYWcmPTEwMjMsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTEwMjQpfWlmKG51bGwhPT1kKXJldHVybiBkO2lmKG51bGwhPT1jKWE9YztlbHNlIGJyZWFrfXJldHVybiBudWxsfVxuZnVuY3Rpb24gYmkoYSl7dmFyIGI9VGcoYS5hbHRlcm5hdGUsYSxVKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWImJihiPWFpKGEpKTtJaC5jdXJyZW50PW51bGw7cmV0dXJuIGJ9XG5mdW5jdGlvbiBjaShhLGIpe0toP3goXCIyNDNcIik6dm9pZCAwO29mKCk7S2g9ITA7dmFyIGM9SGguY3VycmVudDtIaC5jdXJyZW50PWtnO3ZhciBkPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT247aWYoZCE9PVV8fGEhPT1MaHx8bnVsbD09PVQpU2goKSxMaD1hLFU9ZCxUPVhlKExoLmN1cnJlbnQsbnVsbCxVKSxhLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO3ZhciBlPSExO2Rve3RyeXtpZihiKWZvcig7bnVsbCE9PVQmJiFkaSgpOylUPWJpKFQpO2Vsc2UgZm9yKDtudWxsIT09VDspVD1iaShUKX1jYXRjaCh1KXtpZihZZz1YZz1XZz1udWxsLGxnKCksbnVsbD09PVQpZT0hMCxEaCh1KTtlbHNle251bGw9PT1UP3goXCIyNzFcIik6dm9pZCAwO3ZhciBmPVQsZz1mLnJldHVybjtpZihudWxsPT09ZyllPSEwLERoKHUpO2Vsc2V7YTp7dmFyIGg9YSxsPWcsaz1mLG09dTtnPVU7ay5lZmZlY3RUYWd8PTEwMjQ7ay5maXJzdEVmZmVjdD1rLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09XG5tJiZcIm9iamVjdFwiPT09dHlwZW9mIG0mJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBtLnRoZW4pe3ZhciBwPW07bT1sO3ZhciB0PS0xLEE9LTE7ZG97aWYoMTM9PT1tLnRhZyl7dmFyIHY9bS5hbHRlcm5hdGU7aWYobnVsbCE9PXYmJih2PXYubWVtb2l6ZWRTdGF0ZSxudWxsIT09dikpe0E9MTAqKDEwNzM3NDE4MjItdi50aW1lZE91dEF0KTticmVha312PW0ucGVuZGluZ1Byb3BzLm1heER1cmF0aW9uO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgdilpZigwPj12KXQ9MDtlbHNlIGlmKC0xPT09dHx8djx0KXQ9dn1tPW0ucmV0dXJufXdoaWxlKG51bGwhPT1tKTttPWw7ZG97aWYodj0xMz09PW0udGFnKXY9dm9pZCAwPT09bS5tZW1vaXplZFByb3BzLmZhbGxiYWNrPyExOm51bGw9PT1tLm1lbW9pemVkU3RhdGU7aWYodil7bD1tLnVwZGF0ZVF1ZXVlO251bGw9PT1sPyhsPW5ldyBTZXQsbC5hZGQocCksbS51cGRhdGVRdWV1ZT1sKTpsLmFkZChwKTtpZigwPT09KG0ubW9kZSYxKSl7bS5lZmZlY3RUYWd8PVxuNjQ7ay5lZmZlY3RUYWcmPS0xOTU3OzE9PT1rLnRhZyYmKG51bGw9PT1rLmFsdGVybmF0ZT9rLnRhZz0xNzooZz1uZigxMDczNzQxODIzKSxnLnRhZz1zZixwZihrLGcpKSk7ay5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2JyZWFrIGF9az1oO2w9Zzt2YXIgUj1rLnBpbmdDYWNoZTtudWxsPT09Uj8oUj1rLnBpbmdDYWNoZT1uZXcgQmgsdj1uZXcgU2V0LFIuc2V0KHAsdikpOih2PVIuZ2V0KHApLHZvaWQgMD09PXYmJih2PW5ldyBTZXQsUi5zZXQocCx2KSkpO3YuaGFzKGwpfHwodi5hZGQobCksaz1laS5iaW5kKG51bGwsayxwLGwpLHAudGhlbihrLGspKTstMT09PXQ/aD0xMDczNzQxODIzOigtMT09PUEmJihBPTEwKigxMDczNzQxODIyLWdmKGgsZykpLTVFMyksaD1BK3QpOzA8PWgmJk1oPGgmJihNaD1oKTttLmVmZmVjdFRhZ3w9MjA0ODttLmV4cGlyYXRpb25UaW1lPWc7YnJlYWsgYX1tPW0ucmV0dXJufXdoaWxlKG51bGwhPT1tKTttPUVycm9yKChpYyhrLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1xuXCIgc3VzcGVuZGVkIHdoaWxlIHJlbmRlcmluZywgYnV0IG5vIGZhbGxiYWNrIFVJIHdhcyBzcGVjaWZpZWQuXFxuXFxuQWRkIGEgPFN1c3BlbnNlIGZhbGxiYWNrPS4uLj4gY29tcG9uZW50IGhpZ2hlciBpbiB0aGUgdHJlZSB0byBwcm92aWRlIGEgbG9hZGluZyBpbmRpY2F0b3Igb3IgcGxhY2Vob2xkZXIgdG8gZGlzcGxheS5cIitqYyhrKSl9Tmg9ITA7bT1qaChtLGspO2g9bDtkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoLmVmZmVjdFRhZ3w9MjA0ODtoLmV4cGlyYXRpb25UaW1lPWc7Zz1DaChoLG0sZyk7ZWgoaCxnKTticmVhayBhO2Nhc2UgMTppZih0PW0sQT1oLnR5cGUsaz1oLnN0YXRlTm9kZSwwPT09KGguZWZmZWN0VGFnJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBBLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PWsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PUZofHwhRmguaGFzKGspKSkpe2guZWZmZWN0VGFnfD0yMDQ4O1xuaC5leHBpcmF0aW9uVGltZT1nO2c9RWgoaCx0LGcpO2VoKGgsZyk7YnJlYWsgYX19aD1oLnJldHVybn13aGlsZShudWxsIT09aCl9VD1haShmKTtjb250aW51ZX19fWJyZWFrfXdoaWxlKDEpO0toPSExO0hoLmN1cnJlbnQ9YztZZz1YZz1XZz1udWxsO2xnKCk7aWYoZSlMaD1udWxsLGEuZmluaXNoZWRXb3JrPW51bGw7ZWxzZSBpZihudWxsIT09VClhLmZpbmlzaGVkV29yaz1udWxsO2Vsc2V7Yz1hLmN1cnJlbnQuYWx0ZXJuYXRlO251bGw9PT1jP3goXCIyODFcIik6dm9pZCAwO0xoPW51bGw7aWYoTmgpe2U9YS5sYXRlc3RQZW5kaW5nVGltZTtmPWEubGF0ZXN0U3VzcGVuZGVkVGltZTtnPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwIT09ZSYmZTxkfHwwIT09ZiYmZjxkfHwwIT09ZyYmZzxkKXtmZihhLGQpO2ZpKGEsYyxkLGEuZXhwaXJhdGlvblRpbWUsLTEpO3JldHVybn1pZighYS5kaWRFcnJvciYmYil7YS5kaWRFcnJvcj0hMDtkPWEubmV4dEV4cGlyYXRpb25UaW1lVG9Xb3JrT249ZDtcbmI9YS5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2ZpKGEsYyxkLGIsLTEpO3JldHVybn19YiYmLTEhPT1NaD8oZmYoYSxkKSxiPTEwKigxMDczNzQxODIyLWdmKGEsZCkpLGI8TWgmJihNaD1iKSxiPTEwKigxMDczNzQxODIyLWxmKCkpLGI9TWgtYixmaShhLGMsZCxhLmV4cGlyYXRpb25UaW1lLDA+Yj8wOmIpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9ZCxhLmZpbmlzaGVkV29yaz1jKX19XG5mdW5jdGlvbiBzaChhLGIpe2Zvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1GaHx8IUZoLmhhcyhkKSkpe2E9amgoYixhKTthPUVoKGMsYSwxMDczNzQxODIzKTtwZihjLGEpO3FmKGMsMTA3Mzc0MTgyMyk7cmV0dXJufWJyZWFrO2Nhc2UgMzphPWpoKGIsYSk7YT1DaChjLGEsMTA3Mzc0MTgyMyk7cGYoYyxhKTtxZihjLDEwNzM3NDE4MjMpO3JldHVybn1jPWMucmV0dXJufTM9PT1hLnRhZyYmKGM9amgoYixhKSxjPUNoKGEsYywxMDczNzQxODIzKSxwZihhLGMpLHFmKGEsMTA3Mzc0MTgyMykpfVxuZnVuY3Rpb24gbWYoYSxiKXt2YXIgYz1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsKCksZD12b2lkIDA7aWYoMD09PShiLm1vZGUmMSkpZD0xMDczNzQxODIzO2Vsc2UgaWYoS2gmJiFPaClkPVU7ZWxzZXtzd2l0Y2goYyl7Y2FzZSByLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5OmQ9MTA3Mzc0MTgyMzticmVhaztjYXNlIHIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk6ZD0xMDczNzQxODIyLTEwKigoKDEwNzM3NDE4MjItYSsxNSkvMTB8MCkrMSk7YnJlYWs7Y2FzZSByLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5OmQ9MTA3Mzc0MTgyMi0yNSooKCgxMDczNzQxODIyLWErNTAwKS8yNXwwKSsxKTticmVhaztjYXNlIHIudW5zdGFibGVfTG93UHJpb3JpdHk6Y2FzZSByLnVuc3RhYmxlX0lkbGVQcmlvcml0eTpkPTE7YnJlYWs7ZGVmYXVsdDp4KFwiMzEzXCIpfW51bGwhPT1MaCYmZD09PVUmJi0tZH1jPT09ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSYmXG4oMD09PWdpfHxkPGdpKSYmKGdpPWQpO3JldHVybiBkfWZ1bmN0aW9uIGVpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7aWYobnVsbCE9PUxoJiZVPT09YylMaD1udWxsO2Vsc2UgaWYoYj1hLmVhcmxpZXN0U3VzcGVuZGVkVGltZSxkPWEubGF0ZXN0U3VzcGVuZGVkVGltZSwwIT09YiYmYzw9YiYmYz49ZCl7YS5kaWRFcnJvcj0hMTtiPWEubGF0ZXN0UGluZ2VkVGltZTtpZigwPT09Ynx8Yj5jKWEubGF0ZXN0UGluZ2VkVGltZT1jO2RmKGMsYSk7Yz1hLmV4cGlyYXRpb25UaW1lOzAhPT1jJiZYaChhLGMpfX1mdW5jdGlvbiBBaChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPWxmKCk7Yj1tZihiLGEpO2E9aGkoYSxiKTtudWxsIT09YSYmKGNmKGEsYiksYj1hLmV4cGlyYXRpb25UaW1lLDAhPT1iJiZYaChhLGIpKX1cbmZ1bmN0aW9uIGhpKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59cmV0dXJuIGV9XG5mdW5jdGlvbiBxZihhLGIpe2E9aGkoYSxiKTtudWxsIT09YSYmKCFLaCYmMCE9PVUmJmI+VSYmU2goKSxjZihhLGIpLEtoJiYhT2gmJkxoPT09YXx8WGgoYSxhLmV4cGlyYXRpb25UaW1lKSxpaT5qaSYmKGlpPTAseChcIjE4NVwiKSkpfWZ1bmN0aW9uIGtpKGEsYixjLGQsZSl7cmV0dXJuIHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfXZhciBsaT1udWxsLFk9bnVsbCxtaT0wLG5pPXZvaWQgMCxXPSExLG9pPW51bGwsWj0wLGdpPTAscGk9ITEscWk9bnVsbCxYPSExLHJpPSExLHNpPW51bGwsdGk9ci51bnN0YWJsZV9ub3coKSx1aT0xMDczNzQxODIyLSh0aS8xMHwwKSx2aT11aSxqaT01MCxpaT0wLHdpPW51bGw7ZnVuY3Rpb24geGkoKXt1aT0xMDczNzQxODIyLSgoci51bnN0YWJsZV9ub3coKS10aSkvMTB8MCl9XG5mdW5jdGlvbiB5aShhLGIpe2lmKDAhPT1taSl7aWYoYjxtaSlyZXR1cm47bnVsbCE9PW5pJiZyLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrKG5pKX1taT1iO2E9ci51bnN0YWJsZV9ub3coKS10aTtuaT1yLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soemkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjItYiktYX0pfWZ1bmN0aW9uIGZpKGEsYixjLGQsZSl7YS5leHBpcmF0aW9uVGltZT1kOzAhPT1lfHxkaSgpPzA8ZSYmKGEudGltZW91dEhhbmRsZT15ZShBaS5iaW5kKG51bGwsYSxiLGMpLGUpKTooYS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YyxhLmZpbmlzaGVkV29yaz1iKX1mdW5jdGlvbiBBaShhLGIsYyl7YS5wZW5kaW5nQ29tbWl0RXhwaXJhdGlvblRpbWU9YzthLmZpbmlzaGVkV29yaz1iO3hpKCk7dmk9dWk7QmkoYSxjKX1mdW5jdGlvbiAkaChhLGIpe2EuZXhwaXJhdGlvblRpbWU9YjthLmZpbmlzaGVkV29yaz1udWxsfVxuZnVuY3Rpb24gbGYoKXtpZihXKXJldHVybiB2aTtDaSgpO2lmKDA9PT1afHwxPT09Wil4aSgpLHZpPXVpO3JldHVybiB2aX1mdW5jdGlvbiBYaChhLGIpe251bGw9PT1hLm5leHRTY2hlZHVsZWRSb290PyhhLmV4cGlyYXRpb25UaW1lPWIsbnVsbD09PVk/KGxpPVk9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihZPVkubmV4dFNjaGVkdWxlZFJvb3Q9YSxZLm5leHRTY2hlZHVsZWRSb290PWxpKSk6Yj5hLmV4cGlyYXRpb25UaW1lJiYoYS5leHBpcmF0aW9uVGltZT1iKTtXfHwoWD9yaSYmKG9pPWEsWj0xMDczNzQxODIzLERpKGEsMTA3Mzc0MTgyMywhMSkpOjEwNzM3NDE4MjM9PT1iP1loKDEwNzM3NDE4MjMsITEpOnlpKGEsYikpfVxuZnVuY3Rpb24gQ2koKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09WSlmb3IodmFyIGM9WSxkPWxpO251bGwhPT1kOyl7dmFyIGU9ZC5leHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1ZP3goXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtsaT1ZPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1saSlsaT1lPWQubmV4dFNjaGVkdWxlZFJvb3QsWS5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1ZKXtZPWM7WS5uZXh0U2NoZWR1bGVkUm9vdD1saTtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2U+YSYmKGE9ZSxiPWQpO2lmKGQ9PT1ZKWJyZWFrO2lmKDEwNzM3NDE4MjM9PT1cbmEpYnJlYWs7Yz1kO2Q9ZC5uZXh0U2NoZWR1bGVkUm9vdH19b2k9YjtaPWF9dmFyIEVpPSExO2Z1bmN0aW9uIGRpKCl7cmV0dXJuIEVpPyEwOnIudW5zdGFibGVfc2hvdWxkWWllbGQoKT9FaT0hMDohMX1mdW5jdGlvbiB6aSgpe3RyeXtpZighZGkoKSYmbnVsbCE9PWxpKXt4aSgpO3ZhciBhPWxpO2Rve3ZhciBiPWEuZXhwaXJhdGlvblRpbWU7MCE9PWImJnVpPD1iJiYoYS5uZXh0RXhwaXJhdGlvblRpbWVUb1dvcmtPbj11aSk7YT1hLm5leHRTY2hlZHVsZWRSb290fXdoaWxlKGEhPT1saSl9WWgoMCwhMCl9ZmluYWxseXtFaT0hMX19XG5mdW5jdGlvbiBZaChhLGIpe0NpKCk7aWYoYilmb3IoeGkoKSx2aT11aTtudWxsIT09b2kmJjAhPT1aJiZhPD1aJiYhKEVpJiZ1aT5aKTspRGkob2ksWix1aT5aKSxDaSgpLHhpKCksdmk9dWk7ZWxzZSBmb3IoO251bGwhPT1vaSYmMCE9PVomJmE8PVo7KURpKG9pLFosITEpLENpKCk7YiYmKG1pPTAsbmk9bnVsbCk7MCE9PVomJnlpKG9pLFopO2lpPTA7d2k9bnVsbDtpZihudWxsIT09c2kpZm9yKGE9c2ksc2k9bnVsbCxiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07dHJ5e2MuX29uQ29tcGxldGUoKX1jYXRjaChkKXtwaXx8KHBpPSEwLHFpPWQpfX1pZihwaSl0aHJvdyBhPXFpLHFpPW51bGwscGk9ITEsYTt9ZnVuY3Rpb24gQmkoYSxiKXtXP3goXCIyNTNcIik6dm9pZCAwO29pPWE7Wj1iO0RpKGEsYiwhMSk7WWgoMTA3Mzc0MTgyMywhMSl9XG5mdW5jdGlvbiBEaShhLGIsYyl7Vz94KFwiMjQ1XCIpOnZvaWQgMDtXPSEwO2lmKGMpe3ZhciBkPWEuZmluaXNoZWRXb3JrO251bGwhPT1kP0ZpKGEsZCxiKTooYS5maW5pc2hlZFdvcms9bnVsbCxkPWEudGltZW91dEhhbmRsZSwtMSE9PWQmJihhLnRpbWVvdXRIYW5kbGU9LTEsemUoZCkpLGNpKGEsYyksZD1hLmZpbmlzaGVkV29yayxudWxsIT09ZCYmKGRpKCk/YS5maW5pc2hlZFdvcms9ZDpGaShhLGQsYikpKX1lbHNlIGQ9YS5maW5pc2hlZFdvcmssbnVsbCE9PWQ/RmkoYSxkLGIpOihhLmZpbmlzaGVkV29yaz1udWxsLGQ9YS50aW1lb3V0SGFuZGxlLC0xIT09ZCYmKGEudGltZW91dEhhbmRsZT0tMSx6ZShkKSksY2koYSxjKSxkPWEuZmluaXNoZWRXb3JrLG51bGwhPT1kJiZGaShhLGQsYikpO1c9ITF9XG5mdW5jdGlvbiBGaShhLGIsYyl7dmFyIGQ9YS5maXJzdEJhdGNoO2lmKG51bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YyYmKG51bGw9PT1zaT9zaT1bZF06c2kucHVzaChkKSxkLl9kZWZlcikpe2EuZmluaXNoZWRXb3JrPWI7YS5leHBpcmF0aW9uVGltZT0wO3JldHVybn1hLmZpbmlzaGVkV29yaz1udWxsO2E9PT13aT9paSsrOih3aT1hLGlpPTApO3IudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksZnVuY3Rpb24oKXtaaChhLGIpfSl9ZnVuY3Rpb24gRGgoYSl7bnVsbD09PW9pP3goXCIyNDZcIik6dm9pZCAwO29pLmV4cGlyYXRpb25UaW1lPTA7cGl8fChwaT0hMCxxaT1hKX1mdW5jdGlvbiBHaShhLGIpe3ZhciBjPVg7WD0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXsoWD1jKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gSGkoYSxiKXtpZihYJiYhcmkpe3JpPSEwO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e3JpPSExfX1yZXR1cm4gYShiKX1mdW5jdGlvbiBJaShhLGIsYyl7WHx8V3x8MD09PWdpfHwoWWgoZ2ksITEpLGdpPTApO3ZhciBkPVg7WD0hMDt0cnl7cmV0dXJuIHIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5KHIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMpfSl9ZmluYWxseXsoWD1kKXx8V3x8WWgoMTA3Mzc0MTgyMywhMSl9fVxuZnVuY3Rpb24gSmkoYSxiLGMsZCxlKXt2YXIgZj1iLmN1cnJlbnQ7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOnsyPT09ZWQoYykmJjE9PT1jLnRhZz92b2lkIDA6eChcIjE3MFwiKTt2YXIgZz1jO2Rve3N3aXRjaChnLnRhZyl7Y2FzZSAzOmc9Zy5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihKKGcudHlwZSkpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn19Zz1nLnJldHVybn13aGlsZShudWxsIT09Zyk7eChcIjE3MVwiKTtnPXZvaWQgMH1pZigxPT09Yy50YWcpe3ZhciBoPWMudHlwZTtpZihKKGgpKXtjPU5lKGMsaCxnKTticmVhayBhfX1jPWd9ZWxzZSBjPUhlO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9ZTtlPW5mKGQpO2UucGF5bG9hZD17ZWxlbWVudDphfTtiPXZvaWQgMD09PWI/bnVsbDpiO251bGwhPT1iJiYoZS5jYWxsYmFjaz1iKTtcbm9mKCk7cGYoZixlKTtxZihmLGQpO3JldHVybiBkfWZ1bmN0aW9uIEtpKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPWxmKCk7ZT1tZihmLGUpO3JldHVybiBKaShhLGIsYyxlLGQpfWZ1bmN0aW9uIExpKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gTWkoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpXYixrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbkFiPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6eWMoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPUthKGQpO2U/dm9pZCAwOngoXCI5MFwiKTtTYihkKTt5YyhkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZGUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJmFlKGEsISFjLm11bHRpcGxlLGIsITEpfX07XG5mdW5jdGlvbiBOaShhKXt2YXIgYj0xMDczNzQxODIyLTI1KigoKDEwNzM3NDE4MjItbGYoKSs1MDApLzI1fDApKzEpO2I+PUpoJiYoYj1KaC0xKTt0aGlzLl9leHBpcmF0aW9uVGltZT1KaD1iO3RoaXMuX3Jvb3Q9YTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fbmV4dD1udWxsO3RoaXMuX2hhc0NoaWxkcmVuPXRoaXMuX2RpZENvbXBsZXRlPSExO3RoaXMuX2NoaWxkcmVuPW51bGw7dGhpcy5fZGVmZXI9ITB9TmkucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXt0aGlzLl9kZWZlcj92b2lkIDA6eChcIjI1MFwiKTt0aGlzLl9oYXNDaGlsZHJlbj0hMDt0aGlzLl9jaGlsZHJlbj1hO3ZhciBiPXRoaXMuX3Jvb3QuX2ludGVybmFsUm9vdCxjPXRoaXMuX2V4cGlyYXRpb25UaW1lLGQ9bmV3IE9pO0ppKGEsYixudWxsLGMsZC5fb25Db21taXQpO3JldHVybiBkfTtcbk5pLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbk5pLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDp4KFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP3goXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7QmkoYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07TmkucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIE9pKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9T2kucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbk9pLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP3goXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O1xuZnVuY3Rpb24gUGkoYSxiLGMpe2I9SygzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxwaW5nQ2FjaGU6bnVsbCxlYXJsaWVzdFBlbmRpbmdUaW1lOjAsbGF0ZXN0UGVuZGluZ1RpbWU6MCxlYXJsaWVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0UGluZ2VkVGltZTowLGRpZEVycm9yOiExLHBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTowLGZpbmlzaGVkV29yazpudWxsLHRpbWVvdXRIYW5kbGU6LTEsY29udGV4dDpudWxsLHBlbmRpbmdDb250ZXh0Om51bGwsaHlkcmF0ZTpjLG5leHRFeHBpcmF0aW9uVGltZVRvV29ya09uOjAsZXhwaXJhdGlvblRpbWU6MCxmaXJzdEJhdGNoOm51bGwsbmV4dFNjaGVkdWxlZFJvb3Q6bnVsbH07dGhpcy5faW50ZXJuYWxSb290PWIuc3RhdGVOb2RlPWF9XG5QaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faW50ZXJuYWxSb290LGQ9bmV3IE9pO2I9dm9pZCAwPT09Yj9udWxsOmI7bnVsbCE9PWImJmQudGhlbihiKTtLaShhLGMsbnVsbCxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O1BpLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdCxjPW5ldyBPaTthPXZvaWQgMD09PWE/bnVsbDphO251bGwhPT1hJiZjLnRoZW4oYSk7S2kobnVsbCxiLG51bGwsYy5fb25Db21taXQpO3JldHVybiBjfTtQaS5wcm90b3R5cGUubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLl9pbnRlcm5hbFJvb3QsZT1uZXcgT2k7Yz12b2lkIDA9PT1jP251bGw6YztudWxsIT09YyYmZS50aGVuKGMpO0tpKGIsZCxhLGUuX29uQ29tbWl0KTtyZXR1cm4gZX07XG5QaS5wcm90b3R5cGUuY3JlYXRlQmF0Y2g9ZnVuY3Rpb24oKXt2YXIgYT1uZXcgTmkodGhpcyksYj1hLl9leHBpcmF0aW9uVGltZSxjPXRoaXMuX2ludGVybmFsUm9vdCxkPWMuZmlyc3RCYXRjaDtpZihudWxsPT09ZCljLmZpcnN0QmF0Y2g9YSxhLl9uZXh0PW51bGw7ZWxzZXtmb3IoYz1udWxsO251bGwhPT1kJiZkLl9leHBpcmF0aW9uVGltZT49YjspYz1kLGQ9ZC5fbmV4dDthLl9uZXh0PWQ7bnVsbCE9PWMmJihjLl9uZXh0PWEpfXJldHVybiBhfTtmdW5jdGlvbiBRaShhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9R2I9R2k7SGI9SWk7SWI9ZnVuY3Rpb24oKXtXfHwwPT09Z2l8fChZaChnaSwhMSksZ2k9MCl9O1xuZnVuY3Rpb24gUmkoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBQaShhLCExLGIpfVxuZnVuY3Rpb24gU2koYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBnPWU7ZT1mdW5jdGlvbigpe3ZhciBhPUxpKGYuX2ludGVybmFsUm9vdCk7Zy5jYWxsKGEpfX1udWxsIT1hP2YubGVnYWN5X3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyKGEsYixlKTpmLnJlbmRlcihiLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9UmkoYyxkKTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9TGkoZi5faW50ZXJuYWxSb290KTtoLmNhbGwoYSl9fUhpKGZ1bmN0aW9uKCl7bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX0pfXJldHVybiBMaShmLl9pbnRlcm5hbFJvb3QpfVxuZnVuY3Rpb24gVGkoYSxiKXt2YXIgYz0yPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbDtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gTWkoYSxiLG51bGwsYyl9XG52YXIgVmk9e2NyZWF0ZVBvcnRhbDpUaSxmaW5kRE9NTm9kZTpmdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2b2lkIDA9PT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyP3goXCIxODhcIik6eChcIjI2OFwiLE9iamVjdC5rZXlzKGEpKSk7YT1oZChiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9LGh5ZHJhdGU6ZnVuY3Rpb24oYSxiLGMpe1FpKGIpP3ZvaWQgMDp4KFwiMjAwXCIpO3JldHVybiBTaShudWxsLGEsYiwhMCxjKX0scmVuZGVyOmZ1bmN0aW9uKGEsYixjKXtRaShiKT92b2lkIDA6eChcIjIwMFwiKTtyZXR1cm4gU2kobnVsbCxhLGIsITEsYyl9LHVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyOmZ1bmN0aW9uKGEsYixjLGQpe1FpKGMpP3ZvaWQgMDp4KFwiMjAwXCIpO251bGw9PWF8fHZvaWQgMD09PWEuX3JlYWN0SW50ZXJuYWxGaWJlcj9cbngoXCIzOFwiKTp2b2lkIDA7cmV0dXJuIFNpKGEsYixjLCExLGQpfSx1bm1vdW50Q29tcG9uZW50QXROb2RlOmZ1bmN0aW9uKGEpe1FpKGEpP3ZvaWQgMDp4KFwiNDBcIik7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oSGkoZnVuY3Rpb24oKXtTaShudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsfSl9KSwhMCk6ITF9LHVuc3RhYmxlX2NyZWF0ZVBvcnRhbDpmdW5jdGlvbigpe3JldHVybiBUaS5hcHBseSh2b2lkIDAsYXJndW1lbnRzKX0sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6R2ksdW5zdGFibGVfaW50ZXJhY3RpdmVVcGRhdGVzOklpLGZsdXNoU3luYzpmdW5jdGlvbihhLGIpe1c/eChcIjE4N1wiKTp2b2lkIDA7dmFyIGM9WDtYPSEwO3RyeXtyZXR1cm4ga2koYSxiKX1maW5hbGx5e1g9YyxZaCgxMDczNzQxODIzLCExKX19LHVuc3RhYmxlX2NyZWF0ZVJvb3Q6VWksdW5zdGFibGVfZmx1c2hDb250cm9sbGVkOmZ1bmN0aW9uKGEpe3ZhciBiPVxuWDtYPSEwO3RyeXtraShhKX1maW5hbGx5eyhYPWIpfHxXfHxZaCgxMDczNzQxODIzLCExKX19LF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudHM6W0lhLEphLEthLEJhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSxwYSxRYSxmdW5jdGlvbihhKXt5YShhLFBhKX0sRWIsRmIsRGQsRGFdfX07ZnVuY3Rpb24gVWkoYSxiKXtRaShhKT92b2lkIDA6eChcIjI5OVwiLFwidW5zdGFibGVfY3JlYXRlUm9vdFwiKTtyZXR1cm4gbmV3IFBpKGEsITAsbnVsbCE9YiYmITA9PT1iLmh5ZHJhdGUpfVxuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFRlKG4oe30sYSx7b3ZlcnJpZGVQcm9wczpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOlRiLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1oZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpIYSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjguNlwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO3ZhciBXaT17ZGVmYXVsdDpWaX0sWGk9V2kmJlZpfHxXaTttb2R1bGUuZXhwb3J0cz1YaS5kZWZhdWx0fHxYaTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTMuNlxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBkPW51bGwsZT0hMSxnPTMsaz0tMSxsPS0xLG09ITEsbj0hMTtmdW5jdGlvbiBwKCl7aWYoIW0pe3ZhciBhPWQuZXhwaXJhdGlvblRpbWU7bj9xKCk6bj0hMDtyKHQsYSl9fVxuZnVuY3Rpb24gdSgpe3ZhciBhPWQsYj1kLm5leHQ7aWYoZD09PWIpZD1udWxsO2Vsc2V7dmFyIGM9ZC5wcmV2aW91cztkPWMubmV4dD1iO2IucHJldmlvdXM9Y31hLm5leHQ9YS5wcmV2aW91cz1udWxsO2M9YS5jYWxsYmFjaztiPWEuZXhwaXJhdGlvblRpbWU7YT1hLnByaW9yaXR5TGV2ZWw7dmFyIGY9ZyxRPWw7Zz1hO2w9Yjt0cnl7dmFyIGg9YygpfWZpbmFsbHl7Zz1mLGw9UX1pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgaClpZihoPXtjYWxsYmFjazpoLHByaW9yaXR5TGV2ZWw6YSxleHBpcmF0aW9uVGltZTpiLG5leHQ6bnVsbCxwcmV2aW91czpudWxsfSxudWxsPT09ZClkPWgubmV4dD1oLnByZXZpb3VzPWg7ZWxzZXtjPW51bGw7YT1kO2Rve2lmKGEuZXhwaXJhdGlvblRpbWU+PWIpe2M9YTticmVha31hPWEubmV4dH13aGlsZShhIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1oLHAoKSk7Yj1jLnByZXZpb3VzO2IubmV4dD1jLnByZXZpb3VzPWg7aC5uZXh0PWM7aC5wcmV2aW91cz1cbmJ9fWZ1bmN0aW9uIHYoKXtpZigtMT09PWsmJm51bGwhPT1kJiYxPT09ZC5wcmlvcml0eUxldmVsKXttPSEwO3RyeXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJjE9PT1kLnByaW9yaXR5TGV2ZWwpfWZpbmFsbHl7bT0hMSxudWxsIT09ZD9wKCk6bj0hMX19fWZ1bmN0aW9uIHQoYSl7bT0hMDt2YXIgYj1lO2U9YTt0cnl7aWYoYSlmb3IoO251bGwhPT1kOyl7dmFyIGM9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtpZihkLmV4cGlyYXRpb25UaW1lPD1jKXtkbyB1KCk7d2hpbGUobnVsbCE9PWQmJmQuZXhwaXJhdGlvblRpbWU8PWMpfWVsc2UgYnJlYWt9ZWxzZSBpZihudWxsIT09ZCl7ZG8gdSgpO3doaWxlKG51bGwhPT1kJiYhdygpKX19ZmluYWxseXttPSExLGU9YixudWxsIT09ZD9wKCk6bj0hMSx2KCl9fVxudmFyIHg9RGF0ZSx5PVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHo9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcXVlc3RBbmltYXRpb25GcmFtZT9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU6dm9pZCAwLEI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNhbmNlbEFuaW1hdGlvbkZyYW1lP2NhbmNlbEFuaW1hdGlvbkZyYW1lOnZvaWQgMCxDLEQ7ZnVuY3Rpb24gRShhKXtDPUEoZnVuY3Rpb24oYil7eihEKTthKGIpfSk7RD15KGZ1bmN0aW9uKCl7QihDKTthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSwxMDApfVxuaWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIEY9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gRi5ub3coKX19ZWxzZSBleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiB4Lm5vdygpfTt2YXIgcixxLHcsRz1udWxsO1widW5kZWZpbmVkXCIhPT10eXBlb2Ygd2luZG93P0c9d2luZG93OlwidW5kZWZpbmVkXCIhPT10eXBlb2YgZ2xvYmFsJiYoRz1nbG9iYWwpO1xuaWYoRyYmRy5fc2NoZWRNb2NrKXt2YXIgSD1HLl9zY2hlZE1vY2s7cj1IWzBdO3E9SFsxXTt3PUhbMl07ZXhwb3J0cy51bnN0YWJsZV9ub3c9SFszXX1lbHNlIGlmKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBJPW51bGwsSj1mdW5jdGlvbihhKXtpZihudWxsIT09SSl0cnl7SShhKX1maW5hbGx5e0k9bnVsbH19O3I9ZnVuY3Rpb24oYSl7bnVsbCE9PUk/c2V0VGltZW91dChyLDAsYSk6KEk9YSxzZXRUaW1lb3V0KEosMCwhMSkpfTtxPWZ1bmN0aW9uKCl7ST1udWxsfTt3PWZ1bmN0aW9uKCl7cmV0dXJuITF9fWVsc2V7XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjb25zb2xlJiYoXCJmdW5jdGlvblwiIT09dHlwZW9mIEEmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9mYi5tZS9yZWFjdC1wb2x5ZmlsbHNcIiksXG5cImZ1bmN0aW9uXCIhPT10eXBlb2YgQiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpKTt2YXIgSz1udWxsLEw9ITEsTT0tMSxOPSExLE89ITEsUD0wLFI9MzMsUz0zMzt3PWZ1bmN0aW9uKCl7cmV0dXJuIFA8PWV4cG9ydHMudW5zdGFibGVfbm93KCl9O3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtMPSExO3ZhciBhPUssYj1NO0s9bnVsbDtNPS0xO3ZhciBjPWV4cG9ydHMudW5zdGFibGVfbm93KCksZj0hMTtpZigwPj1QLWMpaWYoLTEhPT1iJiZiPD1jKWY9ITA7ZWxzZXtOfHwoTj0hMCxFKFYpKTtLPWE7TT1iO3JldHVybn1pZihudWxsIT09YSl7Tz0hMDt0cnl7YShmKX1maW5hbGx5e089ITF9fX07XG52YXIgVj1mdW5jdGlvbihhKXtpZihudWxsIT09Syl7RShWKTt2YXIgYj1hLVArUztiPFMmJlI8Uz8oOD5iJiYoYj04KSxTPWI8Uj9SOmIpOlI9YjtQPWErUztMfHwoTD0hMCxVLnBvc3RNZXNzYWdlKHZvaWQgMCkpfWVsc2UgTj0hMX07cj1mdW5jdGlvbihhLGIpe0s9YTtNPWI7T3x8MD5iP1UucG9zdE1lc3NhZ2Uodm9pZCAwKTpOfHwoTj0hMCxFKFYpKX07cT1mdW5jdGlvbigpe0s9bnVsbDtMPSExO009LTF9fWV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O1xuZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1nLGY9aztnPWE7az1leHBvcnRzLnVuc3RhYmxlX25vdygpO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKGcpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPWd9dmFyIGM9ZyxmPWs7Zz1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e2c9YyxrPWYsdigpfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXt2YXIgYz0tMSE9PWs/azpleHBvcnRzLnVuc3RhYmxlX25vdygpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0KWI9YytiLnRpbWVvdXQ7ZWxzZSBzd2l0Y2goZyl7Y2FzZSAxOmI9YystMTticmVhaztjYXNlIDI6Yj1jKzI1MDticmVhaztjYXNlIDU6Yj1jKzEwNzM3NDE4MjM7YnJlYWs7Y2FzZSA0OmI9YysxRTQ7YnJlYWs7ZGVmYXVsdDpiPWMrNUUzfWE9e2NhbGxiYWNrOmEscHJpb3JpdHlMZXZlbDpnLGV4cGlyYXRpb25UaW1lOmIsbmV4dDpudWxsLHByZXZpb3VzOm51bGx9O2lmKG51bGw9PT1kKWQ9YS5uZXh0PWEucHJldmlvdXM9YSxwKCk7ZWxzZXtjPW51bGw7dmFyIGY9ZDtkb3tpZihmLmV4cGlyYXRpb25UaW1lPmIpe2M9ZjticmVha31mPWYubmV4dH13aGlsZShmIT09ZCk7bnVsbD09PWM/Yz1kOmM9PT1kJiYoZD1hLHAoKSk7XG5iPWMucHJldmlvdXM7Yi5uZXh0PWMucHJldmlvdXM9YTthLm5leHQ9YzthLnByZXZpb3VzPWJ9cmV0dXJuIGF9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9YS5uZXh0O2lmKG51bGwhPT1iKXtpZihiPT09YSlkPW51bGw7ZWxzZXthPT09ZCYmKGQ9Yik7dmFyIGM9YS5wcmV2aW91cztjLm5leHQ9YjtiLnByZXZpb3VzPWN9YS5uZXh0PWEucHJldmlvdXM9bnVsbH19O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPWc7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9ZyxmPWs7Zz1iO2s9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7Zz1jLGs9Zix2KCl9fX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBnfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hZSYmKG51bGwhPT1kJiZkLmV4cGlyYXRpb25UaW1lPGx8fHcoKSl9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtudWxsIT09ZCYmcCgpfTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIGR9O1xuIiwidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJib2R5IHsgXFxuICAgIGNvbG9yOiAjZDlkOWQ5O1xcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWYsIEdlb3JnaWEsIHNlcmlmO1xcbn1cXG5cXG51bCB7XFxuICAgIGJvcmRlcjogMXB4ICM0MDQwNDAgc29saWQ7XFxufVxcblxcbmxpICwgbGFiZWwsIHAge1xcbiAgICBmb250LXNpemU6IDExcHg7XFxufVxcblxcbmg0LCBoNSwgaDYge1xcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzMzMztcXG59XFxuXFxuaW5wdXQsIHRleHRhcmVhIHsgXFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG4gICAgYmFja2dyb3VuZDogIzJiMmIyYjtcXG4gICAgY29sb3I6ICNkOWQ5ZDk7XFxuICAgIG9wYWNpdHk6IDAuNzU7XFxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XFxufVxcblxcbmlucHV0W3R5cGU9XFxcInRleHRcXFwiXSB7XFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGFyZWE7XFxufVxcblxcbnVsIGxhYmVsIGlucHV0IHtcXG4gICAgd2lkdGg6IDEwcHg7XFxufVxcblxcbnVsLCBsaSB7XFxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xcbiAgICBtYXJnaW4tdG9wOiAwcHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcXG59XFxuXFxuYnV0dG9uIHtcXG4gICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcXG4gICAgYm9yZGVyLWNvbG9yOiByZ2JhKDAsMCwwLDAuOSk7XFxuICAgIGJvcmRlci13aWR0aDogMXB4O1xcbiAgICBwYWRkaW5nOiA3cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDNhNDA7XFxuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XFxufVxcblxcbmJ1dHRvbiBpe1xcbiAgICBwYWRkaW5nLXJpZ2h0OjRweDtcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQ6IHJnYig0MywgNDMsIDQzKTtcXG59XFxuXFxudWwsbGksIHVsIGxhYmVsIHtcXG4gICAgY29sb3I6IHJnYmEoMjU1LDI1NSwyNTUsMC41KTtcXG59XFxuXFxudWwgbGFiZWw6aG92ZXIsIGxpOmhvdmVyLCAuY29udGVudDpob3ZlcntcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQ6IHJnYig0MywgNDMsIDQzKTtcXG59XFxuXFxuI2luZGV4e1xcbiAgICBtYXJnaW46LTRweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiXG4vKipcbiAqIFdoZW4gc291cmNlIG1hcHMgYXJlIGVuYWJsZWQsIGBzdHlsZS1sb2FkZXJgIHVzZXMgYSBsaW5rIGVsZW1lbnQgd2l0aCBhIGRhdGEtdXJpIHRvXG4gKiBlbWJlZCB0aGUgY3NzIG9uIHRoZSBwYWdlLiBUaGlzIGJyZWFrcyBhbGwgcmVsYXRpdmUgdXJscyBiZWNhdXNlIG5vdyB0aGV5IGFyZSByZWxhdGl2ZSB0byBhXG4gKiBidW5kbGUgaW5zdGVhZCBvZiB0aGUgY3VycmVudCBwYWdlLlxuICpcbiAqIE9uZSBzb2x1dGlvbiBpcyB0byBvbmx5IHVzZSBmdWxsIHVybHMsIGJ1dCB0aGF0IG1heSBiZSBpbXBvc3NpYmxlLlxuICpcbiAqIEluc3RlYWQsIHRoaXMgZnVuY3Rpb24gXCJmaXhlc1wiIHRoZSByZWxhdGl2ZSB1cmxzIHRvIGJlIGFic29sdXRlIGFjY29yZGluZyB0byB0aGUgY3VycmVudCBwYWdlIGxvY2F0aW9uLlxuICpcbiAqIEEgcnVkaW1lbnRhcnkgdGVzdCBzdWl0ZSBpcyBsb2NhdGVkIGF0IGB0ZXN0L2ZpeFVybHMuanNgIGFuZCBjYW4gYmUgcnVuIHZpYSB0aGUgYG5wbSB0ZXN0YCBjb21tYW5kLlxuICpcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3MpIHtcbiAgLy8gZ2V0IGN1cnJlbnQgbG9jYXRpb25cbiAgdmFyIGxvY2F0aW9uID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYXRpb247XG5cbiAgaWYgKCFsb2NhdGlvbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcImZpeFVybHMgcmVxdWlyZXMgd2luZG93LmxvY2F0aW9uXCIpO1xuICB9XG5cblx0Ly8gYmxhbmsgb3IgbnVsbD9cblx0aWYgKCFjc3MgfHwgdHlwZW9mIGNzcyAhPT0gXCJzdHJpbmdcIikge1xuXHQgIHJldHVybiBjc3M7XG4gIH1cblxuICB2YXIgYmFzZVVybCA9IGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgbG9jYXRpb24uaG9zdDtcbiAgdmFyIGN1cnJlbnREaXIgPSBiYXNlVXJsICsgbG9jYXRpb24ucGF0aG5hbWUucmVwbGFjZSgvXFwvW15cXC9dKiQvLCBcIi9cIik7XG5cblx0Ly8gY29udmVydCBlYWNoIHVybCguLi4pXG5cdC8qXG5cdFRoaXMgcmVndWxhciBleHByZXNzaW9uIGlzIGp1c3QgYSB3YXkgdG8gcmVjdXJzaXZlbHkgbWF0Y2ggYnJhY2tldHMgd2l0aGluXG5cdGEgc3RyaW5nLlxuXG5cdCAvdXJsXFxzKlxcKCAgPSBNYXRjaCBvbiB0aGUgd29yZCBcInVybFwiIHdpdGggYW55IHdoaXRlc3BhY2UgYWZ0ZXIgaXQgYW5kIHRoZW4gYSBwYXJlbnNcblx0ICAgKCAgPSBTdGFydCBhIGNhcHR1cmluZyBncm91cFxuXHQgICAgICg/OiAgPSBTdGFydCBhIG5vbi1jYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAgICAgW14pKF0gID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICg/OiAgPSBTdGFydCBhbm90aGVyIG5vbi1jYXB0dXJpbmcgZ3JvdXBzXG5cdCAgICAgICAgICAgICAgICAgW14pKF0rICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIHwgID0gT1Jcblx0ICAgICAgICAgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgICAgICBbXikoXSogID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgXFwpICA9IE1hdGNoIGEgZW5kIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICApICA9IEVuZCBHcm91cFxuICAgICAgICAgICAgICAqXFwpID0gTWF0Y2ggYW55dGhpbmcgYW5kIHRoZW4gYSBjbG9zZSBwYXJlbnNcbiAgICAgICAgICApICA9IENsb3NlIG5vbi1jYXB0dXJpbmcgZ3JvdXBcbiAgICAgICAgICAqICA9IE1hdGNoIGFueXRoaW5nXG4gICAgICAgKSAgPSBDbG9zZSBjYXB0dXJpbmcgZ3JvdXBcblx0IFxcKSAgPSBNYXRjaCBhIGNsb3NlIHBhcmVuc1xuXG5cdCAvZ2kgID0gR2V0IGFsbCBtYXRjaGVzLCBub3QgdGhlIGZpcnN0LiAgQmUgY2FzZSBpbnNlbnNpdGl2ZS5cblx0ICovXG5cdHZhciBmaXhlZENzcyA9IGNzcy5yZXBsYWNlKC91cmxcXHMqXFwoKCg/OlteKShdfFxcKCg/OlteKShdK3xcXChbXikoXSpcXCkpKlxcKSkqKVxcKS9naSwgZnVuY3Rpb24oZnVsbE1hdGNoLCBvcmlnVXJsKSB7XG5cdFx0Ly8gc3RyaXAgcXVvdGVzIChpZiB0aGV5IGV4aXN0KVxuXHRcdHZhciB1bnF1b3RlZE9yaWdVcmwgPSBvcmlnVXJsXG5cdFx0XHQudHJpbSgpXG5cdFx0XHQucmVwbGFjZSgvXlwiKC4qKVwiJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KVxuXHRcdFx0LnJlcGxhY2UoL14nKC4qKSckLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pO1xuXG5cdFx0Ly8gYWxyZWFkeSBhIGZ1bGwgdXJsPyBubyBjaGFuZ2Vcblx0XHRpZiAoL14oI3xkYXRhOnxodHRwOlxcL1xcL3xodHRwczpcXC9cXC98ZmlsZTpcXC9cXC9cXC98XFxzKiQpL2kudGVzdCh1bnF1b3RlZE9yaWdVcmwpKSB7XG5cdFx0ICByZXR1cm4gZnVsbE1hdGNoO1xuXHRcdH1cblxuXHRcdC8vIGNvbnZlcnQgdGhlIHVybCB0byBhIGZ1bGwgdXJsXG5cdFx0dmFyIG5ld1VybDtcblxuXHRcdGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi8vXCIpID09PSAwKSB7XG5cdFx0ICBcdC8vVE9ETzogc2hvdWxkIHdlIGFkZCBwcm90b2NvbD9cblx0XHRcdG5ld1VybCA9IHVucXVvdGVkT3JpZ1VybDtcblx0XHR9IGVsc2UgaWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiL1wiKSA9PT0gMCkge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgdXJsXG5cdFx0XHRuZXdVcmwgPSBiYXNlVXJsICsgdW5xdW90ZWRPcmlnVXJsOyAvLyBhbHJlYWR5IHN0YXJ0cyB3aXRoICcvJ1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byBjdXJyZW50IGRpcmVjdG9yeVxuXHRcdFx0bmV3VXJsID0gY3VycmVudERpciArIHVucXVvdGVkT3JpZ1VybC5yZXBsYWNlKC9eXFwuXFwvLywgXCJcIik7IC8vIFN0cmlwIGxlYWRpbmcgJy4vJ1xuXHRcdH1cblxuXHRcdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgdXJsKC4uLilcblx0XHRyZXR1cm4gXCJ1cmwoXCIgKyBKU09OLnN0cmluZ2lmeShuZXdVcmwpICsgXCIpXCI7XG5cdH0pO1xuXG5cdC8vIHNlbmQgYmFjayB0aGUgZml4ZWQgY3NzXG5cdHJldHVybiBmaXhlZENzcztcbn07XG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuLy8gRGVwZW5kZW5jaWVzLlxuaW1wb3J0IFwiLi4vSW5kZXgvaW5kZXguY3NzXCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBDb21wb25lbnRzIGZyb20gXCIuLi9FbGVtZW50c1wiO1xuaW1wb3J0IFByZXZpZXcgZnJvbSBcIi4uL1ByZXZpZXdcIjtcbmltcG9ydCBEcmFnZ2FibGVDb21wb25lbnQgZnJvbSBcIi4uL0RyYWdnYWJsZUNvbXBvbmVudFwiO1xuaW1wb3J0IEVkaXRvciBmcm9tIFwiLi4vRWRpdG9yXCI7XG5pbXBvcnQgRXZlbnRzIGZyb20gXCIuLi9FdmVudHNcIjtcbmltcG9ydCBUYWdFeHBsb3JlciBmcm9tIFwiLi4vVGFnRXhwbG9yZXJcIjtcbmltcG9ydCBTdHlsZUV4cGxvcmVyIGZyb20gXCIuLi9TdHlsZUV4cGxvcmVyXCI7XG5cbi8vIFJlZHVjZXJzLlxuaW1wb3J0IHsgdXBkYXRlRXZlbnQsIHVwZGF0ZUNvbmZpZywgc2F2ZUVsZW1lbnQsIHVwZGF0ZXNlbGVjdGVkSW5kZXggfSBmcm9tIFwiLi4vRWxlbWVudHMvUmVkdWNlclwiO1xuXG4vLyBVdGlsc1xuaW1wb3J0IHsgZ2V0Tm9kZVRyZWUgfSBmcm9tIFwiLi4vdXRpbGl0aWVzL2dldC1ub2RlLXRyZWUuanNcIjtcbmltcG9ydCB7cmVhZERhdGF9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG5cbmNsYXNzIFRvb2wgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGVsZW1lbnRzOiByZWFkRGF0YShcInVpLWVkaXRvclwiKSB8fCBbXSxcbiAgICAgICAgICAgIGNvbXBvbmVudHM6IFtdLFxuICAgICAgICAgICAgc2VsZWN0ZWRJbmRleDogLTEsXG4gICAgICAgICAgICBlbGVtZW50OiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgICAgICAgICBtYXJrdXA6IFwiXCIsXG4gICAgICAgICAgICAgICAgc3R5bGU6IFwiXCIsXG4gICAgICAgICAgICAgICAgc3RhdGU6IFwieyB9XCIsXG4gICAgICAgICAgICAgICAgZXZlbnRzOiBbXVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMudXBkYXRlQ29uZmlnID0gdXBkYXRlQ29uZmlnLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudXBkYXRlRXZlbnQgPSB1cGRhdGVFdmVudC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnNhdmVFbGVtZW50ID0gc2F2ZUVsZW1lbnQuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy51cGRhdGVzZWxlY3RlZEluZGV4ID0gdXBkYXRlc2VsZWN0ZWRJbmRleC5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIHVwZGF0ZVByZXZpZXcoZWxlbWVudCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHByZXZpZXdDb21wb25lbnQ6IGVsZW1lbnRcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdXBkYXRlU3R5bGVzKCl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZWxlbWVudDogdGhpcy5zdGF0ZS5lbGVtZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIikgfHwgW107XG4gICAgICAgIGNvbnN0IHNlbGVjdGVkRWxlbWVudCA9IGNvbXBvbmVudHNbdGhpcy5zdGF0ZS5zZWxlY3RlZEluZGV4XSB8fCB0aGlzLnN0YXRlLmVsZW1lbnQ7XG4gICAgICAgIGxldCBub2RlVHJlZSA9IGdldE5vZGVUcmVlKHNlbGVjdGVkRWxlbWVudCwgc2VsZWN0ZWRFbGVtZW50Lm1hcmt1cCwgc2VsZWN0ZWRFbGVtZW50LnN0eWxlLCBKU09OLnBhcnNlKHNlbGVjdGVkRWxlbWVudC5zdGF0ZSksIHNlbGVjdGVkRWxlbWVudC5ldmVudHMpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPENvbXBvbmVudHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnRzPXt0aGlzLnN0YXRlLmVsZW1lbnRzfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25TZWxlY3Rpb249e3RoaXMudXBkYXRlc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkSW5kZXg9e3RoaXMuc3RhdGUuc2VsZWN0ZWRJbmRleH1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L0RyYWdnYWJsZUNvbXBvbmVudD5cblxuICAgICAgICAgICAgICAgIDxEcmFnZ2FibGVDb21wb25lbnQ+XG5cbiAgICAgICAgICAgICAgICAgICAgPEV2ZW50c1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXt0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50PXtzZWxlY3RlZEVsZW1lbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50cz17dGhpcy5zdGF0ZS5lbGVtZW50c31cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRXZlbnRzVXBkYXRlPXt0aGlzLnVwZGF0ZUV2ZW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgb25Db25maWdVcGRhdGU9e3RoaXMudXBkYXRlQ29uZmlnfVxuICAgICAgICAgICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG5cbiAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICA8RWRpdG9yXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50PXtzZWxlY3RlZEVsZW1lbnR9XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPXtzZWxlY3RlZEVsZW1lbnQubmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmt1cD17c2VsZWN0ZWRFbGVtZW50Lm1hcmt1cH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXtzZWxlY3RlZEVsZW1lbnQuc3R5bGV9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZT17c2VsZWN0ZWRFbGVtZW50LnN0YXRlfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25TYXZlPXt0aGlzLnNhdmVFbGVtZW50fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuXG4gICAgICAgICAgICAgICAgPERyYWdnYWJsZUNvbXBvbmVudD5cbiAgICAgICAgICAgICAgICAgICAgPFByZXZpZXcgY29tcG9uZW50PXtzZWxlY3RlZEVsZW1lbnR9IC8+XG4gICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG5cbiAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICA8VGFnRXhwbG9yZXIgbm9kZT17bm9kZVRyZWV9IC8+XG4gICAgICAgICAgICAgICAgPC9EcmFnZ2FibGVDb21wb25lbnQ+XG5cbiAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlQ29tcG9uZW50PlxuICAgICAgICAgICAgICAgICAgICA8U3R5bGVFeHBsb3JlciBcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDAwKX0gXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ9e3NlbGVjdGVkRWxlbWVudH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRWRpdD17dGhpcy51cGRhdGVTdHlsZXMuYmluZCh0aGlzKX0vPlxuICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlQ29tcG9uZW50PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRvb2w7IiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuLy8gU3R5bGVzLlxuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG4vLyBDb21wb25lbnRzLlxuXG5pbXBvcnQgRWxlbWVudCBmcm9tIFwiLi4vRWxlbWVudFwiO1xuXG4vLyBSZWR1Y2Vycy5cblxuaW1wb3J0IHtvbkRlbGV0ZX0gZnJvbSBcIi4vUmVkdWNlclwiXG5cbi8vIEV2ZW50cy5cblxuaW1wb3J0IHsgb25FeHBvcnR9IGZyb20gXCIuL0V2ZW50c1wiO1xuaW1wb3J0IHt3cml0ZURhdGF9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG5cblxuY2xhc3MgQ29tcG9uZW50cyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZWxlbWVudHM6IHRoaXMucHJvcHMuZWxlbWVudHMsXG4gICAgICAgICAgICBzZWxlY3RlZEluZGV4OjBcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLm9uRGVsZXRlID0gb25EZWxldGUuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBjcmVhdGVWYXJpYW50KGNvbXBvbmVudCl7XG5cbiAgICAgICAgLy8gMS4gVXBkYXRlIG1hcmt1cC5cbiAgICAgICAgbGV0IHZhcmlhbnQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGNvbXBvbmVudCkpO1xuICAgICAgICB2YXJpYW50Lm5hbWUgPSBcIlZhcmlhbnRcIit2YXJpYW50Lm5hbWVcbiAgICAgICAgdmFyaWFudC5tYXJrdXAgPSB2YXJpYW50Lm1hcmt1cC5yZXBsYWNlKC8+KC4qPyk8L2csICc+e3N0YXRlLnZhcmlhbnR9PCcpXG5cbiAgICAgICAgLy8gMi4gVXBkYXRlIHN0YXRlLlxuICAgICAgICBpZih0eXBlb2YgdmFyaWFudC5zdGF0ZSA9PT0gXCJzdHJpbmdcIil7XG4gICAgICAgICAgICB2YXJpYW50LnN0YXRlID0gSlNPTi5wYXJzZSh2YXJpYW50LnN0YXRlKVxuICAgICAgICAgICAgdmFyaWFudC5zdGF0ZS52YXJpYW50ID0gXCJ0ZXh0XCJcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKHR5cGVvZiB2YXJpYW50LnN0YXRlID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIHZhcmlhbnQuc3RhdGUudmFyaWFudCA9IFwidGV4dFwiXG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIHZhcmlhbnQuc3RhdGUgPSB7fVxuICAgICAgICB9XG4gICAgICAgIHZhcmlhbnQuc3RhdGUudmFyaWFudCA9IFwidGV4dFwiO1xuXG4gICAgICAgIHZhcmlhbnQuc3RhdGUgPSBKU09OLnN0cmluZ2lmeSh2YXJpYW50LnN0YXRlKTtcblxuICAgICAgICByZXR1cm4gdmFyaWFudDtcbiAgICB9XG5cbiAgICBnZW5lcmF0ZVZhcmlhbnQoaW5kZXgpe1xuICAgICAgICAvKipcbiAgICAgICAgICogMS4gVGFrZSB0aGUgY3VycmVudCBlbGVtZW50IHNlbGVjdGVkXG4gICAgICAgICAqIDIuIFJlbW92ZSBwbGFpbiB0ZXh0cyBhbmQgcmVwbGFjZSBpdCB3aXRoIHByb3BlcnR5XG4gICAgICAgICAqIDMuIENyZWF0ZSB0aGUgcHJvcGVydHkgaW4gdGhlIHN0YXRlLlxuICAgICAgICAgKi9cbiAgICAgICAgbGV0IGN1cnJlbnRDb21wb25lbnQgPSB0aGlzLnN0YXRlLmVsZW1lbnRzW2luZGV4XTtcbiAgICAgICAgbGV0IHZhcmlhbnQgPSB0aGlzLmNyZWF0ZVZhcmlhbnQoY3VycmVudENvbXBvbmVudCk7XG5cbiAgICAgICAgbGV0IGVsZW1lbnRzID0gdGhpcy5zdGF0ZS5lbGVtZW50cztcbiAgICAgICAgZWxlbWVudHMucHVzaCh2YXJpYW50KTtcblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGVsZW1lbnRzOmVsZW1lbnRzXG4gICAgICAgIH0pXG4gICAgICAgIHdyaXRlRGF0YShcInVpLWVkaXRvclwiLGVsZW1lbnRzKTtcbiAgICB9XG4gICAgXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGNvbnN0IGVsZW1lbnRMaXN0ID0gdGhpcy5wcm9wcy5lbGVtZW50cy5tYXAoKGVsZW1lbnQsIGluZGV4KSA9PiBcbiAgICAgICAgICAgIDxFbGVtZW50IFxuICAgICAgICAgICAgICAgIGtleSA9IHtpbmRleH0gXG4gICAgICAgICAgICAgICAgaW5kZXggPSB7aW5kZXh9XG4gICAgICAgICAgICAgICAgc2VsZWN0ZWRJbmRleCA9IHt0aGlzLnByb3BzLnNlbGVjdGVkSW5kZXh9XG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IHtlbGVtZW50fVxuICAgICAgICAgICAgICAgIG9uU2VsZWN0aW9uQ2hhbmdlID0ge3RoaXMucHJvcHMub25TZWxlY3Rpb259XG4gICAgICAgICAgICAgICAgb25FeHBvcnQgPSB7b25FeHBvcnQuYmluZCh0aGlzKX1cbiAgICAgICAgICAgICAgICBvbkRlbGV0ZSA9IHt0aGlzLm9uRGVsZXRlfVxuICAgICAgICAgICAgICAgIG9uR2VuZXJhdGVWYXJpYW50ID0ge3RoaXMuZ2VuZXJhdGVWYXJpYW50LmJpbmQodGhpcyl9Lz5cbiAgICAgICAgKTtcblxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZWxlbWVudHNcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBlbGVtZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgQ29tcG9uZW50c1xuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICAgICAge2VsZW1lbnRMaXN0fVxuICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnRzO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIub3ZlcnJpZGUge1xcbiAgICBsaW5lLWhlaWdodDogMCU7XFxufVxcblxcbnRleHRhcmVhIHtcXG4gICAgaGVpZ2h0OiA3MHB4O1xcbiAgICB3aWR0aDogNDUwcHg7XFxufVxcblxcbi5lbGVtZW50c3tcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbn1cXG5cXG4udGl0bGV7XFxuICAgIG1hcmdpbi10b3A6IDE1cHg7XFxuICAgIG1hcmdpbi1ib3R0b206IDExcHg7XFxuICAgIGNvbG9yOiByZ2JhKDI1NSwyNTUsMjU1LDAuNSk7XFxuICAgIGJhY2tncm91bmQ6IHJnYig2NCwgNjQsIDY0KTtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4uZWxlbWVudHMtdGFiIHtcXG4gICAgbGVmdDoxMHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQge3NlbGVjdGlvbkNoYW5nZWQsIGhhbmRsZURyYWd9IGZyb20gXCIuL0V2ZW50c1wiO1xuXG5pbXBvcnQgIFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgRWxlbWVudCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge307XG4gICAgfVxuXG4gICAgZ2VuZXJhdGVWYXJpYW50KCl7XG4gICAgICAgIHRoaXMucHJvcHMub25HZW5lcmF0ZVZhcmlhbnQodGhpcy5wcm9wcy5zZWxlY3RlZEluZGV4KVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICAvLyBSZW1vdmUgdGhpcy5wcm9wcy5pbmRleCwgaW5zdGVhZCB1c2UgdGhpcyBlbGVtZW50IGluc3RhbmNlIGluZGV4LiBSZW1vdmVzIGR1cGxpY2F0ZSBjb2RlXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhY2tncm91bmRcIiBkcmFnZ2FibGU9XCJ0cnVlXCIgaWQ9e3RoaXMucHJvcHMuZWxlbWVudC5uYW1lfSBvbkRyYWdTdGFydD17aGFuZGxlRHJhZy5iaW5kKHRoaXMpfT5cbiAgICAgICAgICAgICAgICA8bGkgXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZSA9IHt0aGlzLnByb3BzLmluZGV4PT09dGhpcy5wcm9wcy5zZWxlY3RlZEluZGV4ID8gXCJzZWxlY3RlZCBjb21wb25lbnRcIjogXCJjb21wb25lbnRcIn1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljayA9IHtzZWxlY3Rpb25DaGFuZ2VkLmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgICAgIGluZGV4ID0ge3RoaXMucHJvcHMuaW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJjb21wb25lbnROYW1lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5lbGVtZW50Lm5hbWV9XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0ge3RoaXMucHJvcHMuaW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5nZW5lcmF0ZVZhcmlhbnQuYmluZCh0aGlzKX0+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLWZpbGUtZXhwb3J0XCI+PC9pPkdlbmVyYXRlIFZhcmlhbnQ8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB7dGhpcy5wcm9wcy5pbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLnByb3BzLm9uRXhwb3J0fT48aSBjbGFzc05hbWU9XCJmYXMgZmEtZmlsZS1leHBvcnRcIj48L2k+RXhwb3J0PC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0ge3RoaXMucHJvcHMuaW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5wcm9wcy5vbkRlbGV0ZX0+PGkgY2xhc3NOYW1lPVwiZmEgZmEtdHJhc2hcIj48L2k+RGVsZXRlPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPC8gZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRWxlbWVudDtcbiIsImV4cG9ydCBmdW5jdGlvbiBzZWxlY3Rpb25DaGFuZ2VkKGUpIHtcbiAgICB0aGlzLnByb3BzLm9uU2VsZWN0aW9uQ2hhbmdlKGUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlRHJhZyhlKXtcbiAgICBlLmRhdGFUcmFuc2Zlci5zZXREYXRhKFwiY29tcG9uZW50LW5hbWVcIiwgZXZlbnQudGFyZ2V0LmdldEF0dHJpYnV0ZShcImlkXCIpKTtcbn0iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5zZWxlY3RlZCwgLmdyZWVuIHtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW47XFxuICAgIGJhY2tncm91bmQ6IHJnYig0MywgNDMsIDQzKTtcXG59XFxuXFxuLmJhY2tncm91bmQge1xcbiAgICBiYWNrZ3JvdW5kOiByZ2IoNjQsIDY0LCA2NCk7XFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMzMzMzMzO1xcbn1cXG5cXG4uY29tcG9uZW50IHtcXG4gICAgZGlzcGxheTpmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcblxcbi5jb21wb25lbnQgLmNvbXBvbmVudE5hbWV7XFxuICAgIHBhZGRpbmc6N3B4O1xcbn1cXG5cXG4udGh1bWJuYWlsIHtcXG4gICAgd2lkdGg6IDUwcHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsImltcG9ydCB7wqBnZXROZXN0ZWRDb21wb25lbnRzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9uZXN0ZWRDb21wb25lbnRTZXR1cFwiO1xuaW1wb3J0IHsgZ2V0Q29tcG9uZW50U3RyaW5nIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jb252ZXJ0LXRvLXJlYWN0LWNvbXBvbmVudFwiO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBvbkV4cG9ydCgpIHtcbiAgICBsZXQgbmVzdGVkQ29tcG9uZW50cyA9IGdldE5lc3RlZENvbXBvbmVudHModGhpcy5zdGF0ZS5lbGVtZW50c1t0aGlzLnN0YXRlLnNlbGVjdGVkSW5kZXhdKTtcblxuICAgIGNvbnNvbGUubG9nKG5lc3RlZENvbXBvbmVudHMubWFwKGdldENvbXBvbmVudFN0cmluZykuam9pbihcIlwiKSk7XG59IiwiZXhwb3J0IGZ1bmN0aW9uIGNvZGVNb2RpZmllcihyZWR1Y2VyLCBjb21wb25lbnQpIHtcbiAgICByZXR1cm4gYFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXRlID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICR7cmVkdWNlcn1cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoc3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNhdmVWYXJpYW50cygke3dpbmRvdy5zZWxlY3RlZGNvbXBvbmVudG5hbWV9LCR7Y29tcG9uZW50Lm5hbWV9LHN0YXRlLCBlKVxuYFxufSIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuXG5pbXBvcnQgRHluYW1pY0NvbXBvbmVudCBmcm9tIFwiLi4vRHluYW1pY0NvbXBvbmVudFwiO1xuXG5jbGFzcyBQcmV2aWV3IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIC8vIEhlbHBzIHRvIHJlcmVuZGVyIHdoZW4gY2hhbmdlcyB0byBtYXJrdXAvZXZlbnRzIGFyZSBtYWRlIHRvIHRoZSBjb21wb25lbnQgYW5kIHByZXZpZXcgdGhlbS5cbiAgICAgICAgbGV0IHJhbmRvbUtleSA9IHRoaXMucHJvcHMuY29tcG9uZW50LmlkKih+fihNYXRoLnJhbmRvbSgpKjEwKSk7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBwcmV2aWV3XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICBQcmV2aWV3XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPER5bmFtaWNDb21wb25lbnQga2V5PXtyYW5kb21LZXl9IGNvbXBvbmVudD17dGhpcy5wcm9wcy5jb21wb25lbnR9Lz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBQcmV2aWV3OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbnRhaW5lcntcXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAyNnB4IC04cHggYmxhY2s7XFxuICAgIGJhY2tncm91bmQ6ICMyQzMxMzQ7XFxufVxcblwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQge2NyZWF0ZVN0eWxlc2hlZXR9IGZyb20gXCIuLi91dGlsaXRpZXMvanN4VHJhbnNwaWxlci9jcmVhdGUtc3R5bGVzaGVldFwiO1xuXG5pbXBvcnQge8KgZ2V0TmVzdGVkQ29tcG9uZW50cywgc2F2ZUNvbXBvbmVudHNUb1dpbmRvdyB9IGZyb20gXCIuLi91dGlsaXRpZXMvbmVzdGVkQ29tcG9uZW50U2V0dXBcIjtcblxuXG5pbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuXG5jbGFzcyBEeW5hbWljQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG5cbiAgICAgICAgLy8gY2FuIHdlIHJlYWQgZnJvbSBsb2NhbHN0b3JhZ2UgaGVyZT8gb2tcbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSB0aGlzLnByb3BzLmNvbXBvbmVudDtcbiAgICAgICAgXG4gICAgICAgIGNyZWF0ZVN0eWxlc2hlZXQodGhpcy5jb21wb25lbnQuc3R5bGUpO1xuICAgIH1cblxuICAgIHByZXZlbnREZWZhdWx0KGUpe1xuICAgICAgICBsZXQgcHJldmlvdXNUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmRyb3B0YXJnZXQuZ3JlZW5cIik7XG4gICAgICAgIGlmKHByZXZpb3VzVGFyZ2V0WzBdKXtcbiAgICAgICAgICAgIHByZXZpb3VzVGFyZ2V0WzBdLmNsYXNzTGlzdC5yZW1vdmUoXCJkcm9wdGFyZ2V0XCIpXG4gICAgICAgICAgICBwcmV2aW91c1RhcmdldFswXS5jbGFzc0xpc3QucmVtb3ZlKFwiZ3JlZW5cIilcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoXCJkcm9wdGFyZ2V0XCIpO1xuICAgICAgICBlLnRhcmdldC5jbGFzc0xpc3QuYWRkKFwiZ3JlZW5cIik7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBvbkRyb3AoZSl7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgdmFyIGRhdGEgPSBlLmRhdGFUcmFuc2Zlci5nZXREYXRhKFwiY29tcG9uZW50LW5hbWVcIik7XG4gICAgfVxuXG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgaWYodGhpcy5jb21wb25lbnQubmFtZT09PVwiXCIpe1xuICAgICAgICAgICAgcmV0dXJuICg8ZGl2Pk5vdGhpbmcgY3JlYXRlZC48L2Rpdj4pXG4gICAgICAgIH1cbiAgICAgICAgbGV0IG5lc3RlZENvbXBvbmVudHMgPSBnZXROZXN0ZWRDb21wb25lbnRzKHRoaXMuY29tcG9uZW50KTtcbiAgICAgICAgaWYgKG5lc3RlZENvbXBvbmVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgc2F2ZUNvbXBvbmVudHNUb1dpbmRvdyhuZXN0ZWRDb21wb25lbnRzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKCF3aW5kb3dbdGhpcy5jb21wb25lbnQubmFtZV0pe1xuICAgICAgICAgICAgcmV0dXJuICg8ZGl2PkNvbXBvbmVudCBub3QgcmVuZGVyZWQ8L2Rpdj4pXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IG9uRHJvcD17dGhpcy5vbkRyb3AuYmluZCh0aGlzKX0gb25EcmFnT3Zlcj17dGhpcy5wcmV2ZW50RGVmYXVsdC5iaW5kKHRoaXMpfT5cbiAgICAgICAgICAgICAgICB7UmVhY3QuY3JlYXRlRWxlbWVudCh3aW5kb3dbdGhpcy5jb21wb25lbnQubmFtZV0pfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IER5bmFtaWNDb21wb25lbnQ7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuYm94IHtcXG4gICAgbWFyZ2luOiA1cHg7XFxuICAgIGJvcmRlcjoxcHggc29saWQgYmxhY2s7XFxuICAgIHBhZGRpbmc6NXB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuY2xhc3MgRHJhZ2dhYmxlQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKGB1aS1lZGl0b3Itc2V0dGluZ3MtZHJhZ2dhYmxlLWNvbXBvbmVudC0ke3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfWApKSB8fCB7XG4gICAgICAgICAgICBzdHlsZTogIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgICAgICAgICAgICAgIHRvcDogXCIzMHB4XCIsXG4gICAgICAgICAgICAgICAgbGVmdDogXCIyMDBweFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWluaW1pc2VkOiBmYWxzZVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3RhdGUuZHJhZ2dhYmxlPSBcImZhbHNlXCJcbiAgICB9XG5cbiAgICBtb3ZlRGl2KGUpe1xuICAgICAgICBpZihlLnRhcmdldC5pZD09PVwibW92ZVwiKXtcbiAgICAgICAgICAgIGxldCBzdGF0ZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZSkpO1xuICAgICAgICAgICAgc3RhdGUuc3R5bGUudG9wID0gZS5wYWdlWSArXCJweFwiXG4gICAgICAgICAgICBzdGF0ZS5zdHlsZS5sZWZ0ID0gZS5wYWdlWCArXCJweFwiXG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBzdHlsZSA6IHN0YXRlLnN0eWxlXG4gICAgICAgICAgICB9LCgpPT57XG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oYHVpLWVkaXRvci1zZXR0aW5ncy1kcmFnZ2FibGUtY29tcG9uZW50LSR7dGhpcy5wcm9wcy5jaGlsZHJlbi50eXBlLm5hbWV9YCxKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlKSk7XG4gICAgICAgICAgICB9KSAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHRvZ2dsZU1pbmltaXNlTWF4aW1pc2UoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG1pbmltaXNlZDogIXRoaXMuc3RhdGUubWluaW1pc2VkXG4gICAgICAgIH0sKCk9PntcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGB1aS1lZGl0b3Itc2V0dGluZ3MtZHJhZ2dhYmxlLWNvbXBvbmVudC0ke3RoaXMucHJvcHMuY2hpbGRyZW4udHlwZS5uYW1lfWAsSlNPTi5zdHJpbmdpZnkodGhpcy5zdGF0ZSkpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIG9uTW91c2VFbnRlcigpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBkcmFnZ2FibGU6XCJ0cnVlXCJcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBvbk1vdXNlTGVhdmUoKXtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBkcmFnZ2FibGU6XCJmYWxzZVwiXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBkcmFnZ2FibGU9e3RoaXMuc3RhdGUuZHJhZ2dhYmxlfSBpZD1cIm1vdmVcIiBvbkRyYWdFbmQ9e3RoaXMubW92ZURpdi5iaW5kKHRoaXMpfSBzdHlsZT17dGhpcy5zdGF0ZS5zdHlsZX0gPlxuICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwiTW92ZVwiIGNsYXNzTmFtZT1cIm1vdmUtaGFuZGxlXCIgb25Nb3VzZURvd249e3RoaXMub25Nb3VzZUVudGVyLmJpbmQodGhpcyl9IG9uTW91c2VVcD17dGhpcy5vbk1vdXNlTGVhdmUuYmluZCh0aGlzKX0+XG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWFycm93cy1hbHQgZmEteHNcIj48L2k+XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZS5taW5pbWlzZWQgPyAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPVwiTWluaW1pc2VcIiBjbGFzc05hbWU9XCJtYXhpbWlzZS1oYW5kbGVcIiBvbkNsaWNrPXt0aGlzLnRvZ2dsZU1pbmltaXNlTWF4aW1pc2UuYmluZCh0aGlzKX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYXMgZmEtd2luZG93LW1heGltaXplIGZhLXhzXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdGl0bGU9XCJNaW5pbWlzZVwiIGNsYXNzTmFtZT1cIm1pbmltaXNlLWhhbmRsZVwiIG9uQ2xpY2s9e3RoaXMudG9nZ2xlTWluaW1pc2VNYXhpbWlzZS5iaW5kKHRoaXMpfT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhcyBmYS13aW5kb3ctbWluaW1pemUgZmEteHNcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXRlLm1pbmltaXNlZCA/IFxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZWRpdG9yLXRhYlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj57dGhpcy5wcm9wcy5jaGlsZHJlbi50eXBlLm5hbWV9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuY2hpbGRyZW4gXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IERyYWdnYWJsZUNvbXBvbmVudDsiLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIiNtb3ZlID4gc3BhbnsgIFxcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gICAgY29sb3I6IGJsYWNrO1xcbn1cXG5cXG4jbW92ZSAubW92ZS1oYW5kbGV7XFxuICAgIGN1cnNvcjogbW92ZTtcXG59XFxuXFxuI21vdmUgLm1vdmUtaGFuZGxlLFxcbiNtb3ZlIC5taW5pbWlzZS1oYW5kbGUsXFxuI21vdmUgLm1heGltaXNlLWhhbmRsZSB7XFxuICAgIHBhZGRpbmctbGVmdDogMnB4O1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAycHg7XFxufVwiLCBcIlwiXSk7XG5cbiIsIlxuLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuaW1wb3J0IHt1cGRhdGVOYW1lLCB1cGRhdGVNYXJrdXAsIHVwZGF0ZVN0eWxlLCB1cGRhdGVTdGF0ZX0gZnJvbSBcIi4vUmVkdWNlclwiO1xuXG5pbXBvcnQge3JlYWRDb21wb25lbnR9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG5cbi8qKlxuICogU2hvd3MgQ29uZmlndXJhdG9yIG9uIHNlbGVjdCBvZiB2YWxpZCBjaGlsZCBjb21wb25lbnQgbmFtZSBpbiB0aGUgbWFya3VwIGFuZCBtb3VzZU91dCBmcm9tIG1hcmt1cFxuICogSGlkZXMgQ29uZmlndXJhdG9yIG9uIG1vdXNlTGVhdmUgZnJvbSB0aGUgZWRpdG9yLlxuICovXG5jbGFzcyBFZGl0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdmFyIGNvbXBvbmVudCA9IHJlYWRDb21wb25lbnQodGhpcy5wcm9wcy5uYW1lKTtcblxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgbmFtZTogY29tcG9uZW50PyBjb21wb25lbnQubmFtZSA6IFwiXCIsXG4gICAgICAgICAgICBtYXJrdXA6IGNvbXBvbmVudD8gY29tcG9uZW50Lm1hcmt1cCA6IFwiXCIsXG4gICAgICAgICAgICBzdGF0ZTogY29tcG9uZW50PyBjb21wb25lbnQuc3RhdGUgOiBcIlwiLFxuICAgICAgICAgICAgc3R5bGU6IGNvbXBvbmVudD8gY29tcG9uZW50LnN0eWxlIDogXCJcIlxuICAgICAgICB9O1xuXG4gICAgfVxuXG4gICAgcHVibGlzaEVsZW1lbnQgKCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uU2F2ZSh7XG4gICAgICAgICAgICBuYW1lOiB0aGlzLnN0YXRlLm5hbWUsXG4gICAgICAgICAgICBtYXJrdXA6IHRoaXMuc3RhdGUubWFya3VwLFxuICAgICAgICAgICAgc3R5bGU6IHRoaXMuc3RhdGUuc3R5bGUsXG4gICAgICAgICAgICBzdGF0ZTogdGhpcy5zdGF0ZS5zdGF0ZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IG5hbWU9IHRoaXMuc3RhdGUubmFtZTtcbiAgICAgICAgbGV0IG1hcmt1cD0gdGhpcy5zdGF0ZS5tYXJrdXA7XG4gICAgICAgIGxldCBzdHlsZT0gdGhpcy5zdGF0ZS5zdHlsZTtcbiAgICAgICAgbGV0IHN0YXRlPSB0aGlzLnN0YXRlLnN0YXRlO1xuICAgICAgICAvLyBUT0RPOiBTaG91bGQgcGFzcyB0aGUgY3VycmVudCBkYXRhLiBJbnN0ZWFkIG9mIGFjY2Vzc2luZyBpdCBmcm9tIGdsb2JhbFxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZWRpdG9yLXRhYlwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5FZGl0b3I8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5Db21wb25lbnQgTmFtZTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBwbGFjZWhvbGRlcj1cIkVudGVyIGVsZW1lbnQgbmFtZVwiIHZhbHVlPXtuYW1lfSBvbkNoYW5nZT17dXBkYXRlTmFtZS5iaW5kKHRoaXMpfSBpZD1cImVsZW1lbnROYW1lXCIvPlxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMucHVibGlzaEVsZW1lbnQuYmluZCh0aGlzKX0gaWQ9XCJzYXZlXCI+PGkgY2xhc3NOYW1lPVwiZmFzIGZhLXNhdmVcIj48L2k+U2F2ZTwvYnV0dG9uPiAgICBcbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IE1hcmt1cDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgdmFsdWU9e21hcmt1cH0gb25DaGFuZ2U9e3VwZGF0ZU1hcmt1cC5iaW5kKHRoaXMpfSBpZD1cImVsZW1lbnRNYXJrdXBcIiB0aXRsZT1cIklEIGlzIG1hbmRhdG9yeSBmb3IgZXZlbnRzXCIvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+Q29tcG9uZW50IENTUzwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgdmFsdWU9e3N0eWxlfSBvbkNoYW5nZT17dXBkYXRlU3R5bGUuYmluZCh0aGlzKX0gLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5Db21wb25lbnQgU3RhdGU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIHZhbHVlPXtzdGF0ZX0gb25DaGFuZ2U9e3VwZGF0ZVN0YXRlLmJpbmQodGhpcyl9IGlkPVwiZWxlbWVudFN0YXRlXCIvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEVkaXRvcjtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmhpZGRlbntcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gUHVibGljLlxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlTmFtZSAoZXZlbnQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgbmFtZTogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVNYXJrdXAgKGV2ZW50KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIG1hcmt1cDogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiAgdXBkYXRlU3R5bGUgKGV2ZW50KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN0eWxlOiBldmVudC5jdXJyZW50VGFyZ2V0LnZhbHVlXG4gICAgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVN0YXRlIChldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdGF0ZTogZXZlbnQuY3VycmVudFRhcmdldC52YWx1ZVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm9wZXJ0eUNvbnRhaW5pbmdQcm9wcyhvYmope1xuICAgIC8vIEZldGNoIGxpc3Qgb2YgcHJvcHMgZnJvbSBjaGlsZC5cbiAgICBsZXQgcHJvcHMgPSBbXTtcbiAgICBsZXQgc3RhdGU7XG4gICAgdHJ5e1xuICAgICAgICBzdGF0ZSA9IEpTT04ucGFyc2Uob2JqLnN0YXRlKTtcbiAgICB9XG4gICAgY2F0Y2goZSl7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvcjogQ2hpbGQgc3RhdGUgaXMgYW4gaW52YWxpZCBqc29uLCB0cnkgYW4gb25saW5lIHZhbGlkYXRvciBvbiBiZWxvdyBzdHJpbmdcIilcbiAgICAgICAgY29uc29sZS5sb2coY2hpbGQuc3RhdGUpO1xuICAgIH1cbiAgICBmb3IobGV0IHByb3BlcnR5IGluIHN0YXRlKXtcbiAgICAgICAgaWYoc3RhdGVbcHJvcGVydHldLmluY2x1ZGVzKFwicHJvcFwiKSl7XG4gICAgICAgICAgICBwcm9wcy5wdXNoKHByb3BlcnR5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcHJvcHM7XG59IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIERlcGVuZGVuY2llcy5cblxuXG4vLyBDb21wb25lbnRzLiBcblxuaW1wb3J0IENvbmZpZ3VyYXRvciBmcm9tIFwiLi4vQ29uZmlndXJhdG9yXCI7XG5pbXBvcnQgTm9kZXMgZnJvbSBcIi4uL05vZGVzXCI7XG5pbXBvcnQgRXZlbnQgZnJvbSBcIi4uL0V2ZW50XCI7XG5pbXBvcnQgZ2V0TWVzc2FnZXMgZnJvbSBcIi4vTWVzc2FnZXNcIjtcblxuLy8gU3R5bGVzLlxuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG4vLyBSZWR1Y2Vycy5cblxuaW1wb3J0IHsgdXBkYXRlRXZlbnQsIHNlbGVjdGVkVGFnQ2hhbmdlZCwgZGVsZXRlRXZlbnQsIHVwZGF0ZUNvbmZpZ3VyYXRpb24gfSBmcm9tIFwiLi9SZWR1Y2VyXCI7XG5cblxuLy8gVXRpbHMuXG5cbmltcG9ydCB7IGdldE5vZGVUcmVlIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9nZXQtbm9kZS10cmVlLmpzXCI7XG5pbXBvcnQgeyByZWFkRGF0YSB9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG5cbmNsYXNzIEV2ZW50cyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUuc2VsZWN0ZWRUYWcgPSBcIlwiO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMucHJvcHMuZWxlbWVudDtcblxuICAgICAgICAvLyBSZXBvcnQgaWYgbm8gY29tcG9uZW50IGlzIGNyZWF0ZWQuXG4gICAgICAgIGlmICh0aGlzLnN0YXRlLmVsZW1lbnRzLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIGV2ZW50cy10YWJcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlNldHRpbmdzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxwPkxvb2tzIGxpa2UgeW91IGRvIG5vdCBoYXZlIGFueSBXZWIgY29tcG9uZW50IGNyZWF0ZWQuIFR5cGUgc29tZSBcImh0bWxcIiBvbiB0aGUgcmlnaHQgXCJFZGl0b3JcIiB0YWI8L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gUmVwb3J0IGlmIG5vIGNvbXBvbmVudCBpcyBzZWxlY3RlZC5cbiAgICAgICAgaWYgKGVsZW1lbnQubmFtZSA9PT0gdW5kZWZpbmVkICYmIHRoaXMuc3RhdGUuZWxlbWVudHMubGVuZ3RoICE9IDApIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZXZlbnRzLXRhYlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+U2V0dGluZ3M8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPHA+TG9va3MgbGlrZSB5b3UgaGF2ZSBub3Qgc2VsZWN0ZWQgYW55IGNvbXBvbmVudC4gQ2xpY2sgb24gYW55IG9mIHRoZSBjb21wb25lbnQgaW4gdGhlIGxlZnQgcGFuZS48L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBsZXQgbm9kZVRyZWUgPSBnZXROb2RlVHJlZShlbGVtZW50LCBlbGVtZW50Lm1hcmt1cCwgZWxlbWVudC5zdHlsZSwgSlNPTi5wYXJzZShlbGVtZW50LnN0YXRlKSwgZWxlbWVudC5ldmVudHMpO1xuXG4gICAgICAgIC8vIFJlcG9ydCBlcnJvci5cbiAgICAgICAgaWYgKG5vZGVUcmVlLmVycm9yICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRNZXNzYWdlcyhub2RlVHJlZS5lcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZXBvcnQgZXJyb3IgaWYgY29tcG9uZW50IGlzIG5vdCBcbiAgICAgICAgaWYgKG5vZGVUcmVlLnJlc3VsdCA9PT0gdW5kZWZpbmVkICYmIHRoaXMuc3RhdGUuZWxlbWVudHMubGVuZ3RoICE9IDApIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgZXZlbnRzLXRhYlwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+U2V0dGluZ3M8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzZWxlY3RlZFRhZyA9IHRoaXMuc3RhdGUuc2VsZWN0ZWRUYWcgfHwgXCJcIjtcbiAgICAgICAgbGV0IGV2ZW50c09mU2VsZWN0ZWRUYWcsIGNvbmZpZ3VyYXRvcjtcbiAgICAgICAgLy8gQ2hlY2sgaWYgaXQgaXMgYSBjaGlsZCBjb21wb25lbnRcbiAgICAgICAgaWYgKHNlbGVjdGVkVGFnLmluY2x1ZGVzKFwiY2hpbGQtY29tcG9uZW50LVwiKSkge1xuICAgICAgICAgICAgLy8gR2V0IGxpc3Qgb2YgY29tcG9uZW50cy5cbiAgICAgICAgICAgIGxldCBjb21wb25lbnRzID0gcmVhZERhdGEoXCJ1aS1lZGl0b3JcIik7XG5cbiAgICAgICAgICAgIC8vIEdldCBjaGlsZCBjb21wb25lbnQgbmFtZSBmcm9tIHRoZSBzZWxlY3RlZCB0YWcuXG4gICAgICAgICAgICBsZXQgY2hpbGRDb21wb25lbnROYW1lID0gc2VsZWN0ZWRUYWcuc3BsaXQoXCJjaGlsZC1jb21wb25lbnQtXCIpWzFdO1xuXG4gICAgICAgICAgICAvLyBGaW5kIHRoZSBjaGlsZCBjb21wb25lbnQgZnJvbSB0aGUgbGlzdCBvZiBjb21wb25lbnRzLlxuICAgICAgICAgICAgbGV0IGNoaWxkQ29tcG9uZW50ID0gY29tcG9uZW50cy5maW5kKGNvbXBvbmVudCA9PiBjb21wb25lbnQubmFtZSA9PT0gY2hpbGRDb21wb25lbnROYW1lKTtcblxuICAgICAgICAgICAgLy8gRmluZCBldmVudHMgdGhhdCBhcmUgcHVibGlzaGFibGUgZnJvbSB0aGUgY2hpbGQgY29tcG9uZW50LlxuICAgICAgICAgICAgbGV0IGV2ZW50TmFtZXMgPSBjaGlsZENvbXBvbmVudC5ldmVudHMuZmlsdGVyKGV2ZW50ID0+IGV2ZW50LnB1Ymxpc2hhYmxlID09PSB0cnVlKS5tYXAocHVibGlzaGFibGVFdmVudCA9PiBwdWJsaXNoYWJsZUV2ZW50LnB1Ymxpc2hOYW1lKTtcblxuICAgICAgICAgICAgLy8gQ3JlYXRlIGV2ZW50IHZpZXcgZm9yIGxpc3Qgb2YgYWxsIGV2ZW50c1xuICAgICAgICAgICAgY29uc3QgZXZlbnRzID0gZWxlbWVudC5ldmVudHMubWFwKChldmVudCwgaW5kZXgpID0+IDxFdmVudCBrZXk9e2luZGV4fSBpbmRleD17aW5kZXh9IGV2ZW50PXtldmVudH0gc2VsZWN0ZWRUYWdJRD17c2VsZWN0ZWRUYWd9IGV2ZW50TmFtZXM9e2V2ZW50TmFtZXN9IG9uU2F2ZT17dXBkYXRlRXZlbnQuYmluZCh0aGlzKX0gZGVsZXRlRXZlbnQ9e2RlbGV0ZUV2ZW50LmJpbmQodGhpcyl9IC8+KTtcblxuICAgICAgICAgICAgLy8gRmlsdGVyIG91dCBldmVudHMgdGhhdCBhcmUgbm90IHBhcnQgb2Ygc2VsZWN0ZWRUYWdcbiAgICAgICAgICAgIGV2ZW50c09mU2VsZWN0ZWRUYWcgPSBzZWxlY3RlZFRhZyA/IGV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gc2VsZWN0ZWRUYWcuaW5jbHVkZXMoZXZlbnQucHJvcHMuZXZlbnQuaWQpKSA6IG51bGw7XG5cbiAgICAgICAgICAgIGNvbmZpZ3VyYXRvciA9IDxDb25maWd1cmF0b3Igb25DaGFuZ2U9e3VwZGF0ZUNvbmZpZ3VyYXRpb24uYmluZCh0aGlzKX0gY2hpbGROYW1lPXtjaGlsZENvbXBvbmVudE5hbWV9IHBhcmVudD17ZWxlbWVudH0gLz47XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBldmVudHMgPSBlbGVtZW50LmV2ZW50c1xuICAgICAgICAgICAgICAgIC5tYXAoKGV2ZW50LCBpbmRleCkgPT4gPEV2ZW50IGtleT17aW5kZXh9IGluZGV4PXtpbmRleH0gZXZlbnQ9e2V2ZW50fSBzZWxlY3RlZFRhZ0lEPXtzZWxlY3RlZFRhZ30gZXZlbnROYW1lcz17W119IG9uU2F2ZT17dXBkYXRlRXZlbnQuYmluZCh0aGlzKX0gZGVsZXRlRXZlbnQ9e2RlbGV0ZUV2ZW50LmJpbmQodGhpcyl9IC8+KTtcbiAgICAgICAgICAgIGV2ZW50c09mU2VsZWN0ZWRUYWcgPSBzZWxlY3RlZFRhZyA/IGV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gc2VsZWN0ZWRUYWcuaW5jbHVkZXMoZXZlbnQucHJvcHMuZXZlbnQuaWQpKSA6IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGl0bGVcIj5TZXR0aW5nczwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFnc1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPE5vZGVzIG5vZGU9e25vZGVUcmVlLnJlc3VsdH0gb25TZWxlY3RlZFRhZ0NoYW5nZWQ9e3NlbGVjdGVkVGFnQ2hhbmdlZC5iaW5kKHRoaXMpfSAvPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAge2NvbmZpZ3VyYXRvcn1cblxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBFdmVudHNcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeGlzdGluZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ZXZlbnRzT2ZTZWxlY3RlZFRhZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTmV3XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxFdmVudCBrZXk9e2VsZW1lbnQuZXZlbnRzLmxlbmd0aH0gZXZlbnROYW1lcz17W119IHNlbGVjdGVkVGFnSUQ9e3NlbGVjdGVkVGFnfSBvblNhdmU9e3VwZGF0ZUV2ZW50LmJpbmQodGhpcyl9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFdmVudHM7XG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIlxuXG5cbmNsYXNzIENvbmZpZ3VyYXRvciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuXG4gICAgICAgIGxldCBjb25maWcgPSBKU09OLnBhcnNlKHRoaXMucHJvcHMucGFyZW50LmNvbmZpZylbdGhpcy5wcm9wcy5jaGlsZE5hbWVdIHx8IHtvdmVyaWRlU3RhdGU6ZmFsc2V9O1xuICAgICAgICBcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG92ZXJyaWRlOiBjb25maWcub3ZlcmlkZVN0YXRlXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0b2dnZWxPdmVycmlkZSgpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG92ZXJyaWRlOiAhdGhpcy5zdGF0ZS5vdmVycmlkZVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2Uoe1xuICAgICAgICAgICAgb3ZlcnJpZGU6ICF0aGlzLnN0YXRlLm92ZXJyaWRlLFxuICAgICAgICAgICAgY2hpbGROYW1lOiB0aGlzLnByb3BzLmNoaWxkTmFtZSxcbiAgICAgICAgICAgIHBhcmVudE5hbWU6IHRoaXMucHJvcHMucGFyZW50Lm5hbWVcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHJldHVybiAoXG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwib3B0aW9uLWdyb3VwXCI+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwib3B0aW9uLWdyb3VwLWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRpdGxlXCI+Q2hpbGQgQ29uZmlndXJhdGlvbnM8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInBhbmVsIGV4cGFuZGVkXCI+PC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJvcHRpb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD5PdmVycmlkZSBjaGlsZCBzdGF0ZTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImNoZWNrYm94XCIgb25DaGFuZ2U9e3RoaXMudG9nZ2VsT3ZlcnJpZGUuYmluZCh0aGlzKX0gY2hlY2tlZD17dGhpcy5zdGF0ZS5vdmVycmlkZSA/IFwiY2hlY2tlZFwiIDogXCJcIn0gLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29uZmlndXJhdG9yO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29uc29sZXtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICByaWdodDogMTUwcHg7XFxufVxcblxcbi5lcnJvciB7XFxuICAgIGNvbG9yOiByZWQ7XFxufVxcblxcbi5ldmVudCB7IFxcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XFxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICMzMzMzMzM7XFxuICAgIGJhY2tncm91bmQ6IHJnYig2NCwgNjQsIDY0KTtcXG59XFxuXFxuLmluZm8ge1xcbiAgICBjb2xvcjogeWVsbG93Z3JlZW47XFxufVxcblxcbmxhYmVsIHtcXG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcXG59XFxuXFxuLmNvbmZpZ3VyYXRvciB7XFxuICAgIGJhY2tncm91bmQ6IHJnYig2NCwgNjQsIDY0KTtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuY2xhc3MgTm9kZXMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHZhciBub2RlID0gdGhpcy5wcm9wcy5ub2RlO1xuXG5cbiAgICAgICAgaWYoIW5vZGUpe1xuICAgICAgICAgICAgcmV0dXJuICg8c3Bhbj5udWxsPC9zcGFuPilcbiAgICAgICAgfVxuICAgICAgICBpZih0eXBlb2Ygbm9kZT09PVwic3RyaW5nXCIpe1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgPGxpPntub2RlfTwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpZCA9IG5vZGUucHJvcHMuaWQgPyAoXCItXCIrbm9kZS5wcm9wcy5pZCkgOiBcIlwiO1xuXG4gICAgICAgIC8vIENoZWNrIGlmIGl0IGNvbnRhaW5zIGNoaWxkcmVuLlxuICAgICAgICBpZihub2RlLnByb3BzICYmIEFycmF5LmlzQXJyYXkobm9kZS5wcm9wcy5jaGlsZHJlbikpe1xuICAgICAgICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5wcm9wcy5jaGlsZHJlbi5tYXAoKGNoaWxkLGluZGV4KT0+PE5vZGVzIGtleT17aW5kZXh9IG5vZGU9e2NoaWxkfSBvblNlbGVjdGVkVGFnQ2hhbmdlZD17dGhpcy5wcm9wcy5vblNlbGVjdGVkVGFnQ2hhbmdlZH0vPik7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJyYWRpb1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJzZWxlY3RlZEVsZW1lbnRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5wcm9wcy5vblNlbGVjdGVkVGFnQ2hhbmdlZH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e25vZGUudHlwZSArIGlkfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bm9kZS50eXBlICtpZH1cbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vIGlmIG5vZGUgY29udGFpbnMgb25seSBvbmUgY2hpbGRyZW4sIGpzeCBnZXQgdHJhbnNwaWxlZCB0byBvYmplY3QgcmF0aGVyIHRoYW4gYXJyYXkuXG4gICAgICAgIGVsc2UgaWYodHlwZW9mIG5vZGUucHJvcHMuY2hpbGRyZW4gPT09IFwib2JqZWN0XCIpe1xuICAgICAgICAgICAgbGV0IGNoaWxkID0gbm9kZS5wcm9wcy5jaGlsZHJlbjtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInNlbGVjdGVkRWxlbWVudFwiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnByb3BzLm9uU2VsZWN0ZWRUYWdDaGFuZ2VkfSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17bm9kZS50eXBlK2lkfS8+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bm9kZS50eXBlICtpZH1cbiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPE5vZGVzIGtleT17aW5kZXh9IG5vZGU9e2NoaWxkfSBvblNlbGVjdGVkVGFnQ2hhbmdlZD17dGhpcy5wcm9wcy5vblNlbGVjdGVkVGFnQ2hhbmdlZH0vPlxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vIG5lc3RlZCBjb21wb25lbnQuXG4gICAgICAgIGVsc2UgaWYodHlwZW9mIG5vZGUudHlwZSA9PT0gXCJmdW5jdGlvblwiKXtcbiAgICAgICAgICAgIHJldHVybiAoPHVsPlxuICAgICAgICAgICAgICAgIDxsYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInJhZGlvXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwic2VsZWN0ZWRFbGVtZW50XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17XCJjaGlsZC1jb21wb25lbnQtXCIrbm9kZS50eXBlLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5wcm9wcy5vblNlbGVjdGVkVGFnQ2hhbmdlZH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICB7bm9kZS50eXBlLm5hbWV9XG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgICAgPGxhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwicmFkaW9cIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU9XCJzZWxlY3RlZEVsZW1lbnRcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtub2RlLnR5cGUraWR9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5wcm9wcy5vblNlbGVjdGVkVGFnQ2hhbmdlZH0gXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICB7bm9kZS50eXBlICtpZH1cbiAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgTm9kZXM7IiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCJcblxuLy8gQ29tcG9uZW50cy5cblxuaW1wb3J0IGdldE1lc3NhZ2VzIGZyb20gXCIuL01lc3NhZ2VzXCI7XG5cbi8vIFJlZHVjZXJzLiBcblxuaW1wb3J0IHt1cGRhdGVFdmVudE5hbWUsIHVwZGF0ZUV2ZW50VHlwZSwgdXBkYXRlUHVibGlzaE5hbWUsIHVwZGF0ZVJlZHVjZXJ9IGZyb20gXCIuL1JlZHVjZXJcIjtcblxuLy8gRXZlbnRzLlxuXG5pbXBvcnQge3B1Ymxpc2hFdmVudCwgZGVsZXRlRXZlbnR9IGZyb20gJy4vRXZlbnRzJztcblxuY2xhc3MgRXZlbnQgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMucHJvcHMuZXZlbnQgPyB0aGlzLnByb3BzLmV2ZW50Lm5hbWUgOiBcIlwiLFxuICAgICAgICAgICAgcmVkdWNlcjogdGhpcy5wcm9wcy5ldmVudCA/IHRoaXMucHJvcHMuZXZlbnQucmVkdWNlciA6IFwiXCIsXG4gICAgICAgICAgICBwdWJsaXNoYWJsZTogdGhpcy5wcm9wcy5ldmVudCA/IHRoaXMucHJvcHMuZXZlbnQucHVibGlzaGFibGUgOiBcIlwiLFxuICAgICAgICAgICAgcHVibGlzaE5hbWU6IHRoaXMucHJvcHMuZXZlbnQgPyB0aGlzLnByb3BzLmV2ZW50LnB1Ymxpc2hOYW1lIDogXCJcIixcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBpZiAodGhpcy5wcm9wcy5zZWxlY3RlZFRhZ0lEID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRNZXNzYWdlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHB1Ymxpc2hOYW1lID0gdGhpcy5zdGF0ZS5wdWJsaXNoYWJsZT8gPGlucHV0IHR5cGU9XCJ0ZXh0XCIgb25DaGFuZ2U9e3VwZGF0ZVB1Ymxpc2hOYW1lLmJpbmQodGhpcyl9IHZhbHVlPXt0aGlzLnN0YXRlLnB1Ymxpc2hOYW1lfSBwbGFjZWhvbGRlcj1cIkVudGVyIGV2ZW50IHB1Ymxpc2ggbmFtZSBmb3Igb3RoZXIgY29tcG9uZW50cyB0byBzdWJzY3JpYmUgdG9cIi8+IDogbnVsbDtcbiAgICAgICAgbGV0IGV2ZW50TmFtZXMgPSB0aGlzLnByb3BzLmV2ZW50TmFtZXMubWFwKGV2ZW50TmFtZT0+PG9wdGlvbiB2YWx1ZT17ZXZlbnROYW1lfT48L29wdGlvbj4pXG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZXZlbnRcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXQgbGlzdD1cImJyb3dzZXJzXCIgdHlwZT1cInRleHRcIiBvbkNoYW5nZT17dXBkYXRlRXZlbnROYW1lLmJpbmQodGhpcyl9IHZhbHVlPXt0aGlzLnN0YXRlLm5hbWV9IHBsYWNlaG9sZGVyPVwiRW50ZXIgZXZlbnQgbmFtZVwiIHRpdGxlPVwiRXZlbnQgTmFtZVwiLz5cbiAgICAgICAgICAgICAgICA8ZGF0YWxpc3QgaWQ9XCJicm93c2Vyc1wiPlxuICAgICAgICAgICAgICAgICAgICB7ZXZlbnROYW1lc31cbiAgICAgICAgICAgICAgICA8L2RhdGFsaXN0PlxuICAgICAgICAgICAgICAgIDxici8+XG4gICAgICAgICAgICAgICAgPHRleHRhcmVhIG9uQ2hhbmdlPXt1cGRhdGVSZWR1Y2VyLmJpbmQodGhpcyl9IHZhbHVlPXt0aGlzLnN0YXRlLnJlZHVjZXJ9IHBsYWNlaG9sZGVyPVwiRW50ZXIgc3RhdGUgcmVkdWNlclwiIHRpdGxlPVwiUmVkdWNlclwiLz5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBvbkNoYW5nZT17dXBkYXRlRXZlbnRUeXBlLmJpbmQodGhpcyl9IGNoZWNrZWQ9e3RoaXMuc3RhdGUucHVibGlzaGFibGU/IFwiY2hlY2tlZFwiOiBcIlwifS8+XG4gICAgICAgICAgICAgICAgICAgIFB1Ymxpc2hhYmxlXG4gICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIHtwdWJsaXNoTmFtZX1cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtwdWJsaXNoRXZlbnQuYmluZCh0aGlzKX0gaWQ9XCJzYXZlRXZlbnRcIj48aSBjbGFzc05hbWU9XCJmYXMgZmEtc2F2ZVwiPjwvaT5TYXZlPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17ZGVsZXRlRXZlbnQuYmluZCh0aGlzKX0gaWQ9XCJkZWxldGVFdmVudFwiPjxpIGNsYXNzTmFtZT1cImZhcyBmYS10cmFzaFwiPjwvaT5EZWxldGU8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRXZlbnQ7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb25zb2xle1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHJpZ2h0OiAxNTBweDtcXG59XFxuXFxuLmVycm9yIHtcXG4gICAgY29sb3I6IHJlZDtcXG59XFxuXFxuLmV2ZW50IHsgXFxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgIzMzMzMzMztcXG4gICAgYmFja2dyb3VuZDogcmdiKDY0LCA2NCwgNjQpO1xcbn1cXG5cXG4uaW5mbyB7XFxuICAgIGNvbG9yOiB5ZWxsb3dncmVlbjtcXG59XFxuXFxubGFiZWwge1xcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xcbn1cXG5cXG4uZXZlbnQgaW5wdXQge1xcbiAgICBtYXJnaW4tbGVmdDowcHg7XFxufVxcblxcbi5ldmVudCB0ZXh0YXJlYSB7XFxuICAgIG1hcmdpbi10b3A6IDhweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiaW1wb3J0IE1lc3NhZ2VzQ29tcG9uZW50IGZyb20gXCIuLi9NZXNzYWdlc0NvbXBvbmVudFwiO1xuXG5mdW5jdGlvbiBnZXRNZXNzYWdlcyAoKSB7XG4gICAgbGV0IG1lc3NhZ2VzID0gW3tcbiAgICAgICAgdHlwZTogXCJpbmZvXCIsXG4gICAgICAgIHRleHQ6IFwiIzEgSU5GTzogU2VsZWN0IGFueSBlbGVtZW50IGluIHRoZSBsZWZ0IG1vc3QgcGFuZShlZGl0b3IgcGFuZSkgdG8gc2VlIGl0cyBjb250ZW50XCJcbiAgICB9LHtcbiAgICAgICAgdHlwZTogXCJpbmZvXCIsXG4gICAgICAgIHRleHQ6IFwiIzIgSU5GTzogQ2xpY2sgb24gJ0FkZCcgdG8gYWRkIGFuIGNvbXBvbmVudFwiXG4gICAgfV1cblxuICAgIHJldHVybiA8TWVzc2FnZXNDb21wb25lbnQgbWVzc2FnZXM9e21lc3NhZ2VzfSAvPjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0TWVzc2FnZXM7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29uc29sZXtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICByaWdodDogMTUwcHg7XFxuICAgIGJvdHRvbTogNTBweDtcXG59XFxuXFxuLmVycm9yIHtcXG4gICAgY29sb3I6IHJlZDtcXG59XFxuXFxuXFxuLmluZm8ge1xcbiAgICBjb2xvcjogeWVsbG93Z3JlZW47XFxufVwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuXG5jbGFzcyBNZXNzYWdlQ29tcG9uZW50IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIGxldCAgbWVzc2FnZSA9IHRoaXMucHJvcHMubWVzc2FnZTtcblxuICAgICAgICBpZihtZXNzYWdlLnR5cGUgPT09IFwiZXJyb3JcIiB8fCBtZXNzYWdlLnR5cGU9PT0gXCJpbmZvXCIpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e21lc3NhZ2UudHlwZX0+XG4gICAgICAgICAgICAgICAgICAgIDxjb2RlPnttZXNzYWdlLnRleHR9PC9jb2RlPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIGVsc2V7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UudHlwZSArIFwiIGlzIHVuaWRlbnRpZmllZCBtZXNzYWdlIHR5cGUgZm9yIDxNZXNzYWdlc0NvbXBvbmVudC8+LiBQbGVhc2UgdXNlIGVpdGhlciAnZXJyb3InIG9yICdpbmZvJyBvbmx5LiBJZiB5b3UgcmVxdWlyZSBhIGRpZmZlcmVudCB0eXBlLCByYWlzZSBhbiBpc3N1ZSwgc2VuZCBhIFBSXCIpXG4gICAgICAgICAgICByZXR1cm4gIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnNvbGVcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlZXJyb3JcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxjb2RlPntcImVycm9yIDogdW5pZGVudGlmaWVkIG1lc3NhZ2UgdHlwZS4gUGxlYXNlIHVzZSBlaXRoZXIgZXJyb3IvIGluZm8gb25seVwifTwvY29kZT5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgTWVzc2FnZUNvbXBvbmVudDsiLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlxcbi5lcnJvciB7XFxuICAgIGNvbG9yOiByZWQ7XFxufVxcblxcblxcbi5pbmZvIHtcXG4gICAgY29sb3I6IHllbGxvd2dyZWVuO1xcbn1cIiwgXCJcIl0pO1xuXG4iLCJcbiAgZnVuY3Rpb24gIHVwZGF0ZUV2ZW50TmFtZShlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgbmFtZTogZS50YXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgZnVuY3Rpb24gIHVwZGF0ZVJlZHVjZXIoZSkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHJlZHVjZXI6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gZnVuY3Rpb24gICB1cGRhdGVQdWJsaXNoTmFtZShlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcHVibGlzaE5hbWU6IGUudGFyZ2V0LnZhbHVlXG4gICAgICAgIH0pXG4gICAgfVxuXG4gIGZ1bmN0aW9uICB1cGRhdGVFdmVudFR5cGUoZSl7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcHVibGlzaGFibGU6IGUuY3VycmVudFRhcmdldC5jaGVja2VkXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgICAgIHVwZGF0ZUV2ZW50TmFtZSxcbiAgICAgICAgdXBkYXRlRXZlbnRUeXBlLFxuICAgICAgICB1cGRhdGVQdWJsaXNoTmFtZSxcbiAgICAgICAgdXBkYXRlRXZlbnRUeXBlLFxuICAgICAgICB1cGRhdGVSZWR1Y2VyXG4gICAgfSIsImV4cG9ydCBmdW5jdGlvbiBwdWJsaXNoRXZlbnQoKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25TYXZlKHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMuc3RhdGUubmFtZSxcbiAgICAgICAgICAgIHJlZHVjZXI6IHRoaXMuc3RhdGUucmVkdWNlcixcbiAgICAgICAgICAgIGluZGV4OiB0aGlzLnByb3BzLmluZGV4LFxuICAgICAgICAgICAgcHVibGlzaGFibGU6IHRoaXMuc3RhdGUucHVibGlzaGFibGUsXG4gICAgICAgICAgICBwdWJsaXNoTmFtZTogdGhpcy5zdGF0ZS5wdWJsaXNoTmFtZVxuICAgICAgICB9KVxuICAgIH1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUV2ZW50KCl7XG4gICAgICAgIHRoaXMucHJvcHMuZGVsZXRlRXZlbnQodGhpcy5wcm9wcy5pbmRleCk7XG4gICAgfSIsImltcG9ydCBNZXNzYWdlc0NvbXBvbmVudCBmcm9tIFwiLi4vTWVzc2FnZXNDb21wb25lbnRcIjtcblxuZnVuY3Rpb24gZ2V0TWVzc2FnZXMgKGVycm9yKSB7XG5cbiAgICBsZXQgbWVzc2FnZXMgPSBbe1xuICAgICAgICB0eXBlOlwiZXJyb3JcIixcbiAgICAgICAgdGV4dDpcIkVSUk9SIDogXCIrZXJyb3IrXCJkZXZlbG9wZXIgbG9nOiBsb29rIGluIGNvbnNvbGUgcmVsYXRlZCB0byBldmFsXCJcbiAgICB9XVxuICAgIHJldHVybiAoXG4gICAgICAgIDxNZXNzYWdlc0NvbXBvbmVudCBtZXNzYWdlcyA9IHttZXNzYWdlc30vPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0TWVzc2FnZXM7IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZXZlbnRzIHtcXG4gICAgYm9yZGVyOjFweCBzb2xpZCBibGFjaztcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4uZXJyb3Ige1xcbiAgICBjb2xvcjogcmVkO1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHJpZ2h0OiAxNTBweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZUV2ZW50KGV2ZW50KSB7XG4gICAgICAgIGxldCBlbGVtZW50ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmVsZW1lbnQpKVxuICAgICAgICBldmVudC5pZCA9IHRoaXMuc3RhdGUuc2VsZWN0ZWRUYWcuc3BsaXQoXCItXCIpWzFdO1xuICAgICAgICAvLyBBZGQgXG4gICAgICAgIGlmIChldmVudC5pbmRleCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBlbGVtZW50LmV2ZW50cy5wdXNoKGV2ZW50KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEVkaXRcbiAgICAgICAgICAgIGVsZW1lbnQuZXZlbnRzW2V2ZW50LmluZGV4XSA9IGV2ZW50O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5wcm9wcy5vbkV2ZW50c1VwZGF0ZShlbGVtZW50LmV2ZW50cyk7XG4gICAgfVxuXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHNlbGVjdGVkVGFnQ2hhbmdlZChlKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2VsZWN0ZWRUYWc6IGUuY3VycmVudFRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGV4cG9ydCBmdW5jdGlvbiBkZWxldGVFdmVudChpbmRleCkge1xuXG4gICAgICAgIC8vIEdldCBjdXJyZW50IGNvbXBvbmVudC5cbiAgICAgICAgbGV0IGVsZW1lbnQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3RhdGUuZWxlbWVudCkpO1xuXG4gICAgICAgIC8vIFJlbW92ZSB0aGUgZXZlbnQgdG8gYmUgZGVsZXRlZC5cbiAgICAgICAgZWxlbWVudC5ldmVudHMuc3BsaWNlKGluZGV4LCAxKTtcblxuICAgICAgICAvLyBVcGRhdGUgZWxlbWVudHMgd2l0aCBuZXcgZXZlbnRzLlxuICAgICAgICB0aGlzLnByb3BzLm9uRXZlbnRzVXBkYXRlKGVsZW1lbnQuZXZlbnRzKTtcbiAgICB9XG5cbiAgICBleHBvcnQgZnVuY3Rpb24gdXBkYXRlQ29uZmlndXJhdGlvbihjb25maWcpe1xuICAgICAgICB0aGlzLnByb3BzLm9uQ29uZmlnVXBkYXRlKGNvbmZpZyk7XG4gICAgfSIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBDb21wb25lbnRzLiBcblxuLy8gcHJpdmF0ZSAtIGV4cGFuZC9jb2xsYXBzZSBcbi8vIHB1YmxpYyAgLSBvbkNsaWNrIC0gU2hvdyBsaXN0IG9mIGNsYXNzZXMuIFxuaW1wb3J0IFRhZ3MgZnJvbSBcIi4vVGFnc1wiO1xuXG4vLyBTdHlsZXMuXG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmNsYXNzIFRhZ0V4cGxvcmVyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByb3BzKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgbGV0IG5vZGVUcmVlID0gdGhpcy5wcm9wcy5ub2RlLnJlc3VsdDtcblxuICAgICAgICBpZihub2RlVHJlZT09PXVuZGVmaW5lZCB8fCB0aGlzLnByb3BzLm5vZGUuZXJyb3IhPT11bmRlZmluZWQpe1xuICAgICAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgICAgIDxkaXY+PC9kaXY+XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNvbnRhaW5lciBldmVudHMtdGFiXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlRhZ0V4cGxvcmVyPC9kaXY+XG4gICAgICAgICAgICAgICAgPHVsIGNsYXNzTmFtZT1cInRhZ3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRhZ3Mgbm9kZT17bm9kZVRyZWV9Lz5cbiAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUYWdFeHBsb3JlcjtcbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXN9IGZyb20gXCIuLi91dGlsaXRpZXMvY29udmVydEpTT050b0hUTUxBdHRyaWJ1dGVzXCI7XG5jbGFzcyBUYWdzIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICB2YXIgbm9kZSA9IHRoaXMucHJvcHMubm9kZTtcbiAgICAgICAgdmFyIHByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgbm9kZS5wcm9wcyk7IFxuICAgICAgICBcbiAgICAgICAgZGVsZXRlIHByb3BzLmNoaWxkcmVuXG5cbiAgICAgICAgcHJvcHMgPSBjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMocHJvcHMpO1xuXG4gICAgICAgIGlmKCFub2RlKXtcbiAgICAgICAgICAgIHJldHVybiAoPHNwYW4+bnVsbDwvc3Bhbj4pXG4gICAgICAgIH1cblxuICAgICAgICAvLyBDaGVjayBpZiBpdCBjb250YWlucyBjaGlsZHJlbi5cbiAgICAgICAgaWYobm9kZS5wcm9wcyAmJiBBcnJheS5pc0FycmF5KG5vZGUucHJvcHMuY2hpbGRyZW4pKXtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUucHJvcHMuY2hpbGRyZW4ubWFwKChjaGlsZCxpbmRleCk9PjxUYWdzIGtleT17aW5kZXh9IG5vZGU9e2NoaWxkfS8+KTtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZX0gJHtwcm9wc30+YH1cbiAgICAgICAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICAgICAgICB7YDwvJHtub2RlLnR5cGV9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgbm9kZSBjb250YWlucyBvbmx5IG9uZSBjaGlsZHJlbiwganN4IGdldCB0cmFuc3BpbGVkIHRvIG9iamVjdCByYXRoZXIgdGhhbiBhcnJheS5cbiAgICAgICAgZWxzZSBpZih0eXBlb2Ygbm9kZS5wcm9wcy5jaGlsZHJlbiA9PT0gXCJvYmplY3RcIil7XG4gICAgICAgICAgICBsZXQgY2hpbGQgPSBub2RlLnByb3BzLmNoaWxkcmVuO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgICAgIHtgPCR7bm9kZS50eXBlfSAke3Byb3BzfT5gfVxuICAgICAgICAgICAgICAgICAgICAgICAgPFRhZ3Mga2V5PXtpbmRleH0gbm9kZT17Y2hpbGR9Lz5cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9ICAgICAgICAvLyBpZiBub2RlIGNvbnRhaW5zIG9ubHkgb25lIGNoaWxkcmVuLCBqc3ggZ2V0IHRyYW5zcGlsZWQgdG8gb2JqZWN0IHJhdGhlciB0aGFuIGFycmF5LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnByb3BzLmNoaWxkcmVuID09PSBcInN0cmluZ1wiKXtcbiAgICAgICAgICAgIGxldCBjaGlsZCA9IG5vZGUucHJvcHMuY2hpbGRyZW47XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PiR7Y2hpbGR9PC8ke25vZGUudHlwZX0+YH1cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBuZXN0ZWQgY29tcG9uZW50LlxuICAgICAgICBlbHNlIGlmKHR5cGVvZiBub2RlLnR5cGUgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGUubmFtZX0+YH1cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlLm5hbWV9PmB9XG4gICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBjaGVjayBpZiBub2RlIGlzIG9iamVjdFxuICAgICAgICBpZih0eXBlb2Ygbm9kZS50eXBlID09PSBcIm9iamVjdFwiKXtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICB7YDwke25vZGUudHlwZS5pZH0+YH1cbiAgICAgICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlLmlkfT5gfVxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAge2A8JHtub2RlLnR5cGV9ICR7cHJvcHN9PmB9XG4gICAgICAgICAgICAgICAgICAgIHtub2RlLnR5cGV9XG4gICAgICAgICAgICAgICAge2A8LyR7bm9kZS50eXBlfT5gfVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFnczsiLCJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SlNPTnRvSFRNTEF0dHJpYnV0ZXMocHJvcHMpIHtcbiAgICBsZXQgc3RyaW5nID0gSlNPTi5zdHJpbmdpZnkocHJvcHMpO1xuICAgIE9iamVjdC5rZXlzKHByb3BzKS5mb3JFYWNoKHByb3A9PnByb3BzW3Byb3BdPWAnJHtwcm9wc1twcm9wXX0nYCk7XG4gICAgLy8gRG9udCBjb25zaWRlciB0aGUgZW1wdHkgb2JqZWN0cy5cbiAgICBpZihzdHJpbmcubGVuZ3RoPjIpe1xuICAgICAgICBsZXQgbGlzdCA9IEpTT04uc3RyaW5naWZ5KHByb3BzKS5zcGxpdCgnXCInKS5tYXAoaXRlbT0+IHtcbiAgICAgICAgICAgIGlmKGl0ZW0uaW5jbHVkZXMoXCJ7XCIpIHx8IGl0ZW0uaW5jbHVkZXMoXCJ9XCIpKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoaXRlbT09PVwiOlwiKXtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCI9XCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmKGl0ZW09PT1cIixcIil7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwiIFwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgfSkuZmlsdGVyKEJvb2xlYW4pXG5cbiAgICAgICAgcmV0dXJuIGxpc3Quam9pbihcIlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG59IiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGFncyB7XFxuICAgIGZvbnQtc2l6ZTogMTFweDtcXG59XFxuXFxuLnRhZ3MgbGkge1xcbiAgICBwYWRkaW5nLWxlZnQ6MTBweDtcXG59XCIsIFwiXCJdKTtcblxuIiwiLy8gTGlicmFyaWVzLlxuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIENvbXBvbmVudHMuXG5cbmltcG9ydCBSdWxlIGZyb20gXCIuL1J1bGVcIjtcblxuaW1wb3J0IHtnZXRPYmplY3RGb3JtYXQsIGNvbnZlcnRUb1N0eWxlU3RyaW5nfSBmcm9tIFwiLi91dGlsXCI7XG5pbXBvcnQge3JlYWRDb21wb25lbnQsIHdyaXRlRGF0YSwgcmVhZERhdGF9IGZyb20gXCIuLi91dGlsaXRpZXMvbG9jYWxTdG9yYWdlXCI7XG4vLyBTdHlsZXMuXG5cbmltcG9ydCBcIi4vU3R5bGUuY3NzXCI7XG5cbmNsYXNzIFN0eWxlRXhwbG9yZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuXG4gICAgICAgIHZhciBjb21wb25lbnQgPSByZWFkQ29tcG9uZW50KHRoaXMuc3RhdGUuY29tcG9uZW50Lm5hbWUpO1xuICAgICAgICB0aGlzLnN0YXRlLnJ1bGVzID0gZ2V0T2JqZWN0Rm9ybWF0KGNvbXBvbmVudD8gY29tcG9uZW50LnN0eWxlIDogXCJcIik7XG4gICAgfVxuXG4gICAgYWRkUnVsZSgpe1xuICAgICAgICBsZXQgbmV3UnVsZXMgPSBBcnJheS5mcm9tKHRoaXMuc3RhdGUucnVsZXMpO1xuICAgICAgICBuZXdSdWxlcy51bnNoaWZ0KHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcIm5ld0NsYXNzXCIsXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6W3tcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eTogXCJuZXdQcm9wZXJ0eVwiLFxuICAgICAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgICAgICB9XVxuICAgICAgICB9KVxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHJ1bGVzOiBuZXdSdWxlc1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIHJ1bGVVcGRhdGUocnVsZSwgaW5kZXgpIHtcblxuICAgICAgICAvLyBEZWxldGUgaWYgc2VsZWN0b3IgaXMgZW1wdHlcbiAgICAgICAgaWYoIXJ1bGUuc2VsZWN0b3Ipe1xuICAgICAgICAgICAgcnVsZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBydWxlcyA9IHRoaXMuc3RhdGUucnVsZXM7XG4gICAgICAgIHJ1bGVzW2luZGV4XSA9IHJ1bGU7XG5cbiAgICAgICAgdmFyIGNvbXBvbmVudHMgPSByZWFkRGF0YShcInVpLWVkaXRvclwiKTtcbiAgICAgICAgdmFyIGNvbXBvbmVudCA9IHJlYWRDb21wb25lbnQodGhpcy5zdGF0ZS5jb21wb25lbnQubmFtZSk7XG5cbiAgICAgICAgLy8gY29udmVydCBydWxlcyB0byBhIHN0eWxlIHN0cmluZy5cbiAgICAgICAgY29tcG9uZW50LnN0eWxlID0gY29udmVydFRvU3R5bGVTdHJpbmcocnVsZXMuZmlsdGVyKEJvb2xlYW4pKTtcbiAgICAgICAgXG4gICAgICAgIHdyaXRlRGF0YShcInVpLWVkaXRvclwiLGNvbXBvbmVudHMpO1xuICAgICAgICB0aGlzLnByb3BzLm9uRWRpdCgpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcblxuICAgICAgICBsZXQgcnVsZXMgPSB0aGlzLnN0YXRlLnJ1bGVzLm1hcCgocnVsZSxpbmRleCk9PjxSdWxlIGtleT17TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDAwKX0gaW5kZXg9e2luZGV4fSBydWxlPXtydWxlfSBvblVwZGF0ZT17dGhpcy5ydWxlVXBkYXRlLmJpbmQodGhpcyl9IC8+KTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aXRsZVwiPlN0eWxlRXhwbG9yZXIgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17dGhpcy5hZGRSdWxlLmJpbmQodGhpcyl9Pis8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7cnVsZXN9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFN0eWxlRXhwbG9yZXI7XG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuaW1wb3J0IFNlbGVjdG9yIGZyb20gXCIuL1NlbGVjdG9yXCI7XG5pbXBvcnQgRGVjbGFyYXRpb24gZnJvbSBcIi4vRGVjbGFyYXRpb25cIjtcblxuY2xhc3MgUnVsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcy5ydWxlKTtcbiAgICB9XG5cbiAgICB1cGRhdGVTZWxlY3RvcihzZWxlY3Rvcil7XG4gICAgICAgIHRoaXMucHJvcHMub25VcGRhdGUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IHNlbGVjdG9yLFxuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiB0aGlzLnN0YXRlLmRlY2xhcmF0aW9uc1xuICAgICAgICB9LCB0aGlzLnByb3BzLmluZGV4KVxuICAgIH1cblxuICAgIHVwZGF0ZURlY2xhcmF0aW9ucyhkZWNsYXJhdGlvbnMpe1xuXG4gICAgICAgIHRoaXMucHJvcHMub25VcGRhdGUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IHRoaXMuc3RhdGUuc2VsZWN0b3IsXG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IGRlY2xhcmF0aW9uc1xuICAgICAgICB9LHRoaXMucHJvcHMuaW5kZXgpXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJydWxlcyBjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICA8U2VsZWN0b3IgXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9e3RoaXMuc3RhdGUuc2VsZWN0b3J9XG4gICAgICAgICAgICAgICAgICAgIGtleT17TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDAwKX1cbiAgICAgICAgICAgICAgICAgICAgb25FZGl0PXt0aGlzLnVwZGF0ZVNlbGVjdG9yLmJpbmQodGhpcyl9Lz57XCIge1wifVxuICAgICAgICAgICAgICAgIDxEZWNsYXJhdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgZGVjbGFyYXRpb25zPXt0aGlzLnN0YXRlLmRlY2xhcmF0aW9uc30gXG4gICAgICAgICAgICAgICAgICAgIGtleT17TWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMDAwKX1cbiAgICAgICAgICAgICAgICAgICAgb25FZGl0PXt0aGlzLnVwZGF0ZURlY2xhcmF0aW9ucy5iaW5kKHRoaXMpfS8+XG4gICAgICAgICAgICAgICAge1wifVwifVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBSdWxlO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucnVsZXMge1xcbiAgICBmb250LXNpemU6IDExcHg7XFxufVxcblxcbi5ydWxlcyBpbnB1dCB7XFxuICAgIGJvcmRlcjogMHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgU2VsZWN0b3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIHVwZGF0ZVNlbGVjdG9yKGUpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG5hbWU6IGUuY3VycmVudFRhcmdldC52YWx1ZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHZhbHVlQ2hhbmdlZCgpe1xuICAgICAgICBpZih0aGlzLnByb3BzLm5hbWUhPT10aGlzLnN0YXRlLm5hbWUpe1xuICAgICAgICAgICAgLy8gdGhlbiBzZWxlY3RvciBuYW1lIGNoYW5nZWRcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25FZGl0KHRoaXMuc3RhdGUubmFtZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNlbGVjdFRleHQoZSl7XG4gICAgICAgIGUuY3VycmVudFRhcmdldC5zZWxlY3QoKTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBhdXRvRm9jdXMgPSB0aGlzLnN0YXRlLm5hbWUuaW5jbHVkZXMoXCJuZXdDbGFzc1wiKT8gXCJhdXRvRm9jdXNcIjogXCJcIjtcbiAgICAgICAgcmV0dXJuIDxpbnB1dCBcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS5uYW1lfSBcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9Gb2N1cz17YXV0b0ZvY3VzfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25CbHVyPXt0aGlzLnZhbHVlQ2hhbmdlZC5iaW5kKHRoaXMpfSBcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRm9jdXM9e3RoaXMuc2VsZWN0VGV4dC5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e3RoaXMudXBkYXRlU2VsZWN0b3IuYmluZCh0aGlzKX0vPlxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VsZWN0b3I7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiXSk7XG5cbiIsIi8vIExpYnJhcmllcy5cblxuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgXCIuL1N0eWxlLmNzc1wiO1xuXG4vLyBDb21wb25lbnRzLlxuXG5pbXBvcnQgUHJvcGVydHkgZnJvbSBcIi4vUHJvcGVydHlcIjtcbmltcG9ydCBWYWx1ZSBmcm9tIFwiLi9WYWx1ZVwiO1xuXG5jbGFzcyBEZWNsYXJhdGlvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgfVxuXG4gICAgYWRkTmV3RGVjbGFyYXRpb24oaW5kZXgpIHtcbiAgICAgICAgbGV0IGRlY2xhcmF0aW9ucyA9IHRoaXMuc3RhdGUuZGVjbGFyYXRpb25zO1xuICAgICAgICBpbmRleCA9IGluZGV4KzE7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbLi4uZGVjbGFyYXRpb25zLnNsaWNlKDAsaW5kZXgpLHtwcm9wZXJ0eTpcImFkZFByb3BlcnR5XCIsIHZhbHVlOiBcIlwifSwuLi5kZWNsYXJhdGlvbnMuc2xpY2UoaW5kZXgsZGVjbGFyYXRpb25zLmxlbmd0aCldXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgb25FZGl0KHByZXZpb3VzVmFsdWUsIGN1cnJlbnRWYWx1ZSwgaW5kZXgpIHtcbiAgICAgICAgbGV0IGRlY2xhcmF0aW9ucyA9IHRoaXMuc3RhdGUuZGVjbGFyYXRpb25zO1xuICAgICAgICBkZWNsYXJhdGlvbnNbaW5kZXhdLnByb3BlcnR5ID0gY3VycmVudFZhbHVlO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtkZWNsYXJhdGlvbnM6ZGVjbGFyYXRpb25zfSk7XG5cbiAgICAgICAgaWYoZGVjbGFyYXRpb25zW2luZGV4XS52YWx1ZSl7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uRWRpdChkZWNsYXJhdGlvbnMpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvblZhbHVlRWRpdChwcmV2aW91c1ZhbHVlLCBjdXJyZW50VmFsdWUsIGluZGV4KSB7XG4gICAgICAgIGxldCBkZWNsYXJhdGlvbnMgPSB0aGlzLnN0YXRlLmRlY2xhcmF0aW9ucztcbiAgICAgICAgZGVjbGFyYXRpb25zW2luZGV4XS52YWx1ZSA9IGN1cnJlbnRWYWx1ZTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7ZGVjbGFyYXRpb25zOmRlY2xhcmF0aW9uc30pXG4gICAgICAgIHRoaXMucHJvcHMub25FZGl0KGRlY2xhcmF0aW9ucylcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGVjbGFyYXRpb25cIj5cbiAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5kZWNsYXJhdGlvbnMubWFwKChkZWNsYXJhdGlvbixpbmRleCk9PiA8ZGl2IGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UHJvcGVydHkgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleD17aW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e2RlY2xhcmF0aW9uLnByb3BlcnR5fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25FZGl0PXt0aGlzLm9uRWRpdC5iaW5kKHRoaXMpfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VmFsdWUgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e01hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMCl9IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXg9e2luZGV4fSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtkZWNsYXJhdGlvbi52YWx1ZX0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbk5ld2RlY2xhcmF0aW9uPXt0aGlzLmFkZE5ld0RlY2xhcmF0aW9uLmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkVkaXQ9e3RoaXMub25WYWx1ZUVkaXQuYmluZCh0aGlzKX0vPlxuICAgICAgICAgICAgICAgIDwvZGl2Pil9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERlY2xhcmF0aW9uO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZGVjbGFyYXRpb257XFxuICAgIHBhZGRpbmctbGVmdDoxMHB4O1xcbn1cIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgUHJvcGVydHkgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIHVwZGF0ZVNlbGVjdG9yKGUpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZhbHVlOiBlLmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICB2YWx1ZUNoYW5nZWQoKXtcbiAgICAgICAgaWYodGhpcy5wcm9wcy52YWx1ZSE9PXRoaXMuc3RhdGUudmFsdWUpe1xuICAgICAgICAgICAgLy8gdGhlbiBzZWxlY3RvciBuYW1lIGNoYW5nZWRcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25FZGl0KHRoaXMucHJvcHMudmFsdWUsIHRoaXMuc3RhdGUudmFsdWUsIHRoaXMucHJvcHMuaW5kZXgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBzZWxlY3RUZXh0KGUpe1xuICAgICAgICBlLmN1cnJlbnRUYXJnZXQuc2VsZWN0KCk7XG4gICAgfVxuICAgIFxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGF1dG9Gb2N1cyA9IHRoaXMuc3RhdGUudmFsdWUuaW5jbHVkZXMoXCJhZGRQcm9wZXJ0eVwiKT8gXCJhdXRvRm9jdXNcIjogXCJcIjtcbiAgICAgICAgcmV0dXJuICA8aW5wdXQgXG4gICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCIgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnZhbHVlfVxuICAgICAgICAgICAgICAgICAgICBhdXRvRm9jdXM9e2F1dG9Gb2N1c31cbiAgICAgICAgICAgICAgICAgICAgb25CbHVyPXt0aGlzLnZhbHVlQ2hhbmdlZC5iaW5kKHRoaXMpfSBcbiAgICAgICAgICAgICAgICAgICAgb25Gb2N1cz17dGhpcy5zZWxlY3RUZXh0LmJpbmQodGhpcyl9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLnVwZGF0ZVNlbGVjdG9yLmJpbmQodGhpcyl9Lz5cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb3BlcnR5O1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIl0pO1xuXG4iLCIvLyBMaWJyYXJpZXMuXG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IFwiLi9TdHlsZS5jc3NcIjtcblxuY2xhc3MgVmFsdWUgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMpO1xuICAgIH1cblxuICAgIHVwZGF0ZVNlbGVjdG9yKGUpe1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHZhbHVlOiBlLmN1cnJlbnRUYXJnZXQudmFsdWVcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICB2YWx1ZUNoYW5nZWQoKXtcbiAgICAgICAgaWYodGhpcy5wcm9wcy5uYW1lIT09dGhpcy5zdGF0ZS52YWx1ZSl7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uRWRpdCh0aGlzLnByb3BzLnZhbHVlLCB0aGlzLnN0YXRlLnZhbHVlLCB0aGlzLnByb3BzLmluZGV4KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZE5ldyhlKXtcbiAgICAgICAgaWYoZS5rZXk9PSBcIkVudGVyXCIpe1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5vbk5ld2RlY2xhcmF0aW9uKHRoaXMucHJvcHMuaW5kZXgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2VsZWN0VGV4dChlKXtcbiAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnNlbGVjdCgpO1xuICAgIH1cbiAgICBcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiA8aW5wdXQgdHlwZT1cInRleHRcIiBcbiAgICAgICAgICAgICAgICB2YWx1ZT17dGhpcy5zdGF0ZS52YWx1ZX0gXG4gICAgICAgICAgICAgICAgb25CbHVyPXt0aGlzLnZhbHVlQ2hhbmdlZC5iaW5kKHRoaXMpfSBcbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17dGhpcy51cGRhdGVTZWxlY3Rvci5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgIG9uRm9jdXM9e3RoaXMuc2VsZWN0VGV4dC5iaW5kKHRoaXMpfVxuICAgICAgICAgICAgICAgIG9uS2V5UHJlc3M9e3RoaXMuYWRkTmV3LmJpbmQodGhpcyl9Lz5cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZhbHVlO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vU3R5bGUuY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJcIiwgXCJcIl0pO1xuXG4iLCJcbmZ1bmN0aW9uIGNvbnZlcnRUb1N0cmluZyhwcm9wZXJ0eSl7XG4gICAgcmV0dXJuIGBcIiR7cHJvcGVydHkuc3BsaXQoXCI6XCIpWzBdLnRyaW0oKX1cIjpcIiR7cHJvcGVydHkuc3BsaXQoXCI6XCIpWzFdLnRyaW0oKX1cImBcbn1cblxuZnVuY3Rpb24gY29udmVydFRvT2JqZWN0KHJ1bGUpe1xuXG4gICAgdmFyIHNlbGVjdG9yID0gcnVsZS5zcGxpdChcIntcIilbMF0udHJpbSgpO1xuICAgIHZhciBwcm9wZXJ0aWVzID0gJ3snK3J1bGUuc3BsaXQoXCJ7XCIpWzFdLnNwbGl0KFwifVwiKVswXS5zcGxpdChcIjtcIikubWFwKHM9PnMudHJpbSgpKS5maWx0ZXIoQm9vbGVhbikubWFwKGNvbnZlcnRUb1N0cmluZykuam9pbihcIixcIikgKyd9JztcblxuICAgIHZhciBkZWNsYXJhdGlvbnMgPSBKU09OLnBhcnNlKHByb3BlcnRpZXMpXG5cbiAgICB2YXIgcnVsZSA9IHtcbiAgICAgICAgc2VsZWN0b3I6IHNlbGVjdG9yLFxuICAgICAgICBkZWNsYXJhdGlvbnM6IE9iamVjdC5rZXlzKGRlY2xhcmF0aW9ucykubWFwKGtleT0+e1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eToga2V5LFxuICAgICAgICAgICAgICAgIHZhbHVlOiBkZWNsYXJhdGlvbnNba2V5XVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH07XG5cbiAgICByZXR1cm4gcnVsZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE9iamVjdEZvcm1hdChzdHlsZSl7XG4gICAgaWYoIXN0eWxlIHx8IHN0eWxlLmxlbmd0aD09MCl7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgdmFyIHJ1bGVzID0gc3R5bGUuc3BsaXQoXCJ9XCIpLmZpbHRlcihCb29sZWFuKS5tYXAoaXRlbT0+aXRlbStcIn1cIik7XG4gICAgcmV0dXJuIHJ1bGVzLm1hcChjb252ZXJ0VG9PYmplY3QpO1xufVxuXG5mdW5jdGlvbiBydWxlVG9TdHJpbmcocnVsZSl7XG5cdHJldHVybiBgJHtydWxlLnNlbGVjdG9yfSB7JHtkZWNsYXJhdGlvblRvU3RyaW5nKHJ1bGUuZGVjbGFyYXRpb25zKX19YFxufVxuZnVuY3Rpb24gZGVjbGFyYXRpb25Ub1N0cmluZyhkZWNsYXJhdGlvbnMpe1xuXHRyZXR1cm4gZGVjbGFyYXRpb25zLm1hcChkZWNsYXJhdGlvbj0+YCR7ZGVjbGFyYXRpb24ucHJvcGVydHl9OiR7ZGVjbGFyYXRpb24udmFsdWV9O2ApLmpvaW4oXCJcIilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRUb1N0eWxlU3RyaW5nKHJ1bGVzKXtcbiAgICByZXR1cm4gcnVsZXMubWFwKHJ1bGVUb1N0cmluZykuam9pbihcIlwiKTtcbn1cbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9TdHlsZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1N0eWxlLmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiXCIsIFwiXCJdKTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==